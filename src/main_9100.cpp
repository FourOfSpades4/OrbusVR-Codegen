// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Mask
#include "UnityEngine/UI/Mask.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_RectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::Mask::dyn_m_RectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::dyn_m_RectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ShowMaskGraphic
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Mask::dyn_m_ShowMaskGraphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::dyn_m_ShowMaskGraphic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShowMaskGraphic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic m_Graphic
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Graphic*& UnityEngine::UI::Mask::dyn_m_Graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::dyn_m_Graphic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Graphic"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_MaskMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& UnityEngine::UI::Mask::dyn_m_MaskMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::dyn_m_MaskMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaskMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_UnmaskMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& UnityEngine::UI::Mask::dyn_m_UnmaskMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::dyn_m_UnmaskMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UnmaskMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.Mask.get_rectTransform
::UnityEngine::RectTransform* UnityEngine::UI::Mask::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.get_showMaskGraphic
bool UnityEngine::UI::Mask::get_showMaskGraphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::get_showMaskGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showMaskGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.set_showMaskGraphic
void UnityEngine::UI::Mask::set_showMaskGraphic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::set_showMaskGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showMaskGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Mask.get_graphic
::UnityEngine::UI::Graphic* UnityEngine::UI::Mask::get_graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::get_graphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.MaskEnabled
bool UnityEngine::UI::Mask::MaskEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::MaskEnabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Mask*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.OnSiblingGraphicEnabledDisabled
void UnityEngine::UI::Mask::OnSiblingGraphicEnabledDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::OnSiblingGraphicEnabledDisabled");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Mask*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.IsRaycastLocationValid
bool UnityEngine::UI::Mask::IsRaycastLocationValid(::UnityEngine::Vector2 sp, ::UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Mask*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Autogenerated method: UnityEngine.UI.Mask.GetModifiedMaterial
::UnityEngine::Material* UnityEngine::UI::Mask::GetModifiedMaterial(::UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Mask*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated method: UnityEngine.UI.Mask.OnEnable
void UnityEngine::UI::Mask::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Mask.OnDisable
void UnityEngine::UI::Mask::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Mask::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.MaskableGraphic
#include "UnityEngine/UI/MaskableGraphic.hpp"
// Including type: UnityEngine.UI.MaskableGraphic/CullStateChangedEvent
#include "UnityEngine/UI/MaskableGraphic_CullStateChangedEvent.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.RectMask2D
#include "UnityEngine/UI/RectMask2D.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ShouldRecalculateStencil
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::MaskableGraphic::dyn_m_ShouldRecalculateStencil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::dyn_m_ShouldRecalculateStencil");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShouldRecalculateStencil"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material m_MaskMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& UnityEngine::UI::MaskableGraphic::dyn_m_MaskMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::dyn_m_MaskMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaskMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.RectMask2D m_ParentMask
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::RectMask2D*& UnityEngine::UI::MaskableGraphic::dyn_m_ParentMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::dyn_m_ParentMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParentMask"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::RectMask2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Maskable
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::MaskableGraphic::dyn_m_Maskable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::dyn_m_Maskable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Maskable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_IncludeForMasking
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::MaskableGraphic::dyn_m_IncludeForMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::dyn_m_IncludeForMasking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IncludeForMasking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.MaskableGraphic/CullStateChangedEvent m_OnCullStateChanged
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::MaskableGraphic::CullStateChangedEvent*& UnityEngine::UI::MaskableGraphic::dyn_m_OnCullStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::dyn_m_OnCullStateChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnCullStateChanged"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::MaskableGraphic::CullStateChangedEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ShouldRecalculate
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::MaskableGraphic::dyn_m_ShouldRecalculate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::dyn_m_ShouldRecalculate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShouldRecalculate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_StencilValue
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::MaskableGraphic::dyn_m_StencilValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::dyn_m_StencilValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StencilValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_Corners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::UI::MaskableGraphic::dyn_m_Corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::dyn_m_Corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Corners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.get_onCullStateChanged
::UnityEngine::UI::MaskableGraphic::CullStateChangedEvent* UnityEngine::UI::MaskableGraphic::get_onCullStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::get_onCullStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onCullStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::MaskableGraphic::CullStateChangedEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.set_onCullStateChanged
void UnityEngine::UI::MaskableGraphic::set_onCullStateChanged(::UnityEngine::UI::MaskableGraphic::CullStateChangedEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::set_onCullStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onCullStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.get_maskable
bool UnityEngine::UI::MaskableGraphic::get_maskable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::get_maskable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.set_maskable
void UnityEngine::UI::MaskableGraphic::set_maskable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::set_maskable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.GetModifiedMaterial
::UnityEngine::Material* UnityEngine::UI::MaskableGraphic::GetModifiedMaterial(::UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.Cull
void UnityEngine::UI::MaskableGraphic::Cull(::UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::Cull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.UpdateCull
void UnityEngine::UI::MaskableGraphic::UpdateCull(bool cull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::UpdateCull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cull);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.SetClipRect
void UnityEngine::UI::MaskableGraphic::SetClipRect(::UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::SetClipRect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.ParentMaskStateChanged
void UnityEngine::UI::MaskableGraphic::ParentMaskStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::ParentMaskStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 60));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.get_rootCanvasRect
::UnityEngine::Rect UnityEngine::UI::MaskableGraphic::get_rootCanvasRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::get_rootCanvasRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootCanvasRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.UpdateClipParent
void UnityEngine::UI::MaskableGraphic::UpdateClipParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::UpdateClipParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClipParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.RecalculateClipping
void UnityEngine::UI::MaskableGraphic::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::RecalculateClipping");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 61));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.RecalculateMasking
void UnityEngine::UI::MaskableGraphic::RecalculateMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::RecalculateMasking");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 62));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.UnityEngine.UI.IClippable.get_gameObject
::UnityEngine::GameObject* UnityEngine::UI::MaskableGraphic::UnityEngine_UI_IClippable_get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::UnityEngine.UI.IClippable.get_gameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.OnEnable
void UnityEngine::UI::MaskableGraphic::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.OnDisable
void UnityEngine::UI::MaskableGraphic::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.OnTransformParentChanged
void UnityEngine::UI::MaskableGraphic::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.MaskableGraphic.OnCanvasHierarchyChanged
void UnityEngine::UI::MaskableGraphic::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskableGraphic::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.MaskableGraphic/CullStateChangedEvent
#include "UnityEngine/UI/MaskableGraphic_CullStateChangedEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.MaskUtilities
#include "UnityEngine/UI/MaskUtilities.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.UI.RectMask2D
#include "UnityEngine/UI/RectMask2D.hpp"
// Including type: UnityEngine.UI.IClippable
#include "UnityEngine/UI/IClippable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.MaskUtilities.Notify2DMaskStateChanged
void UnityEngine::UI::MaskUtilities::Notify2DMaskStateChanged(::UnityEngine::Component* mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskUtilities::Notify2DMaskStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "Notify2DMaskStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.NotifyStencilStateChanged
void UnityEngine::UI::MaskUtilities::NotifyStencilStateChanged(::UnityEngine::Component* mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskUtilities::NotifyStencilStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "NotifyStencilStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.FindRootSortOverrideCanvas
::UnityEngine::Transform* UnityEngine::UI::MaskUtilities::FindRootSortOverrideCanvas(::UnityEngine::Transform* start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskUtilities::FindRootSortOverrideCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "FindRootSortOverrideCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.GetStencilDepth
int UnityEngine::UI::MaskUtilities::GetStencilDepth(::UnityEngine::Transform* transform, ::UnityEngine::Transform* stopAfter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskUtilities::GetStencilDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "GetStencilDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(stopAfter)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, stopAfter);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.IsDescendantOrSelf
bool UnityEngine::UI::MaskUtilities::IsDescendantOrSelf(::UnityEngine::Transform* father, ::UnityEngine::Transform* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskUtilities::IsDescendantOrSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "IsDescendantOrSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(father), ::il2cpp_utils::ExtractType(child)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, father, child);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.GetRectMaskForClippable
::UnityEngine::UI::RectMask2D* UnityEngine::UI::MaskUtilities::GetRectMaskForClippable(::UnityEngine::UI::IClippable* clippable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskUtilities::GetRectMaskForClippable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "GetRectMaskForClippable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clippable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::RectMask2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clippable);
}
// Autogenerated method: UnityEngine.UI.MaskUtilities.GetRectMasksForClip
void UnityEngine::UI::MaskUtilities::GetRectMasksForClip(::UnityEngine::UI::RectMask2D* clipper, ::System::Collections::Generic::List_1<::UnityEngine::UI::RectMask2D*>* masks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MaskUtilities::GetRectMasksForClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MaskUtilities", "GetRectMasksForClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipper), ::il2cpp_utils::ExtractType(masks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clipper, masks);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Misc
#include "UnityEngine/UI/Misc.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Misc.Destroy
void UnityEngine::UI::Misc::Destroy(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Misc::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Misc", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.UI.Misc.DestroyImmediate
void UnityEngine::UI::Misc::DestroyImmediate(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Misc::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Misc", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.MultipleDisplayUtilities
#include "UnityEngine/UI/MultipleDisplayUtilities.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.MultipleDisplayUtilities.GetRelativeMousePositionForDrag
bool UnityEngine::UI::MultipleDisplayUtilities::GetRelativeMousePositionForDrag(::UnityEngine::EventSystems::PointerEventData* eventData, ByRef<::UnityEngine::Vector2> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MultipleDisplayUtilities::GetRelativeMousePositionForDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MultipleDisplayUtilities", "GetRelativeMousePositionForDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventData, byref(position));
}
// Autogenerated method: UnityEngine.UI.MultipleDisplayUtilities.GetMousePositionRelativeToMainDisplayResolution
::UnityEngine::Vector2 UnityEngine::UI::MultipleDisplayUtilities::GetMousePositionRelativeToMainDisplayResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::MultipleDisplayUtilities::GetMousePositionRelativeToMainDisplayResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "MultipleDisplayUtilities", "GetMousePositionRelativeToMainDisplayResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Navigation
#include "UnityEngine/UI/Navigation.hpp"
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Navigation/Mode m_Mode
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Navigation::Mode& UnityEngine::UI::Navigation::dyn_m_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::dyn_m_Mode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mode"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Navigation::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Selectable m_SelectOnUp
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Selectable*& UnityEngine::UI::Navigation::dyn_m_SelectOnUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::dyn_m_SelectOnUp");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectOnUp"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Selectable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Selectable m_SelectOnDown
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Selectable*& UnityEngine::UI::Navigation::dyn_m_SelectOnDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::dyn_m_SelectOnDown");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectOnDown"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Selectable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Selectable m_SelectOnLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Selectable*& UnityEngine::UI::Navigation::dyn_m_SelectOnLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::dyn_m_SelectOnLeft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectOnLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Selectable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Selectable m_SelectOnRight
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Selectable*& UnityEngine::UI::Navigation::dyn_m_SelectOnRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::dyn_m_SelectOnRight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectOnRight"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Selectable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_mode
::UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Navigation::Mode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.set_mode
void UnityEngine::UI::Navigation::set_mode(::UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::set_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_selectOnUp
::UnityEngine::UI::Selectable* UnityEngine::UI::Navigation::get_selectOnUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::get_selectOnUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectOnUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.set_selectOnUp
void UnityEngine::UI::Navigation::set_selectOnUp(::UnityEngine::UI::Selectable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::set_selectOnUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectOnUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_selectOnDown
::UnityEngine::UI::Selectable* UnityEngine::UI::Navigation::get_selectOnDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::get_selectOnDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectOnDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.set_selectOnDown
void UnityEngine::UI::Navigation::set_selectOnDown(::UnityEngine::UI::Selectable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::set_selectOnDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectOnDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_selectOnLeft
::UnityEngine::UI::Selectable* UnityEngine::UI::Navigation::get_selectOnLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::get_selectOnLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectOnLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.set_selectOnLeft
void UnityEngine::UI::Navigation::set_selectOnLeft(::UnityEngine::UI::Selectable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::set_selectOnLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectOnLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_selectOnRight
::UnityEngine::UI::Selectable* UnityEngine::UI::Navigation::get_selectOnRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::get_selectOnRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectOnRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.set_selectOnRight
void UnityEngine::UI::Navigation::set_selectOnRight(::UnityEngine::UI::Selectable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::set_selectOnRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectOnRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Navigation.get_defaultNavigation
::UnityEngine::UI::Navigation UnityEngine::UI::Navigation::get_defaultNavigation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::get_defaultNavigation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Navigation", "get_defaultNavigation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Navigation, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Navigation.Equals
bool UnityEngine::UI::Navigation::Equals(::UnityEngine::UI::Navigation other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::UI::Navigation), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Navigation/Mode
#include "UnityEngine/UI/Navigation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Navigation/Mode None
::UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::Mode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Navigation::Mode>("UnityEngine.UI", "Navigation/Mode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Navigation/Mode None
void UnityEngine::UI::Navigation::Mode::_set_None(::UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Navigation/Mode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Navigation/Mode Horizontal
::UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::Mode::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Navigation::Mode>("UnityEngine.UI", "Navigation/Mode", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Navigation/Mode Horizontal
void UnityEngine::UI::Navigation::Mode::_set_Horizontal(::UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Navigation/Mode", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Navigation/Mode Vertical
::UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::Mode::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Navigation::Mode>("UnityEngine.UI", "Navigation/Mode", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Navigation/Mode Vertical
void UnityEngine::UI::Navigation::Mode::_set_Vertical(::UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Navigation/Mode", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Navigation/Mode Automatic
::UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::Mode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Navigation::Mode>("UnityEngine.UI", "Navigation/Mode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Navigation/Mode Automatic
void UnityEngine::UI::Navigation::Mode::_set_Automatic(::UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Navigation/Mode", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Navigation/Mode Explicit
::UnityEngine::UI::Navigation::Mode UnityEngine::UI::Navigation::Mode::_get_Explicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::_get_Explicit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Navigation::Mode>("UnityEngine.UI", "Navigation/Mode", "Explicit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Navigation/Mode Explicit
void UnityEngine::UI::Navigation::Mode::_set_Explicit(::UnityEngine::UI::Navigation::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::_set_Explicit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Navigation/Mode", "Explicit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::Navigation::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Navigation::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.RawImage
#include "UnityEngine/UI/RawImage.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture m_Texture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& UnityEngine::UI::RawImage::dyn_m_Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RawImage::dyn_m_Texture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Texture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect m_UVRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& UnityEngine::UI::RawImage::dyn_m_UVRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RawImage::dyn_m_UVRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UVRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.RawImage.get_texture
::UnityEngine::Texture* UnityEngine::UI::RawImage::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RawImage::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RawImage.set_texture
void UnityEngine::UI::RawImage::set_texture(::UnityEngine::Texture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RawImage::set_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.RawImage.get_uvRect
::UnityEngine::Rect UnityEngine::UI::RawImage::get_uvRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RawImage::get_uvRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uvRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RawImage.set_uvRect
void UnityEngine::UI::RawImage::set_uvRect(::UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RawImage::set_uvRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uvRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.RawImage.get_mainTexture
::UnityEngine::Texture* UnityEngine::UI::RawImage::get_mainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RawImage::get_mainTexture");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RawImage.SetNativeSize
void UnityEngine::UI::RawImage::SetNativeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RawImage::SetNativeSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RawImage.OnPopulateMesh
void UnityEngine::UI::RawImage::OnPopulateMesh(::UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RawImage::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vh);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.RectMask2D
#include "UnityEngine/UI/RectMask2D.hpp"
// Including type: UnityEngine.UI.RectangularVertexClipper
#include "UnityEngine/UI/RectangularVertexClipper.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.UI.IClippable
#include "UnityEngine/UI/IClippable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.UI.RectangularVertexClipper m_VertexClipper
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::RectangularVertexClipper*& UnityEngine::UI::RectMask2D::dyn_m_VertexClipper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::dyn_m_VertexClipper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VertexClipper"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::RectangularVertexClipper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_RectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::RectMask2D::dyn_m_RectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::dyn_m_RectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<UnityEngine.UI.IClippable> m_ClipTargets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::UI::IClippable*>*& UnityEngine::UI::RectMask2D::dyn_m_ClipTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::dyn_m_ClipTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipTargets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::UI::IClippable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ShouldRecalculateClipRects
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::RectMask2D::dyn_m_ShouldRecalculateClipRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::dyn_m_ShouldRecalculateClipRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShouldRecalculateClipRects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.UI.RectMask2D> m_Clippers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UI::RectMask2D*>*& UnityEngine::UI::RectMask2D::dyn_m_Clippers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::dyn_m_Clippers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clippers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UI::RectMask2D*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect m_LastClipRectCanvasSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& UnityEngine::UI::RectMask2D::dyn_m_LastClipRectCanvasSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::dyn_m_LastClipRectCanvasSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastClipRectCanvasSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ForceClip
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::RectMask2D::dyn_m_ForceClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::dyn_m_ForceClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ForceClip"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas m_Canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& UnityEngine::UI::RectMask2D::dyn_m_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::dyn_m_Canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] m_Corners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::UI::RectMask2D::dyn_m_Corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::dyn_m_Corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Corners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.get_Canvas
::UnityEngine::Canvas* UnityEngine::UI::RectMask2D::get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::get_Canvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Canvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.get_canvasRect
::UnityEngine::Rect UnityEngine::UI::RectMask2D::get_canvasRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::get_canvasRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvasRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.get_rectTransform
::UnityEngine::RectTransform* UnityEngine::UI::RectMask2D::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.IsRaycastLocationValid
bool UnityEngine::UI::RectMask2D::IsRaycastLocationValid(::UnityEngine::Vector2 sp, ::UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::RectMask2D*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.get_rootCanvasRect
::UnityEngine::Rect UnityEngine::UI::RectMask2D::get_rootCanvasRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::get_rootCanvasRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootCanvasRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.PerformClipping
void UnityEngine::UI::RectMask2D::PerformClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::PerformClipping");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::RectMask2D*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.AddClippable
void UnityEngine::UI::RectMask2D::AddClippable(::UnityEngine::UI::IClippable* clippable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::AddClippable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClippable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clippable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clippable);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.RemoveClippable
void UnityEngine::UI::RectMask2D::RemoveClippable(::UnityEngine::UI::IClippable* clippable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::RemoveClippable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveClippable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clippable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clippable);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.OnEnable
void UnityEngine::UI::RectMask2D::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.OnDisable
void UnityEngine::UI::RectMask2D::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.OnTransformParentChanged
void UnityEngine::UI::RectMask2D::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.RectMask2D.OnCanvasHierarchyChanged
void UnityEngine::UI::RectMask2D::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectMask2D::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Scrollbar
#include "UnityEngine/UI/Scrollbar.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.UI.Scrollbar/ScrollEvent
#include "UnityEngine/UI/Scrollbar_ScrollEvent.hpp"
// Including type: UnityEngine.UI.Scrollbar/Axis
#include "UnityEngine/UI/Scrollbar_Axis.hpp"
// Including type: UnityEngine.UI.Scrollbar/<ClickRepeat>c__Iterator0
#include "UnityEngine/UI/Scrollbar_-ClickRepeat-c__Iterator0.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_HandleRect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::Scrollbar::dyn_m_HandleRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_m_HandleRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HandleRect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Scrollbar/Direction m_Direction
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Scrollbar::Direction& UnityEngine::UI::Scrollbar::dyn_m_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_m_Direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Direction"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Scrollbar::Direction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Value
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::Scrollbar::dyn_m_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_m_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Size
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::Scrollbar::dyn_m_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_m_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NumberOfSteps
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::Scrollbar::dyn_m_NumberOfSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_m_NumberOfSteps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NumberOfSteps"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Scrollbar/ScrollEvent m_OnValueChanged
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Scrollbar::ScrollEvent*& UnityEngine::UI::Scrollbar::dyn_m_OnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_m_OnValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnValueChanged"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Scrollbar::ScrollEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_ContainerRect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::Scrollbar::dyn_m_ContainerRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_m_ContainerRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContainerRect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::Scrollbar::dyn_m_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_m_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.DrivenRectTransformTracker m_Tracker
[[deprecated("Use field access instead!")]] ::UnityEngine::DrivenRectTransformTracker& UnityEngine::UI::Scrollbar::dyn_m_Tracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_m_Tracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracker"))->offset;
  return *reinterpret_cast<::UnityEngine::DrivenRectTransformTracker*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine m_PointerDownRepeat
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& UnityEngine::UI::Scrollbar::dyn_m_PointerDownRepeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_m_PointerDownRepeat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PointerDownRepeat"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isPointerDownAndNotDragging
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Scrollbar::dyn_isPointerDownAndNotDragging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::dyn_isPointerDownAndNotDragging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPointerDownAndNotDragging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_handleRect
::UnityEngine::RectTransform* UnityEngine::UI::Scrollbar::get_handleRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::get_handleRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handleRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_handleRect
void UnityEngine::UI::Scrollbar::set_handleRect(::UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::set_handleRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handleRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_direction
::UnityEngine::UI::Scrollbar::Direction UnityEngine::UI::Scrollbar::get_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::get_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Scrollbar::Direction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_direction
void UnityEngine::UI::Scrollbar::set_direction(::UnityEngine::UI::Scrollbar::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_value
float UnityEngine::UI::Scrollbar::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_value
void UnityEngine::UI::Scrollbar::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_size
float UnityEngine::UI::Scrollbar::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_size
void UnityEngine::UI::Scrollbar::set_size(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_numberOfSteps
int UnityEngine::UI::Scrollbar::get_numberOfSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::get_numberOfSteps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfSteps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_numberOfSteps
void UnityEngine::UI::Scrollbar::set_numberOfSteps(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::set_numberOfSteps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_numberOfSteps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_onValueChanged
::UnityEngine::UI::Scrollbar::ScrollEvent* UnityEngine::UI::Scrollbar::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Scrollbar::ScrollEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.set_onValueChanged
void UnityEngine::UI::Scrollbar::set_onValueChanged(::UnityEngine::UI::Scrollbar::ScrollEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_stepSize
float UnityEngine::UI::Scrollbar::get_stepSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::get_stepSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stepSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.Rebuild
void UnityEngine::UI::Scrollbar::Rebuild(::UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Rebuild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.LayoutComplete
void UnityEngine::UI::Scrollbar::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.GraphicUpdateComplete
void UnityEngine::UI::Scrollbar::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.UpdateCachedReferences
void UnityEngine::UI::Scrollbar::UpdateCachedReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::UpdateCachedReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCachedReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.Set
void UnityEngine::UI::Scrollbar::Set(float input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.Set
void UnityEngine::UI::Scrollbar::Set(float input, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, sendCallback);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_axis
::UnityEngine::UI::Scrollbar::Axis UnityEngine::UI::Scrollbar::get_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::get_axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Scrollbar::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.get_reverseValue
bool UnityEngine::UI::Scrollbar::get_reverseValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::get_reverseValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reverseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.UpdateVisuals
void UnityEngine::UI::Scrollbar::UpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::UpdateVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.UpdateDrag
void UnityEngine::UI::Scrollbar::UpdateDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::UpdateDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.MayDrag
bool UnityEngine::UI::Scrollbar::MayDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::MayDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MayDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnBeginDrag
void UnityEngine::UI::Scrollbar::OnBeginDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::OnBeginDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnDrag
void UnityEngine::UI::Scrollbar::OnDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::OnDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.ClickRepeat
::System::Collections::IEnumerator* UnityEngine::UI::Scrollbar::ClickRepeat(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::ClickRepeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClickRepeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnInitializePotentialDrag
void UnityEngine::UI::Scrollbar::OnInitializePotentialDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::OnInitializePotentialDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.SetDirection
void UnityEngine::UI::Scrollbar::SetDirection(::UnityEngine::UI::Scrollbar::Direction direction, bool includeRectLayouts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::SetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(includeRectLayouts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, direction, includeRectLayouts);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.UnityEngine.UI.ICanvasElement.get_transform
::UnityEngine::Transform* UnityEngine::UI::Scrollbar::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnEnable
void UnityEngine::UI::Scrollbar::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnDisable
void UnityEngine::UI::Scrollbar::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnRectTransformDimensionsChange
void UnityEngine::UI::Scrollbar::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnPointerDown
void UnityEngine::UI::Scrollbar::OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnPointerUp
void UnityEngine::UI::Scrollbar::OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.OnMove
void UnityEngine::UI::Scrollbar::OnMove(::UnityEngine::EventSystems::AxisEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::OnMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.FindSelectableOnLeft
::UnityEngine::UI::Selectable* UnityEngine::UI::Scrollbar::FindSelectableOnLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::FindSelectableOnLeft");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.FindSelectableOnRight
::UnityEngine::UI::Selectable* UnityEngine::UI::Scrollbar::FindSelectableOnRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::FindSelectableOnRight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.FindSelectableOnUp
::UnityEngine::UI::Selectable* UnityEngine::UI::Scrollbar::FindSelectableOnUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::FindSelectableOnUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar.FindSelectableOnDown
::UnityEngine::UI::Selectable* UnityEngine::UI::Scrollbar::FindSelectableOnDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::FindSelectableOnDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Scrollbar/Direction
#include "UnityEngine/UI/Scrollbar.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Direction LeftToRight
::UnityEngine::UI::Scrollbar::Direction UnityEngine::UI::Scrollbar::Direction::_get_LeftToRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Direction::_get_LeftToRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Scrollbar::Direction>("UnityEngine.UI", "Scrollbar/Direction", "LeftToRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Direction LeftToRight
void UnityEngine::UI::Scrollbar::Direction::_set_LeftToRight(::UnityEngine::UI::Scrollbar::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Direction::_set_LeftToRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Direction", "LeftToRight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Direction RightToLeft
::UnityEngine::UI::Scrollbar::Direction UnityEngine::UI::Scrollbar::Direction::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Direction::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Scrollbar::Direction>("UnityEngine.UI", "Scrollbar/Direction", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Direction RightToLeft
void UnityEngine::UI::Scrollbar::Direction::_set_RightToLeft(::UnityEngine::UI::Scrollbar::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Direction::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Direction", "RightToLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Direction BottomToTop
::UnityEngine::UI::Scrollbar::Direction UnityEngine::UI::Scrollbar::Direction::_get_BottomToTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Direction::_get_BottomToTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Scrollbar::Direction>("UnityEngine.UI", "Scrollbar/Direction", "BottomToTop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Direction BottomToTop
void UnityEngine::UI::Scrollbar::Direction::_set_BottomToTop(::UnityEngine::UI::Scrollbar::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Direction::_set_BottomToTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Direction", "BottomToTop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Direction TopToBottom
::UnityEngine::UI::Scrollbar::Direction UnityEngine::UI::Scrollbar::Direction::_get_TopToBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Direction::_get_TopToBottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Scrollbar::Direction>("UnityEngine.UI", "Scrollbar/Direction", "TopToBottom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Direction TopToBottom
void UnityEngine::UI::Scrollbar::Direction::_set_TopToBottom(::UnityEngine::UI::Scrollbar::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Direction::_set_TopToBottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Direction", "TopToBottom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::Scrollbar::Direction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Direction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Scrollbar/ScrollEvent
#include "UnityEngine/UI/Scrollbar_ScrollEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Scrollbar/Axis
#include "UnityEngine/UI/Scrollbar_Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Axis Horizontal
::UnityEngine::UI::Scrollbar::Axis UnityEngine::UI::Scrollbar::Axis::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Axis::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Scrollbar::Axis>("UnityEngine.UI", "Scrollbar/Axis", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Axis Horizontal
void UnityEngine::UI::Scrollbar::Axis::_set_Horizontal(::UnityEngine::UI::Scrollbar::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Axis::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Axis", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Scrollbar/Axis Vertical
::UnityEngine::UI::Scrollbar::Axis UnityEngine::UI::Scrollbar::Axis::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Axis::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Scrollbar::Axis>("UnityEngine.UI", "Scrollbar/Axis", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Scrollbar/Axis Vertical
void UnityEngine::UI::Scrollbar::Axis::_set_Vertical(::UnityEngine::UI::Scrollbar::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Axis::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Scrollbar/Axis", "Vertical", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::Scrollbar::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.Scrollbar/<ClickRepeat>c__Iterator0
#include "UnityEngine/UI/Scrollbar_-ClickRepeat-c__Iterator0.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.EventSystems.PointerEventData eventData
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData*& UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::dyn_eventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::dyn_eventData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventData"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.UI.Scrollbar $this
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Scrollbar*& UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Scrollbar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object $current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean $disposing
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::dyn_$disposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::dyn_$disposing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$disposing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.Scrollbar/<ClickRepeat>c__Iterator0.MoveNext
bool UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar/<ClickRepeat>c__Iterator0.System.Collections.Generic.IEnumerator<object>.get_Current
::Il2CppObject* UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::System_Collections_Generic_IEnumerator$object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::System.Collections.Generic.IEnumerator<object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar/<ClickRepeat>c__Iterator0.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar/<ClickRepeat>c__Iterator0.Dispose
void UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar/<ClickRepeat>c__Iterator0.Reset
void UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Scrollbar::$ClickRepeat$c__Iterator0*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ScrollRect
#include "UnityEngine/UI/ScrollRect.hpp"
// Including type: UnityEngine.UI.Scrollbar
#include "UnityEngine/UI/Scrollbar.hpp"
// Including type: UnityEngine.UI.ScrollRect/ScrollRectEvent
#include "UnityEngine/UI/ScrollRect_ScrollRectEvent.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_Content
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::ScrollRect::dyn_m_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Content"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Horizontal
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::ScrollRect::dyn_m_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Horizontal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Horizontal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Vertical
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::ScrollRect::dyn_m_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Vertical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Vertical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ScrollRect/MovementType m_MovementType
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect::MovementType& UnityEngine::UI::ScrollRect::dyn_m_MovementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_MovementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MovementType"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ScrollRect::MovementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Elasticity
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::ScrollRect::dyn_m_Elasticity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Elasticity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Elasticity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Inertia
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::ScrollRect::dyn_m_Inertia() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Inertia");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Inertia"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DecelerationRate
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::ScrollRect::dyn_m_DecelerationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_DecelerationRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DecelerationRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ScrollSensitivity
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::ScrollRect::dyn_m_ScrollSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_ScrollSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollSensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_Viewport
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::ScrollRect::dyn_m_Viewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Viewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Viewport"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Scrollbar m_HorizontalScrollbar
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Scrollbar*& UnityEngine::UI::ScrollRect::dyn_m_HorizontalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_HorizontalScrollbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalScrollbar"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Scrollbar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Scrollbar m_VerticalScrollbar
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Scrollbar*& UnityEngine::UI::ScrollRect::dyn_m_VerticalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_VerticalScrollbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalScrollbar"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Scrollbar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ScrollRect/ScrollbarVisibility m_HorizontalScrollbarVisibility
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect::ScrollbarVisibility& UnityEngine::UI::ScrollRect::dyn_m_HorizontalScrollbarVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_HorizontalScrollbarVisibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalScrollbarVisibility"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ScrollRect::ScrollbarVisibility*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ScrollRect/ScrollbarVisibility m_VerticalScrollbarVisibility
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect::ScrollbarVisibility& UnityEngine::UI::ScrollRect::dyn_m_VerticalScrollbarVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_VerticalScrollbarVisibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalScrollbarVisibility"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ScrollRect::ScrollbarVisibility*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HorizontalScrollbarSpacing
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::ScrollRect::dyn_m_HorizontalScrollbarSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_HorizontalScrollbarSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalScrollbarSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_VerticalScrollbarSpacing
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::ScrollRect::dyn_m_VerticalScrollbarSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_VerticalScrollbarSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalScrollbarSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ScrollRect/ScrollRectEvent m_OnValueChanged
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect::ScrollRectEvent*& UnityEngine::UI::ScrollRect::dyn_m_OnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_OnValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnValueChanged"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ScrollRect::ScrollRectEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_PointerStartLocalCursor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::ScrollRect::dyn_m_PointerStartLocalCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_PointerStartLocalCursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PointerStartLocalCursor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector2 m_ContentStartPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::ScrollRect::dyn_m_ContentStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_ContentStartPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContentStartPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_ViewRect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::ScrollRect::dyn_m_ViewRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_ViewRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ViewRect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Bounds m_ContentBounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& UnityEngine::UI::ScrollRect::dyn_m_ContentBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_ContentBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContentBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds m_ViewBounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& UnityEngine::UI::ScrollRect::dyn_m_ViewBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_ViewBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ViewBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::ScrollRect::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Dragging
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::ScrollRect::dyn_m_Dragging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Dragging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dragging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Scrolling
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::ScrollRect::dyn_m_Scrolling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Scrolling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scrolling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_PrevPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::ScrollRect::dyn_m_PrevPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_PrevPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds m_PrevContentBounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& UnityEngine::UI::ScrollRect::dyn_m_PrevContentBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_PrevContentBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevContentBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds m_PrevViewBounds
[[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& UnityEngine::UI::ScrollRect::dyn_m_PrevViewBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_PrevViewBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevViewBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasRebuiltLayout
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::ScrollRect::dyn_m_HasRebuiltLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_HasRebuiltLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasRebuiltLayout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HSliderExpand
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::ScrollRect::dyn_m_HSliderExpand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_HSliderExpand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HSliderExpand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_VSliderExpand
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::ScrollRect::dyn_m_VSliderExpand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_VSliderExpand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VSliderExpand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HSliderHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::ScrollRect::dyn_m_HSliderHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_HSliderHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HSliderHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_VSliderWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::ScrollRect::dyn_m_VSliderWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_VSliderWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VSliderWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_Rect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::ScrollRect::dyn_m_Rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Rect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_HorizontalScrollbarRect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::ScrollRect::dyn_m_HorizontalScrollbarRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_HorizontalScrollbarRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalScrollbarRect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_VerticalScrollbarRect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::ScrollRect::dyn_m_VerticalScrollbarRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_VerticalScrollbarRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalScrollbarRect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.DrivenRectTransformTracker m_Tracker
[[deprecated("Use field access instead!")]] ::UnityEngine::DrivenRectTransformTracker& UnityEngine::UI::ScrollRect::dyn_m_Tracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Tracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracker"))->offset;
  return *reinterpret_cast<::UnityEngine::DrivenRectTransformTracker*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_Corners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::UI::ScrollRect::dyn_m_Corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::dyn_m_Corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Corners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_content
::UnityEngine::RectTransform* UnityEngine::UI::ScrollRect::get_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_content
void UnityEngine::UI::ScrollRect::set_content(::UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_horizontal
bool UnityEngine::UI::ScrollRect::get_horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_horizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_horizontal
void UnityEngine::UI::ScrollRect::set_horizontal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_horizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_vertical
bool UnityEngine::UI::ScrollRect::get_vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_vertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_vertical
void UnityEngine::UI::ScrollRect::set_vertical(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_vertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_movementType
::UnityEngine::UI::ScrollRect::MovementType UnityEngine::UI::ScrollRect::get_movementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ScrollRect::MovementType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_movementType
void UnityEngine::UI::ScrollRect::set_movementType(::UnityEngine::UI::ScrollRect::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_movementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_movementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_elasticity
float UnityEngine::UI::ScrollRect::get_elasticity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_elasticity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_elasticity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_elasticity
void UnityEngine::UI::ScrollRect::set_elasticity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_elasticity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_elasticity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_inertia
bool UnityEngine::UI::ScrollRect::get_inertia() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_inertia");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inertia", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_inertia
void UnityEngine::UI::ScrollRect::set_inertia(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_inertia");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inertia", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_decelerationRate
float UnityEngine::UI::ScrollRect::get_decelerationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_decelerationRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_decelerationRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_decelerationRate
void UnityEngine::UI::ScrollRect::set_decelerationRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_decelerationRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_decelerationRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_scrollSensitivity
float UnityEngine::UI::ScrollRect::get_scrollSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_scrollSensitivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollSensitivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_scrollSensitivity
void UnityEngine::UI::ScrollRect::set_scrollSensitivity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_scrollSensitivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scrollSensitivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_viewport
::UnityEngine::RectTransform* UnityEngine::UI::ScrollRect::get_viewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_viewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_viewport
void UnityEngine::UI::ScrollRect::set_viewport(::UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_viewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_viewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_horizontalScrollbar
::UnityEngine::UI::Scrollbar* UnityEngine::UI::ScrollRect::get_horizontalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_horizontalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Scrollbar*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_horizontalScrollbar
void UnityEngine::UI::ScrollRect::set_horizontalScrollbar(::UnityEngine::UI::Scrollbar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_horizontalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_verticalScrollbar
::UnityEngine::UI::Scrollbar* UnityEngine::UI::ScrollRect::get_verticalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_verticalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Scrollbar*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_verticalScrollbar
void UnityEngine::UI::ScrollRect::set_verticalScrollbar(::UnityEngine::UI::Scrollbar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_verticalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_horizontalScrollbarVisibility
::UnityEngine::UI::ScrollRect::ScrollbarVisibility UnityEngine::UI::ScrollRect::get_horizontalScrollbarVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_horizontalScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ScrollRect::ScrollbarVisibility, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_horizontalScrollbarVisibility
void UnityEngine::UI::ScrollRect::set_horizontalScrollbarVisibility(::UnityEngine::UI::ScrollRect::ScrollbarVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_horizontalScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_verticalScrollbarVisibility
::UnityEngine::UI::ScrollRect::ScrollbarVisibility UnityEngine::UI::ScrollRect::get_verticalScrollbarVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_verticalScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ScrollRect::ScrollbarVisibility, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_verticalScrollbarVisibility
void UnityEngine::UI::ScrollRect::set_verticalScrollbarVisibility(::UnityEngine::UI::ScrollRect::ScrollbarVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_verticalScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_horizontalScrollbarSpacing
float UnityEngine::UI::ScrollRect::get_horizontalScrollbarSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_horizontalScrollbarSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalScrollbarSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_horizontalScrollbarSpacing
void UnityEngine::UI::ScrollRect::set_horizontalScrollbarSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_horizontalScrollbarSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalScrollbarSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_verticalScrollbarSpacing
float UnityEngine::UI::ScrollRect::get_verticalScrollbarSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_verticalScrollbarSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalScrollbarSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_verticalScrollbarSpacing
void UnityEngine::UI::ScrollRect::set_verticalScrollbarSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_verticalScrollbarSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalScrollbarSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_onValueChanged
::UnityEngine::UI::ScrollRect::ScrollRectEvent* UnityEngine::UI::ScrollRect::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ScrollRect::ScrollRectEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_onValueChanged
void UnityEngine::UI::ScrollRect::set_onValueChanged(::UnityEngine::UI::ScrollRect::ScrollRectEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_viewRect
::UnityEngine::RectTransform* UnityEngine::UI::ScrollRect::get_viewRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_viewRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_velocity
::UnityEngine::Vector2 UnityEngine::UI::ScrollRect::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_velocity
void UnityEngine::UI::ScrollRect::set_velocity(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_rectTransform
::UnityEngine::RectTransform* UnityEngine::UI::ScrollRect::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.Rebuild
void UnityEngine::UI::ScrollRect::Rebuild(::UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::Rebuild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.LayoutComplete
void UnityEngine::UI::ScrollRect::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.GraphicUpdateComplete
void UnityEngine::UI::ScrollRect::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateCachedData
void UnityEngine::UI::ScrollRect::UpdateCachedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::UpdateCachedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCachedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.EnsureLayoutHasRebuilt
void UnityEngine::UI::ScrollRect::EnsureLayoutHasRebuilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::EnsureLayoutHasRebuilt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureLayoutHasRebuilt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.StopMovement
void UnityEngine::UI::ScrollRect::StopMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::StopMovement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnScroll
void UnityEngine::UI::ScrollRect::OnScroll(::UnityEngine::EventSystems::PointerEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::OnScroll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnInitializePotentialDrag
void UnityEngine::UI::ScrollRect::OnInitializePotentialDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::OnInitializePotentialDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnBeginDrag
void UnityEngine::UI::ScrollRect::OnBeginDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::OnBeginDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnEndDrag
void UnityEngine::UI::ScrollRect::OnEndDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::OnEndDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnDrag
void UnityEngine::UI::ScrollRect::OnDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::OnDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetContentAnchoredPosition
void UnityEngine::UI::ScrollRect::SetContentAnchoredPosition(::UnityEngine::Vector2 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::SetContentAnchoredPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.LateUpdate
void UnityEngine::UI::ScrollRect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::LateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdatePrevData
void UnityEngine::UI::ScrollRect::UpdatePrevData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::UpdatePrevData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePrevData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateScrollbars
void UnityEngine::UI::ScrollRect::UpdateScrollbars(::UnityEngine::Vector2 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::UpdateScrollbars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollbars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_normalizedPosition
::UnityEngine::Vector2 UnityEngine::UI::ScrollRect::get_normalizedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_normalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_normalizedPosition
void UnityEngine::UI::ScrollRect::set_normalizedPosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_normalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_horizontalNormalizedPosition
float UnityEngine::UI::ScrollRect::get_horizontalNormalizedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_horizontalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_horizontalNormalizedPosition
void UnityEngine::UI::ScrollRect::set_horizontalNormalizedPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_horizontalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_verticalNormalizedPosition
float UnityEngine::UI::ScrollRect::get_verticalNormalizedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_verticalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.set_verticalNormalizedPosition
void UnityEngine::UI::ScrollRect::set_verticalNormalizedPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::set_verticalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetHorizontalNormalizedPosition
void UnityEngine::UI::ScrollRect::SetHorizontalNormalizedPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::SetHorizontalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHorizontalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetVerticalNormalizedPosition
void UnityEngine::UI::ScrollRect::SetVerticalNormalizedPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::SetVerticalNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticalNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetNormalizedPosition
void UnityEngine::UI::ScrollRect::SetNormalizedPosition(float value, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::SetNormalizedPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, axis);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.RubberDelta
float UnityEngine::UI::ScrollRect::RubberDelta(float overStretching, float viewSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::RubberDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ScrollRect", "RubberDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overStretching), ::il2cpp_utils::ExtractType(viewSize)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, overStretching, viewSize);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_hScrollingNeeded
bool UnityEngine::UI::ScrollRect::get_hScrollingNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_hScrollingNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hScrollingNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_vScrollingNeeded
bool UnityEngine::UI::ScrollRect::get_vScrollingNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_vScrollingNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vScrollingNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.CalculateLayoutInputHorizontal
void UnityEngine::UI::ScrollRect::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.CalculateLayoutInputVertical
void UnityEngine::UI::ScrollRect::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_minWidth
float UnityEngine::UI::ScrollRect::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_minWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 52));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_preferredWidth
float UnityEngine::UI::ScrollRect::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 53));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_flexibleWidth
float UnityEngine::UI::ScrollRect::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 54));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_minHeight
float UnityEngine::UI::ScrollRect::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_minHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 55));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_preferredHeight
float UnityEngine::UI::ScrollRect::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 56));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_flexibleHeight
float UnityEngine::UI::ScrollRect::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 57));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.get_layoutPriority
int UnityEngine::UI::ScrollRect::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 58));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetLayoutHorizontal
void UnityEngine::UI::ScrollRect::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetLayoutVertical
void UnityEngine::UI::ScrollRect::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 60));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateScrollbarVisibility
void UnityEngine::UI::ScrollRect::UpdateScrollbarVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::UpdateScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateOneScrollbarVisibility
void UnityEngine::UI::ScrollRect::UpdateOneScrollbarVisibility(bool xScrollingNeeded, bool xAxisEnabled, ::UnityEngine::UI::ScrollRect::ScrollbarVisibility scrollbarVisibility, ::UnityEngine::UI::Scrollbar* scrollbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::UpdateOneScrollbarVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ScrollRect", "UpdateOneScrollbarVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xScrollingNeeded), ::il2cpp_utils::ExtractType(xAxisEnabled), ::il2cpp_utils::ExtractType(scrollbarVisibility), ::il2cpp_utils::ExtractType(scrollbar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xScrollingNeeded, xAxisEnabled, scrollbarVisibility, scrollbar);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateScrollbarLayout
void UnityEngine::UI::ScrollRect::UpdateScrollbarLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::UpdateScrollbarLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollbarLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UpdateBounds
void UnityEngine::UI::ScrollRect::UpdateBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::UpdateBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.AdjustBounds
void UnityEngine::UI::ScrollRect::AdjustBounds(ByRef<::UnityEngine::Bounds> viewBounds, ByRef<::UnityEngine::Vector2> contentPivot, ByRef<::UnityEngine::Vector3> contentSize, ByRef<::UnityEngine::Vector3> contentPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::AdjustBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ScrollRect", "AdjustBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewBounds), ::il2cpp_utils::ExtractType(contentPivot), ::il2cpp_utils::ExtractType(contentSize), ::il2cpp_utils::ExtractType(contentPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(viewBounds), byref(contentPivot), byref(contentSize), byref(contentPos));
}
// Autogenerated method: UnityEngine.UI.ScrollRect.GetBounds
::UnityEngine::Bounds UnityEngine::UI::ScrollRect::GetBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::GetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.InternalGetBounds
::UnityEngine::Bounds UnityEngine::UI::ScrollRect::InternalGetBounds(::ArrayW<::UnityEngine::Vector3> corners, ByRef<::UnityEngine::Matrix4x4> viewWorldToLocalMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::InternalGetBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ScrollRect", "InternalGetBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(corners), ::il2cpp_utils::ExtractType(viewWorldToLocalMatrix)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, corners, byref(viewWorldToLocalMatrix));
}
// Autogenerated method: UnityEngine.UI.ScrollRect.CalculateOffset
::UnityEngine::Vector2 UnityEngine::UI::ScrollRect::CalculateOffset(::UnityEngine::Vector2 delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::CalculateOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, delta);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.InternalCalculateOffset
::UnityEngine::Vector2 UnityEngine::UI::ScrollRect::InternalCalculateOffset(ByRef<::UnityEngine::Bounds> viewBounds, ByRef<::UnityEngine::Bounds> contentBounds, bool horizontal, bool vertical, ::UnityEngine::UI::ScrollRect::MovementType movementType, ByRef<::UnityEngine::Vector2> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::InternalCalculateOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ScrollRect", "InternalCalculateOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewBounds), ::il2cpp_utils::ExtractType(contentBounds), ::il2cpp_utils::ExtractType(horizontal), ::il2cpp_utils::ExtractType(vertical), ::il2cpp_utils::ExtractType(movementType), ::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(viewBounds), byref(contentBounds), horizontal, vertical, movementType, byref(delta));
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetDirty
void UnityEngine::UI::ScrollRect::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.SetDirtyCaching
void UnityEngine::UI::ScrollRect::SetDirtyCaching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::SetDirtyCaching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirtyCaching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.UnityEngine.UI.ICanvasElement.get_transform
::UnityEngine::Transform* UnityEngine::UI::ScrollRect::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ScrollRect*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnEnable
void UnityEngine::UI::ScrollRect::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnDisable
void UnityEngine::UI::ScrollRect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.IsActive
bool UnityEngine::UI::ScrollRect::IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::IsActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ScrollRect.OnRectTransformDimensionsChange
void UnityEngine::UI::ScrollRect::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ScrollRect/MovementType
#include "UnityEngine/UI/ScrollRect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/MovementType Unrestricted
::UnityEngine::UI::ScrollRect::MovementType UnityEngine::UI::ScrollRect::MovementType::_get_Unrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::MovementType::_get_Unrestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ScrollRect::MovementType>("UnityEngine.UI", "ScrollRect/MovementType", "Unrestricted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/MovementType Unrestricted
void UnityEngine::UI::ScrollRect::MovementType::_set_Unrestricted(::UnityEngine::UI::ScrollRect::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::MovementType::_set_Unrestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/MovementType", "Unrestricted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/MovementType Elastic
::UnityEngine::UI::ScrollRect::MovementType UnityEngine::UI::ScrollRect::MovementType::_get_Elastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::MovementType::_get_Elastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ScrollRect::MovementType>("UnityEngine.UI", "ScrollRect/MovementType", "Elastic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/MovementType Elastic
void UnityEngine::UI::ScrollRect::MovementType::_set_Elastic(::UnityEngine::UI::ScrollRect::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::MovementType::_set_Elastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/MovementType", "Elastic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/MovementType Clamped
::UnityEngine::UI::ScrollRect::MovementType UnityEngine::UI::ScrollRect::MovementType::_get_Clamped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::MovementType::_get_Clamped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ScrollRect::MovementType>("UnityEngine.UI", "ScrollRect/MovementType", "Clamped"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/MovementType Clamped
void UnityEngine::UI::ScrollRect::MovementType::_set_Clamped(::UnityEngine::UI::ScrollRect::MovementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::MovementType::_set_Clamped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/MovementType", "Clamped", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::ScrollRect::MovementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::MovementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ScrollRect/ScrollbarVisibility
#include "UnityEngine/UI/ScrollRect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility Permanent
::UnityEngine::UI::ScrollRect::ScrollbarVisibility UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_Permanent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_Permanent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ScrollRect::ScrollbarVisibility>("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "Permanent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility Permanent
void UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_Permanent(::UnityEngine::UI::ScrollRect::ScrollbarVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_Permanent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "Permanent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHide
::UnityEngine::UI::ScrollRect::ScrollbarVisibility UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_AutoHide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_AutoHide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ScrollRect::ScrollbarVisibility>("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "AutoHide"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHide
void UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_AutoHide(::UnityEngine::UI::ScrollRect::ScrollbarVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_AutoHide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "AutoHide", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHideAndExpandViewport
::UnityEngine::UI::ScrollRect::ScrollbarVisibility UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_AutoHideAndExpandViewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::ScrollbarVisibility::_get_AutoHideAndExpandViewport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ScrollRect::ScrollbarVisibility>("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "AutoHideAndExpandViewport"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ScrollRect/ScrollbarVisibility AutoHideAndExpandViewport
void UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_AutoHideAndExpandViewport(::UnityEngine::UI::ScrollRect::ScrollbarVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::ScrollbarVisibility::_set_AutoHideAndExpandViewport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ScrollRect/ScrollbarVisibility", "AutoHideAndExpandViewport", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::ScrollRect::ScrollbarVisibility::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::ScrollbarVisibility::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ScrollRect/ScrollRectEvent
#include "UnityEngine/UI/ScrollRect_ScrollRectEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
// Including type: UnityEngine.UI.AnimationTriggers
#include "UnityEngine/UI/AnimationTriggers.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.UI.Selectable> s_List
::System::Collections::Generic::List_1<::UnityEngine::UI::Selectable*>* UnityEngine::UI::Selectable::_get_s_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::_get_s_List");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::UI::Selectable*>*>("UnityEngine.UI", "Selectable", "s_List"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.UI.Selectable> s_List
void UnityEngine::UI::Selectable::_set_s_List(::System::Collections::Generic::List_1<::UnityEngine::UI::Selectable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::_set_s_List");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable", "s_List", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Navigation m_Navigation
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Navigation& UnityEngine::UI::Selectable::dyn_m_Navigation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_m_Navigation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Navigation"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Navigation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Selectable/Transition m_Transition
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Selectable::Transition& UnityEngine::UI::Selectable::dyn_m_Transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_m_Transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Transition"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Selectable::Transition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ColorBlock m_Colors
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ColorBlock& UnityEngine::UI::Selectable::dyn_m_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_m_Colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Colors"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ColorBlock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.SpriteState m_SpriteState
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::SpriteState& UnityEngine::UI::Selectable::dyn_m_SpriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_m_SpriteState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpriteState"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::SpriteState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.AnimationTriggers m_AnimationTriggers
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::AnimationTriggers*& UnityEngine::UI::Selectable::dyn_m_AnimationTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_m_AnimationTriggers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimationTriggers"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::AnimationTriggers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Interactable
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Selectable::dyn_m_Interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_m_Interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic m_TargetGraphic
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Graphic*& UnityEngine::UI::Selectable::dyn_m_TargetGraphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_m_TargetGraphic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetGraphic"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_GroupsAllowInteraction
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Selectable::dyn_m_GroupsAllowInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_m_GroupsAllowInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GroupsAllowInteraction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Selectable/SelectionState m_CurrentSelectionState
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Selectable::SelectionState& UnityEngine::UI::Selectable::dyn_m_CurrentSelectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_m_CurrentSelectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentSelectionState"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Selectable::SelectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isPointerInside>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Selectable::dyn_$isPointerInside$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_$isPointerInside$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isPointerInside>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isPointerDown>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Selectable::dyn_$isPointerDown$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_$isPointerDown$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isPointerDown>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasSelection>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Selectable::dyn_$hasSelection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_$hasSelection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasSelection>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.CanvasGroup> m_CanvasGroupCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::CanvasGroup*>*& UnityEngine::UI::Selectable::dyn_m_CanvasGroupCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::dyn_m_CanvasGroupCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CanvasGroupCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::CanvasGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_allSelectables
::System::Collections::Generic::List_1<::UnityEngine::UI::Selectable*>* UnityEngine::UI::Selectable::get_allSelectables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_allSelectables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Selectable", "get_allSelectables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::UI::Selectable*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_navigation
::UnityEngine::UI::Navigation UnityEngine::UI::Selectable::get_navigation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_navigation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_navigation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Navigation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_navigation
void UnityEngine::UI::Selectable::set_navigation(::UnityEngine::UI::Navigation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_navigation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_navigation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_transition
::UnityEngine::UI::Selectable::Transition UnityEngine::UI::Selectable::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_transition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable::Transition, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_transition
void UnityEngine::UI::Selectable::set_transition(::UnityEngine::UI::Selectable::Transition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_transition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_colors
::UnityEngine::UI::ColorBlock UnityEngine::UI::Selectable::get_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_colors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ColorBlock, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_colors
void UnityEngine::UI::Selectable::set_colors(::UnityEngine::UI::ColorBlock value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_colors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_spriteState
::UnityEngine::UI::SpriteState UnityEngine::UI::Selectable::get_spriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_spriteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::SpriteState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_spriteState
void UnityEngine::UI::Selectable::set_spriteState(::UnityEngine::UI::SpriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_spriteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_animationTriggers
::UnityEngine::UI::AnimationTriggers* UnityEngine::UI::Selectable::get_animationTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_animationTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::AnimationTriggers*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_animationTriggers
void UnityEngine::UI::Selectable::set_animationTriggers(::UnityEngine::UI::AnimationTriggers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_animationTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animationTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_targetGraphic
::UnityEngine::UI::Graphic* UnityEngine::UI::Selectable::get_targetGraphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_targetGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_targetGraphic
void UnityEngine::UI::Selectable::set_targetGraphic(::UnityEngine::UI::Graphic* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_targetGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_interactable
bool UnityEngine::UI::Selectable::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_interactable
void UnityEngine::UI::Selectable::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_isPointerInside
bool UnityEngine::UI::Selectable::get_isPointerInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_isPointerInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPointerInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_isPointerInside
void UnityEngine::UI::Selectable::set_isPointerInside(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_isPointerInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPointerInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_isPointerDown
bool UnityEngine::UI::Selectable::get_isPointerDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_isPointerDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_isPointerDown
void UnityEngine::UI::Selectable::set_isPointerDown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_isPointerDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_hasSelection
bool UnityEngine::UI::Selectable::get_hasSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_hasSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_hasSelection
void UnityEngine::UI::Selectable::set_hasSelection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_hasSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_image
::UnityEngine::UI::Image* UnityEngine::UI::Selectable::get_image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Image*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_image
void UnityEngine::UI::Selectable::set_image(::UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::set_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_animator
::UnityEngine::Animator* UnityEngine::UI::Selectable::get_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_animator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.IsInteractable
bool UnityEngine::UI::Selectable::IsInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::IsInteractable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnSetProperty
void UnityEngine::UI::Selectable::OnSetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnSetProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_currentSelectionState
::UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::get_currentSelectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::get_currentSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable::SelectionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.InstantClearState
void UnityEngine::UI::Selectable::InstantClearState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::InstantClearState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.DoStateTransition
void UnityEngine::UI::Selectable::DoStateTransition(::UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, instant);
}
// Autogenerated method: UnityEngine.UI.Selectable.FindSelectable
::UnityEngine::UI::Selectable* UnityEngine::UI::Selectable::FindSelectable(::UnityEngine::Vector3 dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::FindSelectable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method, dir);
}
// Autogenerated method: UnityEngine.UI.Selectable.GetPointOnRectEdge
::UnityEngine::Vector3 UnityEngine::UI::Selectable::GetPointOnRectEdge(::UnityEngine::RectTransform* rect, ::UnityEngine::Vector2 dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::GetPointOnRectEdge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Selectable", "GetPointOnRectEdge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, dir);
}
// Autogenerated method: UnityEngine.UI.Selectable.Navigate
void UnityEngine::UI::Selectable::Navigate(::UnityEngine::EventSystems::AxisEventData* eventData, ::UnityEngine::UI::Selectable* sel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Navigate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Navigate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(sel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, sel);
}
// Autogenerated method: UnityEngine.UI.Selectable.FindSelectableOnLeft
::UnityEngine::UI::Selectable* UnityEngine::UI::Selectable::FindSelectableOnLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::FindSelectableOnLeft");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.FindSelectableOnRight
::UnityEngine::UI::Selectable* UnityEngine::UI::Selectable::FindSelectableOnRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::FindSelectableOnRight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.FindSelectableOnUp
::UnityEngine::UI::Selectable* UnityEngine::UI::Selectable::FindSelectableOnUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::FindSelectableOnUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.FindSelectableOnDown
::UnityEngine::UI::Selectable* UnityEngine::UI::Selectable::FindSelectableOnDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::FindSelectableOnDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnMove
void UnityEngine::UI::Selectable::OnMove(::UnityEngine::EventSystems::AxisEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.StartColorTween
void UnityEngine::UI::Selectable::StartColorTween(::UnityEngine::Color targetColor, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::StartColorTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartColorTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetColor, instant);
}
// Autogenerated method: UnityEngine.UI.Selectable.DoSpriteSwap
void UnityEngine::UI::Selectable::DoSpriteSwap(::UnityEngine::Sprite* newSprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::DoSpriteSwap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoSpriteSwap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSprite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSprite);
}
// Autogenerated method: UnityEngine.UI.Selectable.TriggerAnimation
void UnityEngine::UI::Selectable::TriggerAnimation(::StringW triggername) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::TriggerAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triggername)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, triggername);
}
// Autogenerated method: UnityEngine.UI.Selectable.IsHighlighted
bool UnityEngine::UI::Selectable::IsHighlighted(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::IsHighlighted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHighlighted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.IsPressed
bool UnityEngine::UI::Selectable::IsPressed(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::IsPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.IsPressed
bool UnityEngine::UI::Selectable::IsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::IsPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.UpdateSelectionState
void UnityEngine::UI::Selectable::UpdateSelectionState(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::UpdateSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.EvaluateAndTransitionToSelectionState
void UnityEngine::UI::Selectable::EvaluateAndTransitionToSelectionState(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::EvaluateAndTransitionToSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAndTransitionToSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.InternalEvaluateAndTransitionToSelectionState
void UnityEngine::UI::Selectable::InternalEvaluateAndTransitionToSelectionState(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::InternalEvaluateAndTransitionToSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalEvaluateAndTransitionToSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnPointerDown
void UnityEngine::UI::Selectable::OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnPointerUp
void UnityEngine::UI::Selectable::OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnPointerEnter
void UnityEngine::UI::Selectable::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnPointerExit
void UnityEngine::UI::Selectable::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnSelect
void UnityEngine::UI::Selectable::OnSelect(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnSelect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnDeselect
void UnityEngine::UI::Selectable::OnDeselect(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnDeselect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.Select
void UnityEngine::UI::Selectable::Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Select");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable..cctor
void UnityEngine::UI::Selectable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Selectable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.Awake
void UnityEngine::UI::Selectable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnCanvasGroupChanged
void UnityEngine::UI::Selectable::OnCanvasGroupChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnCanvasGroupChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnDidApplyAnimationProperties
void UnityEngine::UI::Selectable::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnEnable
void UnityEngine::UI::Selectable::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnTransformParentChanged
void UnityEngine::UI::Selectable::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnDisable
void UnityEngine::UI::Selectable::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Selectable/Transition
#include "UnityEngine/UI/Selectable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/Transition None
::UnityEngine::UI::Selectable::Transition UnityEngine::UI::Selectable::Transition::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Transition::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Selectable::Transition>("UnityEngine.UI", "Selectable/Transition", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/Transition None
void UnityEngine::UI::Selectable::Transition::_set_None(::UnityEngine::UI::Selectable::Transition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Transition::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/Transition", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/Transition ColorTint
::UnityEngine::UI::Selectable::Transition UnityEngine::UI::Selectable::Transition::_get_ColorTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Transition::_get_ColorTint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Selectable::Transition>("UnityEngine.UI", "Selectable/Transition", "ColorTint"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/Transition ColorTint
void UnityEngine::UI::Selectable::Transition::_set_ColorTint(::UnityEngine::UI::Selectable::Transition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Transition::_set_ColorTint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/Transition", "ColorTint", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/Transition SpriteSwap
::UnityEngine::UI::Selectable::Transition UnityEngine::UI::Selectable::Transition::_get_SpriteSwap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Transition::_get_SpriteSwap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Selectable::Transition>("UnityEngine.UI", "Selectable/Transition", "SpriteSwap"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/Transition SpriteSwap
void UnityEngine::UI::Selectable::Transition::_set_SpriteSwap(::UnityEngine::UI::Selectable::Transition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Transition::_set_SpriteSwap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/Transition", "SpriteSwap", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/Transition Animation
::UnityEngine::UI::Selectable::Transition UnityEngine::UI::Selectable::Transition::_get_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Transition::_get_Animation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Selectable::Transition>("UnityEngine.UI", "Selectable/Transition", "Animation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/Transition Animation
void UnityEngine::UI::Selectable::Transition::_set_Animation(::UnityEngine::UI::Selectable::Transition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Transition::_set_Animation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/Transition", "Animation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::Selectable::Transition::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::Transition::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Selectable/SelectionState
#include "UnityEngine/UI/Selectable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/SelectionState Normal
::UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::SelectionState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::SelectionState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Selectable::SelectionState>("UnityEngine.UI", "Selectable/SelectionState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/SelectionState Normal
void UnityEngine::UI::Selectable::SelectionState::_set_Normal(::UnityEngine::UI::Selectable::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::SelectionState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/SelectionState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/SelectionState Highlighted
::UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::SelectionState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::SelectionState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Selectable::SelectionState>("UnityEngine.UI", "Selectable/SelectionState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/SelectionState Highlighted
void UnityEngine::UI::Selectable::SelectionState::_set_Highlighted(::UnityEngine::UI::Selectable::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::SelectionState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/SelectionState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/SelectionState Pressed
::UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::SelectionState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::SelectionState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Selectable::SelectionState>("UnityEngine.UI", "Selectable/SelectionState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/SelectionState Pressed
void UnityEngine::UI::Selectable::SelectionState::_set_Pressed(::UnityEngine::UI::Selectable::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::SelectionState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/SelectionState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/SelectionState Disabled
::UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::SelectionState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::SelectionState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Selectable::SelectionState>("UnityEngine.UI", "Selectable/SelectionState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/SelectionState Disabled
void UnityEngine::UI::Selectable::SelectionState::_set_Disabled(::UnityEngine::UI::Selectable::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::SelectionState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/SelectionState", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::Selectable::SelectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Selectable::SelectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.SetPropertyUtility
#include "UnityEngine/UI/SetPropertyUtility.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.SetPropertyUtility.SetColor
bool UnityEngine::UI::SetPropertyUtility::SetColor(ByRef<::UnityEngine::Color> currentValue, ::UnityEngine::Color newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SetPropertyUtility::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "SetPropertyUtility", "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(currentValue), newValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.UI.Slider/SliderEvent
#include "UnityEngine/UI/Slider_SliderEvent.hpp"
// Including type: UnityEngine.UI.Slider/Axis
#include "UnityEngine/UI/Slider_Axis.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_FillRect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::Slider::dyn_m_FillRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_FillRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FillRect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_HandleRect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::Slider::dyn_m_HandleRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_HandleRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HandleRect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Slider/Direction m_Direction
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider::Direction& UnityEngine::UI::Slider::dyn_m_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_Direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Direction"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider::Direction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MinValue
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::Slider::dyn_m_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_MinValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxValue
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::Slider::dyn_m_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_MaxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WholeNumbers
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Slider::dyn_m_WholeNumbers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_WholeNumbers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WholeNumbers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_Value
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::Slider::dyn_m_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Slider/SliderEvent m_OnValueChanged
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider::SliderEvent*& UnityEngine::UI::Slider::dyn_m_OnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_OnValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnValueChanged"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Slider::SliderEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_FillImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& UnityEngine::UI::Slider::dyn_m_FillImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_FillImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FillImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_FillTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::UI::Slider::dyn_m_FillTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_FillTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FillTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_FillContainerRect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::Slider::dyn_m_FillContainerRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_FillContainerRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FillContainerRect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_HandleTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::UI::Slider::dyn_m_HandleTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_HandleTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HandleTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_HandleContainerRect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::Slider::dyn_m_HandleContainerRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_HandleContainerRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HandleContainerRect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::Slider::dyn_m_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.DrivenRectTransformTracker m_Tracker
[[deprecated("Use field access instead!")]] ::UnityEngine::DrivenRectTransformTracker& UnityEngine::UI::Slider::dyn_m_Tracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::dyn_m_Tracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracker"))->offset;
  return *reinterpret_cast<::UnityEngine::DrivenRectTransformTracker*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.Slider.get_fillRect
::UnityEngine::RectTransform* UnityEngine::UI::Slider::get_fillRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_fillRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_fillRect
void UnityEngine::UI::Slider::set_fillRect(::UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::set_fillRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_handleRect
::UnityEngine::RectTransform* UnityEngine::UI::Slider::get_handleRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_handleRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handleRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_handleRect
void UnityEngine::UI::Slider::set_handleRect(::UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::set_handleRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handleRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_direction
::UnityEngine::UI::Slider::Direction UnityEngine::UI::Slider::get_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Slider::Direction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_direction
void UnityEngine::UI::Slider::set_direction(::UnityEngine::UI::Slider::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_minValue
float UnityEngine::UI::Slider::get_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_minValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_minValue
void UnityEngine::UI::Slider::set_minValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::set_minValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_maxValue
float UnityEngine::UI::Slider::get_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_maxValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_maxValue
void UnityEngine::UI::Slider::set_maxValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::set_maxValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_wholeNumbers
bool UnityEngine::UI::Slider::get_wholeNumbers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_wholeNumbers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wholeNumbers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_wholeNumbers
void UnityEngine::UI::Slider::set_wholeNumbers(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::set_wholeNumbers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wholeNumbers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_value
float UnityEngine::UI::Slider::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Slider*), 46));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_value
void UnityEngine::UI::Slider::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::set_value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Slider*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_normalizedValue
float UnityEngine::UI::Slider::get_normalizedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_normalizedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalizedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_normalizedValue
void UnityEngine::UI::Slider::set_normalizedValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::set_normalizedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_onValueChanged
::UnityEngine::UI::Slider::SliderEvent* UnityEngine::UI::Slider::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Slider::SliderEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_onValueChanged
void UnityEngine::UI::Slider::set_onValueChanged(::UnityEngine::UI::Slider::SliderEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_stepSize
float UnityEngine::UI::Slider::get_stepSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_stepSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stepSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.Rebuild
void UnityEngine::UI::Slider::Rebuild(::UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Rebuild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Slider*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.Slider.LayoutComplete
void UnityEngine::UI::Slider::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Slider*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.GraphicUpdateComplete
void UnityEngine::UI::Slider::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Slider*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.UpdateCachedReferences
void UnityEngine::UI::Slider::UpdateCachedReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::UpdateCachedReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCachedReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.ClampValue
float UnityEngine::UI::Slider::ClampValue(float input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::ClampValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.UI.Slider.Set
void UnityEngine::UI::Slider::Set(float input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.UI.Slider.Set
void UnityEngine::UI::Slider::Set(float input, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Slider*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, sendCallback);
}
// Autogenerated method: UnityEngine.UI.Slider.get_axis
::UnityEngine::UI::Slider::Axis UnityEngine::UI::Slider::get_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Slider::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.get_reverseValue
bool UnityEngine::UI::Slider::get_reverseValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::get_reverseValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reverseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.UpdateVisuals
void UnityEngine::UI::Slider::UpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::UpdateVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.UpdateDrag
void UnityEngine::UI::Slider::UpdateDrag(::UnityEngine::EventSystems::PointerEventData* eventData, ::UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::UpdateDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, cam);
}
// Autogenerated method: UnityEngine.UI.Slider.MayDrag
bool UnityEngine::UI::Slider::MayDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::MayDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MayDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Slider.OnDrag
void UnityEngine::UI::Slider::OnDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::OnDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Slider*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Slider.OnInitializePotentialDrag
void UnityEngine::UI::Slider::OnInitializePotentialDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::OnInitializePotentialDrag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Slider*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Slider.SetDirection
void UnityEngine::UI::Slider::SetDirection(::UnityEngine::UI::Slider::Direction direction, bool includeRectLayouts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::SetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(includeRectLayouts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, direction, includeRectLayouts);
}
// Autogenerated method: UnityEngine.UI.Slider.UnityEngine.UI.ICanvasElement.get_transform
::UnityEngine::Transform* UnityEngine::UI::Slider::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Slider*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.OnEnable
void UnityEngine::UI::Slider::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.OnDisable
void UnityEngine::UI::Slider::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.OnDidApplyAnimationProperties
void UnityEngine::UI::Slider::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.OnRectTransformDimensionsChange
void UnityEngine::UI::Slider::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.OnPointerDown
void UnityEngine::UI::Slider::OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Slider.OnMove
void UnityEngine::UI::Slider::OnMove(::UnityEngine::EventSystems::AxisEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::OnMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Slider.FindSelectableOnLeft
::UnityEngine::UI::Selectable* UnityEngine::UI::Slider::FindSelectableOnLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::FindSelectableOnLeft");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.FindSelectableOnRight
::UnityEngine::UI::Selectable* UnityEngine::UI::Slider::FindSelectableOnRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::FindSelectableOnRight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.FindSelectableOnUp
::UnityEngine::UI::Selectable* UnityEngine::UI::Slider::FindSelectableOnUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::FindSelectableOnUp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.FindSelectableOnDown
::UnityEngine::UI::Selectable* UnityEngine::UI::Slider::FindSelectableOnDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::FindSelectableOnDown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Slider/Direction
#include "UnityEngine/UI/Slider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Direction LeftToRight
::UnityEngine::UI::Slider::Direction UnityEngine::UI::Slider::Direction::_get_LeftToRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Direction::_get_LeftToRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Slider::Direction>("UnityEngine.UI", "Slider/Direction", "LeftToRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Direction LeftToRight
void UnityEngine::UI::Slider::Direction::_set_LeftToRight(::UnityEngine::UI::Slider::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Direction::_set_LeftToRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Direction", "LeftToRight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Direction RightToLeft
::UnityEngine::UI::Slider::Direction UnityEngine::UI::Slider::Direction::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Direction::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Slider::Direction>("UnityEngine.UI", "Slider/Direction", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Direction RightToLeft
void UnityEngine::UI::Slider::Direction::_set_RightToLeft(::UnityEngine::UI::Slider::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Direction::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Direction", "RightToLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Direction BottomToTop
::UnityEngine::UI::Slider::Direction UnityEngine::UI::Slider::Direction::_get_BottomToTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Direction::_get_BottomToTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Slider::Direction>("UnityEngine.UI", "Slider/Direction", "BottomToTop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Direction BottomToTop
void UnityEngine::UI::Slider::Direction::_set_BottomToTop(::UnityEngine::UI::Slider::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Direction::_set_BottomToTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Direction", "BottomToTop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Direction TopToBottom
::UnityEngine::UI::Slider::Direction UnityEngine::UI::Slider::Direction::_get_TopToBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Direction::_get_TopToBottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Slider::Direction>("UnityEngine.UI", "Slider/Direction", "TopToBottom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Direction TopToBottom
void UnityEngine::UI::Slider::Direction::_set_TopToBottom(::UnityEngine::UI::Slider::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Direction::_set_TopToBottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Direction", "TopToBottom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::Slider::Direction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Direction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Slider/SliderEvent
#include "UnityEngine/UI/Slider_SliderEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Slider/Axis
#include "UnityEngine/UI/Slider_Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Axis Horizontal
::UnityEngine::UI::Slider::Axis UnityEngine::UI::Slider::Axis::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Axis::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Slider::Axis>("UnityEngine.UI", "Slider/Axis", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Axis Horizontal
void UnityEngine::UI::Slider::Axis::_set_Horizontal(::UnityEngine::UI::Slider::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Axis::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Axis", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Axis Vertical
::UnityEngine::UI::Slider::Axis UnityEngine::UI::Slider::Axis::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Axis::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Slider::Axis>("UnityEngine.UI", "Slider/Axis", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Axis Vertical
void UnityEngine::UI::Slider::Axis::_set_Vertical(::UnityEngine::UI::Slider::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Axis::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Axis", "Vertical", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::Slider::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Slider::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.SpriteState
#include "UnityEngine/UI/SpriteState.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite m_HighlightedSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& UnityEngine::UI::SpriteState::dyn_m_HighlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SpriteState::dyn_m_HighlightedSprite");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HighlightedSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite m_PressedSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& UnityEngine::UI::SpriteState::dyn_m_PressedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SpriteState::dyn_m_PressedSprite");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PressedSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite m_DisabledSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& UnityEngine::UI::SpriteState::dyn_m_DisabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SpriteState::dyn_m_DisabledSprite");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DisabledSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.SpriteState.get_highlightedSprite
::UnityEngine::Sprite* UnityEngine::UI::SpriteState::get_highlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SpriteState::get_highlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_highlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.SpriteState.set_highlightedSprite
void UnityEngine::UI::SpriteState::set_highlightedSprite(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SpriteState::set_highlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_highlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.SpriteState.get_pressedSprite
::UnityEngine::Sprite* UnityEngine::UI::SpriteState::get_pressedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SpriteState::get_pressedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.SpriteState.set_pressedSprite
void UnityEngine::UI::SpriteState::set_pressedSprite(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SpriteState::set_pressedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.SpriteState.get_disabledSprite
::UnityEngine::Sprite* UnityEngine::UI::SpriteState::get_disabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SpriteState::get_disabledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_disabledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.SpriteState.set_disabledSprite
void UnityEngine::UI::SpriteState::set_disabledSprite(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SpriteState::set_disabledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_disabledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.SpriteState.Equals
bool UnityEngine::UI::SpriteState::Equals(::UnityEngine::UI::SpriteState other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::SpriteState::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::UI::SpriteState), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.StencilMaterial
#include "UnityEngine/UI/StencilMaterial.hpp"
// Including type: UnityEngine.UI.StencilMaterial/MatEntry
#include "UnityEngine/UI/StencilMaterial_MatEntry.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Rendering.StencilOp
#include "UnityEngine/Rendering/StencilOp.hpp"
// Including type: UnityEngine.Rendering.CompareFunction
#include "UnityEngine/Rendering/CompareFunction.hpp"
// Including type: UnityEngine.Rendering.ColorWriteMask
#include "UnityEngine/Rendering/ColorWriteMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.UI.StencilMaterial/MatEntry> m_List
::System::Collections::Generic::List_1<::UnityEngine::UI::StencilMaterial::MatEntry*>* UnityEngine::UI::StencilMaterial::_get_m_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::_get_m_List");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::UI::StencilMaterial::MatEntry*>*>("UnityEngine.UI", "StencilMaterial", "m_List"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.UI.StencilMaterial/MatEntry> m_List
void UnityEngine::UI::StencilMaterial::_set_m_List(::System::Collections::Generic::List_1<::UnityEngine::UI::StencilMaterial::MatEntry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::_set_m_List");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "StencilMaterial", "m_List", value));
}
// Autogenerated method: UnityEngine.UI.StencilMaterial.Add
::UnityEngine::Material* UnityEngine::UI::StencilMaterial::Add(::UnityEngine::Material* baseMat, int stencilID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMat), ::il2cpp_utils::ExtractType(stencilID)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseMat, stencilID);
}
// Autogenerated method: UnityEngine.UI.StencilMaterial.Add
::UnityEngine::Material* UnityEngine::UI::StencilMaterial::Add(::UnityEngine::Material* baseMat, int stencilID, ::UnityEngine::Rendering::StencilOp operation, ::UnityEngine::Rendering::CompareFunction compareFunction, ::UnityEngine::Rendering::ColorWriteMask colorWriteMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMat), ::il2cpp_utils::ExtractType(stencilID), ::il2cpp_utils::ExtractType(operation), ::il2cpp_utils::ExtractType(compareFunction), ::il2cpp_utils::ExtractType(colorWriteMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseMat, stencilID, operation, compareFunction, colorWriteMask);
}
// Autogenerated method: UnityEngine.UI.StencilMaterial.Add
::UnityEngine::Material* UnityEngine::UI::StencilMaterial::Add(::UnityEngine::Material* baseMat, int stencilID, ::UnityEngine::Rendering::StencilOp operation, ::UnityEngine::Rendering::CompareFunction compareFunction, ::UnityEngine::Rendering::ColorWriteMask colorWriteMask, int readMask, int writeMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMat), ::il2cpp_utils::ExtractType(stencilID), ::il2cpp_utils::ExtractType(operation), ::il2cpp_utils::ExtractType(compareFunction), ::il2cpp_utils::ExtractType(colorWriteMask), ::il2cpp_utils::ExtractType(readMask), ::il2cpp_utils::ExtractType(writeMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseMat, stencilID, operation, compareFunction, colorWriteMask, readMask, writeMask);
}
// Autogenerated method: UnityEngine.UI.StencilMaterial.Remove
void UnityEngine::UI::StencilMaterial::Remove(::UnityEngine::Material* customMat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customMat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, customMat);
}
// Autogenerated method: UnityEngine.UI.StencilMaterial.ClearAll
void UnityEngine::UI::StencilMaterial::ClearAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::ClearAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", "ClearAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.StencilMaterial..cctor
void UnityEngine::UI::StencilMaterial::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.StencilMaterial/MatEntry
#include "UnityEngine/UI/StencilMaterial_MatEntry.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material baseMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& UnityEngine::UI::StencilMaterial::MatEntry::dyn_baseMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::MatEntry::dyn_baseMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material customMat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& UnityEngine::UI::StencilMaterial::MatEntry::dyn_customMat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::MatEntry::dyn_customMat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customMat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::StencilMaterial::MatEntry::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::MatEntry::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 stencilId
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::StencilMaterial::MatEntry::dyn_stencilId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::MatEntry::dyn_stencilId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stencilId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rendering.StencilOp operation
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::StencilOp& UnityEngine::UI::StencilMaterial::MatEntry::dyn_operation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::MatEntry::dyn_operation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "operation"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::StencilOp*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rendering.CompareFunction compareFunction
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CompareFunction& UnityEngine::UI::StencilMaterial::MatEntry::dyn_compareFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::MatEntry::dyn_compareFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compareFunction"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CompareFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 readMask
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::StencilMaterial::MatEntry::dyn_readMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::MatEntry::dyn_readMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 writeMask
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::StencilMaterial::MatEntry::dyn_writeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::MatEntry::dyn_writeMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useAlphaClip
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::StencilMaterial::MatEntry::dyn_useAlphaClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::MatEntry::dyn_useAlphaClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAlphaClip"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rendering.ColorWriteMask colorMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::ColorWriteMask& UnityEngine::UI::StencilMaterial::MatEntry::dyn_colorMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::StencilMaterial::MatEntry::dyn_colorMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::ColorWriteMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.FontData
#include "UnityEngine/UI/FontData.hpp"
// Including type: UnityEngine.TextGenerator
#include "UnityEngine/TextGenerator.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: UnityEngine.TextAnchor
#include "UnityEngine/TextAnchor.hpp"
// Including type: UnityEngine.HorizontalWrapMode
#include "UnityEngine/HorizontalWrapMode.hpp"
// Including type: UnityEngine.VerticalWrapMode
#include "UnityEngine/VerticalWrapMode.hpp"
// Including type: UnityEngine.FontStyle
#include "UnityEngine/FontStyle.hpp"
// Including type: UnityEngine.TextGenerationSettings
#include "UnityEngine/TextGenerationSettings.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Material s_DefaultText
::UnityEngine::Material* UnityEngine::UI::Text::_get_s_DefaultText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::_get_s_DefaultText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("UnityEngine.UI", "Text", "s_DefaultText"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Material s_DefaultText
void UnityEngine::UI::Text::_set_s_DefaultText(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::_set_s_DefaultText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Text", "s_DefaultText", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.FontData m_FontData
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::FontData*& UnityEngine::UI::Text::dyn_m_FontData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::dyn_m_FontData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontData"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::FontData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String m_Text
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::UI::Text::dyn_m_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::dyn_m_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextGenerator m_TextCache
[[deprecated("Use field access instead!")]] ::UnityEngine::TextGenerator*& UnityEngine::UI::Text::dyn_m_TextCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::dyn_m_TextCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextCache"))->offset;
  return *reinterpret_cast<::UnityEngine::TextGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextGenerator m_TextCacheForLayout
[[deprecated("Use field access instead!")]] ::UnityEngine::TextGenerator*& UnityEngine::UI::Text::dyn_m_TextCacheForLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::dyn_m_TextCacheForLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextCacheForLayout"))->offset;
  return *reinterpret_cast<::UnityEngine::TextGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_DisableFontTextureRebuiltCallback
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Text::dyn_m_DisableFontTextureRebuiltCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::dyn_m_DisableFontTextureRebuiltCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DisableFontTextureRebuiltCallback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.UIVertex[] m_TempVerts
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIVertex>& UnityEngine::UI::Text::dyn_m_TempVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::dyn_m_TempVerts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TempVerts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UIVertex>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.Text.get_cachedTextGenerator
::UnityEngine::TextGenerator* UnityEngine::UI::Text::get_cachedTextGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_cachedTextGenerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cachedTextGenerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_cachedTextGeneratorForLayout
::UnityEngine::TextGenerator* UnityEngine::UI::Text::get_cachedTextGeneratorForLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_cachedTextGeneratorForLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cachedTextGeneratorForLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.FontTextureChanged
void UnityEngine::UI::Text::FontTextureChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::FontTextureChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FontTextureChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_font
::UnityEngine::Font* UnityEngine::UI::Text::get_font() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Font*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_font
void UnityEngine::UI::Text::set_font(::UnityEngine::Font* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_text
::StringW UnityEngine::UI::Text::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 72));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_text
void UnityEngine::UI::Text::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 73));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_supportRichText
bool UnityEngine::UI::Text::get_supportRichText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_supportRichText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportRichText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_supportRichText
void UnityEngine::UI::Text::set_supportRichText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_supportRichText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_supportRichText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_resizeTextForBestFit
bool UnityEngine::UI::Text::get_resizeTextForBestFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_resizeTextForBestFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resizeTextForBestFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_resizeTextForBestFit
void UnityEngine::UI::Text::set_resizeTextForBestFit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_resizeTextForBestFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_resizeTextForBestFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_resizeTextMinSize
int UnityEngine::UI::Text::get_resizeTextMinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_resizeTextMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resizeTextMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_resizeTextMinSize
void UnityEngine::UI::Text::set_resizeTextMinSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_resizeTextMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_resizeTextMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_resizeTextMaxSize
int UnityEngine::UI::Text::get_resizeTextMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_resizeTextMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resizeTextMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_resizeTextMaxSize
void UnityEngine::UI::Text::set_resizeTextMaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_resizeTextMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_resizeTextMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_alignment
::UnityEngine::TextAnchor UnityEngine::UI::Text::get_alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextAnchor, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_alignment
void UnityEngine::UI::Text::set_alignment(::UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_alignByGeometry
bool UnityEngine::UI::Text::get_alignByGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_alignByGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignByGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_alignByGeometry
void UnityEngine::UI::Text::set_alignByGeometry(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_alignByGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignByGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_fontSize
int UnityEngine::UI::Text::get_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_fontSize
void UnityEngine::UI::Text::set_fontSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_horizontalOverflow
::UnityEngine::HorizontalWrapMode UnityEngine::UI::Text::get_horizontalOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_horizontalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::HorizontalWrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_horizontalOverflow
void UnityEngine::UI::Text::set_horizontalOverflow(::UnityEngine::HorizontalWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_horizontalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_verticalOverflow
::UnityEngine::VerticalWrapMode UnityEngine::UI::Text::get_verticalOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_verticalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::VerticalWrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_verticalOverflow
void UnityEngine::UI::Text::set_verticalOverflow(::UnityEngine::VerticalWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_verticalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_lineSpacing
float UnityEngine::UI::Text::get_lineSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_lineSpacing
void UnityEngine::UI::Text::set_lineSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_fontStyle
::UnityEngine::FontStyle UnityEngine::UI::Text::get_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::FontStyle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_fontStyle
void UnityEngine::UI::Text::set_fontStyle(::UnityEngine::FontStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::set_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_pixelsPerUnit
float UnityEngine::UI::Text::get_pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_pixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.AssignDefaultFont
void UnityEngine::UI::Text::AssignDefaultFont() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::AssignDefaultFont");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignDefaultFont", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.GetGenerationSettings
::UnityEngine::TextGenerationSettings UnityEngine::UI::Text::GetGenerationSettings(::UnityEngine::Vector2 extents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::GetGenerationSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenerationSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extents)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextGenerationSettings, false>(this, ___internal__method, extents);
}
// Autogenerated method: UnityEngine.UI.Text.GetTextAnchorPivot
::UnityEngine::Vector2 UnityEngine::UI::Text::GetTextAnchorPivot(::UnityEngine::TextAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::GetTextAnchorPivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Text", "GetTextAnchorPivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, anchor);
}
// Autogenerated method: UnityEngine.UI.Text.CalculateLayoutInputHorizontal
void UnityEngine::UI::Text::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 74));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.CalculateLayoutInputVertical
void UnityEngine::UI::Text::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 75));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_minWidth
float UnityEngine::UI::Text::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_minWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 76));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_preferredWidth
float UnityEngine::UI::Text::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 77));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_flexibleWidth
float UnityEngine::UI::Text::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 78));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_minHeight
float UnityEngine::UI::Text::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_minHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 79));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_preferredHeight
float UnityEngine::UI::Text::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 80));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_flexibleHeight
float UnityEngine::UI::Text::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 81));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_layoutPriority
int UnityEngine::UI::Text::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Text*), 82));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_mainTexture
::UnityEngine::Texture* UnityEngine::UI::Text::get_mainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::get_mainTexture");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.OnEnable
void UnityEngine::UI::Text::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.OnDisable
void UnityEngine::UI::Text::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::MaskableGraphic*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.UpdateGeometry
void UnityEngine::UI::Text::UpdateGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.OnPopulateMesh
void UnityEngine::UI::Text::OnPopulateMesh(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated method: UnityEngine.UI.Text..cctor
void UnityEngine::UI::Text::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Text::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Text", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.UI.Toggle/ToggleEvent
#include "UnityEngine/UI/Toggle_ToggleEvent.hpp"
// Including type: UnityEngine.UI.ToggleGroup
#include "UnityEngine/UI/ToggleGroup.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle/ToggleTransition toggleTransition
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle::ToggleTransition& UnityEngine::UI::Toggle::dyn_toggleTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::dyn_toggleTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toggleTransition"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle::ToggleTransition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Graphic graphic
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Graphic*& UnityEngine::UI::Toggle::dyn_graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::dyn_graphic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphic"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ToggleGroup m_Group
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ToggleGroup*& UnityEngine::UI::Toggle::dyn_m_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::dyn_m_Group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Group"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ToggleGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle/ToggleEvent onValueChanged
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle::ToggleEvent*& UnityEngine::UI::Toggle::dyn_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::dyn_onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValueChanged"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle::ToggleEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsOn
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Toggle::dyn_m_IsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::dyn_m_IsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.Toggle.get_group
::UnityEngine::UI::ToggleGroup* UnityEngine::UI::Toggle::get_group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::get_group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ToggleGroup*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.set_group
void UnityEngine::UI::Toggle::set_group(::UnityEngine::UI::ToggleGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::set_group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Toggle.Rebuild
void UnityEngine::UI::Toggle::Rebuild(::UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::Rebuild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Toggle*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.Toggle.LayoutComplete
void UnityEngine::UI::Toggle::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Toggle*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.GraphicUpdateComplete
void UnityEngine::UI::Toggle::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Toggle*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.SetToggleGroup
void UnityEngine::UI::Toggle::SetToggleGroup(::UnityEngine::UI::ToggleGroup* newGroup, bool setMemberValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::SetToggleGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToggleGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGroup), ::il2cpp_utils::ExtractType(setMemberValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGroup, setMemberValue);
}
// Autogenerated method: UnityEngine.UI.Toggle.get_isOn
bool UnityEngine::UI::Toggle::get_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::get_isOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.set_isOn
void UnityEngine::UI::Toggle::set_isOn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::set_isOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Toggle.Set
void UnityEngine::UI::Toggle::Set(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Toggle.Set
void UnityEngine::UI::Toggle::Set(bool value, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, sendCallback);
}
// Autogenerated method: UnityEngine.UI.Toggle.PlayEffect
void UnityEngine::UI::Toggle::PlayEffect(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::PlayEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: UnityEngine.UI.Toggle.InternalToggle
void UnityEngine::UI::Toggle::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::InternalToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnPointerClick
void UnityEngine::UI::Toggle::OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Toggle*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnSubmit
void UnityEngine::UI::Toggle::OnSubmit(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::OnSubmit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Toggle*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Toggle.UnityEngine.UI.ICanvasElement.get_transform
::UnityEngine::Transform* UnityEngine::UI::Toggle::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Toggle*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnEnable
void UnityEngine::UI::Toggle::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnDisable
void UnityEngine::UI::Toggle::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnDidApplyAnimationProperties
void UnityEngine::UI::Toggle::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Selectable*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.Start
void UnityEngine::UI::Toggle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Toggle/ToggleTransition
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Toggle/ToggleTransition None
::UnityEngine::UI::Toggle::ToggleTransition UnityEngine::UI::Toggle::ToggleTransition::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::ToggleTransition::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Toggle::ToggleTransition>("UnityEngine.UI", "Toggle/ToggleTransition", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Toggle/ToggleTransition None
void UnityEngine::UI::Toggle::ToggleTransition::_set_None(::UnityEngine::UI::Toggle::ToggleTransition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::ToggleTransition::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Toggle/ToggleTransition", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Toggle/ToggleTransition Fade
::UnityEngine::UI::Toggle::ToggleTransition UnityEngine::UI::Toggle::ToggleTransition::_get_Fade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::ToggleTransition::_get_Fade");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::Toggle::ToggleTransition>("UnityEngine.UI", "Toggle/ToggleTransition", "Fade"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Toggle/ToggleTransition Fade
void UnityEngine::UI::Toggle::ToggleTransition::_set_Fade(::UnityEngine::UI::Toggle::ToggleTransition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::ToggleTransition::_set_Fade");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Toggle/ToggleTransition", "Fade", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::Toggle::ToggleTransition::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Toggle::ToggleTransition::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Toggle/ToggleEvent
#include "UnityEngine/UI/Toggle_ToggleEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ToggleGroup
#include "UnityEngine/UI/ToggleGroup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAB132C
// Autogenerated static field getter
// Get static field: static private System.Predicate`1<UnityEngine.UI.Toggle> <>f__am$cache0
::System::Predicate_1<::UnityEngine::UI::Toggle*>* UnityEngine::UI::ToggleGroup::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::UI::Toggle*>*>("UnityEngine.UI", "ToggleGroup", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Predicate`1<UnityEngine.UI.Toggle> <>f__am$cache0
void UnityEngine::UI::ToggleGroup::_set_$$f__am$cache0(::System::Predicate_1<::UnityEngine::UI::Toggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ToggleGroup", "<>f__am$cache0", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB133C
// Autogenerated static field getter
// Get static field: static private System.Func`2<UnityEngine.UI.Toggle,System.Boolean> <>f__am$cache1
::System::Func_2<::UnityEngine::UI::Toggle*, bool>* UnityEngine::UI::ToggleGroup::_get_$$f__am$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::_get_$$f__am$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::UI::Toggle*, bool>*>("UnityEngine.UI", "ToggleGroup", "<>f__am$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<UnityEngine.UI.Toggle,System.Boolean> <>f__am$cache1
void UnityEngine::UI::ToggleGroup::_set_$$f__am$cache1(::System::Func_2<::UnityEngine::UI::Toggle*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::_set_$$f__am$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ToggleGroup", "<>f__am$cache1", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowSwitchOff
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::ToggleGroup::dyn_m_AllowSwitchOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::dyn_m_AllowSwitchOff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowSwitchOff"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.UI.Toggle> m_Toggles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UI::Toggle*>*& UnityEngine::UI::ToggleGroup::dyn_m_Toggles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::dyn_m_Toggles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Toggles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UI::Toggle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.get_allowSwitchOff
bool UnityEngine::UI::ToggleGroup::get_allowSwitchOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::get_allowSwitchOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowSwitchOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.set_allowSwitchOff
void UnityEngine::UI::ToggleGroup::set_allowSwitchOff(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::set_allowSwitchOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowSwitchOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.ValidateToggleIsInGroup
void UnityEngine::UI::ToggleGroup::ValidateToggleIsInGroup(::UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::ValidateToggleIsInGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateToggleIsInGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.NotifyToggleOn
void UnityEngine::UI::ToggleGroup::NotifyToggleOn(::UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::NotifyToggleOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyToggleOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.UnregisterToggle
void UnityEngine::UI::ToggleGroup::UnregisterToggle(::UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::UnregisterToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.RegisterToggle
void UnityEngine::UI::ToggleGroup::RegisterToggle(::UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::RegisterToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.AnyTogglesOn
bool UnityEngine::UI::ToggleGroup::AnyTogglesOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::AnyTogglesOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyTogglesOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.ActiveToggles
::System::Collections::Generic::IEnumerable_1<::UnityEngine::UI::Toggle*>* UnityEngine::UI::ToggleGroup::ActiveToggles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::ActiveToggles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActiveToggles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::UI::Toggle*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.SetAllTogglesOff
void UnityEngine::UI::ToggleGroup::SetAllTogglesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::SetAllTogglesOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllTogglesOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.<AnyTogglesOn>m__0
bool UnityEngine::UI::ToggleGroup::$AnyTogglesOn$m__0(::UnityEngine::UI::Toggle* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::<AnyTogglesOn>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ToggleGroup", "<AnyTogglesOn>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.<ActiveToggles>m__1
bool UnityEngine::UI::ToggleGroup::$ActiveToggles$m__1(::UnityEngine::UI::Toggle* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ToggleGroup::<ActiveToggles>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ToggleGroup", "<ActiveToggles>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ClipperRegistry
#include "UnityEngine/UI/ClipperRegistry.hpp"
// Including type: UnityEngine.UI.Collections.IndexedSet`1
#include "UnityEngine/UI/Collections/IndexedSet_1.hpp"
// Including type: UnityEngine.UI.IClipper
#include "UnityEngine/UI/IClipper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.ClipperRegistry s_Instance
::UnityEngine::UI::ClipperRegistry* UnityEngine::UI::ClipperRegistry::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ClipperRegistry::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ClipperRegistry*>("UnityEngine.UI", "ClipperRegistry", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.ClipperRegistry s_Instance
void UnityEngine::UI::ClipperRegistry::_set_s_Instance(::UnityEngine::UI::ClipperRegistry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ClipperRegistry::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ClipperRegistry", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.UI.Collections.IndexedSet`1<UnityEngine.UI.IClipper> m_Clippers
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Collections::IndexedSet_1<::UnityEngine::UI::IClipper*>*& UnityEngine::UI::ClipperRegistry::dyn_m_Clippers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ClipperRegistry::dyn_m_Clippers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clippers"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Collections::IndexedSet_1<::UnityEngine::UI::IClipper*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.ClipperRegistry.get_instance
::UnityEngine::UI::ClipperRegistry* UnityEngine::UI::ClipperRegistry::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ClipperRegistry::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ClipperRegistry", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ClipperRegistry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ClipperRegistry.Cull
void UnityEngine::UI::ClipperRegistry::Cull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ClipperRegistry::Cull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ClipperRegistry.Register
void UnityEngine::UI::ClipperRegistry::Register(::UnityEngine::UI::IClipper* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ClipperRegistry::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ClipperRegistry", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: UnityEngine.UI.ClipperRegistry.Unregister
void UnityEngine::UI::ClipperRegistry::Unregister(::UnityEngine::UI::IClipper* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ClipperRegistry::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ClipperRegistry", "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Clipping
#include "UnityEngine/UI/Clipping.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.RectMask2D
#include "UnityEngine/UI/RectMask2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Clipping.FindCullAndClipWorldRect
::UnityEngine::Rect UnityEngine::UI::Clipping::FindCullAndClipWorldRect(::System::Collections::Generic::List_1<::UnityEngine::UI::RectMask2D*>* rectMaskParents, ByRef<bool> validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Clipping::FindCullAndClipWorldRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Clipping", "FindCullAndClipWorldRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectMaskParents), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectMaskParents, byref(validRect));
}
// Autogenerated method: UnityEngine.UI.Clipping.RectIntersect
::UnityEngine::Rect UnityEngine::UI::Clipping::RectIntersect(::UnityEngine::Rect a, ::UnityEngine::Rect b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Clipping::RectIntersect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Clipping", "RectIntersect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IClipper
#include "UnityEngine/UI/IClipper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IClipper.PerformClipping
void UnityEngine::UI::IClipper::PerformClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::IClipper::PerformClipping");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::IClipper*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IClippable
#include "UnityEngine/UI/IClippable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IClippable.get_gameObject
::UnityEngine::GameObject* UnityEngine::UI::IClippable::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::IClippable::get_gameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::IClippable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.IClippable.RecalculateClipping
void UnityEngine::UI::IClippable::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::IClippable::RecalculateClipping");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::IClippable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.IClippable.get_rectTransform
::UnityEngine::RectTransform* UnityEngine::UI::IClippable::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::IClippable::get_rectTransform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::IClippable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.IClippable.Cull
void UnityEngine::UI::IClippable::Cull(::UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::IClippable::Cull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::IClippable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: UnityEngine.UI.IClippable.SetClipRect
void UnityEngine::UI::IClippable::SetClipRect(::UnityEngine::Rect value, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::IClippable::SetClipRect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::IClippable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, validRect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.RectangularVertexClipper
#include "UnityEngine/UI/RectangularVertexClipper.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_WorldCorners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::UI::RectangularVertexClipper::dyn_m_WorldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectangularVertexClipper::dyn_m_WorldCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WorldCorners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] m_CanvasCorners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::UI::RectangularVertexClipper::dyn_m_CanvasCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectangularVertexClipper::dyn_m_CanvasCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CanvasCorners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.RectangularVertexClipper.GetCanvasRect
::UnityEngine::Rect UnityEngine::UI::RectangularVertexClipper::GetCanvasRect(::UnityEngine::RectTransform* t, ::UnityEngine::Canvas* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::RectangularVertexClipper::GetCanvasRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvasRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, t, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.AspectRatioFitter
#include "UnityEngine/UI/AspectRatioFitter.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.AspectRatioFitter/AspectMode m_AspectMode
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::AspectRatioFitter::AspectMode& UnityEngine::UI::AspectRatioFitter::dyn_m_AspectMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::dyn_m_AspectMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AspectMode"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::AspectRatioFitter::AspectMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AspectRatio
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::AspectRatioFitter::dyn_m_AspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::dyn_m_AspectRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AspectRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_Rect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::AspectRatioFitter::dyn_m_Rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::dyn_m_Rect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DelayedSetDirty
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::AspectRatioFitter::dyn_m_DelayedSetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::dyn_m_DelayedSetDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelayedSetDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.DrivenRectTransformTracker m_Tracker
[[deprecated("Use field access instead!")]] ::UnityEngine::DrivenRectTransformTracker& UnityEngine::UI::AspectRatioFitter::dyn_m_Tracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::dyn_m_Tracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracker"))->offset;
  return *reinterpret_cast<::UnityEngine::DrivenRectTransformTracker*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.get_aspectMode
::UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::get_aspectMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::get_aspectMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_aspectMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::AspectRatioFitter::AspectMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.set_aspectMode
void UnityEngine::UI::AspectRatioFitter::set_aspectMode(::UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::set_aspectMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_aspectMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.get_aspectRatio
float UnityEngine::UI::AspectRatioFitter::get_aspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::get_aspectRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_aspectRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.set_aspectRatio
void UnityEngine::UI::AspectRatioFitter::set_aspectRatio(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::set_aspectRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_aspectRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.get_rectTransform
::UnityEngine::RectTransform* UnityEngine::UI::AspectRatioFitter::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.Update
void UnityEngine::UI::AspectRatioFitter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::AspectRatioFitter*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.UpdateRect
void UnityEngine::UI::AspectRatioFitter::UpdateRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::UpdateRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.GetSizeDeltaToProduceSize
float UnityEngine::UI::AspectRatioFitter::GetSizeDeltaToProduceSize(float size, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::GetSizeDeltaToProduceSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSizeDeltaToProduceSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, size, axis);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.GetParentSize
::UnityEngine::Vector2 UnityEngine::UI::AspectRatioFitter::GetParentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::GetParentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.SetLayoutHorizontal
void UnityEngine::UI::AspectRatioFitter::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::AspectRatioFitter*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.SetLayoutVertical
void UnityEngine::UI::AspectRatioFitter::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::AspectRatioFitter*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.SetDirty
void UnityEngine::UI::AspectRatioFitter::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.OnEnable
void UnityEngine::UI::AspectRatioFitter::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.OnDisable
void UnityEngine::UI::AspectRatioFitter::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.AspectRatioFitter.OnRectTransformDimensionsChange
void UnityEngine::UI::AspectRatioFitter::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.AspectRatioFitter/AspectMode
#include "UnityEngine/UI/AspectRatioFitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode None
::UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::AspectMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::AspectRatioFitter::AspectMode>("UnityEngine.UI", "AspectRatioFitter/AspectMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode None
void UnityEngine::UI::AspectRatioFitter::AspectMode::_set_None(::UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AspectRatioFitter/AspectMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode WidthControlsHeight
::UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::AspectMode::_get_WidthControlsHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::_get_WidthControlsHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::AspectRatioFitter::AspectMode>("UnityEngine.UI", "AspectRatioFitter/AspectMode", "WidthControlsHeight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode WidthControlsHeight
void UnityEngine::UI::AspectRatioFitter::AspectMode::_set_WidthControlsHeight(::UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::_set_WidthControlsHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AspectRatioFitter/AspectMode", "WidthControlsHeight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode HeightControlsWidth
::UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::AspectMode::_get_HeightControlsWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::_get_HeightControlsWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::AspectRatioFitter::AspectMode>("UnityEngine.UI", "AspectRatioFitter/AspectMode", "HeightControlsWidth"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode HeightControlsWidth
void UnityEngine::UI::AspectRatioFitter::AspectMode::_set_HeightControlsWidth(::UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::_set_HeightControlsWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AspectRatioFitter/AspectMode", "HeightControlsWidth", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode FitInParent
::UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::AspectMode::_get_FitInParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::_get_FitInParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::AspectRatioFitter::AspectMode>("UnityEngine.UI", "AspectRatioFitter/AspectMode", "FitInParent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode FitInParent
void UnityEngine::UI::AspectRatioFitter::AspectMode::_set_FitInParent(::UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::_set_FitInParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AspectRatioFitter/AspectMode", "FitInParent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode EnvelopeParent
::UnityEngine::UI::AspectRatioFitter::AspectMode UnityEngine::UI::AspectRatioFitter::AspectMode::_get_EnvelopeParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::_get_EnvelopeParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::AspectRatioFitter::AspectMode>("UnityEngine.UI", "AspectRatioFitter/AspectMode", "EnvelopeParent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.AspectRatioFitter/AspectMode EnvelopeParent
void UnityEngine::UI::AspectRatioFitter::AspectMode::_set_EnvelopeParent(::UnityEngine::UI::AspectRatioFitter::AspectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::_set_EnvelopeParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "AspectRatioFitter/AspectMode", "EnvelopeParent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::AspectRatioFitter::AspectMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::AspectRatioFitter::AspectMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CanvasScaler
#include "UnityEngine/UI/CanvasScaler.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kLogBase
float UnityEngine::UI::CanvasScaler::_get_kLogBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::_get_kLogBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UI", "CanvasScaler", "kLogBase"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLogBase
void UnityEngine::UI::CanvasScaler::_set_kLogBase(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::_set_kLogBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler", "kLogBase", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.CanvasScaler/ScaleMode m_UiScaleMode
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::CanvasScaler::ScaleMode& UnityEngine::UI::CanvasScaler::dyn_m_UiScaleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_UiScaleMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UiScaleMode"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::CanvasScaler::ScaleMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_ReferencePixelsPerUnit
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::CanvasScaler::dyn_m_ReferencePixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_ReferencePixelsPerUnit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReferencePixelsPerUnit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_ScaleFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::CanvasScaler::dyn_m_ScaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_ScaleFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScaleFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector2 m_ReferenceResolution
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::CanvasScaler::dyn_m_ReferenceResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_ReferenceResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReferenceResolution"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.CanvasScaler/ScreenMatchMode m_ScreenMatchMode
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::CanvasScaler::ScreenMatchMode& UnityEngine::UI::CanvasScaler::dyn_m_ScreenMatchMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_ScreenMatchMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScreenMatchMode"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::CanvasScaler::ScreenMatchMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_MatchWidthOrHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::CanvasScaler::dyn_m_MatchWidthOrHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_MatchWidthOrHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MatchWidthOrHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.CanvasScaler/Unit m_PhysicalUnit
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::CanvasScaler::Unit& UnityEngine::UI::CanvasScaler::dyn_m_PhysicalUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_PhysicalUnit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PhysicalUnit"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::CanvasScaler::Unit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_FallbackScreenDPI
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::CanvasScaler::dyn_m_FallbackScreenDPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_FallbackScreenDPI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FallbackScreenDPI"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_DefaultSpriteDPI
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::CanvasScaler::dyn_m_DefaultSpriteDPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_DefaultSpriteDPI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DefaultSpriteDPI"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_DynamicPixelsPerUnit
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::CanvasScaler::dyn_m_DynamicPixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_DynamicPixelsPerUnit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DynamicPixelsPerUnit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas m_Canvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& UnityEngine::UI::CanvasScaler::dyn_m_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_Canvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Canvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PrevScaleFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::CanvasScaler::dyn_m_PrevScaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_PrevScaleFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevScaleFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PrevReferencePixelsPerUnit
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::CanvasScaler::dyn_m_PrevReferencePixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::dyn_m_PrevReferencePixelsPerUnit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrevReferencePixelsPerUnit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_uiScaleMode
::UnityEngine::UI::CanvasScaler::ScaleMode UnityEngine::UI::CanvasScaler::get_uiScaleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::get_uiScaleMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uiScaleMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::CanvasScaler::ScaleMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_uiScaleMode
void UnityEngine::UI::CanvasScaler::set_uiScaleMode(::UnityEngine::UI::CanvasScaler::ScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::set_uiScaleMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_uiScaleMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_referencePixelsPerUnit
float UnityEngine::UI::CanvasScaler::get_referencePixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::get_referencePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referencePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_referencePixelsPerUnit
void UnityEngine::UI::CanvasScaler::set_referencePixelsPerUnit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::set_referencePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referencePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_scaleFactor
float UnityEngine::UI::CanvasScaler::get_scaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::get_scaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_scaleFactor
void UnityEngine::UI::CanvasScaler::set_scaleFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::set_scaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_referenceResolution
::UnityEngine::Vector2 UnityEngine::UI::CanvasScaler::get_referenceResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::get_referenceResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_referenceResolution
void UnityEngine::UI::CanvasScaler::set_referenceResolution(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::set_referenceResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referenceResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_screenMatchMode
::UnityEngine::UI::CanvasScaler::ScreenMatchMode UnityEngine::UI::CanvasScaler::get_screenMatchMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::get_screenMatchMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_screenMatchMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::CanvasScaler::ScreenMatchMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_screenMatchMode
void UnityEngine::UI::CanvasScaler::set_screenMatchMode(::UnityEngine::UI::CanvasScaler::ScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::set_screenMatchMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_screenMatchMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_matchWidthOrHeight
float UnityEngine::UI::CanvasScaler::get_matchWidthOrHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::get_matchWidthOrHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matchWidthOrHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_matchWidthOrHeight
void UnityEngine::UI::CanvasScaler::set_matchWidthOrHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::set_matchWidthOrHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_matchWidthOrHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_physicalUnit
::UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::get_physicalUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::get_physicalUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_physicalUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::CanvasScaler::Unit, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_physicalUnit
void UnityEngine::UI::CanvasScaler::set_physicalUnit(::UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::set_physicalUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_physicalUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_fallbackScreenDPI
float UnityEngine::UI::CanvasScaler::get_fallbackScreenDPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::get_fallbackScreenDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackScreenDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_fallbackScreenDPI
void UnityEngine::UI::CanvasScaler::set_fallbackScreenDPI(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::set_fallbackScreenDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackScreenDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_defaultSpriteDPI
float UnityEngine::UI::CanvasScaler::get_defaultSpriteDPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::get_defaultSpriteDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultSpriteDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_defaultSpriteDPI
void UnityEngine::UI::CanvasScaler::set_defaultSpriteDPI(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::set_defaultSpriteDPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_defaultSpriteDPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.get_dynamicPixelsPerUnit
float UnityEngine::UI::CanvasScaler::get_dynamicPixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::get_dynamicPixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dynamicPixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.set_dynamicPixelsPerUnit
void UnityEngine::UI::CanvasScaler::set_dynamicPixelsPerUnit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::set_dynamicPixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dynamicPixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.Update
void UnityEngine::UI::CanvasScaler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::CanvasScaler*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.Handle
void UnityEngine::UI::CanvasScaler::Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::CanvasScaler*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.HandleWorldCanvas
void UnityEngine::UI::CanvasScaler::HandleWorldCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::HandleWorldCanvas");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::CanvasScaler*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.HandleConstantPixelSize
void UnityEngine::UI::CanvasScaler::HandleConstantPixelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::HandleConstantPixelSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::CanvasScaler*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.HandleScaleWithScreenSize
void UnityEngine::UI::CanvasScaler::HandleScaleWithScreenSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::HandleScaleWithScreenSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::CanvasScaler*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.HandleConstantPhysicalSize
void UnityEngine::UI::CanvasScaler::HandleConstantPhysicalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::HandleConstantPhysicalSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::CanvasScaler*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.SetScaleFactor
void UnityEngine::UI::CanvasScaler::SetScaleFactor(float scaleFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::SetScaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaleFactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scaleFactor);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.SetReferencePixelsPerUnit
void UnityEngine::UI::CanvasScaler::SetReferencePixelsPerUnit(float referencePixelsPerUnit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::SetReferencePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReferencePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(referencePixelsPerUnit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, referencePixelsPerUnit);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.OnEnable
void UnityEngine::UI::CanvasScaler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CanvasScaler.OnDisable
void UnityEngine::UI::CanvasScaler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CanvasScaler/ScaleMode
#include "UnityEngine/UI/CanvasScaler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ConstantPixelSize
::UnityEngine::UI::CanvasScaler::ScaleMode UnityEngine::UI::CanvasScaler::ScaleMode::_get_ConstantPixelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScaleMode::_get_ConstantPixelSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::ScaleMode>("UnityEngine.UI", "CanvasScaler/ScaleMode", "ConstantPixelSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ConstantPixelSize
void UnityEngine::UI::CanvasScaler::ScaleMode::_set_ConstantPixelSize(::UnityEngine::UI::CanvasScaler::ScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScaleMode::_set_ConstantPixelSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScaleMode", "ConstantPixelSize", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ScaleWithScreenSize
::UnityEngine::UI::CanvasScaler::ScaleMode UnityEngine::UI::CanvasScaler::ScaleMode::_get_ScaleWithScreenSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScaleMode::_get_ScaleWithScreenSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::ScaleMode>("UnityEngine.UI", "CanvasScaler/ScaleMode", "ScaleWithScreenSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ScaleWithScreenSize
void UnityEngine::UI::CanvasScaler::ScaleMode::_set_ScaleWithScreenSize(::UnityEngine::UI::CanvasScaler::ScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScaleMode::_set_ScaleWithScreenSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScaleMode", "ScaleWithScreenSize", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ConstantPhysicalSize
::UnityEngine::UI::CanvasScaler::ScaleMode UnityEngine::UI::CanvasScaler::ScaleMode::_get_ConstantPhysicalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScaleMode::_get_ConstantPhysicalSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::ScaleMode>("UnityEngine.UI", "CanvasScaler/ScaleMode", "ConstantPhysicalSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScaleMode ConstantPhysicalSize
void UnityEngine::UI::CanvasScaler::ScaleMode::_set_ConstantPhysicalSize(::UnityEngine::UI::CanvasScaler::ScaleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScaleMode::_set_ConstantPhysicalSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScaleMode", "ConstantPhysicalSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::CanvasScaler::ScaleMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScaleMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CanvasScaler/ScreenMatchMode
#include "UnityEngine/UI/CanvasScaler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode MatchWidthOrHeight
::UnityEngine::UI::CanvasScaler::ScreenMatchMode UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_MatchWidthOrHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_MatchWidthOrHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::ScreenMatchMode>("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "MatchWidthOrHeight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode MatchWidthOrHeight
void UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_MatchWidthOrHeight(::UnityEngine::UI::CanvasScaler::ScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_MatchWidthOrHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "MatchWidthOrHeight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode Expand
::UnityEngine::UI::CanvasScaler::ScreenMatchMode UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_Expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_Expand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::ScreenMatchMode>("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "Expand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode Expand
void UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_Expand(::UnityEngine::UI::CanvasScaler::ScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_Expand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "Expand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode Shrink
::UnityEngine::UI::CanvasScaler::ScreenMatchMode UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_Shrink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScreenMatchMode::_get_Shrink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::ScreenMatchMode>("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "Shrink"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/ScreenMatchMode Shrink
void UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_Shrink(::UnityEngine::UI::CanvasScaler::ScreenMatchMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScreenMatchMode::_set_Shrink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/ScreenMatchMode", "Shrink", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::CanvasScaler::ScreenMatchMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::ScreenMatchMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CanvasScaler/Unit
#include "UnityEngine/UI/CanvasScaler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/Unit Centimeters
::UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::Unit::_get_Centimeters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::_get_Centimeters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::Unit>("UnityEngine.UI", "CanvasScaler/Unit", "Centimeters"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/Unit Centimeters
void UnityEngine::UI::CanvasScaler::Unit::_set_Centimeters(::UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::_set_Centimeters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/Unit", "Centimeters", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/Unit Millimeters
::UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::Unit::_get_Millimeters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::_get_Millimeters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::Unit>("UnityEngine.UI", "CanvasScaler/Unit", "Millimeters"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/Unit Millimeters
void UnityEngine::UI::CanvasScaler::Unit::_set_Millimeters(::UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::_set_Millimeters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/Unit", "Millimeters", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/Unit Inches
::UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::Unit::_get_Inches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::_get_Inches");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::Unit>("UnityEngine.UI", "CanvasScaler/Unit", "Inches"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/Unit Inches
void UnityEngine::UI::CanvasScaler::Unit::_set_Inches(::UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::_set_Inches");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/Unit", "Inches", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/Unit Points
::UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::Unit::_get_Points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::_get_Points");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::Unit>("UnityEngine.UI", "CanvasScaler/Unit", "Points"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/Unit Points
void UnityEngine::UI::CanvasScaler::Unit::_set_Points(::UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::_set_Points");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/Unit", "Points", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CanvasScaler/Unit Picas
::UnityEngine::UI::CanvasScaler::Unit UnityEngine::UI::CanvasScaler::Unit::_get_Picas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::_get_Picas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::CanvasScaler::Unit>("UnityEngine.UI", "CanvasScaler/Unit", "Picas"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CanvasScaler/Unit Picas
void UnityEngine::UI::CanvasScaler::Unit::_set_Picas(::UnityEngine::UI::CanvasScaler::Unit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::_set_Picas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "CanvasScaler/Unit", "Picas", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::CanvasScaler::Unit::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::CanvasScaler::Unit::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ContentSizeFitter
#include "UnityEngine/UI/ContentSizeFitter.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.ContentSizeFitter/FitMode m_HorizontalFit
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ContentSizeFitter::FitMode& UnityEngine::UI::ContentSizeFitter::dyn_m_HorizontalFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::dyn_m_HorizontalFit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalFit"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ContentSizeFitter::FitMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.ContentSizeFitter/FitMode m_VerticalFit
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ContentSizeFitter::FitMode& UnityEngine::UI::ContentSizeFitter::dyn_m_VerticalFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::dyn_m_VerticalFit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalFit"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ContentSizeFitter::FitMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_Rect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::ContentSizeFitter::dyn_m_Rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::dyn_m_Rect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.DrivenRectTransformTracker m_Tracker
[[deprecated("Use field access instead!")]] ::UnityEngine::DrivenRectTransformTracker& UnityEngine::UI::ContentSizeFitter::dyn_m_Tracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::dyn_m_Tracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracker"))->offset;
  return *reinterpret_cast<::UnityEngine::DrivenRectTransformTracker*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.get_horizontalFit
::UnityEngine::UI::ContentSizeFitter::FitMode UnityEngine::UI::ContentSizeFitter::get_horizontalFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::get_horizontalFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ContentSizeFitter::FitMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.set_horizontalFit
void UnityEngine::UI::ContentSizeFitter::set_horizontalFit(::UnityEngine::UI::ContentSizeFitter::FitMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::set_horizontalFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.get_verticalFit
::UnityEngine::UI::ContentSizeFitter::FitMode UnityEngine::UI::ContentSizeFitter::get_verticalFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::get_verticalFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ContentSizeFitter::FitMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.set_verticalFit
void UnityEngine::UI::ContentSizeFitter::set_verticalFit(::UnityEngine::UI::ContentSizeFitter::FitMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::set_verticalFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.get_rectTransform
::UnityEngine::RectTransform* UnityEngine::UI::ContentSizeFitter::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.HandleSelfFittingAlongAxis
void UnityEngine::UI::ContentSizeFitter::HandleSelfFittingAlongAxis(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::HandleSelfFittingAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelfFittingAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.SetLayoutHorizontal
void UnityEngine::UI::ContentSizeFitter::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ContentSizeFitter*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.SetLayoutVertical
void UnityEngine::UI::ContentSizeFitter::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ContentSizeFitter*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.SetDirty
void UnityEngine::UI::ContentSizeFitter::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.OnEnable
void UnityEngine::UI::ContentSizeFitter::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.OnDisable
void UnityEngine::UI::ContentSizeFitter::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ContentSizeFitter.OnRectTransformDimensionsChange
void UnityEngine::UI::ContentSizeFitter::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ContentSizeFitter/FitMode
#include "UnityEngine/UI/ContentSizeFitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ContentSizeFitter/FitMode Unconstrained
::UnityEngine::UI::ContentSizeFitter::FitMode UnityEngine::UI::ContentSizeFitter::FitMode::_get_Unconstrained() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::FitMode::_get_Unconstrained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ContentSizeFitter::FitMode>("UnityEngine.UI", "ContentSizeFitter/FitMode", "Unconstrained"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ContentSizeFitter/FitMode Unconstrained
void UnityEngine::UI::ContentSizeFitter::FitMode::_set_Unconstrained(::UnityEngine::UI::ContentSizeFitter::FitMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::FitMode::_set_Unconstrained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ContentSizeFitter/FitMode", "Unconstrained", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ContentSizeFitter/FitMode MinSize
::UnityEngine::UI::ContentSizeFitter::FitMode UnityEngine::UI::ContentSizeFitter::FitMode::_get_MinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::FitMode::_get_MinSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ContentSizeFitter::FitMode>("UnityEngine.UI", "ContentSizeFitter/FitMode", "MinSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ContentSizeFitter/FitMode MinSize
void UnityEngine::UI::ContentSizeFitter::FitMode::_set_MinSize(::UnityEngine::UI::ContentSizeFitter::FitMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::FitMode::_set_MinSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ContentSizeFitter/FitMode", "MinSize", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.ContentSizeFitter/FitMode PreferredSize
::UnityEngine::UI::ContentSizeFitter::FitMode UnityEngine::UI::ContentSizeFitter::FitMode::_get_PreferredSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::FitMode::_get_PreferredSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ContentSizeFitter::FitMode>("UnityEngine.UI", "ContentSizeFitter/FitMode", "PreferredSize"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.ContentSizeFitter/FitMode PreferredSize
void UnityEngine::UI::ContentSizeFitter::FitMode::_set_PreferredSize(::UnityEngine::UI::ContentSizeFitter::FitMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::FitMode::_set_PreferredSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ContentSizeFitter/FitMode", "PreferredSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::ContentSizeFitter::FitMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ContentSizeFitter::FitMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GridLayoutGroup
#include "UnityEngine/UI/GridLayoutGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.GridLayoutGroup/Corner m_StartCorner
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::GridLayoutGroup::Corner& UnityEngine::UI::GridLayoutGroup::dyn_m_StartCorner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::dyn_m_StartCorner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartCorner"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::GridLayoutGroup::Corner*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.GridLayoutGroup/Axis m_StartAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::GridLayoutGroup::Axis& UnityEngine::UI::GridLayoutGroup::dyn_m_StartAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::dyn_m_StartAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::GridLayoutGroup::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector2 m_CellSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::GridLayoutGroup::dyn_m_CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::dyn_m_CellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CellSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector2 m_Spacing
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::GridLayoutGroup::dyn_m_Spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::dyn_m_Spacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Spacing"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.GridLayoutGroup/Constraint m_Constraint
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::GridLayoutGroup::Constraint& UnityEngine::UI::GridLayoutGroup::dyn_m_Constraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::dyn_m_Constraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Constraint"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::GridLayoutGroup::Constraint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_ConstraintCount
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::GridLayoutGroup::dyn_m_ConstraintCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::dyn_m_ConstraintCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstraintCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_startCorner
::UnityEngine::UI::GridLayoutGroup::Corner UnityEngine::UI::GridLayoutGroup::get_startCorner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::get_startCorner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startCorner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::GridLayoutGroup::Corner, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_startCorner
void UnityEngine::UI::GridLayoutGroup::set_startCorner(::UnityEngine::UI::GridLayoutGroup::Corner value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::set_startCorner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startCorner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_startAxis
::UnityEngine::UI::GridLayoutGroup::Axis UnityEngine::UI::GridLayoutGroup::get_startAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::get_startAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::GridLayoutGroup::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_startAxis
void UnityEngine::UI::GridLayoutGroup::set_startAxis(::UnityEngine::UI::GridLayoutGroup::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::set_startAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_cellSize
::UnityEngine::Vector2 UnityEngine::UI::GridLayoutGroup::get_cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::get_cellSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_cellSize
void UnityEngine::UI::GridLayoutGroup::set_cellSize(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::set_cellSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_spacing
::UnityEngine::Vector2 UnityEngine::UI::GridLayoutGroup::get_spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::get_spacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_spacing
void UnityEngine::UI::GridLayoutGroup::set_spacing(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::set_spacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_constraint
::UnityEngine::UI::GridLayoutGroup::Constraint UnityEngine::UI::GridLayoutGroup::get_constraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::get_constraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_constraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::GridLayoutGroup::Constraint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_constraint
void UnityEngine::UI::GridLayoutGroup::set_constraint(::UnityEngine::UI::GridLayoutGroup::Constraint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::set_constraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_constraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.get_constraintCount
int UnityEngine::UI::GridLayoutGroup::get_constraintCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::get_constraintCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_constraintCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.set_constraintCount
void UnityEngine::UI::GridLayoutGroup::set_constraintCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::set_constraintCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_constraintCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.SetCellsAlongAxis
void UnityEngine::UI::GridLayoutGroup::SetCellsAlongAxis(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::SetCellsAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCellsAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.CalculateLayoutInputHorizontal
void UnityEngine::UI::GridLayoutGroup::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.CalculateLayoutInputVertical
void UnityEngine::UI::GridLayoutGroup::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.SetLayoutHorizontal
void UnityEngine::UI::GridLayoutGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.GridLayoutGroup.SetLayoutVertical
void UnityEngine::UI::GridLayoutGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GridLayoutGroup/Corner
#include "UnityEngine/UI/GridLayoutGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperLeft
::UnityEngine::UI::GridLayoutGroup::Corner UnityEngine::UI::GridLayoutGroup::Corner::_get_UpperLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Corner::_get_UpperLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::GridLayoutGroup::Corner>("UnityEngine.UI", "GridLayoutGroup/Corner", "UpperLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperLeft
void UnityEngine::UI::GridLayoutGroup::Corner::_set_UpperLeft(::UnityEngine::UI::GridLayoutGroup::Corner value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Corner::_set_UpperLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Corner", "UpperLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperRight
::UnityEngine::UI::GridLayoutGroup::Corner UnityEngine::UI::GridLayoutGroup::Corner::_get_UpperRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Corner::_get_UpperRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::GridLayoutGroup::Corner>("UnityEngine.UI", "GridLayoutGroup/Corner", "UpperRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner UpperRight
void UnityEngine::UI::GridLayoutGroup::Corner::_set_UpperRight(::UnityEngine::UI::GridLayoutGroup::Corner value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Corner::_set_UpperRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Corner", "UpperRight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerLeft
::UnityEngine::UI::GridLayoutGroup::Corner UnityEngine::UI::GridLayoutGroup::Corner::_get_LowerLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Corner::_get_LowerLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::GridLayoutGroup::Corner>("UnityEngine.UI", "GridLayoutGroup/Corner", "LowerLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerLeft
void UnityEngine::UI::GridLayoutGroup::Corner::_set_LowerLeft(::UnityEngine::UI::GridLayoutGroup::Corner value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Corner::_set_LowerLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Corner", "LowerLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerRight
::UnityEngine::UI::GridLayoutGroup::Corner UnityEngine::UI::GridLayoutGroup::Corner::_get_LowerRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Corner::_get_LowerRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::GridLayoutGroup::Corner>("UnityEngine.UI", "GridLayoutGroup/Corner", "LowerRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Corner LowerRight
void UnityEngine::UI::GridLayoutGroup::Corner::_set_LowerRight(::UnityEngine::UI::GridLayoutGroup::Corner value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Corner::_set_LowerRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Corner", "LowerRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::GridLayoutGroup::Corner::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Corner::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GridLayoutGroup/Axis
#include "UnityEngine/UI/GridLayoutGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Axis Horizontal
::UnityEngine::UI::GridLayoutGroup::Axis UnityEngine::UI::GridLayoutGroup::Axis::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Axis::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::GridLayoutGroup::Axis>("UnityEngine.UI", "GridLayoutGroup/Axis", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Axis Horizontal
void UnityEngine::UI::GridLayoutGroup::Axis::_set_Horizontal(::UnityEngine::UI::GridLayoutGroup::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Axis::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Axis", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Axis Vertical
::UnityEngine::UI::GridLayoutGroup::Axis UnityEngine::UI::GridLayoutGroup::Axis::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Axis::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::GridLayoutGroup::Axis>("UnityEngine.UI", "GridLayoutGroup/Axis", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Axis Vertical
void UnityEngine::UI::GridLayoutGroup::Axis::_set_Vertical(::UnityEngine::UI::GridLayoutGroup::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Axis::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Axis", "Vertical", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::GridLayoutGroup::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.GridLayoutGroup/Constraint
#include "UnityEngine/UI/GridLayoutGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Constraint Flexible
::UnityEngine::UI::GridLayoutGroup::Constraint UnityEngine::UI::GridLayoutGroup::Constraint::_get_Flexible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Constraint::_get_Flexible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::GridLayoutGroup::Constraint>("UnityEngine.UI", "GridLayoutGroup/Constraint", "Flexible"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Constraint Flexible
void UnityEngine::UI::GridLayoutGroup::Constraint::_set_Flexible(::UnityEngine::UI::GridLayoutGroup::Constraint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Constraint::_set_Flexible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Constraint", "Flexible", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedColumnCount
::UnityEngine::UI::GridLayoutGroup::Constraint UnityEngine::UI::GridLayoutGroup::Constraint::_get_FixedColumnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Constraint::_get_FixedColumnCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::GridLayoutGroup::Constraint>("UnityEngine.UI", "GridLayoutGroup/Constraint", "FixedColumnCount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedColumnCount
void UnityEngine::UI::GridLayoutGroup::Constraint::_set_FixedColumnCount(::UnityEngine::UI::GridLayoutGroup::Constraint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Constraint::_set_FixedColumnCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Constraint", "FixedColumnCount", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedRowCount
::UnityEngine::UI::GridLayoutGroup::Constraint UnityEngine::UI::GridLayoutGroup::Constraint::_get_FixedRowCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Constraint::_get_FixedRowCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::GridLayoutGroup::Constraint>("UnityEngine.UI", "GridLayoutGroup/Constraint", "FixedRowCount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.GridLayoutGroup/Constraint FixedRowCount
void UnityEngine::UI::GridLayoutGroup::Constraint::_set_FixedRowCount(::UnityEngine::UI::GridLayoutGroup::Constraint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Constraint::_set_FixedRowCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "GridLayoutGroup/Constraint", "FixedRowCount", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::GridLayoutGroup::Constraint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::GridLayoutGroup::Constraint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.HorizontalLayoutGroup
#include "UnityEngine/UI/HorizontalLayoutGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.HorizontalLayoutGroup.CalculateLayoutInputHorizontal
void UnityEngine::UI::HorizontalLayoutGroup::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalLayoutGroup::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalLayoutGroup.CalculateLayoutInputVertical
void UnityEngine::UI::HorizontalLayoutGroup::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalLayoutGroup::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalLayoutGroup.SetLayoutHorizontal
void UnityEngine::UI::HorizontalLayoutGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalLayoutGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalLayoutGroup.SetLayoutVertical
void UnityEngine::UI::HorizontalLayoutGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalLayoutGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.HorizontalOrVerticalLayoutGroup
#include "UnityEngine/UI/HorizontalOrVerticalLayoutGroup.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Single m_Spacing
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::HorizontalOrVerticalLayoutGroup::dyn_m_Spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::dyn_m_Spacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Spacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ChildForceExpandWidth
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::HorizontalOrVerticalLayoutGroup::dyn_m_ChildForceExpandWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::dyn_m_ChildForceExpandWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChildForceExpandWidth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ChildForceExpandHeight
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::HorizontalOrVerticalLayoutGroup::dyn_m_ChildForceExpandHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::dyn_m_ChildForceExpandHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChildForceExpandHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ChildControlWidth
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::HorizontalOrVerticalLayoutGroup::dyn_m_ChildControlWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::dyn_m_ChildControlWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChildControlWidth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ChildControlHeight
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::HorizontalOrVerticalLayoutGroup::dyn_m_ChildControlHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::dyn_m_ChildControlHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChildControlHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_spacing
float UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_spacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_spacing
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_spacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_spacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_childForceExpandWidth
bool UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childForceExpandWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childForceExpandWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childForceExpandWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_childForceExpandWidth
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childForceExpandWidth(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childForceExpandWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childForceExpandWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_childForceExpandHeight
bool UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childForceExpandHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childForceExpandHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childForceExpandHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_childForceExpandHeight
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childForceExpandHeight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childForceExpandHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childForceExpandHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_childControlWidth
bool UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childControlWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childControlWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childControlWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_childControlWidth
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childControlWidth(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childControlWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childControlWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.get_childControlHeight
bool UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childControlHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::get_childControlHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childControlHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.set_childControlHeight
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childControlHeight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::set_childControlHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childControlHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.CalcAlongAxis
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::CalcAlongAxis(int axis, bool isVertical) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::CalcAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(isVertical)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, isVertical);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.SetChildrenAlongAxis
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::SetChildrenAlongAxis(int axis, bool isVertical) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::SetChildrenAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildrenAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(isVertical)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, isVertical);
}
// Autogenerated method: UnityEngine.UI.HorizontalOrVerticalLayoutGroup.GetChildSizes
void UnityEngine::UI::HorizontalOrVerticalLayoutGroup::GetChildSizes(::UnityEngine::RectTransform* child, int axis, bool controlSize, bool childForceExpand, ByRef<float> min, ByRef<float> preferred, ByRef<float> flexible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::HorizontalOrVerticalLayoutGroup::GetChildSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(controlSize), ::il2cpp_utils::ExtractType(childForceExpand), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child, axis, controlSize, childForceExpand, byref(min), byref(preferred), byref(flexible));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ILayoutElement.CalculateLayoutInputHorizontal
void UnityEngine::UI::ILayoutElement::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutElement::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutElement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.CalculateLayoutInputVertical
void UnityEngine::UI::ILayoutElement::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutElement::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutElement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_minWidth
float UnityEngine::UI::ILayoutElement::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutElement::get_minWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_preferredWidth
float UnityEngine::UI::ILayoutElement::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutElement::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_flexibleWidth
float UnityEngine::UI::ILayoutElement::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutElement::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_minHeight
float UnityEngine::UI::ILayoutElement::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutElement::get_minHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_preferredHeight
float UnityEngine::UI::ILayoutElement::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutElement::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_flexibleHeight
float UnityEngine::UI::ILayoutElement::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutElement::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutElement.get_layoutPriority
int UnityEngine::UI::ILayoutElement::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutElement::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ILayoutController
#include "UnityEngine/UI/ILayoutController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ILayoutController.SetLayoutHorizontal
void UnityEngine::UI::ILayoutController::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutController::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ILayoutController.SetLayoutVertical
void UnityEngine::UI::ILayoutController::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutController::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ILayoutIgnorer
#include "UnityEngine/UI/ILayoutIgnorer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ILayoutIgnorer.get_ignoreLayout
bool UnityEngine::UI::ILayoutIgnorer::get_ignoreLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ILayoutIgnorer::get_ignoreLayout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ILayoutIgnorer*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.LayoutElement
#include "UnityEngine/UI/LayoutElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreLayout
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::LayoutElement::dyn_m_IgnoreLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::dyn_m_IgnoreLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreLayout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MinWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::LayoutElement::dyn_m_MinWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::dyn_m_MinWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MinHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::LayoutElement::dyn_m_MinHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::dyn_m_MinHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PreferredWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::LayoutElement::dyn_m_PreferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::dyn_m_PreferredWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreferredWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PreferredHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::LayoutElement::dyn_m_PreferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::dyn_m_PreferredHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreferredHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_FlexibleWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::LayoutElement::dyn_m_FlexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::dyn_m_FlexibleWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FlexibleWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_FlexibleHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::UI::LayoutElement::dyn_m_FlexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::dyn_m_FlexibleHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FlexibleHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_LayoutPriority
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::LayoutElement::dyn_m_LayoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::dyn_m_LayoutPriority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutPriority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_ignoreLayout
bool UnityEngine::UI::LayoutElement::get_ignoreLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::get_ignoreLayout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_ignoreLayout
void UnityEngine::UI::LayoutElement::set_ignoreLayout(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::set_ignoreLayout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.CalculateLayoutInputHorizontal
void UnityEngine::UI::LayoutElement::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.CalculateLayoutInputVertical
void UnityEngine::UI::LayoutElement::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_minWidth
float UnityEngine::UI::LayoutElement::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::get_minWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 31));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_minWidth
void UnityEngine::UI::LayoutElement::set_minWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::set_minWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_minHeight
float UnityEngine::UI::LayoutElement::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::get_minHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 33));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_minHeight
void UnityEngine::UI::LayoutElement::set_minHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::set_minHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_preferredWidth
float UnityEngine::UI::LayoutElement::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 35));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_preferredWidth
void UnityEngine::UI::LayoutElement::set_preferredWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::set_preferredWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_preferredHeight
float UnityEngine::UI::LayoutElement::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 37));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_preferredHeight
void UnityEngine::UI::LayoutElement::set_preferredHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::set_preferredHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_flexibleWidth
float UnityEngine::UI::LayoutElement::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 39));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_flexibleWidth
void UnityEngine::UI::LayoutElement::set_flexibleWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::set_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_flexibleHeight
float UnityEngine::UI::LayoutElement::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 41));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_flexibleHeight
void UnityEngine::UI::LayoutElement::set_flexibleHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::set_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.get_layoutPriority
int UnityEngine::UI::LayoutElement::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 43));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.set_layoutPriority
void UnityEngine::UI::LayoutElement::set_layoutPriority(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::set_layoutPriority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutElement*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.SetDirty
void UnityEngine::UI::LayoutElement::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.OnEnable
void UnityEngine::UI::LayoutElement::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.OnTransformParentChanged
void UnityEngine::UI::LayoutElement::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.OnDisable
void UnityEngine::UI::LayoutElement::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.OnDidApplyAnimationProperties
void UnityEngine::UI::LayoutElement::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutElement.OnBeforeTransformParentChanged
void UnityEngine::UI::LayoutElement::OnBeforeTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutElement::OnBeforeTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.LayoutGroup
#include "UnityEngine/UI/LayoutGroup.hpp"
// Including type: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>c__Iterator0
#include "UnityEngine/UI/LayoutGroup_-DelayedSetDirty-c__Iterator0.hpp"
// Including type: UnityEngine.RectOffset
#include "UnityEngine/RectOffset.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.RectOffset m_Padding
[[deprecated("Use field access instead!")]] ::UnityEngine::RectOffset*& UnityEngine::UI::LayoutGroup::dyn_m_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::dyn_m_Padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Padding"))->offset;
  return *reinterpret_cast<::UnityEngine::RectOffset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.TextAnchor m_ChildAlignment
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAnchor& UnityEngine::UI::LayoutGroup::dyn_m_ChildAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::dyn_m_ChildAlignment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChildAlignment"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAnchor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_Rect
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::LayoutGroup::dyn_m_Rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::dyn_m_Rect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rect"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.DrivenRectTransformTracker m_Tracker
[[deprecated("Use field access instead!")]] ::UnityEngine::DrivenRectTransformTracker& UnityEngine::UI::LayoutGroup::dyn_m_Tracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::dyn_m_Tracker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tracker"))->offset;
  return *reinterpret_cast<::UnityEngine::DrivenRectTransformTracker*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_TotalMinSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::LayoutGroup::dyn_m_TotalMinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::dyn_m_TotalMinSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TotalMinSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_TotalPreferredSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::LayoutGroup::dyn_m_TotalPreferredSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::dyn_m_TotalPreferredSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TotalPreferredSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_TotalFlexibleSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::LayoutGroup::dyn_m_TotalFlexibleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::dyn_m_TotalFlexibleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TotalFlexibleSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.RectTransform> m_RectChildren
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::RectTransform*>*& UnityEngine::UI::LayoutGroup::dyn_m_RectChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::dyn_m_RectChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RectChildren"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::RectTransform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_padding
::UnityEngine::RectOffset* UnityEngine::UI::LayoutGroup::get_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectOffset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.set_padding
void UnityEngine::UI::LayoutGroup::set_padding(::UnityEngine::RectOffset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::set_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_childAlignment
::UnityEngine::TextAnchor UnityEngine::UI::LayoutGroup::get_childAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_childAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextAnchor, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.set_childAlignment
void UnityEngine::UI::LayoutGroup::set_childAlignment(::UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::set_childAlignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_rectTransform
::UnityEngine::RectTransform* UnityEngine::UI::LayoutGroup::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_rectChildren
::System::Collections::Generic::List_1<::UnityEngine::RectTransform*>* UnityEngine::UI::LayoutGroup::get_rectChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_rectChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::RectTransform*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.CalculateLayoutInputHorizontal
void UnityEngine::UI::LayoutGroup::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.CalculateLayoutInputVertical
void UnityEngine::UI::LayoutGroup::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_minWidth
float UnityEngine::UI::LayoutGroup::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_minWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 30));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_preferredWidth
float UnityEngine::UI::LayoutGroup::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 31));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_flexibleWidth
float UnityEngine::UI::LayoutGroup::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 32));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_minHeight
float UnityEngine::UI::LayoutGroup::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_minHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 33));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_preferredHeight
float UnityEngine::UI::LayoutGroup::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 34));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_flexibleHeight
float UnityEngine::UI::LayoutGroup::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 35));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_layoutPriority
int UnityEngine::UI::LayoutGroup::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 36));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetLayoutHorizontal
void UnityEngine::UI::LayoutGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetLayoutVertical
void UnityEngine::UI::LayoutGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.GetTotalMinSize
float UnityEngine::UI::LayoutGroup::GetTotalMinSize(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::GetTotalMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.GetTotalPreferredSize
float UnityEngine::UI::LayoutGroup::GetTotalPreferredSize(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::GetTotalPreferredSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalPreferredSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.GetTotalFlexibleSize
float UnityEngine::UI::LayoutGroup::GetTotalFlexibleSize(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::GetTotalFlexibleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalFlexibleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.GetStartOffset
float UnityEngine::UI::LayoutGroup::GetStartOffset(int axis, float requiredSpaceWithoutPadding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::GetStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(requiredSpaceWithoutPadding)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, axis, requiredSpaceWithoutPadding);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.GetAlignmentOnAxis
float UnityEngine::UI::LayoutGroup::GetAlignmentOnAxis(int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::GetAlignmentOnAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAlignmentOnAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetLayoutInputForAxis
void UnityEngine::UI::LayoutGroup::SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::SetLayoutInputForAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutInputForAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalMin), ::il2cpp_utils::ExtractType(totalPreferred), ::il2cpp_utils::ExtractType(totalFlexible), ::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, totalMin, totalPreferred, totalFlexible, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetChildAlongAxis
void UnityEngine::UI::LayoutGroup::SetChildAlongAxis(::UnityEngine::RectTransform* rect, int axis, float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::SetChildAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rect, axis, pos);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetChildAlongAxis
void UnityEngine::UI::LayoutGroup::SetChildAlongAxis(::UnityEngine::RectTransform* rect, int axis, float pos, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::SetChildAlongAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildAlongAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rect, axis, pos, size);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.get_isRootLayoutGroup
bool UnityEngine::UI::LayoutGroup::get_isRootLayoutGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::get_isRootLayoutGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootLayoutGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.OnTransformChildrenChanged
void UnityEngine::UI::LayoutGroup::OnTransformChildrenChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::OnTransformChildrenChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.SetDirty
void UnityEngine::UI::LayoutGroup::SetDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::SetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.DelayedSetDirty
::System::Collections::IEnumerator* UnityEngine::UI::LayoutGroup::DelayedSetDirty(::UnityEngine::RectTransform* rectTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::DelayedSetDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedSetDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, rectTransform);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.OnEnable
void UnityEngine::UI::LayoutGroup::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.OnDisable
void UnityEngine::UI::LayoutGroup::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.OnDidApplyAnimationProperties
void UnityEngine::UI::LayoutGroup::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup.OnRectTransformDimensionsChange
void UnityEngine::UI::LayoutGroup::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>c__Iterator0
#include "UnityEngine/UI/LayoutGroup_-DelayedSetDirty-c__Iterator0.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.RectTransform rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::dyn_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::dyn_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object $current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean $disposing
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::dyn_$disposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::dyn_$disposing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$disposing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>c__Iterator0.MoveNext
bool UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>c__Iterator0.System.Collections.Generic.IEnumerator<object>.get_Current
::Il2CppObject* UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::System_Collections_Generic_IEnumerator$object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::System.Collections.Generic.IEnumerator<object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>c__Iterator0.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>c__Iterator0.Dispose
void UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutGroup/<DelayedSetDirty>c__Iterator0.Reset
void UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup::$DelayedSetDirty$c__Iterator0*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.LayoutRebuilder
#include "UnityEngine/UI/LayoutRebuilder.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.UI.ObjectPool`1
#include "UnityEngine/UI/ObjectPool_1.hpp"
// Including type: UnityEngine.RectTransform/ReapplyDrivenProperties
#include "UnityEngine/RectTransform_ReapplyDrivenProperties.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.ObjectPool`1<UnityEngine.UI.LayoutRebuilder> s_Rebuilders
::UnityEngine::UI::ObjectPool_1<::UnityEngine::UI::LayoutRebuilder*>* UnityEngine::UI::LayoutRebuilder::_get_s_Rebuilders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_get_s_Rebuilders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ObjectPool_1<::UnityEngine::UI::LayoutRebuilder*>*>("UnityEngine.UI", "LayoutRebuilder", "s_Rebuilders"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.ObjectPool`1<UnityEngine.UI.LayoutRebuilder> s_Rebuilders
void UnityEngine::UI::LayoutRebuilder::_set_s_Rebuilders(::UnityEngine::UI::ObjectPool_1<::UnityEngine::UI::LayoutRebuilder*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_set_s_Rebuilders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder", "s_Rebuilders", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB17EC
// Autogenerated static field getter
// Get static field: static private UnityEngine.RectTransform/ReapplyDrivenProperties <>f__mg$cache0
::UnityEngine::RectTransform::ReapplyDrivenProperties* UnityEngine::UI::LayoutRebuilder::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::ReapplyDrivenProperties*>("UnityEngine.UI", "LayoutRebuilder", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.RectTransform/ReapplyDrivenProperties <>f__mg$cache0
void UnityEngine::UI::LayoutRebuilder::_set_$$f__mg$cache0(::UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder", "<>f__mg$cache0", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB17FC
// Autogenerated static field getter
// Get static field: static private System.Predicate`1<UnityEngine.Component> <>f__am$cache0
::System::Predicate_1<::UnityEngine::Component*>* UnityEngine::UI::LayoutRebuilder::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::UnityEngine::Component*>*>("UnityEngine.UI", "LayoutRebuilder", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Predicate`1<UnityEngine.Component> <>f__am$cache0
void UnityEngine::UI::LayoutRebuilder::_set_$$f__am$cache0(::System::Predicate_1<::UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder", "<>f__am$cache0", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB180C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>f__am$cache1
::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>* UnityEngine::UI::LayoutRebuilder::_get_$$f__am$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_get_$$f__am$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>*>("UnityEngine.UI", "LayoutRebuilder", "<>f__am$cache1")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>f__am$cache1
void UnityEngine::UI::LayoutRebuilder::_set_$$f__am$cache1(::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_set_$$f__am$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder", "<>f__am$cache1", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB181C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>f__am$cache2
::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>* UnityEngine::UI::LayoutRebuilder::_get_$$f__am$cache2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_get_$$f__am$cache2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>*>("UnityEngine.UI", "LayoutRebuilder", "<>f__am$cache2")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>f__am$cache2
void UnityEngine::UI::LayoutRebuilder::_set_$$f__am$cache2(::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_set_$$f__am$cache2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder", "<>f__am$cache2", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB182C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>f__am$cache3
::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>* UnityEngine::UI::LayoutRebuilder::_get_$$f__am$cache3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_get_$$f__am$cache3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>*>("UnityEngine.UI", "LayoutRebuilder", "<>f__am$cache3")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>f__am$cache3
void UnityEngine::UI::LayoutRebuilder::_set_$$f__am$cache3(::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_set_$$f__am$cache3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder", "<>f__am$cache3", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB183C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>f__am$cache4
::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>* UnityEngine::UI::LayoutRebuilder::_get_$$f__am$cache4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_get_$$f__am$cache4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>*>("UnityEngine.UI", "LayoutRebuilder", "<>f__am$cache4")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.Component> <>f__am$cache4
void UnityEngine::UI::LayoutRebuilder::_set_$$f__am$cache4(::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::_set_$$f__am$cache4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutRebuilder", "<>f__am$cache4", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_ToRebuild
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& UnityEngine::UI::LayoutRebuilder::dyn_m_ToRebuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::dyn_m_ToRebuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ToRebuild"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CachedHashFromTransform
[[deprecated("Use field access instead!")]] int& UnityEngine::UI::LayoutRebuilder::dyn_m_CachedHashFromTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::dyn_m_CachedHashFromTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedHashFromTransform"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder..cctor
void UnityEngine::UI::LayoutRebuilder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.Initialize
void UnityEngine::UI::LayoutRebuilder::Initialize(::UnityEngine::RectTransform* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.Clear
void UnityEngine::UI::LayoutRebuilder::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.ReapplyDrivenProperties
void UnityEngine::UI::LayoutRebuilder::ReapplyDrivenProperties(::UnityEngine::RectTransform* driven) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::ReapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "ReapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driven)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driven);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.get_transform
::UnityEngine::Transform* UnityEngine::UI::LayoutRebuilder::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutRebuilder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.IsDestroyed
bool UnityEngine::UI::LayoutRebuilder::IsDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::IsDestroyed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutRebuilder*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.StripDisabledBehavioursFromList
void UnityEngine::UI::LayoutRebuilder::StripDisabledBehavioursFromList(::System::Collections::Generic::List_1<::UnityEngine::Component*>* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::StripDisabledBehavioursFromList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "StripDisabledBehavioursFromList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, components);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate
void UnityEngine::UI::LayoutRebuilder::ForceRebuildLayoutImmediate(::UnityEngine::RectTransform* layoutRoot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::ForceRebuildLayoutImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "ForceRebuildLayoutImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layoutRoot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layoutRoot);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.Rebuild
void UnityEngine::UI::LayoutRebuilder::Rebuild(::UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::Rebuild");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutRebuilder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.PerformLayoutControl
void UnityEngine::UI::LayoutRebuilder::PerformLayoutControl(::UnityEngine::RectTransform* rect, ::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::PerformLayoutControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformLayoutControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rect, action);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.PerformLayoutCalculation
void UnityEngine::UI::LayoutRebuilder::PerformLayoutCalculation(::UnityEngine::RectTransform* rect, ::UnityEngine::Events::UnityAction_1<::UnityEngine::Component*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::PerformLayoutCalculation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformLayoutCalculation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rect, action);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.MarkLayoutForRebuild
void UnityEngine::UI::LayoutRebuilder::MarkLayoutForRebuild(::UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::MarkLayoutForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "MarkLayoutForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.ValidController
bool UnityEngine::UI::LayoutRebuilder::ValidController(::UnityEngine::RectTransform* layoutRoot, ::System::Collections::Generic::List_1<::UnityEngine::Component*>* comps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::ValidController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "ValidController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layoutRoot), ::il2cpp_utils::ExtractType(comps)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layoutRoot, comps);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.MarkLayoutRootForRebuild
void UnityEngine::UI::LayoutRebuilder::MarkLayoutRootForRebuild(::UnityEngine::RectTransform* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::MarkLayoutRootForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "MarkLayoutRootForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controller);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.LayoutComplete
void UnityEngine::UI::LayoutRebuilder::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutRebuilder*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.GraphicUpdateComplete
void UnityEngine::UI::LayoutRebuilder::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutRebuilder*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.<s_Rebuilders>m__0
void UnityEngine::UI::LayoutRebuilder::$s_Rebuilders$m__0(::UnityEngine::UI::LayoutRebuilder* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::<s_Rebuilders>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "<s_Rebuilders>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.<StripDisabledBehavioursFromList>m__1
bool UnityEngine::UI::LayoutRebuilder::$StripDisabledBehavioursFromList$m__1(::UnityEngine::Component* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::<StripDisabledBehavioursFromList>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "<StripDisabledBehavioursFromList>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.<Rebuild>m__2
void UnityEngine::UI::LayoutRebuilder::$Rebuild$m__2(::UnityEngine::Component* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::<Rebuild>m__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "<Rebuild>m__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.<Rebuild>m__3
void UnityEngine::UI::LayoutRebuilder::$Rebuild$m__3(::UnityEngine::Component* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::<Rebuild>m__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "<Rebuild>m__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.<Rebuild>m__4
void UnityEngine::UI::LayoutRebuilder::$Rebuild$m__4(::UnityEngine::Component* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::<Rebuild>m__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "<Rebuild>m__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.<Rebuild>m__5
void UnityEngine::UI::LayoutRebuilder::$Rebuild$m__5(::UnityEngine::Component* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::<Rebuild>m__5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutRebuilder", "<Rebuild>m__5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.GetHashCode
int UnityEngine::UI::LayoutRebuilder::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.Equals
bool UnityEngine::UI::LayoutRebuilder::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.UI.LayoutRebuilder.ToString
::StringW UnityEngine::UI::LayoutRebuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutRebuilder::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.LayoutUtility
#include "UnityEngine/UI/LayoutUtility.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAB184C
// Autogenerated static field getter
// Get static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache0
::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache0
void UnityEngine::UI::LayoutUtility::_set_$$f__am$cache0(::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility", "<>f__am$cache0", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB185C
// Autogenerated static field getter
// Get static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache1
::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::_get_$$f__am$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_get_$$f__am$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility", "<>f__am$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache1
void UnityEngine::UI::LayoutUtility::_set_$$f__am$cache1(::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_set_$$f__am$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility", "<>f__am$cache1", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB186C
// Autogenerated static field getter
// Get static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache2
::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::_get_$$f__am$cache2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_get_$$f__am$cache2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility", "<>f__am$cache2")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache2
void UnityEngine::UI::LayoutUtility::_set_$$f__am$cache2(::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_set_$$f__am$cache2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility", "<>f__am$cache2", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB187C
// Autogenerated static field getter
// Get static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache3
::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::_get_$$f__am$cache3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_get_$$f__am$cache3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility", "<>f__am$cache3")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache3
void UnityEngine::UI::LayoutUtility::_set_$$f__am$cache3(::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_set_$$f__am$cache3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility", "<>f__am$cache3", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB188C
// Autogenerated static field getter
// Get static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache4
::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::_get_$$f__am$cache4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_get_$$f__am$cache4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility", "<>f__am$cache4")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache4
void UnityEngine::UI::LayoutUtility::_set_$$f__am$cache4(::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_set_$$f__am$cache4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility", "<>f__am$cache4", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB189C
// Autogenerated static field getter
// Get static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache5
::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::_get_$$f__am$cache5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_get_$$f__am$cache5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility", "<>f__am$cache5")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache5
void UnityEngine::UI::LayoutUtility::_set_$$f__am$cache5(::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_set_$$f__am$cache5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility", "<>f__am$cache5", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB18AC
// Autogenerated static field getter
// Get static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache6
::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::_get_$$f__am$cache6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_get_$$f__am$cache6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility", "<>f__am$cache6")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache6
void UnityEngine::UI::LayoutUtility::_set_$$f__am$cache6(::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_set_$$f__am$cache6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility", "<>f__am$cache6", value));
}
// [CompilerGeneratedAttribute] Offset: 0xAB18BC
// Autogenerated static field getter
// Get static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache7
::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* UnityEngine::UI::LayoutUtility::_get_$$f__am$cache7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_get_$$f__am$cache7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>*>("UnityEngine.UI", "LayoutUtility", "<>f__am$cache7")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<UnityEngine.UI.ILayoutElement,System.Single> <>f__am$cache7
void UnityEngine::UI::LayoutUtility::_set_$$f__am$cache7(::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::_set_$$f__am$cache7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "LayoutUtility", "<>f__am$cache7", value));
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetMinSize
float UnityEngine::UI::LayoutUtility::GetMinSize(::UnityEngine::RectTransform* rect, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetPreferredSize
float UnityEngine::UI::LayoutUtility::GetPreferredSize(::UnityEngine::RectTransform* rect, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetPreferredSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetPreferredSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetFlexibleSize
float UnityEngine::UI::LayoutUtility::GetFlexibleSize(::UnityEngine::RectTransform* rect, int axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetFlexibleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetFlexibleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, axis);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetMinWidth
float UnityEngine::UI::LayoutUtility::GetMinWidth(::UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetMinWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetMinWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetPreferredWidth
float UnityEngine::UI::LayoutUtility::GetPreferredWidth(::UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetFlexibleWidth
float UnityEngine::UI::LayoutUtility::GetFlexibleWidth(::UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetFlexibleWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetFlexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetMinHeight
float UnityEngine::UI::LayoutUtility::GetMinHeight(::UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetMinHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetMinHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetPreferredHeight
float UnityEngine::UI::LayoutUtility::GetPreferredHeight(::UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetFlexibleHeight
float UnityEngine::UI::LayoutUtility::GetFlexibleHeight(::UnityEngine::RectTransform* rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetFlexibleHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetFlexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetLayoutProperty
float UnityEngine::UI::LayoutUtility::GetLayoutProperty(::UnityEngine::RectTransform* rect, ::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* property, float defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetLayoutProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetLayoutProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, property, defaultValue);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.GetLayoutProperty
float UnityEngine::UI::LayoutUtility::GetLayoutProperty(::UnityEngine::RectTransform* rect, ::System::Func_2<::UnityEngine::UI::ILayoutElement*, float>* property, float defaultValue, ByRef<::UnityEngine::UI::ILayoutElement*> source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::GetLayoutProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "GetLayoutProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(defaultValue), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::UI::ILayoutElement*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, property, defaultValue, byref(source));
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.<GetMinWidth>m__0
float UnityEngine::UI::LayoutUtility::$GetMinWidth$m__0(::UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::<GetMinWidth>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "<GetMinWidth>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.<GetPreferredWidth>m__1
float UnityEngine::UI::LayoutUtility::$GetPreferredWidth$m__1(::UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::<GetPreferredWidth>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "<GetPreferredWidth>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.<GetPreferredWidth>m__2
float UnityEngine::UI::LayoutUtility::$GetPreferredWidth$m__2(::UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::<GetPreferredWidth>m__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "<GetPreferredWidth>m__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.<GetFlexibleWidth>m__3
float UnityEngine::UI::LayoutUtility::$GetFlexibleWidth$m__3(::UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::<GetFlexibleWidth>m__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "<GetFlexibleWidth>m__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.<GetMinHeight>m__4
float UnityEngine::UI::LayoutUtility::$GetMinHeight$m__4(::UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::<GetMinHeight>m__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "<GetMinHeight>m__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.<GetPreferredHeight>m__5
float UnityEngine::UI::LayoutUtility::$GetPreferredHeight$m__5(::UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::<GetPreferredHeight>m__5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "<GetPreferredHeight>m__5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.<GetPreferredHeight>m__6
float UnityEngine::UI::LayoutUtility::$GetPreferredHeight$m__6(::UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::<GetPreferredHeight>m__6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "<GetPreferredHeight>m__6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.UI.LayoutUtility.<GetFlexibleHeight>m__7
float UnityEngine::UI::LayoutUtility::$GetFlexibleHeight$m__7(::UnityEngine::UI::ILayoutElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::LayoutUtility::<GetFlexibleHeight>m__7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "LayoutUtility", "<GetFlexibleHeight>m__7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.VerticalLayoutGroup
#include "UnityEngine/UI/VerticalLayoutGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.VerticalLayoutGroup.CalculateLayoutInputHorizontal
void UnityEngine::UI::VerticalLayoutGroup::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VerticalLayoutGroup::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VerticalLayoutGroup.CalculateLayoutInputVertical
void UnityEngine::UI::VerticalLayoutGroup::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VerticalLayoutGroup::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VerticalLayoutGroup.SetLayoutHorizontal
void UnityEngine::UI::VerticalLayoutGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VerticalLayoutGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VerticalLayoutGroup.SetLayoutVertical
void UnityEngine::UI::VerticalLayoutGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VerticalLayoutGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::LayoutGroup*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IMaterialModifier
#include "UnityEngine/UI/IMaterialModifier.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IMaterialModifier.GetModifiedMaterial
::UnityEngine::Material* UnityEngine::UI::IMaterialModifier::GetModifiedMaterial(::UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::IMaterialModifier::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::IMaterialModifier*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ReflectionMethodsCache
#include "UnityEngine/UI/ReflectionMethodsCache.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback
#include "UnityEngine/UI/ReflectionMethodsCache_Raycast3DCallback.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback
#include "UnityEngine/UI/ReflectionMethodsCache_Raycast2DCallback.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback
#include "UnityEngine/UI/ReflectionMethodsCache_RaycastAllCallback.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRayIntersectionAllCallback.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRayIntersectionAllNonAllocCallback.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRaycastNonAllocCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.ReflectionMethodsCache s_ReflectionMethodsCache
::UnityEngine::UI::ReflectionMethodsCache* UnityEngine::UI::ReflectionMethodsCache::_get_s_ReflectionMethodsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::_get_s_ReflectionMethodsCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::ReflectionMethodsCache*>("UnityEngine.UI", "ReflectionMethodsCache", "s_ReflectionMethodsCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.ReflectionMethodsCache s_ReflectionMethodsCache
void UnityEngine::UI::ReflectionMethodsCache::_set_s_ReflectionMethodsCache(::UnityEngine::UI::ReflectionMethodsCache* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::_set_s_ReflectionMethodsCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ReflectionMethodsCache", "s_ReflectionMethodsCache", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback raycast3D
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback*& UnityEngine::UI::ReflectionMethodsCache::dyn_raycast3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::dyn_raycast3D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycast3D"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback raycast3DAll
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback*& UnityEngine::UI::ReflectionMethodsCache::dyn_raycast3DAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::dyn_raycast3DAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycast3DAll"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback raycast2D
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback*& UnityEngine::UI::ReflectionMethodsCache::dyn_raycast2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::dyn_raycast2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycast2D"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback getRayIntersectionAll
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback*& UnityEngine::UI::ReflectionMethodsCache::dyn_getRayIntersectionAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::dyn_getRayIntersectionAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getRayIntersectionAll"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback getRayIntersectionAllNonAlloc
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*& UnityEngine::UI::ReflectionMethodsCache::dyn_getRayIntersectionAllNonAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::dyn_getRayIntersectionAllNonAlloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getRayIntersectionAllNonAlloc"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback getRaycastNonAlloc
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback*& UnityEngine::UI::ReflectionMethodsCache::dyn_getRaycastNonAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::dyn_getRaycastNonAlloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getRaycastNonAlloc"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache.get_Singleton
::UnityEngine::UI::ReflectionMethodsCache* UnityEngine::UI::ReflectionMethodsCache::get_Singleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::get_Singleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ReflectionMethodsCache", "get_Singleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::ReflectionMethodsCache*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache..cctor
void UnityEngine::UI::ReflectionMethodsCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ReflectionMethodsCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback
#include "UnityEngine/UI/ReflectionMethodsCache_Raycast3DCallback.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback.Invoke
bool UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::Invoke(::UnityEngine::Ray r, ByRef<::UnityEngine::RaycastHit> hit, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, r, byref(hit), f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::BeginInvoke(::UnityEngine::Ray r, ByRef<::UnityEngine::RaycastHit> hit, float f, int i, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, r, byref(hit), f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback.EndInvoke
bool UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::EndInvoke(ByRef<::UnityEngine::RaycastHit> hit, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(hit), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback
#include "UnityEngine/UI/ReflectionMethodsCache_Raycast2DCallback.hpp"
// Including type: UnityEngine.RaycastHit2D
#include "UnityEngine/RaycastHit2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback.Invoke
::UnityEngine::RaycastHit2D UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::Invoke(::UnityEngine::Vector2 p1, ::UnityEngine::Vector2 p2, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, p1, p2, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::BeginInvoke(::UnityEngine::Vector2 p1, ::UnityEngine::Vector2 p2, float f, int i, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, p1, p2, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback.EndInvoke
::UnityEngine::RaycastHit2D UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback
#include "UnityEngine/UI/ReflectionMethodsCache_RaycastAllCallback.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback.Invoke
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::Invoke(::UnityEngine::Ray r, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(this, ___internal__method, r, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::BeginInvoke(::UnityEngine::Ray r, float f, int i, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, r, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback.EndInvoke
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRayIntersectionAllCallback.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback.Invoke
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::Invoke(::UnityEngine::Ray r, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(this, ___internal__method, r, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::BeginInvoke(::UnityEngine::Ray r, float f, int i, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, r, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback.EndInvoke
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRayIntersectionAllNonAllocCallback.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback.Invoke
int UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::Invoke(::UnityEngine::Ray r, ::ArrayW<::UnityEngine::RaycastHit2D> results, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r, results, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::BeginInvoke(::UnityEngine::Ray r, ::ArrayW<::UnityEngine::RaycastHit2D> results, float f, int i, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, r, results, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback.EndInvoke
int UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRaycastNonAllocCallback.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback.Invoke
int UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::Invoke(::UnityEngine::Ray r, ::ArrayW<::UnityEngine::RaycastHit> results, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r, results, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::BeginInvoke(::UnityEngine::Ray r, ::ArrayW<::UnityEngine::RaycastHit> results, float f, int i, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, r, results, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback.EndInvoke
int UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 s_DefaultTangent
::UnityEngine::Vector4 UnityEngine::UI::VertexHelper::_get_s_DefaultTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::_get_s_DefaultTangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("UnityEngine.UI", "VertexHelper", "s_DefaultTangent"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 s_DefaultTangent
void UnityEngine::UI::VertexHelper::_set_s_DefaultTangent(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::_set_s_DefaultTangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "VertexHelper", "s_DefaultTangent", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 s_DefaultNormal
::UnityEngine::Vector3 UnityEngine::UI::VertexHelper::_get_s_DefaultNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::_get_s_DefaultNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine.UI", "VertexHelper", "s_DefaultNormal"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 s_DefaultNormal
void UnityEngine::UI::VertexHelper::_set_s_DefaultNormal(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::_set_s_DefaultNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "VertexHelper", "s_DefaultNormal", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> m_Positions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& UnityEngine::UI::VertexHelper::dyn_m_Positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::dyn_m_Positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Positions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Color32> m_Colors
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Color32>*& UnityEngine::UI::VertexHelper::dyn_m_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::dyn_m_Colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Colors"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Color32>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector2> m_Uv0S
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& UnityEngine::UI::VertexHelper::dyn_m_Uv0S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::dyn_m_Uv0S");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Uv0S"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector2> m_Uv1S
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& UnityEngine::UI::VertexHelper::dyn_m_Uv1S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::dyn_m_Uv1S");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Uv1S"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector2> m_Uv2S
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& UnityEngine::UI::VertexHelper::dyn_m_Uv2S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::dyn_m_Uv2S");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Uv2S"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector2> m_Uv3S
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*& UnityEngine::UI::VertexHelper::dyn_m_Uv3S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::dyn_m_Uv3S");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Uv3S"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> m_Normals
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& UnityEngine::UI::VertexHelper::dyn_m_Normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::dyn_m_Normals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normals"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector4> m_Tangents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*& UnityEngine::UI::VertexHelper::dyn_m_Tangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::dyn_m_Tangents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tangents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector4>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> m_Indices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& UnityEngine::UI::VertexHelper::dyn_m_Indices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::dyn_m_Indices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Indices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ListsInitalized
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::VertexHelper::dyn_m_ListsInitalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::dyn_m_ListsInitalized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ListsInitalized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.InitializeListIfRequired
void UnityEngine::UI::VertexHelper::InitializeListIfRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::InitializeListIfRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeListIfRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.Dispose
void UnityEngine::UI::VertexHelper::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::VertexHelper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.Clear
void UnityEngine::UI::VertexHelper::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.get_currentVertCount
int UnityEngine::UI::VertexHelper::get_currentVertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::get_currentVertCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentVertCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.get_currentIndexCount
int UnityEngine::UI::VertexHelper::get_currentIndexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::get_currentIndexCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentIndexCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.PopulateUIVertex
void UnityEngine::UI::VertexHelper::PopulateUIVertex(ByRef<::UnityEngine::UIVertex> vertex, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::PopulateUIVertex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateUIVertex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertex), ::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(vertex), i);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.SetUIVertex
void UnityEngine::UI::VertexHelper::SetUIVertex(::UnityEngine::UIVertex vertex, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::SetUIVertex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUIVertex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertex), ::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertex, i);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.FillMesh
void UnityEngine::UI::VertexHelper::FillMesh(::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::FillMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddVert
void UnityEngine::UI::VertexHelper::AddVert(::UnityEngine::Vector3 position, ::UnityEngine::Color32 color, ::UnityEngine::Vector2 uv0, ::UnityEngine::Vector2 uv1, ::UnityEngine::Vector2 uv2, ::UnityEngine::Vector2 uv3, ::UnityEngine::Vector3 normal, ::UnityEngine::Vector4 tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::AddVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uv0), ::il2cpp_utils::ExtractType(uv1), ::il2cpp_utils::ExtractType(uv2), ::il2cpp_utils::ExtractType(uv3), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(tangent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, color, uv0, uv1, uv2, uv3, normal, tangent);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddVert
void UnityEngine::UI::VertexHelper::AddVert(::UnityEngine::Vector3 position, ::UnityEngine::Color32 color, ::UnityEngine::Vector2 uv0, ::UnityEngine::Vector2 uv1, ::UnityEngine::Vector3 normal, ::UnityEngine::Vector4 tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::AddVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uv0), ::il2cpp_utils::ExtractType(uv1), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(tangent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, color, uv0, uv1, normal, tangent);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddVert
void UnityEngine::UI::VertexHelper::AddVert(::UnityEngine::Vector3 position, ::UnityEngine::Color32 color, ::UnityEngine::Vector2 uv0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::AddVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uv0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, color, uv0);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddVert
void UnityEngine::UI::VertexHelper::AddVert(::UnityEngine::UIVertex v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::AddVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddTriangle
void UnityEngine::UI::VertexHelper::AddTriangle(int idx0, int idx1, int idx2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::AddTriangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTriangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx0), ::il2cpp_utils::ExtractType(idx1), ::il2cpp_utils::ExtractType(idx2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx0, idx1, idx2);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddUIVertexQuad
void UnityEngine::UI::VertexHelper::AddUIVertexQuad(::ArrayW<::UnityEngine::UIVertex> verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::AddUIVertexQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUIVertexQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, verts);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddUIVertexStream
void UnityEngine::UI::VertexHelper::AddUIVertexStream(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts, ::System::Collections::Generic::List_1<int>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::AddUIVertexStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUIVertexStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, verts, indices);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddUIVertexTriangleStream
void UnityEngine::UI::VertexHelper::AddUIVertexTriangleStream(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::AddUIVertexTriangleStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUIVertexTriangleStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, verts);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.GetUIVertexStream
void UnityEngine::UI::VertexHelper::GetUIVertexStream(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::GetUIVertexStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUIVertexStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.UI.VertexHelper..cctor
void UnityEngine::UI::VertexHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::VertexHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "VertexHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.UI.VertexHelperExtension
#include "UnityEngine/Experimental/UI/VertexHelperExtension.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.UI.VertexHelperExtension.AddVert
void UnityEngine::Experimental::UI::VertexHelperExtension::AddVert(::UnityEngine::UI::VertexHelper* obj, ::UnityEngine::Vector3 position, ::UnityEngine::Color32 color, ::UnityEngine::Vector2 uv0, ::UnityEngine::Vector2 uv1, ::UnityEngine::Vector2 uv2, ::UnityEngine::Vector2 uv3, ::UnityEngine::Vector3 normal, ::UnityEngine::Vector4 tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::UI::VertexHelperExtension::AddVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.UI", "VertexHelperExtension", "AddVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uv0), ::il2cpp_utils::ExtractType(uv1), ::il2cpp_utils::ExtractType(uv2), ::il2cpp_utils::ExtractType(uv3), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(tangent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, position, color, uv0, uv1, uv2, uv3, normal, tangent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.BaseVertexEffect
#include "UnityEngine/UI/BaseVertexEffect.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.BaseVertexEffect.ModifyVertices
void UnityEngine::UI::BaseVertexEffect::ModifyVertices(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::BaseVertexEffect::ModifyVertices");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::BaseVertexEffect*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.BaseMeshEffect
#include "UnityEngine/UI/BaseMeshEffect.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic m_Graphic
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Graphic*& UnityEngine::UI::BaseMeshEffect::dyn_m_Graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::BaseMeshEffect::dyn_m_Graphic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Graphic"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.get_graphic
::UnityEngine::UI::Graphic* UnityEngine::UI::BaseMeshEffect::get_graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::BaseMeshEffect::get_graphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.ModifyMesh
void UnityEngine::UI::BaseMeshEffect::ModifyMesh(::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::BaseMeshEffect::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::BaseMeshEffect*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.ModifyMesh
void UnityEngine::UI::BaseMeshEffect::ModifyMesh(::UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::BaseMeshEffect::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::BaseMeshEffect*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vh);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.OnEnable
void UnityEngine::UI::BaseMeshEffect::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::BaseMeshEffect::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.OnDisable
void UnityEngine::UI::BaseMeshEffect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::BaseMeshEffect::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.OnDidApplyAnimationProperties
void UnityEngine::UI::BaseMeshEffect::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::BaseMeshEffect::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::EventSystems::UIBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IVertexModifier
#include "UnityEngine/UI/IVertexModifier.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IVertexModifier.ModifyVertices
void UnityEngine::UI::IVertexModifier::ModifyVertices(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::IVertexModifier::ModifyVertices");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::IVertexModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, verts);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IMeshModifier
#include "UnityEngine/UI/IMeshModifier.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IMeshModifier.ModifyMesh
void UnityEngine::UI::IMeshModifier::ModifyMesh(::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::IMeshModifier::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::IMeshModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.UI.IMeshModifier.ModifyMesh
void UnityEngine::UI::IMeshModifier::ModifyMesh(::UnityEngine::UI::VertexHelper* verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::IMeshModifier::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::IMeshModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, verts);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Outline
#include "UnityEngine/UI/Outline.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Outline.ModifyMesh
void UnityEngine::UI::Outline::ModifyMesh(::UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Outline::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Shadow*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vh);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.PositionAsUV1
#include "UnityEngine/UI/PositionAsUV1.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.PositionAsUV1.ModifyMesh
void UnityEngine::UI::PositionAsUV1::ModifyMesh(::UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::PositionAsUV1::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::BaseMeshEffect*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vh);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Shadow
#include "UnityEngine/UI/Shadow.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMaxEffectDistance
float UnityEngine::UI::Shadow::_get_kMaxEffectDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::_get_kMaxEffectDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UI", "Shadow", "kMaxEffectDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxEffectDistance
void UnityEngine::UI::Shadow::_set_kMaxEffectDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::_set_kMaxEffectDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Shadow", "kMaxEffectDistance", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_EffectColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::UI::Shadow::dyn_m_EffectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::dyn_m_EffectColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EffectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_EffectDistance
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::UI::Shadow::dyn_m_EffectDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::dyn_m_EffectDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EffectDistance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UseGraphicAlpha
[[deprecated("Use field access instead!")]] bool& UnityEngine::UI::Shadow::dyn_m_UseGraphicAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::dyn_m_UseGraphicAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseGraphicAlpha"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UI.Shadow.get_effectColor
::UnityEngine::Color UnityEngine::UI::Shadow::get_effectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::get_effectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Shadow.set_effectColor
void UnityEngine::UI::Shadow::set_effectColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::set_effectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_effectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Shadow.get_effectDistance
::UnityEngine::Vector2 UnityEngine::UI::Shadow::get_effectDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::get_effectDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Shadow.set_effectDistance
void UnityEngine::UI::Shadow::set_effectDistance(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::set_effectDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_effectDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Shadow.get_useGraphicAlpha
bool UnityEngine::UI::Shadow::get_useGraphicAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::get_useGraphicAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGraphicAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Shadow.set_useGraphicAlpha
void UnityEngine::UI::Shadow::set_useGraphicAlpha(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::set_useGraphicAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGraphicAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Shadow.ApplyShadowZeroAlloc
void UnityEngine::UI::Shadow::ApplyShadowZeroAlloc(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts, ::UnityEngine::Color32 color, int start, int end, float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::ApplyShadowZeroAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyShadowZeroAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, verts, color, start, end, x, y);
}
// Autogenerated method: UnityEngine.UI.Shadow.ApplyShadow
void UnityEngine::UI::Shadow::ApplyShadow(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts, ::UnityEngine::Color32 color, int start, int end, float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::ApplyShadow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyShadow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, verts, color, start, end, x, y);
}
// Autogenerated method: UnityEngine.UI.Shadow.ModifyMesh
void UnityEngine::UI::Shadow::ModifyMesh(::UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Shadow::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::BaseMeshEffect*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vh);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderMode
#include "UnityEngine/RenderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderMode ScreenSpaceOverlay
::UnityEngine::RenderMode UnityEngine::RenderMode::_get_ScreenSpaceOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_get_ScreenSpaceOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RenderMode>("UnityEngine", "RenderMode", "ScreenSpaceOverlay"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderMode ScreenSpaceOverlay
void UnityEngine::RenderMode::_set_ScreenSpaceOverlay(::UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_set_ScreenSpaceOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderMode", "ScreenSpaceOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderMode ScreenSpaceCamera
::UnityEngine::RenderMode UnityEngine::RenderMode::_get_ScreenSpaceCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_get_ScreenSpaceCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RenderMode>("UnityEngine", "RenderMode", "ScreenSpaceCamera"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderMode ScreenSpaceCamera
void UnityEngine::RenderMode::_set_ScreenSpaceCamera(::UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_set_ScreenSpaceCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderMode", "ScreenSpaceCamera", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderMode WorldSpace
::UnityEngine::RenderMode UnityEngine::RenderMode::_get_WorldSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_get_WorldSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RenderMode>("UnityEngine", "RenderMode", "WorldSpace"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderMode WorldSpace
void UnityEngine::RenderMode::_set_WorldSpace(::UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::_set_WorldSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderMode", "WorldSpace", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RenderMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RenderMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AdditionalCanvasShaderChannels
#include "UnityEngine/AdditionalCanvasShaderChannels.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels None
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels None
void UnityEngine::AdditionalCanvasShaderChannels::_set_None(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord1
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord1
void UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord1(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord2
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord2
void UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord2(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord3
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord3
void UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord3(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels Normal
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels Normal
void UnityEngine::AdditionalCanvasShaderChannels::_set_Normal(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels Tangent
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_Tangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_get_Tangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "Tangent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels Tangent
void UnityEngine::AdditionalCanvasShaderChannels::_set_Tangent(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::_set_Tangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "Tangent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AdditionalCanvasShaderChannels::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AdditionalCanvasShaderChannels::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Canvas/WillRenderCanvases
#include "UnityEngine/Canvas_WillRenderCanvases.hpp"
// Including type: UnityEngine.RenderMode
#include "UnityEngine/RenderMode.hpp"
// Including type: UnityEngine.AdditionalCanvasShaderChannels
#include "UnityEngine/AdditionalCanvasShaderChannels.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAA42E8
// [DebuggerBrowsableAttribute] Offset: 0xAA42E8
// Autogenerated static field getter
// Get static field: static private UnityEngine.Canvas/WillRenderCanvases willRenderCanvases
::UnityEngine::Canvas::WillRenderCanvases* UnityEngine::Canvas::_get_willRenderCanvases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::_get_willRenderCanvases");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Canvas::WillRenderCanvases*>("UnityEngine", "Canvas", "willRenderCanvases"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Canvas/WillRenderCanvases willRenderCanvases
void UnityEngine::Canvas::_set_willRenderCanvases(::UnityEngine::Canvas::WillRenderCanvases* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::_set_willRenderCanvases");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Canvas", "willRenderCanvases", value));
}
// Autogenerated method: UnityEngine.Canvas.add_willRenderCanvases
void UnityEngine::Canvas::add_willRenderCanvases(::UnityEngine::Canvas::WillRenderCanvases* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::add_willRenderCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "add_willRenderCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.remove_willRenderCanvases
void UnityEngine::Canvas::remove_willRenderCanvases(::UnityEngine::Canvas::WillRenderCanvases* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::remove_willRenderCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "remove_willRenderCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_renderMode
::UnityEngine::RenderMode UnityEngine::Canvas::get_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_renderMode
void UnityEngine::Canvas::set_renderMode(::UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_isRootCanvas
bool UnityEngine::Canvas::get_isRootCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_isRootCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRootCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.get_scaleFactor
float UnityEngine::Canvas::get_scaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_scaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_scaleFactor
void UnityEngine::Canvas::set_scaleFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_scaleFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scaleFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_referencePixelsPerUnit
float UnityEngine::Canvas::get_referencePixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_referencePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referencePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_referencePixelsPerUnit
void UnityEngine::Canvas::set_referencePixelsPerUnit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_referencePixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_referencePixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_pixelPerfect
bool UnityEngine::Canvas::get_pixelPerfect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_pixelPerfect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelPerfect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_pixelPerfect
void UnityEngine::Canvas::set_pixelPerfect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_pixelPerfect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pixelPerfect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_renderOrder
int UnityEngine::Canvas::get_renderOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_renderOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.get_overrideSorting
bool UnityEngine::Canvas::get_overrideSorting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_overrideSorting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideSorting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_overrideSorting
void UnityEngine::Canvas::set_overrideSorting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_overrideSorting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideSorting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_sortingOrder
int UnityEngine::Canvas::get_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_sortingOrder
void UnityEngine::Canvas::set_sortingOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_targetDisplay
int UnityEngine::Canvas::get_targetDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_targetDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.get_sortingLayerID
int UnityEngine::Canvas::get_sortingLayerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_sortingLayerID
void UnityEngine::Canvas::set_sortingLayerID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_additionalShaderChannels
::UnityEngine::AdditionalCanvasShaderChannels UnityEngine::Canvas::get_additionalShaderChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_additionalShaderChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_additionalShaderChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AdditionalCanvasShaderChannels, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_additionalShaderChannels
void UnityEngine::Canvas::set_additionalShaderChannels(::UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_additionalShaderChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_additionalShaderChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.get_rootCanvas
::UnityEngine::Canvas* UnityEngine::Canvas::get_rootCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_rootCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.get_worldCamera
::UnityEngine::Camera* UnityEngine::Canvas::get_worldCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::get_worldCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.set_worldCamera
void UnityEngine::Canvas::set_worldCamera(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::set_worldCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_worldCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Canvas.GetDefaultCanvasMaterial
::UnityEngine::Material* UnityEngine::Canvas::GetDefaultCanvasMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::GetDefaultCanvasMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "GetDefaultCanvasMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.GetETC1SupportedCanvasMaterial
::UnityEngine::Material* UnityEngine::Canvas::GetETC1SupportedCanvasMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::GetETC1SupportedCanvasMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "GetETC1SupportedCanvasMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.ForceUpdateCanvases
void UnityEngine::Canvas::ForceUpdateCanvases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::ForceUpdateCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "ForceUpdateCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas.SendWillRenderCanvases
void UnityEngine::Canvas::SendWillRenderCanvases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::SendWillRenderCanvases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Canvas", "SendWillRenderCanvases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Canvas/WillRenderCanvases
#include "UnityEngine/Canvas_WillRenderCanvases.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Canvas/WillRenderCanvases.Invoke
void UnityEngine::Canvas::WillRenderCanvases::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::WillRenderCanvases::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Canvas::WillRenderCanvases*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Canvas/WillRenderCanvases.BeginInvoke
::System::IAsyncResult* UnityEngine::Canvas::WillRenderCanvases::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::WillRenderCanvases::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Canvas::WillRenderCanvases*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.Canvas/WillRenderCanvases.EndInvoke
void UnityEngine::Canvas::WillRenderCanvases::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Canvas::WillRenderCanvases::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Canvas::WillRenderCanvases*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UISystemProfilerApi
#include "UnityEngine/UISystemProfilerApi.hpp"
// Including type: UnityEngine.UISystemProfilerApi/SampleType
#include "UnityEngine/UISystemProfilerApi_SampleType.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UISystemProfilerApi.BeginSample
void UnityEngine::UISystemProfilerApi::BeginSample(::UnityEngine::UISystemProfilerApi::SampleType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::BeginSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UISystemProfilerApi", "BeginSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.UISystemProfilerApi.EndSample
void UnityEngine::UISystemProfilerApi::EndSample(::UnityEngine::UISystemProfilerApi::SampleType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::EndSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UISystemProfilerApi", "EndSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.UISystemProfilerApi.AddMarker
void UnityEngine::UISystemProfilerApi::AddMarker(::StringW name, ::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::AddMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UISystemProfilerApi", "AddMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UISystemProfilerApi/SampleType
#include "UnityEngine/UISystemProfilerApi_SampleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UISystemProfilerApi/SampleType Layout
::UnityEngine::UISystemProfilerApi::SampleType UnityEngine::UISystemProfilerApi::SampleType::_get_Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::SampleType::_get_Layout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UISystemProfilerApi::SampleType>("UnityEngine", "UISystemProfilerApi/SampleType", "Layout"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UISystemProfilerApi/SampleType Layout
void UnityEngine::UISystemProfilerApi::SampleType::_set_Layout(::UnityEngine::UISystemProfilerApi::SampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::SampleType::_set_Layout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UISystemProfilerApi/SampleType", "Layout", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UISystemProfilerApi/SampleType Render
::UnityEngine::UISystemProfilerApi::SampleType UnityEngine::UISystemProfilerApi::SampleType::_get_Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::SampleType::_get_Render");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UISystemProfilerApi::SampleType>("UnityEngine", "UISystemProfilerApi/SampleType", "Render"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UISystemProfilerApi/SampleType Render
void UnityEngine::UISystemProfilerApi::SampleType::_set_Render(::UnityEngine::UISystemProfilerApi::SampleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::SampleType::_set_Render");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UISystemProfilerApi/SampleType", "Render", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::UISystemProfilerApi::SampleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UISystemProfilerApi::SampleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ICanvasRaycastFilter
#include "UnityEngine/ICanvasRaycastFilter.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ICanvasRaycastFilter.IsRaycastLocationValid
bool UnityEngine::ICanvasRaycastFilter::IsRaycastLocationValid(::UnityEngine::Vector2 sp, ::UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ICanvasRaycastFilter::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::ICanvasRaycastFilter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CanvasGroup.get_alpha
float UnityEngine::CanvasGroup::get_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::get_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.set_alpha
void UnityEngine::CanvasGroup::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasGroup.get_interactable
bool UnityEngine::CanvasGroup::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.get_blocksRaycasts
bool UnityEngine::CanvasGroup::get_blocksRaycasts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::get_blocksRaycasts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blocksRaycasts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.get_ignoreParentGroups
bool UnityEngine::CanvasGroup::get_ignoreParentGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::get_ignoreParentGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreParentGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.IsRaycastLocationValid
bool UnityEngine::CanvasGroup::IsRaycastLocationValid(::UnityEngine::Vector2 sp, ::UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasGroup::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::CanvasGroup*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isMask>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::CanvasRenderer::dyn_$isMask$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::dyn_$isMask$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isMask>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_hasPopInstruction
void UnityEngine::CanvasRenderer::set_hasPopInstruction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::set_hasPopInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasPopInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_materialCount
int UnityEngine::CanvasRenderer::get_materialCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::get_materialCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_materialCount
void UnityEngine::CanvasRenderer::set_materialCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::set_materialCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_materialCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_popMaterialCount
void UnityEngine::CanvasRenderer::set_popMaterialCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::set_popMaterialCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_popMaterialCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_absoluteDepth
int UnityEngine::CanvasRenderer::get_absoluteDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::get_absoluteDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_absoluteDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_hasMoved
bool UnityEngine::CanvasRenderer::get_hasMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::get_hasMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_cull
bool UnityEngine::CanvasRenderer::get_cull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::get_cull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_cull
void UnityEngine::CanvasRenderer::set_cull(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::set_cull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetColor
void UnityEngine::CanvasRenderer::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetColor
::UnityEngine::Color UnityEngine::CanvasRenderer::GetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.EnableRectClipping
void UnityEngine::CanvasRenderer::EnableRectClipping(::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::EnableRectClipping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableRectClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rect);
}
// Autogenerated method: UnityEngine.CanvasRenderer.DisableRectClipping
void UnityEngine::CanvasRenderer::DisableRectClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::DisableRectClipping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableRectClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMaterial
void UnityEngine::CanvasRenderer::SetMaterial(::UnityEngine::Material* material, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, material, index);
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetMaterial
::UnityEngine::Material* UnityEngine::CanvasRenderer::GetMaterial(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetPopMaterial
void UnityEngine::CanvasRenderer::SetPopMaterial(::UnityEngine::Material* material, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetPopMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPopMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, material, index);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetTexture
void UnityEngine::CanvasRenderer::SetTexture(::UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texture);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetAlphaTexture
void UnityEngine::CanvasRenderer::SetAlphaTexture(::UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetAlphaTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAlphaTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texture);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMesh
void UnityEngine::CanvasRenderer::SetMesh(::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.CanvasRenderer.Clear
void UnityEngine::CanvasRenderer::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMaterial
void UnityEngine::CanvasRenderer::SetMaterial(::UnityEngine::Material* material, ::UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, material, texture);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitUIVertexStreams
void UnityEngine::CanvasRenderer::SplitUIVertexStreams(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* positions, ::System::Collections::Generic::List_1<::UnityEngine::Color32>* colors, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv0S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv1S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv2S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv3S, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* normals, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* tangents, ::System::Collections::Generic::List_1<int>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SplitUIVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "SplitUIVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.CreateUIVertexStream
void UnityEngine::CanvasRenderer::CreateUIVertexStream(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* positions, ::System::Collections::Generic::List_1<::UnityEngine::Color32>* colors, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv0S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv1S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv2S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv3S, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* normals, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* tangents, ::System::Collections::Generic::List_1<int>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::CreateUIVertexStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "CreateUIVertexStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.AddUIVertexStream
void UnityEngine::CanvasRenderer::AddUIVertexStream(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* positions, ::System::Collections::Generic::List_1<::UnityEngine::Color32>* colors, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv0S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv1S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv2S, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uv3S, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* normals, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* tangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::AddUIVertexStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "AddUIVertexStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitIndicesStreamsInternal
void UnityEngine::CanvasRenderer::SplitIndicesStreamsInternal(::Il2CppObject* verts, ::Il2CppObject* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SplitIndicesStreamsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "SplitIndicesStreamsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitUIVertexStreamsInternal
void UnityEngine::CanvasRenderer::SplitUIVertexStreamsInternal(::Il2CppObject* verts, ::Il2CppObject* positions, ::Il2CppObject* colors, ::Il2CppObject* uv0S, ::Il2CppObject* uv1S, ::Il2CppObject* uv2S, ::Il2CppObject* uv3S, ::Il2CppObject* normals, ::Il2CppObject* tangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SplitUIVertexStreamsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "SplitUIVertexStreamsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents);
}
// Autogenerated method: UnityEngine.CanvasRenderer.CreateUIVertexStreamInternal
void UnityEngine::CanvasRenderer::CreateUIVertexStreamInternal(::Il2CppObject* verts, ::Il2CppObject* positions, ::Il2CppObject* colors, ::Il2CppObject* uv0S, ::Il2CppObject* uv1S, ::Il2CppObject* uv2S, ::Il2CppObject* uv3S, ::Il2CppObject* normals, ::Il2CppObject* tangents, ::Il2CppObject* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::CreateUIVertexStreamInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "CreateUIVertexStreamInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetColor_Injected
void UnityEngine::CanvasRenderer::SetColor_Injected(ByRef<::UnityEngine::Color> color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::SetColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(color));
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetColor_Injected
void UnityEngine::CanvasRenderer::GetColor_Injected(ByRef<::UnityEngine::Color> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::GetColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CanvasRenderer.EnableRectClipping_Injected
void UnityEngine::CanvasRenderer::EnableRectClipping_Injected(ByRef<::UnityEngine::Rect> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CanvasRenderer::EnableRectClipping_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableRectClipping_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(rect));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RectTransformUtility
#include "UnityEngine/RectTransformUtility.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Corners
::ArrayW<::UnityEngine::Vector3> UnityEngine::RectTransformUtility::_get_s_Corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::_get_s_Corners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("UnityEngine", "RectTransformUtility", "s_Corners"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Corners
void UnityEngine::RectTransformUtility::_set_s_Corners(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::_set_s_Corners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransformUtility", "s_Corners", value));
}
// Autogenerated method: UnityEngine.RectTransformUtility.RectangleContainsScreenPoint
bool UnityEngine::RectTransformUtility::RectangleContainsScreenPoint(::UnityEngine::RectTransform* rect, ::UnityEngine::Vector2 screenPoint, ::UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::RectangleContainsScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "RectangleContainsScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, screenPoint, cam);
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToWorldPointInRectangle
bool UnityEngine::RectTransformUtility::ScreenPointToWorldPointInRectangle(::UnityEngine::RectTransform* rect, ::UnityEngine::Vector2 screenPoint, ::UnityEngine::Camera* cam, ByRef<::UnityEngine::Vector3> worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::ScreenPointToWorldPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "ScreenPointToWorldPointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, screenPoint, cam, byref(worldPoint));
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToLocalPointInRectangle
bool UnityEngine::RectTransformUtility::ScreenPointToLocalPointInRectangle(::UnityEngine::RectTransform* rect, ::UnityEngine::Vector2 screenPoint, ::UnityEngine::Camera* cam, ByRef<::UnityEngine::Vector2> localPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::ScreenPointToLocalPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "ScreenPointToLocalPointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, screenPoint, cam, byref(localPoint));
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToRay
::UnityEngine::Ray UnityEngine::RectTransformUtility::ScreenPointToRay(::UnityEngine::Camera* cam, ::UnityEngine::Vector2 screenPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::ScreenPointToRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "ScreenPointToRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(screenPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cam, screenPos);
}
// Autogenerated method: UnityEngine.RectTransformUtility.WorldToScreenPoint
::UnityEngine::Vector2 UnityEngine::RectTransformUtility::WorldToScreenPoint(::UnityEngine::Camera* cam, ::UnityEngine::Vector3 worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::WorldToScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "WorldToScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(worldPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cam, worldPoint);
}
// Autogenerated method: UnityEngine.RectTransformUtility.FlipLayoutOnAxis
void UnityEngine::RectTransformUtility::FlipLayoutOnAxis(::UnityEngine::RectTransform* rect, int axis, bool keepPositioning, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::FlipLayoutOnAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "FlipLayoutOnAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(keepPositioning), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, axis, keepPositioning, recursive);
}
// Autogenerated method: UnityEngine.RectTransformUtility.FlipLayoutAxes
void UnityEngine::RectTransformUtility::FlipLayoutAxes(::UnityEngine::RectTransform* rect, bool keepPositioning, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::FlipLayoutAxes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "FlipLayoutAxes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(keepPositioning), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rect, keepPositioning, recursive);
}
// Autogenerated method: UnityEngine.RectTransformUtility.GetTransposed
::UnityEngine::Vector2 UnityEngine::RectTransformUtility::GetTransposed(::UnityEngine::Vector2 input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::GetTransposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "GetTransposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustPoint
::UnityEngine::Vector2 UnityEngine::RectTransformUtility::PixelAdjustPoint(::UnityEngine::Vector2 point, ::UnityEngine::Transform* elementTransform, ::UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PixelAdjustPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(elementTransform), ::il2cpp_utils::ExtractType(canvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, elementTransform, canvas);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustRect
::UnityEngine::Rect UnityEngine::RectTransformUtility::PixelAdjustRect(::UnityEngine::RectTransform* rectTransform, ::UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PixelAdjustRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(canvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform, canvas);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PointInRectangle
bool UnityEngine::RectTransformUtility::PointInRectangle(::UnityEngine::Vector2 screenPoint, ::UnityEngine::RectTransform* rect, ::UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(cam)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, screenPoint, rect, cam);
}
// Autogenerated method: UnityEngine.RectTransformUtility..cctor
void UnityEngine::RectTransformUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustPoint_Injected
void UnityEngine::RectTransformUtility::PixelAdjustPoint_Injected(ByRef<::UnityEngine::Vector2> point, ::UnityEngine::Transform* elementTransform, ::UnityEngine::Canvas* canvas, ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PixelAdjustPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(elementTransform), ::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(point), elementTransform, canvas, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustRect_Injected
void UnityEngine::RectTransformUtility::PixelAdjustRect_Injected(::UnityEngine::RectTransform* rectTransform, ::UnityEngine::Canvas* canvas, ByRef<::UnityEngine::Rect> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PixelAdjustRect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustRect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform, canvas, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PointInRectangle_Injected
bool UnityEngine::RectTransformUtility::PointInRectangle_Injected(ByRef<::UnityEngine::Vector2> screenPoint, ::UnityEngine::RectTransform* rect, ::UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransformUtility::PointInRectangle_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PointInRectangle_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(cam)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(screenPoint), rect, cam);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.NetworkTransport
#include "UnityEngine/Networking/NetworkTransport.hpp"
// Including type: UnityEngine.Networking.HostTopology
#include "UnityEngine/Networking/HostTopology.hpp"
// Including type: UnityEngine.Networking.HostTopologyInternal
#include "UnityEngine/Networking/HostTopologyInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_nextSceneId
int UnityEngine::Networking::NetworkTransport::_get_s_nextSceneId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::_get_s_nextSceneId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Networking", "NetworkTransport", "s_nextSceneId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_nextSceneId
void UnityEngine::Networking::NetworkTransport::_set_s_nextSceneId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::_set_s_nextSceneId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "NetworkTransport", "s_nextSceneId", value));
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.Init
void UnityEngine::Networking::NetworkTransport::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.InitializeClass
void UnityEngine::Networking::NetworkTransport::InitializeClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::InitializeClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "InitializeClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.AddHostWithSimulator
int UnityEngine::Networking::NetworkTransport::AddHostWithSimulator(::UnityEngine::Networking::HostTopology* topology, int minTimeout, int maxTimeout, int port, ::StringW ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::AddHostWithSimulator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "AddHostWithSimulator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(minTimeout), ::il2cpp_utils::ExtractType(maxTimeout), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(ip)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, topology, minTimeout, maxTimeout, port, ip);
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.AddHost
int UnityEngine::Networking::NetworkTransport::AddHost(::UnityEngine::Networking::HostTopology* topology, int port, ::StringW ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::AddHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "AddHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(ip)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, topology, port, ip);
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.AddHost
int UnityEngine::Networking::NetworkTransport::AddHost(::UnityEngine::Networking::HostTopology* topology, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::AddHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "AddHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topology), ::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, topology, port);
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.AddHostInternal
int UnityEngine::Networking::NetworkTransport::AddHostInternal(::UnityEngine::Networking::HostTopologyInternal* topologyInt, ::StringW ip, int port, int minTimeout, int maxTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::AddHostInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "AddHostInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topologyInt), ::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(minTimeout), ::il2cpp_utils::ExtractType(maxTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, topologyInt, ip, port, minTimeout, maxTimeout);
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.GetMaxPacketSize
int UnityEngine::Networking::NetworkTransport::GetMaxPacketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::GetMaxPacketSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "GetMaxPacketSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.Connect
int UnityEngine::Networking::NetworkTransport::Connect(int hostId, ::StringW address, int port, int exeptionConnectionId, ByRef<uint8_t> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostId), ::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(exeptionConnectionId), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostId, address, port, exeptionConnectionId, byref(error));
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.Send
bool UnityEngine::Networking::NetworkTransport::Send(int hostId, int connectionId, int channelId, ::ArrayW<uint8_t> buffer, int size, ByRef<uint8_t> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostId), ::il2cpp_utils::ExtractType(connectionId), ::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostId, connectionId, channelId, buffer, size, byref(error));
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.SendWrapper
bool UnityEngine::Networking::NetworkTransport::SendWrapper(int hostId, int connectionId, int channelId, ByRef<::ArrayW<uint8_t>> buffer, int size, ByRef<uint8_t> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::SendWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "SendWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostId), ::il2cpp_utils::ExtractType(connectionId), ::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostId, connectionId, channelId, byref(buffer), size, byref(error));
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport.CheckTopology
void UnityEngine::Networking::NetworkTransport::CheckTopology(::UnityEngine::Networking::HostTopology* topology) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::CheckTopology");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", "CheckTopology", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topology)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, topology);
}
// Autogenerated method: UnityEngine.Networking.NetworkTransport..cctor
void UnityEngine::Networking::NetworkTransport::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::NetworkTransport::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "NetworkTransport", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.QosType
#include "UnityEngine/Networking/QosType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType Unreliable
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_Unreliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_Unreliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "Unreliable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType Unreliable
void UnityEngine::Networking::QosType::_set_Unreliable(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_Unreliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "Unreliable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType UnreliableFragmented
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_UnreliableFragmented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_UnreliableFragmented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "UnreliableFragmented"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType UnreliableFragmented
void UnityEngine::Networking::QosType::_set_UnreliableFragmented(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_UnreliableFragmented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "UnreliableFragmented", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType UnreliableSequenced
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_UnreliableSequenced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_UnreliableSequenced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "UnreliableSequenced"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType UnreliableSequenced
void UnityEngine::Networking::QosType::_set_UnreliableSequenced(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_UnreliableSequenced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "UnreliableSequenced", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType Reliable
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_Reliable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_Reliable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "Reliable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType Reliable
void UnityEngine::Networking::QosType::_set_Reliable(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_Reliable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "Reliable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType ReliableFragmented
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_ReliableFragmented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_ReliableFragmented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "ReliableFragmented"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType ReliableFragmented
void UnityEngine::Networking::QosType::_set_ReliableFragmented(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_ReliableFragmented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "ReliableFragmented", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType ReliableSequenced
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_ReliableSequenced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_ReliableSequenced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "ReliableSequenced"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType ReliableSequenced
void UnityEngine::Networking::QosType::_set_ReliableSequenced(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_ReliableSequenced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "ReliableSequenced", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType StateUpdate
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_StateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_StateUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "StateUpdate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType StateUpdate
void UnityEngine::Networking::QosType::_set_StateUpdate(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_StateUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "StateUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType ReliableStateUpdate
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_ReliableStateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_ReliableStateUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "ReliableStateUpdate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType ReliableStateUpdate
void UnityEngine::Networking::QosType::_set_ReliableStateUpdate(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_ReliableStateUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "ReliableStateUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType AllCostDelivery
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_AllCostDelivery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_AllCostDelivery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "AllCostDelivery"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType AllCostDelivery
void UnityEngine::Networking::QosType::_set_AllCostDelivery(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_AllCostDelivery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "AllCostDelivery", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType UnreliableFragmentedSequenced
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_UnreliableFragmentedSequenced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_UnreliableFragmentedSequenced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "UnreliableFragmentedSequenced"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType UnreliableFragmentedSequenced
void UnityEngine::Networking::QosType::_set_UnreliableFragmentedSequenced(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_UnreliableFragmentedSequenced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "UnreliableFragmentedSequenced", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.QosType ReliableFragmentedSequenced
::UnityEngine::Networking::QosType UnityEngine::Networking::QosType::_get_ReliableFragmentedSequenced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_get_ReliableFragmentedSequenced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::QosType>("UnityEngine.Networking", "QosType", "ReliableFragmentedSequenced"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.QosType ReliableFragmentedSequenced
void UnityEngine::Networking::QosType::_set_ReliableFragmentedSequenced(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::_set_ReliableFragmentedSequenced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "QosType", "ReliableFragmentedSequenced", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Networking::QosType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::QosType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.ConnectionAcksType
#include "UnityEngine/Networking/ConnectionAcksType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.ConnectionAcksType Acks32
::UnityEngine::Networking::ConnectionAcksType UnityEngine::Networking::ConnectionAcksType::_get_Acks32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionAcksType::_get_Acks32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::ConnectionAcksType>("UnityEngine.Networking", "ConnectionAcksType", "Acks32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.ConnectionAcksType Acks32
void UnityEngine::Networking::ConnectionAcksType::_set_Acks32(::UnityEngine::Networking::ConnectionAcksType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionAcksType::_set_Acks32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "ConnectionAcksType", "Acks32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.ConnectionAcksType Acks64
::UnityEngine::Networking::ConnectionAcksType UnityEngine::Networking::ConnectionAcksType::_get_Acks64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionAcksType::_get_Acks64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::ConnectionAcksType>("UnityEngine.Networking", "ConnectionAcksType", "Acks64"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.ConnectionAcksType Acks64
void UnityEngine::Networking::ConnectionAcksType::_set_Acks64(::UnityEngine::Networking::ConnectionAcksType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionAcksType::_set_Acks64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "ConnectionAcksType", "Acks64", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.ConnectionAcksType Acks96
::UnityEngine::Networking::ConnectionAcksType UnityEngine::Networking::ConnectionAcksType::_get_Acks96() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionAcksType::_get_Acks96");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::ConnectionAcksType>("UnityEngine.Networking", "ConnectionAcksType", "Acks96"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.ConnectionAcksType Acks96
void UnityEngine::Networking::ConnectionAcksType::_set_Acks96(::UnityEngine::Networking::ConnectionAcksType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionAcksType::_set_Acks96");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "ConnectionAcksType", "Acks96", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Networking.ConnectionAcksType Acks128
::UnityEngine::Networking::ConnectionAcksType UnityEngine::Networking::ConnectionAcksType::_get_Acks128() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionAcksType::_get_Acks128");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::ConnectionAcksType>("UnityEngine.Networking", "ConnectionAcksType", "Acks128"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Networking.ConnectionAcksType Acks128
void UnityEngine::Networking::ConnectionAcksType::_set_Acks128(::UnityEngine::Networking::ConnectionAcksType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionAcksType::_set_Acks128");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking", "ConnectionAcksType", "Acks128", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Networking::ConnectionAcksType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionAcksType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.ChannelQOS
#include "UnityEngine/Networking/ChannelQOS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Networking.QosType m_Type
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::QosType& UnityEngine::Networking::ChannelQOS::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ChannelQOS::dyn_m_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::QosType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_BelongsSharedOrderChannel
[[deprecated("Use field access instead!")]] bool& UnityEngine::Networking::ChannelQOS::dyn_m_BelongsSharedOrderChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ChannelQOS::dyn_m_BelongsSharedOrderChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BelongsSharedOrderChannel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.ChannelQOS.get_QOS
::UnityEngine::Networking::QosType UnityEngine::Networking::ChannelQOS::get_QOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ChannelQOS::get_QOS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QOS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::QosType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.ConnectionConfig
#include "UnityEngine/Networking/ConnectionConfig.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Networking.ChannelQOS
#include "UnityEngine/Networking/ChannelQOS.hpp"
// Including type: UnityEngine.Networking.QosType
#include "UnityEngine/Networking/QosType.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_PacketSize
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::Networking::ConnectionConfig::dyn_m_PacketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_PacketSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PacketSize"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_FragmentSize
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::Networking::ConnectionConfig::dyn_m_FragmentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_FragmentSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FragmentSize"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_ResendTimeout
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_ResendTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_ResendTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ResendTimeout"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_DisconnectTimeout
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_DisconnectTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_DisconnectTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DisconnectTimeout"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_ConnectTimeout
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_ConnectTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_ConnectTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConnectTimeout"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_MinUpdateTimeout
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_MinUpdateTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_MinUpdateTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinUpdateTimeout"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_PingTimeout
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_PingTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_PingTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PingTimeout"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_ReducedPingTimeout
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_ReducedPingTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_ReducedPingTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReducedPingTimeout"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_AllCostTimeout
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_AllCostTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_AllCostTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllCostTimeout"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_NetworkDropThreshold
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::Networking::ConnectionConfig::dyn_m_NetworkDropThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_NetworkDropThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NetworkDropThreshold"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_OverflowDropThreshold
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::Networking::ConnectionConfig::dyn_m_OverflowDropThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_OverflowDropThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverflowDropThreshold"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_MaxConnectionAttempt
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::Networking::ConnectionConfig::dyn_m_MaxConnectionAttempt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_MaxConnectionAttempt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxConnectionAttempt"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_AckDelay
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_AckDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_AckDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AckDelay"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_SendDelay
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_SendDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_SendDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SendDelay"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_MaxCombinedReliableMessageSize
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::Networking::ConnectionConfig::dyn_m_MaxCombinedReliableMessageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_MaxCombinedReliableMessageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxCombinedReliableMessageSize"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_MaxCombinedReliableMessageCount
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::Networking::ConnectionConfig::dyn_m_MaxCombinedReliableMessageCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_MaxCombinedReliableMessageCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxCombinedReliableMessageCount"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_MaxSentMessageQueueSize
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::Networking::ConnectionConfig::dyn_m_MaxSentMessageQueueSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_MaxSentMessageQueueSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxSentMessageQueueSize"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.ConnectionAcksType m_AcksType
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::ConnectionAcksType& UnityEngine::Networking::ConnectionConfig::dyn_m_AcksType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_AcksType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AcksType"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::ConnectionAcksType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UsePlatformSpecificProtocols
[[deprecated("Use field access instead!")]] bool& UnityEngine::Networking::ConnectionConfig::dyn_m_UsePlatformSpecificProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_UsePlatformSpecificProtocols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UsePlatformSpecificProtocols"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_InitialBandwidth
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_InitialBandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_InitialBandwidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitialBandwidth"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_BandwidthPeakFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::Networking::ConnectionConfig::dyn_m_BandwidthPeakFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_BandwidthPeakFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BandwidthPeakFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_WebSocketReceiveBufferMaxSize
[[deprecated("Use field access instead!")]] uint16_t& UnityEngine::Networking::ConnectionConfig::dyn_m_WebSocketReceiveBufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_WebSocketReceiveBufferMaxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WebSocketReceiveBufferMaxSize"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_UdpSocketReceiveBufferMaxSize
[[deprecated("Use field access instead!")]] uint& UnityEngine::Networking::ConnectionConfig::dyn_m_UdpSocketReceiveBufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_UdpSocketReceiveBufferMaxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UdpSocketReceiveBufferMaxSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_SSLCertFilePath
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Networking::ConnectionConfig::dyn_m_SSLCertFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_SSLCertFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SSLCertFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_SSLPrivateKeyFilePath
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Networking::ConnectionConfig::dyn_m_SSLPrivateKeyFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_SSLPrivateKeyFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SSLPrivateKeyFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_SSLCAFilePath
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Networking::ConnectionConfig::dyn_m_SSLCAFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_SSLCAFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SSLCAFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<UnityEngine.Networking.ChannelQOS> m_Channels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Networking::ChannelQOS*>*& UnityEngine::Networking::ConnectionConfig::dyn_m_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_Channels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Channels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Networking::ChannelQOS*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Byte>> m_SharedOrderChannels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<uint8_t>*>*& UnityEngine::Networking::ConnectionConfig::dyn_m_SharedOrderChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::dyn_m_SharedOrderChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SharedOrderChannels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.Validate
void UnityEngine::Networking::ConnectionConfig::Validate(::UnityEngine::Networking::ConnectionConfig* config) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking", "ConnectionConfig", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, config);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_PacketSize
uint16_t UnityEngine::Networking::ConnectionConfig::get_PacketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_PacketSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PacketSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_FragmentSize
uint16_t UnityEngine::Networking::ConnectionConfig::get_FragmentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_FragmentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FragmentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_ResendTimeout
uint UnityEngine::Networking::ConnectionConfig::get_ResendTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_ResendTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResendTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_DisconnectTimeout
uint UnityEngine::Networking::ConnectionConfig::get_DisconnectTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_DisconnectTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisconnectTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_ConnectTimeout
uint UnityEngine::Networking::ConnectionConfig::get_ConnectTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_ConnectTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_MinUpdateTimeout
uint UnityEngine::Networking::ConnectionConfig::get_MinUpdateTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_MinUpdateTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinUpdateTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_PingTimeout
uint UnityEngine::Networking::ConnectionConfig::get_PingTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_PingTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PingTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_ReducedPingTimeout
uint UnityEngine::Networking::ConnectionConfig::get_ReducedPingTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_ReducedPingTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReducedPingTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_AllCostTimeout
uint UnityEngine::Networking::ConnectionConfig::get_AllCostTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_AllCostTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllCostTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_NetworkDropThreshold
uint8_t UnityEngine::Networking::ConnectionConfig::get_NetworkDropThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_NetworkDropThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NetworkDropThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_OverflowDropThreshold
uint8_t UnityEngine::Networking::ConnectionConfig::get_OverflowDropThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_OverflowDropThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OverflowDropThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_MaxConnectionAttempt
uint8_t UnityEngine::Networking::ConnectionConfig::get_MaxConnectionAttempt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_MaxConnectionAttempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxConnectionAttempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_AckDelay
uint UnityEngine::Networking::ConnectionConfig::get_AckDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_AckDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AckDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_SendDelay
uint UnityEngine::Networking::ConnectionConfig::get_SendDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_SendDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_MaxCombinedReliableMessageSize
uint16_t UnityEngine::Networking::ConnectionConfig::get_MaxCombinedReliableMessageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_MaxCombinedReliableMessageSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxCombinedReliableMessageSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_MaxCombinedReliableMessageCount
uint16_t UnityEngine::Networking::ConnectionConfig::get_MaxCombinedReliableMessageCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_MaxCombinedReliableMessageCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxCombinedReliableMessageCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_MaxSentMessageQueueSize
uint16_t UnityEngine::Networking::ConnectionConfig::get_MaxSentMessageQueueSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_MaxSentMessageQueueSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSentMessageQueueSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_AcksType
::UnityEngine::Networking::ConnectionAcksType UnityEngine::Networking::ConnectionConfig::get_AcksType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_AcksType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AcksType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::ConnectionAcksType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_UsePlatformSpecificProtocols
bool UnityEngine::Networking::ConnectionConfig::get_UsePlatformSpecificProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_UsePlatformSpecificProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UsePlatformSpecificProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_InitialBandwidth
uint UnityEngine::Networking::ConnectionConfig::get_InitialBandwidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_InitialBandwidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InitialBandwidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_BandwidthPeakFactor
float UnityEngine::Networking::ConnectionConfig::get_BandwidthPeakFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_BandwidthPeakFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BandwidthPeakFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_WebSocketReceiveBufferMaxSize
uint16_t UnityEngine::Networking::ConnectionConfig::get_WebSocketReceiveBufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_WebSocketReceiveBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WebSocketReceiveBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_UdpSocketReceiveBufferMaxSize
uint UnityEngine::Networking::ConnectionConfig::get_UdpSocketReceiveBufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_UdpSocketReceiveBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UdpSocketReceiveBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_SSLCertFilePath
::StringW UnityEngine::Networking::ConnectionConfig::get_SSLCertFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_SSLCertFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SSLCertFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_SSLPrivateKeyFilePath
::StringW UnityEngine::Networking::ConnectionConfig::get_SSLPrivateKeyFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_SSLPrivateKeyFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SSLPrivateKeyFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_SSLCAFilePath
::StringW UnityEngine::Networking::ConnectionConfig::get_SSLCAFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_SSLCAFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SSLCAFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_ChannelCount
int UnityEngine::Networking::ConnectionConfig::get_ChannelCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_ChannelCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChannelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.get_SharedOrderChannelCount
int UnityEngine::Networking::ConnectionConfig::get_SharedOrderChannelCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::get_SharedOrderChannelCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SharedOrderChannelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.AddChannel
uint8_t UnityEngine::Networking::ConnectionConfig::AddChannel(::UnityEngine::Networking::QosType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::AddChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.GetChannel
::UnityEngine::Networking::QosType UnityEngine::Networking::ConnectionConfig::GetChannel(uint8_t idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::GetChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::QosType, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Networking.ConnectionConfig.GetSharedOrderChannels
::System::Collections::Generic::IList_1<uint8_t>* UnityEngine::Networking::ConnectionConfig::GetSharedOrderChannels(uint8_t idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ConnectionConfig::GetSharedOrderChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedOrderChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<uint8_t>*, false>(this, ___internal__method, idx);
}
