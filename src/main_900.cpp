// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_TextureBaker
#include "GlobalNamespace/MB3_TextureBaker.hpp"
// Including type: MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess
#include "GlobalNamespace/MB3_TextureBaker_OnCombinedTexturesCoroutineSuccess.hpp"
// Including type: MB3_TextureBaker/OnCombinedTexturesCoroutineFail
#include "GlobalNamespace/MB3_TextureBaker_OnCombinedTexturesCoroutineFail.hpp"
// Including type: MB3_TextureBaker/CreateAtlasesCoroutineResult
#include "GlobalNamespace/MB3_TextureBaker_CreateAtlasesCoroutineResult.hpp"
// Including type: MB3_TextureBaker/<CreateAtlasesCoroutine>d__94
#include "GlobalNamespace/MB3_TextureBaker_-CreateAtlasesCoroutine-d__94.hpp"
// Including type: MB2_TextureBakeResults
#include "GlobalNamespace/MB2_TextureBakeResults.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: DigitalOpus.MB.Core.ShaderTextureProperty
#include "DigitalOpus/MB/Core/ShaderTextureProperty.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: MB_MultiMaterial
#include "GlobalNamespace/MB_MultiMaterial.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MB_AtlasesAndRects
#include "GlobalNamespace/MB_AtlasesAndRects.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner
#include "DigitalOpus/MB/Core/MB3_TextureCombiner.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_LogLevel& GlobalNamespace::MB3_TextureBaker::dyn_LOG_LEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_LOG_LEVEL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOG_LEVEL"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_LogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected MB2_TextureBakeResults _textureBakeResults
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB2_TextureBakeResults*& GlobalNamespace::MB3_TextureBaker::dyn__textureBakeResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__textureBakeResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textureBakeResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB2_TextureBakeResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _atlasPadding
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__atlasPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__atlasPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_atlasPadding"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxAtlasSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAtlasSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _useMaxAtlasWidthOverride
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__useMaxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__useMaxAtlasWidthOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useMaxAtlasWidthOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxAtlasWidthOverride
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasWidthOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAtlasWidthOverride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _useMaxAtlasHeightOverride
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__useMaxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__useMaxAtlasHeightOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useMaxAtlasHeightOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxAtlasHeightOverride
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__maxAtlasHeightOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAtlasHeightOverride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _resizePowerOfTwoTextures
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__resizePowerOfTwoTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__resizePowerOfTwoTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resizePowerOfTwoTextures"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _fixOutOfBoundsUVs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__fixOutOfBoundsUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__fixOutOfBoundsUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixOutOfBoundsUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _maxTilingBakeSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::dyn__maxTilingBakeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__maxTilingBakeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxTilingBakeSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected DigitalOpus.MB.Core.MB2_PackingAlgorithmEnum _packingAlgorithm
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum& GlobalNamespace::MB3_TextureBaker::dyn__packingAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__packingAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packingAlgorithm"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _meshBakerTexturePackerForcePowerOfTwo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__meshBakerTexturePackerForcePowerOfTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__meshBakerTexturePackerForcePowerOfTwo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshBakerTexturePackerForcePowerOfTwo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<DigitalOpus.MB.Core.ShaderTextureProperty> _customShaderProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>*& GlobalNamespace::MB3_TextureBaker::dyn__customShaderProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__customShaderProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customShaderProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.String> _customShaderPropNames_Depricated
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::MB3_TextureBaker::dyn__customShaderPropNames_Depricated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__customShaderPropNames_Depricated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customShaderPropNames_Depricated"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doMultiMaterial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doMultiMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doMultiMaterialSplitAtlasesIfTooBig
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterialSplitAtlasesIfTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterialSplitAtlasesIfTooBig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doMultiMaterialSplitAtlasesIfTooBig"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doMultiMaterialSplitAtlasesIfOBUVs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterialSplitAtlasesIfOBUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__doMultiMaterialSplitAtlasesIfOBUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doMultiMaterialSplitAtlasesIfOBUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material _resultMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::MB3_TextureBaker::dyn__resultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__resultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _considerNonTextureProperties
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__considerNonTextureProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__considerNonTextureProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_considerNonTextureProperties"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _doSuggestTreatment
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::dyn__doSuggestTreatment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__doSuggestTreatment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doSuggestTreatment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MB3_TextureBaker/CreateAtlasesCoroutineResult _coroutineResult
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_TextureBaker::dyn__coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn__coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coroutineResult"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_MultiMaterial[] resultMaterials
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_MultiMaterial*>& GlobalNamespace::MB3_TextureBaker::dyn_resultMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_resultMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_MultiMaterial*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> objsToMesh
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::MB3_TextureBaker::dyn_objsToMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_objsToMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objsToMesh"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess onBuiltAtlasesSuccess
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess*& GlobalNamespace::MB3_TextureBaker::dyn_onBuiltAtlasesSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_onBuiltAtlasesSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onBuiltAtlasesSuccess"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_TextureBaker/OnCombinedTexturesCoroutineFail onBuiltAtlasesFail
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail*& GlobalNamespace::MB3_TextureBaker::dyn_onBuiltAtlasesFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_onBuiltAtlasesFail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onBuiltAtlasesFail"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB_AtlasesAndRects[] OnCombinedTexturesCoroutineAtlasesAndRects
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>& GlobalNamespace::MB3_TextureBaker::dyn_OnCombinedTexturesCoroutineAtlasesAndRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::dyn_OnCombinedTexturesCoroutineAtlasesAndRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnCombinedTexturesCoroutineAtlasesAndRects"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_TextureBaker.get_atlasPadding
int GlobalNamespace::MB3_TextureBaker::get_atlasPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_atlasPadding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_atlasPadding
void GlobalNamespace::MB3_TextureBaker::set_atlasPadding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_atlasPadding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_maxAtlasSize
int GlobalNamespace::MB3_TextureBaker::get_maxAtlasSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_maxAtlasSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_maxAtlasSize
void GlobalNamespace::MB3_TextureBaker::set_maxAtlasSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_maxAtlasSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_useMaxAtlasWidthOverride
bool GlobalNamespace::MB3_TextureBaker::get_useMaxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_useMaxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_useMaxAtlasWidthOverride
void GlobalNamespace::MB3_TextureBaker::set_useMaxAtlasWidthOverride(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_useMaxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_maxAtlasWidthOverride
int GlobalNamespace::MB3_TextureBaker::get_maxAtlasWidthOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_maxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_maxAtlasWidthOverride
void GlobalNamespace::MB3_TextureBaker::set_maxAtlasWidthOverride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_maxAtlasWidthOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_useMaxAtlasHeightOverride
bool GlobalNamespace::MB3_TextureBaker::get_useMaxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_useMaxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_useMaxAtlasHeightOverride
void GlobalNamespace::MB3_TextureBaker::set_useMaxAtlasHeightOverride(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_useMaxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_maxAtlasHeightOverride
int GlobalNamespace::MB3_TextureBaker::get_maxAtlasHeightOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_maxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_maxAtlasHeightOverride
void GlobalNamespace::MB3_TextureBaker::set_maxAtlasHeightOverride(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_maxAtlasHeightOverride");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_resizePowerOfTwoTextures
bool GlobalNamespace::MB3_TextureBaker::get_resizePowerOfTwoTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_resizePowerOfTwoTextures");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_resizePowerOfTwoTextures
void GlobalNamespace::MB3_TextureBaker::set_resizePowerOfTwoTextures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_resizePowerOfTwoTextures");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_fixOutOfBoundsUVs
bool GlobalNamespace::MB3_TextureBaker::get_fixOutOfBoundsUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_fixOutOfBoundsUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_fixOutOfBoundsUVs
void GlobalNamespace::MB3_TextureBaker::set_fixOutOfBoundsUVs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_fixOutOfBoundsUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_maxTilingBakeSize
int GlobalNamespace::MB3_TextureBaker::get_maxTilingBakeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_maxTilingBakeSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 23));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_maxTilingBakeSize
void GlobalNamespace::MB3_TextureBaker::set_maxTilingBakeSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_maxTilingBakeSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_packingAlgorithm
::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum GlobalNamespace::MB3_TextureBaker::get_packingAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_packingAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_packingAlgorithm
void GlobalNamespace::MB3_TextureBaker::set_packingAlgorithm(::DigitalOpus::MB::Core::MB2_PackingAlgorithmEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_packingAlgorithm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_meshBakerTexturePackerForcePowerOfTwo
bool GlobalNamespace::MB3_TextureBaker::get_meshBakerTexturePackerForcePowerOfTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_meshBakerTexturePackerForcePowerOfTwo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshBakerTexturePackerForcePowerOfTwo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_meshBakerTexturePackerForcePowerOfTwo
void GlobalNamespace::MB3_TextureBaker::set_meshBakerTexturePackerForcePowerOfTwo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_meshBakerTexturePackerForcePowerOfTwo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_meshBakerTexturePackerForcePowerOfTwo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_customShaderProperties
::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>* GlobalNamespace::MB3_TextureBaker::get_customShaderProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_customShaderProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_customShaderProperties
void GlobalNamespace::MB3_TextureBaker::set_customShaderProperties(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_customShaderProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_customShaderPropNames
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::MB3_TextureBaker::get_customShaderPropNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_customShaderPropNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 29));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_customShaderPropNames
void GlobalNamespace::MB3_TextureBaker::set_customShaderPropNames(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_customShaderPropNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_doMultiMaterial
bool GlobalNamespace::MB3_TextureBaker::get_doMultiMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_doMultiMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_doMultiMaterial
void GlobalNamespace::MB3_TextureBaker::set_doMultiMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_doMultiMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_doMultiMaterialSplitAtlasesIfTooBig
bool GlobalNamespace::MB3_TextureBaker::get_doMultiMaterialSplitAtlasesIfTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_doMultiMaterialSplitAtlasesIfTooBig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_doMultiMaterialSplitAtlasesIfTooBig
void GlobalNamespace::MB3_TextureBaker::set_doMultiMaterialSplitAtlasesIfTooBig(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_doMultiMaterialSplitAtlasesIfTooBig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_doMultiMaterialSplitAtlasesIfOBUVs
bool GlobalNamespace::MB3_TextureBaker::get_doMultiMaterialSplitAtlasesIfOBUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_doMultiMaterialSplitAtlasesIfOBUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_doMultiMaterialSplitAtlasesIfOBUVs
void GlobalNamespace::MB3_TextureBaker::set_doMultiMaterialSplitAtlasesIfOBUVs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_doMultiMaterialSplitAtlasesIfOBUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_resultMaterial
::UnityEngine::Material* GlobalNamespace::MB3_TextureBaker::get_resultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_resultMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_resultMaterial
void GlobalNamespace::MB3_TextureBaker::set_resultMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_resultMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_considerNonTextureProperties
bool GlobalNamespace::MB3_TextureBaker::get_considerNonTextureProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_considerNonTextureProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_considerNonTextureProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_considerNonTextureProperties
void GlobalNamespace::MB3_TextureBaker::set_considerNonTextureProperties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_considerNonTextureProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_considerNonTextureProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_doSuggestTreatment
bool GlobalNamespace::MB3_TextureBaker::get_doSuggestTreatment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_doSuggestTreatment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_doSuggestTreatment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_doSuggestTreatment
void GlobalNamespace::MB3_TextureBaker::set_doSuggestTreatment(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_doSuggestTreatment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_doSuggestTreatment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.get_CoroutineResult
::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult* GlobalNamespace::MB3_TextureBaker::get_CoroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_CoroutineResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CoroutineResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.CreateAtlases
::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*> GlobalNamespace::MB3_TextureBaker::CreateAtlases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::CreateAtlases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAtlases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.CreateAtlasesCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutine(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, ::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult* coroutineResult, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, float maxTimePerFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAtlasesCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(coroutineResult), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods), ::il2cpp_utils::ExtractType(maxTimePerFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, progressInfo, coroutineResult, saveAtlasesAsAssets, editorMethods, maxTimePerFrame);
}
// Autogenerated method: MB3_TextureBaker.CreateAtlases
::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*> GlobalNamespace::MB3_TextureBaker::CreateAtlases(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, bool saveAtlasesAsAssets, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::CreateAtlases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAtlases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progressInfo), ::il2cpp_utils::ExtractType(saveAtlasesAsAssets), ::il2cpp_utils::ExtractType(editorMethods)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>, false>(this, ___internal__method, progressInfo, saveAtlasesAsAssets, editorMethods);
}
// Autogenerated method: MB3_TextureBaker.unpackMat2RectMap
void GlobalNamespace::MB3_TextureBaker::unpackMat2RectMap(::GlobalNamespace::MB2_TextureBakeResults* tbr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::unpackMat2RectMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "unpackMat2RectMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tbr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tbr);
}
// Autogenerated method: MB3_TextureBaker.CreateAndConfigureTextureCombiner
::DigitalOpus::MB::Core::MB3_TextureCombiner* GlobalNamespace::MB3_TextureBaker::CreateAndConfigureTextureCombiner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::CreateAndConfigureTextureCombiner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndConfigureTextureCombiner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::MB3_TextureCombiner*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.ConfigureNewMaterialToMatchOld
void GlobalNamespace::MB3_TextureBaker::ConfigureNewMaterialToMatchOld(::UnityEngine::Material* newMat, ::UnityEngine::Material* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::ConfigureNewMaterialToMatchOld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MB3_TextureBaker", "ConfigureNewMaterialToMatchOld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newMat), ::il2cpp_utils::ExtractType(original)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newMat, original);
}
// Autogenerated method: MB3_TextureBaker.PrintSet
::StringW GlobalNamespace::MB3_TextureBaker::PrintSet(::System::Collections::Generic::HashSet_1<::UnityEngine::Material*>* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::PrintSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrintSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s);
}
// Autogenerated method: MB3_TextureBaker._ValidateResultMaterials
bool GlobalNamespace::MB3_TextureBaker::_ValidateResultMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::_ValidateResultMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_ValidateResultMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.get_textureBakeResults
::GlobalNamespace::MB2_TextureBakeResults* GlobalNamespace::MB3_TextureBaker::get_textureBakeResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::get_textureBakeResults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MB2_TextureBakeResults*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker.set_textureBakeResults
void GlobalNamespace::MB3_TextureBaker::set_textureBakeResults(::GlobalNamespace::MB2_TextureBakeResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::set_textureBakeResults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MB3_TextureBaker.GetObjectsToCombine
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GlobalNamespace::MB3_TextureBaker::GetObjectsToCombine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::GetObjectsToCombine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_MeshBakerRoot*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess
#include "GlobalNamespace/MB3_TextureBaker_OnCombinedTexturesCoroutineSuccess.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess.Invoke
void GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess.BeginInvoke
::System::IAsyncResult* GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineSuccess.EndInvoke
void GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineSuccess*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_TextureBaker/OnCombinedTexturesCoroutineFail
#include "GlobalNamespace/MB3_TextureBaker_OnCombinedTexturesCoroutineFail.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineFail.Invoke
void GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineFail.BeginInvoke
::System::IAsyncResult* GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: MB3_TextureBaker/OnCombinedTexturesCoroutineFail.EndInvoke
void GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::OnCombinedTexturesCoroutineFail*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MB3_TextureBaker/CreateAtlasesCoroutineResult
#include "GlobalNamespace/MB3_TextureBaker_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean success
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult::dyn_success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult::dyn_success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "success"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isFinished
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult::dyn_isFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult::dyn_isFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFinished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MB3_TextureBaker/<CreateAtlasesCoroutine>d__94
#include "GlobalNamespace/MB3_TextureBaker_-CreateAtlasesCoroutine-d__94.hpp"
// Including type: DigitalOpus.MB.Core.ProgressUpdateDelegate
#include "DigitalOpus/MB/Core/ProgressUpdateDelegate.hpp"
// Including type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
#include "DigitalOpus/MB/Core/MB2_EditorMethodsInterface.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner
#include "DigitalOpus/MB/Core/MB3_TextureCombiner.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombiner/CombineTexturesIntoAtlasesCoroutineResult
#include "DigitalOpus/MB/Core/MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult.hpp"
// Including type: MB3_TextureBaker/CreateAtlasesCoroutineResult
#include "GlobalNamespace/MB3_TextureBaker_CreateAtlasesCoroutineResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_TextureBaker/CreateAtlasesCoroutineResult coroutineResult
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_coroutineResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_coroutineResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutineResult"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker::CreateAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MB3_TextureBaker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MB3_TextureBaker*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MB3_TextureBaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTimePerFrame
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_maxTimePerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_maxTimePerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTimePerFrame"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveAtlasesAsAssets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_saveAtlasesAsAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_saveAtlasesAsAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveAtlasesAsAssets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::ProgressUpdateDelegate*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_progressInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_progressInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressInfo"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::ProgressUpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_editorMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_editorMethods");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorMethods"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB2_EditorMethodsInterface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DigitalOpus.MB.Core.MB3_TextureCombiner <combiner>5__2
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$combiner$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$combiner$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<combiner>5__2"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$i$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$i$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DigitalOpus.MB.Core.MB3_TextureCombiner/CombineTexturesIntoAtlasesCoroutineResult <coroutineResult2>5__4
[[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult*& GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$coroutineResult2$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::dyn_$coroutineResult2$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<coroutineResult2>5__4"))->offset;
  return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MB3_TextureBaker/<CreateAtlasesCoroutine>d__94.System.IDisposable.Dispose
void GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<CreateAtlasesCoroutine>d__94.MoveNext
bool GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<CreateAtlasesCoroutine>d__94.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<CreateAtlasesCoroutine>d__94.System.Collections.IEnumerator.Reset
void GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MB3_TextureBaker/<CreateAtlasesCoroutine>d__94.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::MB3_TextureBaker::$CreateAtlasesCoroutine$d__94*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: hitDummy
#include "GlobalNamespace/hitDummy.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator DummyAnimator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& GlobalNamespace::hitDummy::dyn_DummyAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::hitDummy::dyn_DummyAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DummyAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject hay
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::hitDummy::dyn_hay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::hitDummy::dyn_hay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hay"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: hitDummy.Start
void GlobalNamespace::hitDummy::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::hitDummy::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: hitDummy.OnMouseDown
void GlobalNamespace::hitDummy::OnMouseDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::hitDummy::OnMouseDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMouseDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandStateExample
#include "GlobalNamespace/HandStateExample.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animator animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& GlobalNamespace::HandStateExample::dyn_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean thumbUp
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HandStateExample::dyn_thumbUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_thumbUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thumbUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fingerPointing
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HandStateExample::dyn_fingerPointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_fingerPointing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerPointing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean gripping
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HandStateExample::dyn_gripping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_gripping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gripping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single scaleSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_scaleSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_scaleSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scaleSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single TClosed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_TClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_TClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TClosed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single IClosed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_IClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_IClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IClosed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single MClosed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_MClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_MClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MClosed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single RClosed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_RClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_RClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RClosed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single PClosed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_PClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_PClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PClosed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single TOpen
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_TOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_TOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TOpen"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single IOpen
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_IOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_IOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IOpen"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single MOpen
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_MOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_MOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MOpen"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single ROpen
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_ROpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_ROpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ROpen"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single POpen
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_POpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_POpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "POpen"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single tDelta
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_tDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_tDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single iDelta
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_iDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_iDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single mDelta
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_mDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_mDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rDelta
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_rDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_rDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single pDelta
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_pDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_pDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single indexPosition
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_indexPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_indexPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indexPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single thumbPosition
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HandStateExample::dyn_thumbPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::dyn_thumbPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thumbPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandStateExample.Start
void GlobalNamespace::HandStateExample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandStateExample.OnEnable
void GlobalNamespace::HandStateExample::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandStateExample.OnDisable
void GlobalNamespace::HandStateExample::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandStateExample.FixedUpdate
void GlobalNamespace::HandStateExample::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandStateExample.HandStateManager
void GlobalNamespace::HandStateExample::HandStateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandStateExample::HandStateManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandStateManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SKManager
#include "GlobalNamespace/SKManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single breasts
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_breasts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_breasts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "breasts"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chest
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_chest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chest"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hips
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_hips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_hips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hips"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single neck
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_neck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_neck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neck"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single shoulders
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_shoulders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_shoulders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shoulders"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single waist
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_waist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_waist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single forehead
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_forehead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_forehead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forehead"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cheekBones
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_cheekBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_cheekBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cheekBones"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cheeks
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_cheeks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_cheeks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cheeks"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chin
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_chin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_chin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single faceDepth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_faceDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_faceDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "faceDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject noseParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SKManager::dyn_noseParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_noseParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noseParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minNoseOffsetZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_minNoseOffsetZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_minNoseOffsetZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minNoseOffsetZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxNoseOffsetZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_maxNoseOffsetZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_maxNoseOffsetZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNoseOffsetZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single curNoseOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SKManager::dyn_curNoseOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_curNoseOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curNoseOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer[] bodyObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::SkinnedMeshRenderer*>& GlobalNamespace::SKManager::dyn_bodyObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_bodyObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::SkinnedMeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer[] headObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::SkinnedMeshRenderer*>& GlobalNamespace::SKManager::dyn_headObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_headObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::SkinnedMeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer[] hairObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::SkinnedMeshRenderer*>& GlobalNamespace::SKManager::dyn_hairObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::dyn_hairObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hairObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::SkinnedMeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SKManager.Start
void GlobalNamespace::SKManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SKManager.OnValidate
void GlobalNamespace::SKManager::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SKManager.SetShapeKeys
void GlobalNamespace::SKManager::SetShapeKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::SetShapeKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShapeKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SKManager.UpdateBodyShapeKeys
void GlobalNamespace::SKManager::UpdateBodyShapeKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::UpdateBodyShapeKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBodyShapeKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SKManager.UpdateHeadShapeKeys
void GlobalNamespace::SKManager::UpdateHeadShapeKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SKManager::UpdateHeadShapeKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHeadShapeKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MysticLightFlicker
#include "GlobalNamespace/MysticLightFlicker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String waveFunction
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MysticLightFlicker::dyn_waveFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MysticLightFlicker::dyn_waveFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waveFunction"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MysticLightFlicker::dyn_startValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MysticLightFlicker::dyn_startValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single amplitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MysticLightFlicker::dyn_amplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MysticLightFlicker::dyn_amplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single phase
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MysticLightFlicker::dyn_phase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MysticLightFlicker::dyn_phase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "phase"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single frequency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MysticLightFlicker::dyn_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MysticLightFlicker::dyn_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color originalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MysticLightFlicker::dyn_originalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MysticLightFlicker::dyn_originalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MysticLightFlicker.Start
void GlobalNamespace::MysticLightFlicker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MysticLightFlicker::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MysticLightFlicker.Update
void GlobalNamespace::MysticLightFlicker::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MysticLightFlicker::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MysticLightFlicker.EvalWave
float GlobalNamespace::MysticLightFlicker::EvalWave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MysticLightFlicker::EvalWave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvalWave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InspectorNoteAttribute
#include "GlobalNamespace/InspectorNoteAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String header
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InspectorNoteAttribute::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorNoteAttribute::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InspectorNoteAttribute::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorNoteAttribute::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InspectorCommentAttribute
#include "GlobalNamespace/InspectorCommentAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InspectorCommentAttribute::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorCommentAttribute::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarTestDriver
#include "GlobalNamespace/OvrAvatarTestDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 headPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OvrAvatarTestDriver::dyn_headPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTestDriver::dyn_headPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion headRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OvrAvatarTestDriver::dyn_headRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTestDriver::dyn_headRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single voiceAmplitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OvrAvatarTestDriver::dyn_voiceAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTestDriver::dyn_voiceAmplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarTestDriver.GetMalibuControllerPose
::GlobalNamespace::OvrAvatarDriver::ControllerPose GlobalNamespace::OvrAvatarTestDriver::GetMalibuControllerPose(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTestDriver::GetMalibuControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMalibuControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::ControllerPose, false>(this, ___internal__method, controller);
}
// Autogenerated method: OvrAvatarTestDriver.GetControllerPose
::GlobalNamespace::OvrAvatarDriver::ControllerPose GlobalNamespace::OvrAvatarTestDriver::GetControllerPose(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTestDriver::GetControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::ControllerPose, false>(this, ___internal__method, controller);
}
// Autogenerated method: OvrAvatarTestDriver.CalculateCurrentPose
void GlobalNamespace::OvrAvatarTestDriver::CalculateCurrentPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTestDriver::CalculateCurrentPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCurrentPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarTestDriver.UpdateTransforms
void GlobalNamespace::OvrAvatarTestDriver::UpdateTransforms(::System::IntPtr sdkAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTestDriver::UpdateTransforms");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarDriver*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sdkAvatar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoseEditHelper
#include "GlobalNamespace/PoseEditHelper.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform poseRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PoseEditHelper::dyn_poseRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseEditHelper::dyn_poseRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poseRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoseEditHelper.OnDrawGizmos
void GlobalNamespace::PoseEditHelper::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseEditHelper::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PoseEditHelper.DrawJoints
void GlobalNamespace::PoseEditHelper::DrawJoints(::UnityEngine::Transform* joint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseEditHelper::DrawJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, joint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GazeTargetSpawner
#include "GlobalNamespace/GazeTargetSpawner.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject GazeTargetPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GazeTargetSpawner::dyn_GazeTargetPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTargetSpawner::dyn_GazeTargetPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GazeTargetPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NumberOfDummyTargets
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GazeTargetSpawner::dyn_NumberOfDummyTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTargetSpawner::dyn_NumberOfDummyTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfDummyTargets"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 RadiusMultiplier
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GazeTargetSpawner::dyn_RadiusMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTargetSpawner::dyn_RadiusMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RadiusMultiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isVisible
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GazeTargetSpawner::dyn_isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTargetSpawner::dyn_isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GazeTargetSpawner.get_IsVisible
bool GlobalNamespace::GazeTargetSpawner::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTargetSpawner::get_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GazeTargetSpawner.set_IsVisible
void GlobalNamespace::GazeTargetSpawner::set_IsVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTargetSpawner::set_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GazeTargetSpawner.Start
void GlobalNamespace::GazeTargetSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTargetSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GazeTargetSpawner.OnValidate
void GlobalNamespace::GazeTargetSpawner::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTargetSpawner::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RemoteLoopbackManager
#include "GlobalNamespace/RemoteLoopbackManager.hpp"
// Including type: RemoteLoopbackManager/PacketLatencyPair
#include "GlobalNamespace/RemoteLoopbackManager_PacketLatencyPair.hpp"
// Including type: RemoteLoopbackManager/SimulatedLatencySettings
#include "GlobalNamespace/RemoteLoopbackManager_SimulatedLatencySettings.hpp"
// Including type: OvrAvatar/PacketEventArgs
#include "GlobalNamespace/OvrAvatar_PacketEventArgs.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OvrAvatar LocalAvatar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatar*& GlobalNamespace::RemoteLoopbackManager::dyn_LocalAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::dyn_LocalAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalAvatar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatar LoopbackAvatar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatar*& GlobalNamespace::RemoteLoopbackManager::dyn_LoopbackAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::dyn_LoopbackAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoopbackAvatar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RemoteLoopbackManager/SimulatedLatencySettings LatencySettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings*& GlobalNamespace::RemoteLoopbackManager::dyn_LatencySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::dyn_LatencySettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LatencySettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 PacketSequence
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RemoteLoopbackManager::dyn_PacketSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::dyn_PacketSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PacketSequence"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.LinkedList`1<RemoteLoopbackManager/PacketLatencyPair> packetQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::LinkedList_1<::GlobalNamespace::RemoteLoopbackManager::PacketLatencyPair*>*& GlobalNamespace::RemoteLoopbackManager::dyn_packetQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::dyn_packetQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::LinkedList_1<::GlobalNamespace::RemoteLoopbackManager::PacketLatencyPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RemoteLoopbackManager.Start
void GlobalNamespace::RemoteLoopbackManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RemoteLoopbackManager.OnLocalAvatarPacketRecorded
void GlobalNamespace::RemoteLoopbackManager::OnLocalAvatarPacketRecorded(::Il2CppObject* sender, ::GlobalNamespace::OvrAvatar::PacketEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::OnLocalAvatarPacketRecorded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalAvatarPacketRecorded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, args);
}
// Autogenerated method: RemoteLoopbackManager.Update
void GlobalNamespace::RemoteLoopbackManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RemoteLoopbackManager.SendPacketData
void GlobalNamespace::RemoteLoopbackManager::SendPacketData(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::SendPacketData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPacketData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: RemoteLoopbackManager.ReceivePacketData
void GlobalNamespace::RemoteLoopbackManager::ReceivePacketData(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::ReceivePacketData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivePacketData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RemoteLoopbackManager/PacketLatencyPair
#include "GlobalNamespace/RemoteLoopbackManager_PacketLatencyPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] PacketData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::RemoteLoopbackManager::PacketLatencyPair::dyn_PacketData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::PacketLatencyPair::dyn_PacketData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PacketData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FakeLatency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RemoteLoopbackManager::PacketLatencyPair::dyn_FakeLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::PacketLatencyPair::dyn_FakeLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FakeLatency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RemoteLoopbackManager/SimulatedLatencySettings
#include "GlobalNamespace/RemoteLoopbackManager_SimulatedLatencySettings.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single FakeLatencyMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_FakeLatencyMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_FakeLatencyMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FakeLatencyMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single FakeLatencyMin
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_FakeLatencyMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_FakeLatencyMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FakeLatencyMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LatencyWeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_LatencyWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_LatencyWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LatencyWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxSamples
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_MaxSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_MaxSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxSamples"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single AverageWindow
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_AverageWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_AverageWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AverageWindow"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single LatencySum
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_LatencySum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_LatencySum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LatencySum"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.LinkedList`1<System.Single> LatencyValues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::LinkedList_1<float>*& GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_LatencyValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::dyn_LatencyValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LatencyValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::LinkedList_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RemoteLoopbackManager/SimulatedLatencySettings.NextValue
float GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::NextValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteLoopbackManager::SimulatedLatencySettings::NextValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: P2PManager
#include "GlobalNamespace/P2PManager.hpp"
// Including type: P2PManager/MessageType
#include "GlobalNamespace/P2PManager_MessageType.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RemotePlayer
#include "GlobalNamespace/RemotePlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: P2PManager.ConnectTo
void GlobalNamespace::P2PManager::ConnectTo(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::ConnectTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: P2PManager.Disconnect
void GlobalNamespace::P2PManager::Disconnect(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: P2PManager.PeerConnectRequestCallback
void GlobalNamespace::P2PManager::PeerConnectRequestCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::PeerConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeerConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: P2PManager.ConnectionStateChangedCallback
void GlobalNamespace::P2PManager::ConnectionStateChangedCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::ConnectionStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: P2PManager.SendAvatarUpdate
void GlobalNamespace::P2PManager::SendAvatarUpdate(uint64_t userID, ::UnityEngine::Transform* rootTransform, uint sequence, ::ArrayW<uint8_t> avatarPacket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::SendAvatarUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAvatarUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(rootTransform), ::il2cpp_utils::ExtractType(sequence), ::il2cpp_utils::ExtractType(avatarPacket)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID, rootTransform, sequence, avatarPacket);
}
// Autogenerated method: P2PManager.GetRemotePackets
void GlobalNamespace::P2PManager::GetRemotePackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::GetRemotePackets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemotePackets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: P2PManager.processAvatarPacket
void GlobalNamespace::P2PManager::processAvatarPacket(::GlobalNamespace::RemotePlayer* remote, ByRef<::ArrayW<uint8_t>> packet, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::processAvatarPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "processAvatarPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remote), ::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remote, byref(packet), byref(offset));
}
// Autogenerated method: P2PManager.PackByte
void GlobalNamespace::P2PManager::PackByte(uint8_t b, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::PackByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b, buf, byref(offset));
}
// Autogenerated method: P2PManager.ReadByte
uint8_t GlobalNamespace::P2PManager::ReadByte(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: P2PManager.PackFloat
void GlobalNamespace::P2PManager::PackFloat(float f, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::PackFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f, buf, byref(offset));
}
// Autogenerated method: P2PManager.ReadFloat
float GlobalNamespace::P2PManager::ReadFloat(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::ReadFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: P2PManager.PackULong
void GlobalNamespace::P2PManager::PackULong(uint64_t u, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::PackULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, u, buf, byref(offset));
}
// Autogenerated method: P2PManager.ReadULong
uint64_t GlobalNamespace::P2PManager::ReadULong(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::ReadULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated method: P2PManager.PackUInt32
void GlobalNamespace::P2PManager::PackUInt32(uint u, ::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::PackUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, u, buf, byref(offset));
}
// Autogenerated method: P2PManager.ReadUInt32
uint GlobalNamespace::P2PManager::ReadUInt32(::ArrayW<uint8_t> buf, ByRef<int> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::ReadUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, buf, byref(offset));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: P2PManager/MessageType
#include "GlobalNamespace/P2PManager_MessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public P2PManager/MessageType Update
::GlobalNamespace::P2PManager::MessageType GlobalNamespace::P2PManager::MessageType::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::MessageType::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::P2PManager::MessageType>("", "P2PManager/MessageType", "Update"));
}
// Autogenerated static field setter
// Set static field: static public P2PManager/MessageType Update
void GlobalNamespace::P2PManager::MessageType::_set_Update(::GlobalNamespace::P2PManager::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::MessageType::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "P2PManager/MessageType", "Update", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::P2PManager::MessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::P2PManager::MessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerController
#include "GlobalNamespace/PlayerController.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera spyCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::PlayerController::dyn_spyCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerController::dyn_spyCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spyCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject cameraRig
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PlayerController::dyn_cameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerController::dyn_cameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraRig"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean showUI
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerController::dyn_showUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerController::dyn_showUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showUI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerController.checkInput
void GlobalNamespace::PlayerController::checkInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerController::checkInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "checkInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerController.ToggleCamera
void GlobalNamespace::PlayerController::ToggleCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerController::ToggleCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerController.ToggleUI
void GlobalNamespace::PlayerController::ToggleUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerController::ToggleUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerController.Awake
void GlobalNamespace::PlayerController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerController::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SocialPlatformManager*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerController.Start
void GlobalNamespace::PlayerController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerController::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SocialPlatformManager*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerController.Update
void GlobalNamespace::PlayerController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerController::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SocialPlatformManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RemotePlayer
#include "GlobalNamespace/RemotePlayer.hpp"
// Including type: OvrAvatar
#include "GlobalNamespace/OvrAvatar.hpp"
// Including type: Oculus.Platform.VoipAudioSourceHiLevel
#include "Oculus/Platform/VoipAudioSourceHiLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 remoteUserID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::RemotePlayer::dyn_remoteUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemotePlayer::dyn_remoteUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean stillInRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RemotePlayer::dyn_stillInRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemotePlayer::dyn_stillInRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stillInRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.PeerConnectionState p2pConnectionState
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PeerConnectionState& GlobalNamespace::RemotePlayer::dyn_p2pConnectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemotePlayer::dyn_p2pConnectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p2pConnectionState"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.PeerConnectionState voipConnectionState
[[deprecated("Use field access instead!")]] ::Oculus::Platform::PeerConnectionState& GlobalNamespace::RemotePlayer::dyn_voipConnectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemotePlayer::dyn_voipConnectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voipConnectionState"))->offset;
  return *reinterpret_cast<::Oculus::Platform::PeerConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatar RemoteAvatar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatar*& GlobalNamespace::RemotePlayer::dyn_RemoteAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemotePlayer::dyn_RemoteAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteAvatar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 receivedRootPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::RemotePlayer::dyn_receivedRootPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemotePlayer::dyn_receivedRootPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedRootPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 receivedRootPositionPrior
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::RemotePlayer::dyn_receivedRootPositionPrior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemotePlayer::dyn_receivedRootPositionPrior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedRootPositionPrior"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion receivedRootRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::RemotePlayer::dyn_receivedRootRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemotePlayer::dyn_receivedRootRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedRootRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion receivedRootRotationPrior
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::RemotePlayer::dyn_receivedRootRotationPrior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemotePlayer::dyn_receivedRootRotationPrior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receivedRootRotationPrior"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.VoipAudioSourceHiLevel voipSource
[[deprecated("Use field access instead!")]] ::Oculus::Platform::VoipAudioSourceHiLevel*& GlobalNamespace::RemotePlayer::dyn_voipSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemotePlayer::dyn_voipSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voipSource"))->offset;
  return *reinterpret_cast<::Oculus::Platform::VoipAudioSourceHiLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RoomManager
#include "GlobalNamespace/RoomManager.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 roomID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::RoomManager::dyn_roomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::dyn_roomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 invitedRoomID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::RoomManager::dyn_invitedRoomID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::dyn_invitedRoomID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invitedRoomID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean amIServer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RoomManager::dyn_amIServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::dyn_amIServer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amIServer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean startupDone
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RoomManager::dyn_startupDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::dyn_startupDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startupDone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RoomManager.AcceptingInviteCallback
void GlobalNamespace::RoomManager::AcceptingInviteCallback(::Oculus::Platform::Message_1<::StringW>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::AcceptingInviteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptingInviteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: RoomManager.CheckForInvite
bool GlobalNamespace::RoomManager::CheckForInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::CheckForInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RoomManager.CreateRoom
void GlobalNamespace::RoomManager::CreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomManager.CreateAndJoinPrivateRoomCallback
void GlobalNamespace::RoomManager::CreateAndJoinPrivateRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::CreateAndJoinPrivateRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndJoinPrivateRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: RoomManager.OnLaunchInviteWorkflowComplete
void GlobalNamespace::RoomManager::OnLaunchInviteWorkflowComplete(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::OnLaunchInviteWorkflowComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLaunchInviteWorkflowComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: RoomManager.JoinExistingRoom
void GlobalNamespace::RoomManager::JoinExistingRoom(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::JoinExistingRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinExistingRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, roomID);
}
// Autogenerated method: RoomManager.JoinRoomCallback
void GlobalNamespace::RoomManager::JoinRoomCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::JoinRoomCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinRoomCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: RoomManager.RoomUpdateCallback
void GlobalNamespace::RoomManager::RoomUpdateCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::RoomUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RoomUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: RoomManager.LeaveCurrentRoom
void GlobalNamespace::RoomManager::LeaveCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::LeaveCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaveCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomManager.ProcessRoomData
void GlobalNamespace::RoomManager::ProcessRoomData(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomManager::ProcessRoomData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRoomData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SocialPlatformManager
#include "GlobalNamespace/SocialPlatformManager.hpp"
// Including type: RoomManager
#include "GlobalNamespace/RoomManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: RemotePlayer
#include "GlobalNamespace/RemotePlayer.hpp"
// Including type: P2PManager
#include "GlobalNamespace/P2PManager.hpp"
// Including type: VoipManager
#include "GlobalNamespace/VoipManager.hpp"
// Including type: OvrAvatar/PacketEventArgs
#include "GlobalNamespace/OvrAvatar_PacketEventArgs.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 START_ROTATION_ONE
::UnityEngine::Vector3 GlobalNamespace::SocialPlatformManager::_get_START_ROTATION_ONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_START_ROTATION_ONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "SocialPlatformManager", "START_ROTATION_ONE"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 START_ROTATION_ONE
void GlobalNamespace::SocialPlatformManager::_set_START_ROTATION_ONE(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_START_ROTATION_ONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "START_ROTATION_ONE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 START_POSITION_ONE
::UnityEngine::Vector3 GlobalNamespace::SocialPlatformManager::_get_START_POSITION_ONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_START_POSITION_ONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "SocialPlatformManager", "START_POSITION_ONE"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 START_POSITION_ONE
void GlobalNamespace::SocialPlatformManager::_set_START_POSITION_ONE(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_START_POSITION_ONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "START_POSITION_ONE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 START_ROTATION_TWO
::UnityEngine::Vector3 GlobalNamespace::SocialPlatformManager::_get_START_ROTATION_TWO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_START_ROTATION_TWO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "SocialPlatformManager", "START_ROTATION_TWO"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 START_ROTATION_TWO
void GlobalNamespace::SocialPlatformManager::_set_START_ROTATION_TWO(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_START_ROTATION_TWO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "START_ROTATION_TWO", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 START_POSITION_TWO
::UnityEngine::Vector3 GlobalNamespace::SocialPlatformManager::_get_START_POSITION_TWO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_START_POSITION_TWO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "SocialPlatformManager", "START_POSITION_TWO"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 START_POSITION_TWO
void GlobalNamespace::SocialPlatformManager::_set_START_POSITION_TWO(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_START_POSITION_TWO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "START_POSITION_TWO", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 START_ROTATION_THREE
::UnityEngine::Vector3 GlobalNamespace::SocialPlatformManager::_get_START_ROTATION_THREE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_START_ROTATION_THREE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "SocialPlatformManager", "START_ROTATION_THREE"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 START_ROTATION_THREE
void GlobalNamespace::SocialPlatformManager::_set_START_ROTATION_THREE(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_START_ROTATION_THREE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "START_ROTATION_THREE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 START_POSITION_THREE
::UnityEngine::Vector3 GlobalNamespace::SocialPlatformManager::_get_START_POSITION_THREE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_START_POSITION_THREE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "SocialPlatformManager", "START_POSITION_THREE"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 START_POSITION_THREE
void GlobalNamespace::SocialPlatformManager::_set_START_POSITION_THREE(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_START_POSITION_THREE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "START_POSITION_THREE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 START_ROTATION_FOUR
::UnityEngine::Vector3 GlobalNamespace::SocialPlatformManager::_get_START_ROTATION_FOUR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_START_ROTATION_FOUR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "SocialPlatformManager", "START_ROTATION_FOUR"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 START_ROTATION_FOUR
void GlobalNamespace::SocialPlatformManager::_set_START_ROTATION_FOUR(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_START_ROTATION_FOUR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "START_ROTATION_FOUR", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 START_POSITION_FOUR
::UnityEngine::Vector3 GlobalNamespace::SocialPlatformManager::_get_START_POSITION_FOUR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_START_POSITION_FOUR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "SocialPlatformManager", "START_POSITION_FOUR"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 START_POSITION_FOUR
void GlobalNamespace::SocialPlatformManager::_set_START_POSITION_FOUR(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_START_POSITION_FOUR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "START_POSITION_FOUR", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color BLACK
::UnityEngine::Color GlobalNamespace::SocialPlatformManager::_get_BLACK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_BLACK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("", "SocialPlatformManager", "BLACK"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color BLACK
void GlobalNamespace::SocialPlatformManager::_set_BLACK(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_BLACK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "BLACK", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color WHITE
::UnityEngine::Color GlobalNamespace::SocialPlatformManager::_get_WHITE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_WHITE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("", "SocialPlatformManager", "WHITE"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color WHITE
void GlobalNamespace::SocialPlatformManager::_set_WHITE(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_WHITE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "WHITE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color CYAN
::UnityEngine::Color GlobalNamespace::SocialPlatformManager::_get_CYAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_CYAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("", "SocialPlatformManager", "CYAN"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color CYAN
void GlobalNamespace::SocialPlatformManager::_set_CYAN(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_CYAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "CYAN", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color BLUE
::UnityEngine::Color GlobalNamespace::SocialPlatformManager::_get_BLUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_BLUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("", "SocialPlatformManager", "BLUE"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color BLUE
void GlobalNamespace::SocialPlatformManager::_set_BLUE(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_BLUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "BLUE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color GREEN
::UnityEngine::Color GlobalNamespace::SocialPlatformManager::_get_GREEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_GREEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("", "SocialPlatformManager", "GREEN"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color GREEN
void GlobalNamespace::SocialPlatformManager::_set_GREEN(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_GREEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "GREEN", value));
}
// Autogenerated static field getter
// Get static field: static protected SocialPlatformManager s_instance
::GlobalNamespace::SocialPlatformManager* GlobalNamespace::SocialPlatformManager::_get_s_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_s_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SocialPlatformManager*>("", "SocialPlatformManager", "s_instance"));
}
// Autogenerated static field setter
// Set static field: static protected SocialPlatformManager s_instance
void GlobalNamespace::SocialPlatformManager::_set_s_instance(::GlobalNamespace::SocialPlatformManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_s_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "s_instance", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single VOIP_SCALE
float GlobalNamespace::SocialPlatformManager::_get_VOIP_SCALE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_get_VOIP_SCALE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SocialPlatformManager", "VOIP_SCALE"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single VOIP_SCALE
void GlobalNamespace::SocialPlatformManager::_set_VOIP_SCALE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::_set_VOIP_SCALE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager", "VOIP_SCALE", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single voiceCurrent
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SocialPlatformManager::dyn_voiceCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_voiceCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceCurrent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 packetSequence
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::SocialPlatformManager::dyn_packetSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_packetSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetSequence"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatar localAvatarPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatar*& GlobalNamespace::SocialPlatformManager::dyn_localAvatarPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_localAvatarPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localAvatarPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatar remoteAvatarPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatar*& GlobalNamespace::SocialPlatformManager::dyn_remoteAvatarPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_remoteAvatarPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteAvatarPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject helpPanel
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SocialPlatformManager::dyn_helpPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_helpPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "helpPanel"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.MeshRenderer helpMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::SocialPlatformManager::dyn_helpMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_helpMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "helpMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material riftMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::SocialPlatformManager::dyn_riftMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_riftMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "riftMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material gearMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::SocialPlatformManager::dyn_gearMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_gearMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gearMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OvrAvatar localAvatar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatar*& GlobalNamespace::SocialPlatformManager::dyn_localAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_localAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localAvatar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.GameObject localTrackingSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SocialPlatformManager::dyn_localTrackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_localTrackingSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localTrackingSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.GameObject localPlayerHead
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SocialPlatformManager::dyn_localPlayerHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_localPlayerHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayerHead"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<System.UInt64,RemotePlayer> remoteUsers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::GlobalNamespace::RemotePlayer*>*& GlobalNamespace::SocialPlatformManager::dyn_remoteUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_remoteUsers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteUsers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::GlobalNamespace::RemotePlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject roomSphere
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SocialPlatformManager::dyn_roomSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_roomSphere");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomSphere"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.MeshRenderer sphereMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::SocialPlatformManager::dyn_sphereMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_sphereMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sphereMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject roomFloor
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::SocialPlatformManager::dyn_roomFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_roomFloor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomFloor"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.MeshRenderer floorMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::SocialPlatformManager::dyn_floorMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_floorMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floorMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected SocialPlatformManager/State currentState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SocialPlatformManager::State& GlobalNamespace::SocialPlatformManager::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SocialPlatformManager::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected RoomManager roomManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RoomManager*& GlobalNamespace::SocialPlatformManager::dyn_roomManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_roomManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RoomManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected P2PManager p2pManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::P2PManager*& GlobalNamespace::SocialPlatformManager::dyn_p2pManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_p2pManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p2pManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::P2PManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected VoipManager voipManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VoipManager*& GlobalNamespace::SocialPlatformManager::dyn_voipManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_voipManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voipManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VoipManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.UInt64 myID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::SocialPlatformManager::dyn_myID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_myID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String myOculusID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SocialPlatformManager::dyn_myOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::dyn_myOculusID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myOculusID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SocialPlatformManager.Update
void GlobalNamespace::SocialPlatformManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SocialPlatformManager*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SocialPlatformManager.Awake
void GlobalNamespace::SocialPlatformManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SocialPlatformManager*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SocialPlatformManager.InitCallback
void GlobalNamespace::SocialPlatformManager::InitCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::InitCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: SocialPlatformManager.Start
void GlobalNamespace::SocialPlatformManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SocialPlatformManager*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SocialPlatformManager.IsEntitledCallback
void GlobalNamespace::SocialPlatformManager::IsEntitledCallback(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::IsEntitledCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEntitledCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: SocialPlatformManager.GetLoggedInUserCallback
void GlobalNamespace::SocialPlatformManager::GetLoggedInUserCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::GetLoggedInUserCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoggedInUserCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: SocialPlatformManager.GetLoggedInUserFriendsAndRoomsCallback
void GlobalNamespace::SocialPlatformManager::GetLoggedInUserFriendsAndRoomsCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserAndRoomList*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::GetLoggedInUserFriendsAndRoomsCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoggedInUserFriendsAndRoomsCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: SocialPlatformManager.OnLocalAvatarPacketRecorded
void GlobalNamespace::SocialPlatformManager::OnLocalAvatarPacketRecorded(::Il2CppObject* sender, ::GlobalNamespace::OvrAvatar::PacketEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::OnLocalAvatarPacketRecorded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalAvatarPacketRecorded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, args);
}
// Autogenerated method: SocialPlatformManager.OnApplicationQuit
void GlobalNamespace::SocialPlatformManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SocialPlatformManager.AddUser
void GlobalNamespace::SocialPlatformManager::AddUser(uint64_t userID, ByRef<::GlobalNamespace::RemotePlayer*> remoteUser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::AddUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(remoteUser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID, byref(remoteUser));
}
// Autogenerated method: SocialPlatformManager.LogOutputLine
void GlobalNamespace::SocialPlatformManager::LogOutputLine(::StringW line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::LogOutputLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogOutputLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, line);
}
// Autogenerated method: SocialPlatformManager.TerminateWithError
void GlobalNamespace::SocialPlatformManager::TerminateWithError(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::TerminateWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "TerminateWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: SocialPlatformManager.get_CurrentState
::GlobalNamespace::SocialPlatformManager::State GlobalNamespace::SocialPlatformManager::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SocialPlatformManager::State, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SocialPlatformManager.get_MyID
uint64_t GlobalNamespace::SocialPlatformManager::get_MyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::get_MyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "get_MyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SocialPlatformManager.get_MyOculusID
::StringW GlobalNamespace::SocialPlatformManager::get_MyOculusID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::get_MyOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "get_MyOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SocialPlatformManager.TransitionToState
void GlobalNamespace::SocialPlatformManager::TransitionToState(::GlobalNamespace::SocialPlatformManager::State newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::TransitionToState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "TransitionToState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newState);
}
// Autogenerated method: SocialPlatformManager.SetSphereColorForState
void GlobalNamespace::SocialPlatformManager::SetSphereColorForState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::SetSphereColorForState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "SetSphereColorForState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SocialPlatformManager.SetFloorColorForState
void GlobalNamespace::SocialPlatformManager::SetFloorColorForState(bool host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::SetFloorColorForState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "SetFloorColorForState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host);
}
// Autogenerated method: SocialPlatformManager.MarkAllRemoteUsersAsNotInRoom
void GlobalNamespace::SocialPlatformManager::MarkAllRemoteUsersAsNotInRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::MarkAllRemoteUsersAsNotInRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "MarkAllRemoteUsersAsNotInRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SocialPlatformManager.MarkRemoteUserInRoom
void GlobalNamespace::SocialPlatformManager::MarkRemoteUserInRoom(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::MarkRemoteUserInRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "MarkRemoteUserInRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: SocialPlatformManager.ForgetRemoteUsersNotInRoom
void GlobalNamespace::SocialPlatformManager::ForgetRemoteUsersNotInRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::ForgetRemoteUsersNotInRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "ForgetRemoteUsersNotInRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SocialPlatformManager.LogOutput
void GlobalNamespace::SocialPlatformManager::LogOutput(::StringW line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::LogOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "LogOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, line);
}
// Autogenerated method: SocialPlatformManager.IsUserInRoom
bool GlobalNamespace::SocialPlatformManager::IsUserInRoom(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::IsUserInRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "IsUserInRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: SocialPlatformManager.AddRemoteUser
void GlobalNamespace::SocialPlatformManager::AddRemoteUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::AddRemoteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "AddRemoteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: SocialPlatformManager.RemoveRemoteUser
void GlobalNamespace::SocialPlatformManager::RemoveRemoteUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::RemoveRemoteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "RemoveRemoteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: SocialPlatformManager.UpdateVoiceData
void GlobalNamespace::SocialPlatformManager::UpdateVoiceData(::ArrayW<int16_t> pcmData, int numChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::UpdateVoiceData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVoiceData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmData), ::il2cpp_utils::ExtractType(numChannels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcmData, numChannels);
}
// Autogenerated method: SocialPlatformManager.MicFilter
void GlobalNamespace::SocialPlatformManager::MicFilter(::ArrayW<int16_t> pcmData, ::System::UIntPtr pcmDataLength, int frequency, int numChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::MicFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "MicFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmData), ::il2cpp_utils::ExtractType(pcmDataLength), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(numChannels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pcmData, pcmDataLength, frequency, numChannels);
}
// Autogenerated method: SocialPlatformManager.GetRemoteUser
::GlobalNamespace::RemotePlayer* GlobalNamespace::SocialPlatformManager::GetRemoteUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::GetRemoteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", "GetRemoteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RemotePlayer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: SocialPlatformManager..cctor
void GlobalNamespace::SocialPlatformManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SocialPlatformManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SocialPlatformManager/State
#include "GlobalNamespace/SocialPlatformManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SocialPlatformManager/State INITIALIZING
::GlobalNamespace::SocialPlatformManager::State GlobalNamespace::SocialPlatformManager::State::_get_INITIALIZING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_get_INITIALIZING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SocialPlatformManager::State>("", "SocialPlatformManager/State", "INITIALIZING"));
}
// Autogenerated static field setter
// Set static field: static public SocialPlatformManager/State INITIALIZING
void GlobalNamespace::SocialPlatformManager::State::_set_INITIALIZING(::GlobalNamespace::SocialPlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_set_INITIALIZING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager/State", "INITIALIZING", value));
}
// Autogenerated static field getter
// Get static field: static public SocialPlatformManager/State CHECKING_LAUNCH_STATE
::GlobalNamespace::SocialPlatformManager::State GlobalNamespace::SocialPlatformManager::State::_get_CHECKING_LAUNCH_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_get_CHECKING_LAUNCH_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SocialPlatformManager::State>("", "SocialPlatformManager/State", "CHECKING_LAUNCH_STATE"));
}
// Autogenerated static field setter
// Set static field: static public SocialPlatformManager/State CHECKING_LAUNCH_STATE
void GlobalNamespace::SocialPlatformManager::State::_set_CHECKING_LAUNCH_STATE(::GlobalNamespace::SocialPlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_set_CHECKING_LAUNCH_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager/State", "CHECKING_LAUNCH_STATE", value));
}
// Autogenerated static field getter
// Get static field: static public SocialPlatformManager/State CREATING_A_ROOM
::GlobalNamespace::SocialPlatformManager::State GlobalNamespace::SocialPlatformManager::State::_get_CREATING_A_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_get_CREATING_A_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SocialPlatformManager::State>("", "SocialPlatformManager/State", "CREATING_A_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public SocialPlatformManager/State CREATING_A_ROOM
void GlobalNamespace::SocialPlatformManager::State::_set_CREATING_A_ROOM(::GlobalNamespace::SocialPlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_set_CREATING_A_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager/State", "CREATING_A_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public SocialPlatformManager/State WAITING_IN_A_ROOM
::GlobalNamespace::SocialPlatformManager::State GlobalNamespace::SocialPlatformManager::State::_get_WAITING_IN_A_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_get_WAITING_IN_A_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SocialPlatformManager::State>("", "SocialPlatformManager/State", "WAITING_IN_A_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public SocialPlatformManager/State WAITING_IN_A_ROOM
void GlobalNamespace::SocialPlatformManager::State::_set_WAITING_IN_A_ROOM(::GlobalNamespace::SocialPlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_set_WAITING_IN_A_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager/State", "WAITING_IN_A_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public SocialPlatformManager/State JOINING_A_ROOM
::GlobalNamespace::SocialPlatformManager::State GlobalNamespace::SocialPlatformManager::State::_get_JOINING_A_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_get_JOINING_A_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SocialPlatformManager::State>("", "SocialPlatformManager/State", "JOINING_A_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public SocialPlatformManager/State JOINING_A_ROOM
void GlobalNamespace::SocialPlatformManager::State::_set_JOINING_A_ROOM(::GlobalNamespace::SocialPlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_set_JOINING_A_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager/State", "JOINING_A_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public SocialPlatformManager/State CONNECTED_IN_A_ROOM
::GlobalNamespace::SocialPlatformManager::State GlobalNamespace::SocialPlatformManager::State::_get_CONNECTED_IN_A_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_get_CONNECTED_IN_A_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SocialPlatformManager::State>("", "SocialPlatformManager/State", "CONNECTED_IN_A_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public SocialPlatformManager/State CONNECTED_IN_A_ROOM
void GlobalNamespace::SocialPlatformManager::State::_set_CONNECTED_IN_A_ROOM(::GlobalNamespace::SocialPlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_set_CONNECTED_IN_A_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager/State", "CONNECTED_IN_A_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public SocialPlatformManager/State LEAVING_A_ROOM
::GlobalNamespace::SocialPlatformManager::State GlobalNamespace::SocialPlatformManager::State::_get_LEAVING_A_ROOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_get_LEAVING_A_ROOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SocialPlatformManager::State>("", "SocialPlatformManager/State", "LEAVING_A_ROOM"));
}
// Autogenerated static field setter
// Set static field: static public SocialPlatformManager/State LEAVING_A_ROOM
void GlobalNamespace::SocialPlatformManager::State::_set_LEAVING_A_ROOM(::GlobalNamespace::SocialPlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_set_LEAVING_A_ROOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager/State", "LEAVING_A_ROOM", value));
}
// Autogenerated static field getter
// Get static field: static public SocialPlatformManager/State SHUTDOWN
::GlobalNamespace::SocialPlatformManager::State GlobalNamespace::SocialPlatformManager::State::_get_SHUTDOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_get_SHUTDOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SocialPlatformManager::State>("", "SocialPlatformManager/State", "SHUTDOWN"));
}
// Autogenerated static field setter
// Set static field: static public SocialPlatformManager/State SHUTDOWN
void GlobalNamespace::SocialPlatformManager::State::_set_SHUTDOWN(::GlobalNamespace::SocialPlatformManager::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::_set_SHUTDOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SocialPlatformManager/State", "SHUTDOWN", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SocialPlatformManager::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SocialPlatformManager::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VoipManager
#include "GlobalNamespace/VoipManager.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VoipManager.ConnectTo
void GlobalNamespace::VoipManager::ConnectTo(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VoipManager::ConnectTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: VoipManager.Disconnect
void GlobalNamespace::VoipManager::Disconnect(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VoipManager::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: VoipManager.VoipConnectRequestCallback
void GlobalNamespace::VoipManager::VoipConnectRequestCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VoipManager::VoipConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VoipConnectRequestCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: VoipManager.VoipStateChangedCallback
void GlobalNamespace::VoipManager::VoipStateChangedCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VoipManager::VoipStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VoipStateChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GazeTarget
#include "GlobalNamespace/GazeTarget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ovrAvatarGazeTargets RuntimeTargetList
::GlobalNamespace::ovrAvatarGazeTargets GlobalNamespace::GazeTarget::_get_RuntimeTargetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTarget::_get_RuntimeTargetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarGazeTargets>("", "GazeTarget", "RuntimeTargetList"));
}
// Autogenerated static field setter
// Set static field: static private ovrAvatarGazeTargets RuntimeTargetList
void GlobalNamespace::GazeTarget::_set_RuntimeTargetList(::GlobalNamespace::ovrAvatarGazeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTarget::_set_RuntimeTargetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GazeTarget", "RuntimeTargetList", value));
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarGazeTargetType Type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarGazeTargetType& GlobalNamespace::GazeTarget::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTarget::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarGazeTargetType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GazeTarget..cctor
void GlobalNamespace::GazeTarget::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTarget::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GazeTarget", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GazeTarget.Start
void GlobalNamespace::GazeTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GazeTarget.Update
void GlobalNamespace::GazeTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GazeTarget.OnDestroy
void GlobalNamespace::GazeTarget::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTarget::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GazeTarget.UpdateGazeTarget
void GlobalNamespace::GazeTarget::UpdateGazeTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTarget::UpdateGazeTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGazeTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GazeTarget.CreateOvrGazeTarget
::GlobalNamespace::ovrAvatarGazeTarget GlobalNamespace::GazeTarget::CreateOvrGazeTarget(uint targetId, ::UnityEngine::Vector3 targetPosition, ::GlobalNamespace::ovrAvatarGazeTargetType targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GazeTarget::CreateOvrGazeTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOvrGazeTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetId), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarGazeTarget, false>(this, ___internal__method, targetId, targetPosition, targetType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarLayer
#include "GlobalNamespace/AvatarLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 layerIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AvatarLayer::dyn_layerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarLayer::dyn_layerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketRecordSettings
#include "GlobalNamespace/PacketRecordSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Boolean RecordingFrames
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PacketRecordSettings::dyn_RecordingFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketRecordSettings::dyn_RecordingFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecordingFrames"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single UpdateRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PacketRecordSettings::dyn_UpdateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketRecordSettings::dyn_UpdateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single AccumulatedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PacketRecordSettings::dyn_AccumulatedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketRecordSettings::dyn_AccumulatedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccumulatedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatar
#include "GlobalNamespace/OvrAvatar.hpp"
// Including type: OvrAvatar/PacketEventArgs
#include "GlobalNamespace/OvrAvatar_PacketEventArgs.hpp"
// Including type: OvrAvatar/HandType
#include "GlobalNamespace/OvrAvatar_HandType.hpp"
// Including type: OvrAvatar/HandJoint
#include "GlobalNamespace/OvrAvatar_HandJoint.hpp"
// Including type: OvrAvatar/<WaitForMouthAudioSource>d__137
#include "GlobalNamespace/OvrAvatar_-WaitForMouthAudioSource-d__137.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: PacketRecordSettings
#include "GlobalNamespace/PacketRecordSettings.hpp"
// Including type: AvatarLayer
#include "GlobalNamespace/AvatarLayer.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: OvrAvatarMaterialManager
#include "GlobalNamespace/OvrAvatarMaterialManager.hpp"
// Including type: OVRLipSyncMicInput
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
// Including type: OVRLipSyncContext
#include "GlobalNamespace/OVRLipSyncContext.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OvrAvatarBase
#include "GlobalNamespace/OvrAvatarBase.hpp"
// Including type: OvrAvatarTouchController
#include "GlobalNamespace/OvrAvatarTouchController.hpp"
// Including type: OvrAvatarBody
#include "GlobalNamespace/OvrAvatarBody.hpp"
// Including type: OvrAvatarHand
#include "GlobalNamespace/OvrAvatarHand.hpp"
// Including type: OvrAvatarPacket
#include "GlobalNamespace/OvrAvatarPacket.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OvrAvatarAsset
#include "GlobalNamespace/OvrAvatarAsset.hpp"
// Including type: OvrAvatarSkinnedMeshRenderComponent
#include "GlobalNamespace/OvrAvatarSkinnedMeshRenderComponent.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRender
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRender.hpp"
// Including type: OvrAvatarSkinnedMeshRenderPBSComponent
#include "GlobalNamespace/OvrAvatarSkinnedMeshRenderPBSComponent.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRenderPBS
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRenderPBS.hpp"
// Including type: OvrAvatarSkinnedMeshPBSV2RenderComponent
#include "GlobalNamespace/OvrAvatarSkinnedMeshPBSV2RenderComponent.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2.hpp"
// Including type: ovrAvatarHandInputState
#include "GlobalNamespace/ovrAvatarHandInputState.hpp"
// Including type: ovrAvatarGazeTarget
#include "GlobalNamespace/ovrAvatarGazeTarget.hpp"
// Including type: ovrAvatarGazeTargetType
#include "GlobalNamespace/ovrAvatarGazeTargetType.hpp"
// Including type: OvrAvatarComponent
#include "GlobalNamespace/OvrAvatarComponent_.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean doneExpressiveGlobalInit
bool GlobalNamespace::OvrAvatar::_get_doneExpressiveGlobalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_doneExpressiveGlobalInit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OvrAvatar", "doneExpressiveGlobalInit"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean doneExpressiveGlobalInit
void GlobalNamespace::OvrAvatar::_set_doneExpressiveGlobalInit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_doneExpressiveGlobalInit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "doneExpressiveGlobalInit", value));
}
// Autogenerated static field getter
// Get static field: static private ovrAvatarVisemes RuntimeVisemes
::GlobalNamespace::ovrAvatarVisemes GlobalNamespace::OvrAvatar::_get_RuntimeVisemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_RuntimeVisemes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarVisemes>("", "OvrAvatar", "RuntimeVisemes"));
}
// Autogenerated static field setter
// Set static field: static private ovrAvatarVisemes RuntimeVisemes
void GlobalNamespace::OvrAvatar::_set_RuntimeVisemes(::GlobalNamespace::ovrAvatarVisemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_RuntimeVisemes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "RuntimeVisemes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean USE_MOBILE_TEXTURE_FORMAT
bool GlobalNamespace::OvrAvatar::_get_USE_MOBILE_TEXTURE_FORMAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_USE_MOBILE_TEXTURE_FORMAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OvrAvatar", "USE_MOBILE_TEXTURE_FORMAT"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean USE_MOBILE_TEXTURE_FORMAT
void GlobalNamespace::OvrAvatar::_set_USE_MOBILE_TEXTURE_FORMAT(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_USE_MOBILE_TEXTURE_FORMAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "USE_MOBILE_TEXTURE_FORMAT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 MOUTH_HEAD_OFFSET
::UnityEngine::Vector3 GlobalNamespace::OvrAvatar::_get_MOUTH_HEAD_OFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_MOUTH_HEAD_OFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OvrAvatar", "MOUTH_HEAD_OFFSET"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 MOUTH_HEAD_OFFSET
void GlobalNamespace::OvrAvatar::_set_MOUTH_HEAD_OFFSET(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_MOUTH_HEAD_OFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "MOUTH_HEAD_OFFSET", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MOUTH_HELPER_NAME
::StringW GlobalNamespace::OvrAvatar::_get_MOUTH_HELPER_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_MOUTH_HELPER_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatar", "MOUTH_HELPER_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String MOUTH_HELPER_NAME
void GlobalNamespace::OvrAvatar::_set_MOUTH_HELPER_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_MOUTH_HELPER_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "MOUTH_HELPER_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 VISEME_COUNT
int GlobalNamespace::OvrAvatar::_get_VISEME_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_VISEME_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OvrAvatar", "VISEME_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 VISEME_COUNT
void GlobalNamespace::OvrAvatar::_set_VISEME_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_VISEME_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "VISEME_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single ACTION_UNIT_ONSET_SPEED
float GlobalNamespace::OvrAvatar::_get_ACTION_UNIT_ONSET_SPEED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_ACTION_UNIT_ONSET_SPEED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OvrAvatar", "ACTION_UNIT_ONSET_SPEED"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ACTION_UNIT_ONSET_SPEED
void GlobalNamespace::OvrAvatar::_set_ACTION_UNIT_ONSET_SPEED(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_ACTION_UNIT_ONSET_SPEED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "ACTION_UNIT_ONSET_SPEED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single ACTION_UNIT_FALLOFF_SPEED
float GlobalNamespace::OvrAvatar::_get_ACTION_UNIT_FALLOFF_SPEED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_ACTION_UNIT_FALLOFF_SPEED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OvrAvatar", "ACTION_UNIT_FALLOFF_SPEED"));
}
// Autogenerated static field setter
// Set static field: static private System.Single ACTION_UNIT_FALLOFF_SPEED
void GlobalNamespace::OvrAvatar::_set_ACTION_UNIT_FALLOFF_SPEED(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_ACTION_UNIT_FALLOFF_SPEED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "ACTION_UNIT_FALLOFF_SPEED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single VISEME_LEVEL_MULTIPLIER
float GlobalNamespace::OvrAvatar::_get_VISEME_LEVEL_MULTIPLIER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_VISEME_LEVEL_MULTIPLIER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OvrAvatar", "VISEME_LEVEL_MULTIPLIER"));
}
// Autogenerated static field setter
// Set static field: static private System.Single VISEME_LEVEL_MULTIPLIER
void GlobalNamespace::OvrAvatar::_set_VISEME_LEVEL_MULTIPLIER(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_VISEME_LEVEL_MULTIPLIER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "VISEME_LEVEL_MULTIPLIER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[,] HandJoints
::ArrayW<::StringW> GlobalNamespace::OvrAvatar::_get_HandJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_HandJoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("", "OvrAvatar", "HandJoints"));
}
// Autogenerated static field setter
// Set static field: static private System.String[,] HandJoints
void GlobalNamespace::OvrAvatar::_set_HandJoints(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_HandJoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "HandJoints", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 MOUTH_POSITION_OFFSET
::UnityEngine::Vector3 GlobalNamespace::OvrAvatar::_get_MOUTH_POSITION_OFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_MOUTH_POSITION_OFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OvrAvatar", "MOUTH_POSITION_OFFSET"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 MOUTH_POSITION_OFFSET
void GlobalNamespace::OvrAvatar::_set_MOUTH_POSITION_OFFSET(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_MOUTH_POSITION_OFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "MOUTH_POSITION_OFFSET", value));
}
// Autogenerated static field getter
// Get static field: static private System.String VOICE_PROPERTY
::StringW GlobalNamespace::OvrAvatar::_get_VOICE_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_VOICE_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatar", "VOICE_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static private System.String VOICE_PROPERTY
void GlobalNamespace::OvrAvatar::_set_VOICE_PROPERTY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_VOICE_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "VOICE_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MOUTH_POSITION_PROPERTY
::StringW GlobalNamespace::OvrAvatar::_get_MOUTH_POSITION_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_MOUTH_POSITION_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatar", "MOUTH_POSITION_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static private System.String MOUTH_POSITION_PROPERTY
void GlobalNamespace::OvrAvatar::_set_MOUTH_POSITION_PROPERTY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_MOUTH_POSITION_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "MOUTH_POSITION_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MOUTH_DIRECTION_PROPERTY
::StringW GlobalNamespace::OvrAvatar::_get_MOUTH_DIRECTION_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_MOUTH_DIRECTION_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatar", "MOUTH_DIRECTION_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static private System.String MOUTH_DIRECTION_PROPERTY
void GlobalNamespace::OvrAvatar::_set_MOUTH_DIRECTION_PROPERTY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_MOUTH_DIRECTION_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "MOUTH_DIRECTION_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static private System.String MOUTH_SCALE_PROPERTY
::StringW GlobalNamespace::OvrAvatar::_get_MOUTH_SCALE_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_MOUTH_SCALE_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatar", "MOUTH_SCALE_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static private System.String MOUTH_SCALE_PROPERTY
void GlobalNamespace::OvrAvatar::_set_MOUTH_SCALE_PROPERTY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_MOUTH_SCALE_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "MOUTH_SCALE_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUTH_SCALE_GLOBAL
float GlobalNamespace::OvrAvatar::_get_MOUTH_SCALE_GLOBAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_MOUTH_SCALE_GLOBAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OvrAvatar", "MOUTH_SCALE_GLOBAL"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUTH_SCALE_GLOBAL
void GlobalNamespace::OvrAvatar::_set_MOUTH_SCALE_GLOBAL(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_MOUTH_SCALE_GLOBAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "MOUTH_SCALE_GLOBAL", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single MOUTH_MAX_GLOBAL
float GlobalNamespace::OvrAvatar::_get_MOUTH_MAX_GLOBAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_MOUTH_MAX_GLOBAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OvrAvatar", "MOUTH_MAX_GLOBAL"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MOUTH_MAX_GLOBAL
void GlobalNamespace::OvrAvatar::_set_MOUTH_MAX_GLOBAL(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_MOUTH_MAX_GLOBAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "MOUTH_MAX_GLOBAL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String NECK_JONT
::StringW GlobalNamespace::OvrAvatar::_get_NECK_JONT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_NECK_JONT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatar", "NECK_JONT"));
}
// Autogenerated static field setter
// Set static field: static private System.String NECK_JONT
void GlobalNamespace::OvrAvatar::_set_NECK_JONT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_NECK_JONT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "NECK_JONT", value));
}
// Autogenerated static field getter
// Get static field: static private ovrAvatarLights ovrLights
::GlobalNamespace::ovrAvatarLights GlobalNamespace::OvrAvatar::_get_ovrLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_get_ovrLights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLights>("", "OvrAvatar", "ovrLights"));
}
// Autogenerated static field setter
// Set static field: static private ovrAvatarLights ovrLights
void GlobalNamespace::OvrAvatar::_set_ovrLights(::GlobalNamespace::ovrAvatarLights value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::_set_ovrLights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar", "ovrLights", value));
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr sdkAvatar
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::OvrAvatar::dyn_sdkAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_sdkAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdkAvatar"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String oculusUserID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OvrAvatar::dyn_oculusUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_oculusUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusUserID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatarDriver Driver
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarDriver*& GlobalNamespace::OvrAvatar::dyn_Driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Driver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Driver"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarDriver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableBody
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_EnableBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_EnableBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableBody"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableHands
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_EnableHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_EnableHands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableHands"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableBase
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_EnableBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_EnableBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableBase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableExpressive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_EnableExpressive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_EnableExpressive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableExpressive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RecordPackets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_RecordPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_RecordPackets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RecordPackets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseSDKPackets
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_UseSDKPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_UseSDKPackets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseSDKPackets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PacketRecordSettings PacketSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PacketRecordSettings*& GlobalNamespace::OvrAvatar::dyn_PacketSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_PacketSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PacketSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PacketRecordSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean StartWithControllers
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_StartWithControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_StartWithControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartWithControllers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AvatarLayer FirstPersonLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarLayer*& GlobalNamespace::OvrAvatar::dyn_FirstPersonLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_FirstPersonLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstPersonLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AvatarLayer ThirdPersonLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarLayer*& GlobalNamespace::OvrAvatar::dyn_ThirdPersonLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_ThirdPersonLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThirdPersonLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ShowFirstPerson
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_ShowFirstPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_ShowFirstPerson");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShowFirstPerson"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ShowThirdPerson
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_ShowThirdPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_ShowThirdPerson");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShowThirdPerson"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ovrAvatarCapabilities Capabilities
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarCapabilities& GlobalNamespace::OvrAvatar::dyn_Capabilities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Capabilities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Capabilities"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarCapabilities*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ovrAvatarAssetLevelOfDetail LevelOfDetail
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarAssetLevelOfDetail& GlobalNamespace::OvrAvatar::dyn_LevelOfDetail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_LevelOfDetail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LevelOfDetail"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarAssetLevelOfDetail*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean CombineMeshes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_CombineMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_CombineMeshes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CombineMeshes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseTransparentRenderQueue
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_UseTransparentRenderQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_UseTransparentRenderQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseTransparentRenderQueue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Monochrome_SurfaceShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_Monochrome_SurfaceShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Monochrome_SurfaceShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Monochrome_SurfaceShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Monochrome_SurfaceShader_SelfOccluding
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_Monochrome_SurfaceShader_SelfOccluding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Monochrome_SurfaceShader_SelfOccluding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Monochrome_SurfaceShader_SelfOccluding"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Monochrome_SurfaceShader_PBS
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_Monochrome_SurfaceShader_PBS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Monochrome_SurfaceShader_PBS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Monochrome_SurfaceShader_PBS"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Skinshaded_SurfaceShader_SingleComponent
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_Skinshaded_SurfaceShader_SingleComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Skinshaded_SurfaceShader_SingleComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Skinshaded_SurfaceShader_SingleComponent"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Skinshaded_VertFrag_SingleComponent
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_Skinshaded_VertFrag_SingleComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Skinshaded_VertFrag_SingleComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Skinshaded_VertFrag_SingleComponent"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Skinshaded_VertFrag_CombinedMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_Skinshaded_VertFrag_CombinedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Skinshaded_VertFrag_CombinedMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Skinshaded_VertFrag_CombinedMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Skinshaded_Expressive_SurfaceShader_SingleComponent
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_Skinshaded_Expressive_SurfaceShader_SingleComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Skinshaded_Expressive_SurfaceShader_SingleComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Skinshaded_Expressive_SurfaceShader_SingleComponent"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Skinshaded_Expressive_VertFrag_SingleComponent
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_Skinshaded_Expressive_VertFrag_SingleComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Skinshaded_Expressive_VertFrag_SingleComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Skinshaded_Expressive_VertFrag_SingleComponent"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Skinshaded_Expressive_VertFrag_CombinedMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_Skinshaded_Expressive_VertFrag_CombinedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Skinshaded_Expressive_VertFrag_CombinedMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Skinshaded_Expressive_VertFrag_CombinedMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader Loader_VertFrag_CombinedMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_Loader_VertFrag_CombinedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Loader_VertFrag_CombinedMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Loader_VertFrag_CombinedMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader EyeLens
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_EyeLens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_EyeLens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EyeLens"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Shader ControllerShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatar::dyn_ControllerShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_ControllerShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ControllerShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean CanOwnMicrophone
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_CanOwnMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_CanOwnMicrophone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CanOwnMicrophone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableLaughter
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_EnableLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_EnableLaughter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableLaughter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject MouthAnchor
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OvrAvatar::dyn_MouthAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_MouthAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MouthAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform LeftHandCustomPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OvrAvatar::dyn_LeftHandCustomPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_LeftHandCustomPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHandCustomPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform RightHandCustomPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OvrAvatar::dyn_RightHandCustomPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_RightHandCustomPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHandCustomPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.UInt64> assetLoadingIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint64_t>*& GlobalNamespace::OvrAvatar::dyn_assetLoadingIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_assetLoadingIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetLoadingIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean assetsFinishedLoading
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_assetsFinishedLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_assetsFinishedLoading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetsFinishedLoading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OvrAvatarMaterialManager materialManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarMaterialManager*& GlobalNamespace::OvrAvatar::dyn_materialManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_materialManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarMaterialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean waitingForCombinedMesh
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_waitingForCombinedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_waitingForCombinedMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitingForCombinedMesh"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4 clothingAlphaOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::OvrAvatar::dyn_clothingAlphaOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_clothingAlphaOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothingAlphaOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 clothingAlphaTexture
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OvrAvatar::dyn_clothingAlphaTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_clothingAlphaTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothingAlphaTexture"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncMicInput micInput
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncMicInput*& GlobalNamespace::OvrAvatar::dyn_micInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_micInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micInput"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncMicInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContext lipsyncContext
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncContext*& GlobalNamespace::OvrAvatar::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame currentFrame
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OvrAvatar::dyn_currentFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_currentFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentFrame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] visemes
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OvrAvatar::dyn_visemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_visemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::OvrAvatar::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ONSPAudioSource spatializedSource
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ONSPAudioSource*& GlobalNamespace::OvrAvatar::dyn_spatializedSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_spatializedSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spatializedSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single[]> voiceUpdates
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<float>>*& GlobalNamespace::OvrAvatar::dyn_voiceUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_voiceUpdates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceUpdates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<float>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform cachedLeftHandCustomPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OvrAvatar::dyn_cachedLeftHandCustomPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_cachedLeftHandCustomPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedLeftHandCustomPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] cachedCustomLeftHandJoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::OvrAvatar::dyn_cachedCustomLeftHandJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_cachedCustomLeftHandJoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedCustomLeftHandJoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ovrAvatarTransform[] cachedLeftHandTransforms
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ovrAvatarTransform>& GlobalNamespace::OvrAvatar::dyn_cachedLeftHandTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_cachedLeftHandTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedLeftHandTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ovrAvatarTransform>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform cachedRightHandCustomPose
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OvrAvatar::dyn_cachedRightHandCustomPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_cachedRightHandCustomPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedRightHandCustomPose"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] cachedCustomRightHandJoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::OvrAvatar::dyn_cachedCustomRightHandJoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_cachedCustomRightHandJoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedCustomRightHandJoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ovrAvatarTransform[] cachedRightHandTransforms
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ovrAvatarTransform>& GlobalNamespace::OvrAvatar::dyn_cachedRightHandTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_cachedRightHandTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedRightHandTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ovrAvatarTransform>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean showLeftController
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_showLeftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_showLeftController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLeftController"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean showRightController
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_showRightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_showRightController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showRightController"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt64 oculusUserIDInternal
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OvrAvatar::dyn_oculusUserIDInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_oculusUserIDInternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusUserIDInternal"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: OvrAvatarBase Base
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarBase*& GlobalNamespace::OvrAvatar::dyn_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Base");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Base"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: OvrAvatarTouchController ControllerLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarTouchController*& GlobalNamespace::OvrAvatar::dyn_ControllerLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_ControllerLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ControllerLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarTouchController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: OvrAvatarTouchController ControllerRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarTouchController*& GlobalNamespace::OvrAvatar::dyn_ControllerRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_ControllerRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ControllerRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarTouchController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: OvrAvatarBody Body
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarBody*& GlobalNamespace::OvrAvatar::dyn_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_Body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Body"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarBody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: OvrAvatarHand HandLeft
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarHand*& GlobalNamespace::OvrAvatar::dyn_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_HandLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandLeft"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: OvrAvatarHand HandRight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarHand*& GlobalNamespace::OvrAvatar::dyn_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_HandRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HandRight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarHand**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ovrAvatarLookAndFeelVersion LookAndFeelVersion
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarLookAndFeelVersion& GlobalNamespace::OvrAvatar::dyn_LookAndFeelVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_LookAndFeelVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LookAndFeelVersion"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarLookAndFeelVersion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarLookAndFeelVersion& GlobalNamespace::OvrAvatar::dyn_FallbackLookAndFeelVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_FallbackLookAndFeelVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FallbackLookAndFeelVersion"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarLookAndFeelVersion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OvrAvatarPacket CurrentUnityPacket
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarPacket*& GlobalNamespace::OvrAvatar::dyn_CurrentUnityPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_CurrentUnityPacket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentUnityPacket"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarPacket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.EventHandler`1<OvrAvatar/PacketEventArgs> PacketRecorded
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::GlobalNamespace::OvrAvatar::PacketEventArgs*>*& GlobalNamespace::OvrAvatar::dyn_PacketRecorded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_PacketRecorded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PacketRecorded"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::GlobalNamespace::OvrAvatar::PacketEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single VoiceAmplitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OvrAvatar::dyn_VoiceAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_VoiceAmplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VoiceAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMouthVertexAnimation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatar::dyn_EnableMouthVertexAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::dyn_EnableMouthVertexAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMouthVertexAnimation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatar..cctor
void GlobalNamespace::OvrAvatar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OvrAvatar.OnDestroy
void GlobalNamespace::OvrAvatar::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.AssetLoadedCallback
void GlobalNamespace::OvrAvatar::AssetLoadedCallback(::GlobalNamespace::OvrAvatarAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::AssetLoadedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssetLoadedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: OvrAvatar.CombinedMeshLoadedCallback
void GlobalNamespace::OvrAvatar::CombinedMeshLoadedCallback(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::CombinedMeshLoadedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CombinedMeshLoadedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, assetPtr);
}
// Autogenerated method: OvrAvatar.AddSkinnedMeshRenderComponent
::GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent* GlobalNamespace::OvrAvatar::AddSkinnedMeshRenderComponent(::UnityEngine::GameObject* gameObject, ::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::AddSkinnedMeshRenderComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSkinnedMeshRenderComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(skinnedMeshRender)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent*, false>(this, ___internal__method, gameObject, skinnedMeshRender);
}
// Autogenerated method: OvrAvatar.AddSkinnedMeshRenderPBSComponent
::GlobalNamespace::OvrAvatarSkinnedMeshRenderPBSComponent* GlobalNamespace::OvrAvatar::AddSkinnedMeshRenderPBSComponent(::UnityEngine::GameObject* gameObject, ::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::AddSkinnedMeshRenderPBSComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSkinnedMeshRenderPBSComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(skinnedMeshRenderPBS)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarSkinnedMeshRenderPBSComponent*, false>(this, ___internal__method, gameObject, skinnedMeshRenderPBS);
}
// Autogenerated method: OvrAvatar.AddSkinnedMeshRenderPBSV2Component
::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent* GlobalNamespace::OvrAvatar::AddSkinnedMeshRenderPBSV2Component(::System::IntPtr renderPart, ::UnityEngine::GameObject* go, ::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::AddSkinnedMeshRenderPBSV2Component");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSkinnedMeshRenderPBSV2Component", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(skinnedMeshRenderPBSV2), ::il2cpp_utils::ExtractType(isBodyPartZero), ::il2cpp_utils::ExtractType(isControllerModel)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent*, false>(this, ___internal__method, renderPart, go, skinnedMeshRenderPBSV2, isBodyPartZero, isControllerModel);
}
// Autogenerated method: OvrAvatar.GetRenderPart
::System::IntPtr GlobalNamespace::OvrAvatar::GetRenderPart(::GlobalNamespace::ovrAvatarComponent component, uint renderPartIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::GetRenderPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "GetRenderPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(renderPartIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, renderPartIndex);
}
// Autogenerated method: OvrAvatar.GetRenderPartName
::StringW GlobalNamespace::OvrAvatar::GetRenderPartName(::GlobalNamespace::ovrAvatarComponent component, uint renderPartIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::GetRenderPartName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "GetRenderPartName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(renderPartIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, renderPartIndex);
}
// Autogenerated method: OvrAvatar.ConvertTransform
void GlobalNamespace::OvrAvatar::ConvertTransform(::ArrayW<float> transform, ByRef<::GlobalNamespace::ovrAvatarTransform> target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::ConvertTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "ConvertTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, byref(target));
}
// Autogenerated method: OvrAvatar.ConvertTransform
void GlobalNamespace::OvrAvatar::ConvertTransform(::GlobalNamespace::ovrAvatarTransform transform, ::UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::ConvertTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "ConvertTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, target);
}
// Autogenerated method: OvrAvatar.CreateOvrAvatarTransform
::GlobalNamespace::ovrAvatarTransform GlobalNamespace::OvrAvatar::CreateOvrAvatarTransform(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion orientation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::CreateOvrAvatarTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "CreateOvrAvatarTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(orientation)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, orientation);
}
// Autogenerated method: OvrAvatar.CreateOvrGazeTarget
::GlobalNamespace::ovrAvatarGazeTarget GlobalNamespace::OvrAvatar::CreateOvrGazeTarget(uint targetId, ::UnityEngine::Vector3 targetPosition, ::GlobalNamespace::ovrAvatarGazeTargetType targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::CreateOvrGazeTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "CreateOvrGazeTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetId), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarGazeTarget, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetId, targetPosition, targetType);
}
// Autogenerated method: OvrAvatar.BuildRenderComponents
void GlobalNamespace::OvrAvatar::BuildRenderComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::BuildRenderComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildRenderComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.UpdateCustomPoses
void GlobalNamespace::OvrAvatar::UpdateCustomPoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::UpdateCustomPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCustomPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.UpdatePoseRoot
bool GlobalNamespace::OvrAvatar::UpdatePoseRoot(::UnityEngine::Transform* poseRoot, ByRef<::UnityEngine::Transform*> cachedPoseRoot, ByRef<::ArrayW<::UnityEngine::Transform*>> cachedPoseJoints, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>> transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::UpdatePoseRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "UpdatePoseRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseRoot), ::il2cpp_utils::ExtractType(cachedPoseRoot), ::il2cpp_utils::ExtractType(cachedPoseJoints), ::il2cpp_utils::ExtractType(transforms)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, poseRoot, byref(cachedPoseRoot), byref(cachedPoseJoints), byref(transforms));
}
// Autogenerated method: OvrAvatar.UpdateTransforms
bool GlobalNamespace::OvrAvatar::UpdateTransforms(::ArrayW<::UnityEngine::Transform*> joints, ::ArrayW<::GlobalNamespace::ovrAvatarTransform> transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::UpdateTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "UpdateTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joints), ::il2cpp_utils::ExtractType(transforms)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joints, transforms);
}
// Autogenerated method: OvrAvatar.OrderJoints
void GlobalNamespace::OvrAvatar::OrderJoints(::UnityEngine::Transform* transform, ::System::Collections::Generic::List_1<::UnityEngine::Transform*>* joints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::OrderJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "OrderJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(joints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, joints);
}
// Autogenerated method: OvrAvatar.AvatarSpecificationCallback
void GlobalNamespace::OvrAvatar::AvatarSpecificationCallback(::System::IntPtr avatarSpecification) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::AvatarSpecificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AvatarSpecificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarSpecification)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarSpecification);
}
// Autogenerated method: OvrAvatar.Start
void GlobalNamespace::OvrAvatar::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.Update
void GlobalNamespace::OvrAvatar::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.CreateInputState
::GlobalNamespace::ovrAvatarHandInputState GlobalNamespace::OvrAvatar::CreateInputState(::GlobalNamespace::ovrAvatarTransform transform, ::GlobalNamespace::OvrAvatarDriver::ControllerPose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::CreateInputState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "CreateInputState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(pose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarHandInputState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, pose);
}
// Autogenerated method: OvrAvatar.ShowControllers
void GlobalNamespace::OvrAvatar::ShowControllers(bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::ShowControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, show);
}
// Autogenerated method: OvrAvatar.ShowLeftController
void GlobalNamespace::OvrAvatar::ShowLeftController(bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::ShowLeftController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowLeftController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, show);
}
// Autogenerated method: OvrAvatar.ShowRightController
void GlobalNamespace::OvrAvatar::ShowRightController(bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::ShowRightController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowRightController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, show);
}
// Autogenerated method: OvrAvatar.UpdateVoiceVisualization
void GlobalNamespace::OvrAvatar::UpdateVoiceVisualization(::ArrayW<float> voiceSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::UpdateVoiceVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVoiceVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voiceSamples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voiceSamples);
}
// Autogenerated method: OvrAvatar.RecordFrame
void GlobalNamespace::OvrAvatar::RecordFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::RecordFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.RecordUnityFrame
void GlobalNamespace::OvrAvatar::RecordUnityFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::RecordUnityFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordUnityFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.RecordSDKFrame
void GlobalNamespace::OvrAvatar::RecordSDKFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::RecordSDKFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordSDKFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.AddRenderParts
void GlobalNamespace::OvrAvatar::AddRenderParts(::GlobalNamespace::OvrAvatarComponent_* ovrComponent, ::GlobalNamespace::ovrAvatarComponent component, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::AddRenderParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRenderParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ovrComponent), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ovrComponent, component, parent);
}
// Autogenerated method: OvrAvatar.RefreshBodyParts
void GlobalNamespace::OvrAvatar::RefreshBodyParts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::RefreshBodyParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshBodyParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.GetBodyComponent
::System::Nullable_1<::GlobalNamespace::ovrAvatarBodyComponent> GlobalNamespace::OvrAvatar::GetBodyComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::GetBodyComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBodyComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::GlobalNamespace::ovrAvatarBodyComponent>, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.GetHandTransform
::UnityEngine::Transform* GlobalNamespace::OvrAvatar::GetHandTransform(::GlobalNamespace::OvrAvatar::HandType hand, ::GlobalNamespace::OvrAvatar::HandJoint joint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::GetHandTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(joint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, hand, joint);
}
// Autogenerated method: OvrAvatar.GetPointingDirection
void GlobalNamespace::OvrAvatar::GetPointingDirection(::GlobalNamespace::OvrAvatar::HandType hand, ByRef<::UnityEngine::Vector3> forward, ByRef<::UnityEngine::Vector3> up) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::GetPointingDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointingDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(forward), ::il2cpp_utils::ExtractType(up)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, byref(forward), byref(up));
}
// Autogenerated method: OvrAvatar.UpdateVoiceBehavior
void GlobalNamespace::OvrAvatar::UpdateVoiceBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::UpdateVoiceBehavior");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVoiceBehavior", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.IsValidMic
bool GlobalNamespace::OvrAvatar::IsValidMic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::IsValidMic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidMic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.InitPostLoad
void GlobalNamespace::OvrAvatar::InitPostLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::InitPostLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitPostLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.ExpressiveGlobalInit
void GlobalNamespace::OvrAvatar::ExpressiveGlobalInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::ExpressiveGlobalInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "ExpressiveGlobalInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OvrAvatar.InitializeLights
void GlobalNamespace::OvrAvatar::InitializeLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::InitializeLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "InitializeLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OvrAvatar.CreateLightDirectional
::GlobalNamespace::ovrAvatarLight GlobalNamespace::OvrAvatar::CreateLightDirectional(uint id, ::UnityEngine::Vector3 direction, float intensity, ByRef<::GlobalNamespace::ovrAvatarLight> light) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::CreateLightDirectional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "CreateLightDirectional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(intensity), ::il2cpp_utils::ExtractType(light)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarLight, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, direction, intensity, byref(light));
}
// Autogenerated method: OvrAvatar.CreateLightPoint
::GlobalNamespace::ovrAvatarLight GlobalNamespace::OvrAvatar::CreateLightPoint(uint id, ::UnityEngine::Vector3 position, float range, float intensity, ByRef<::GlobalNamespace::ovrAvatarLight> light) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::CreateLightPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "CreateLightPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(range), ::il2cpp_utils::ExtractType(intensity), ::il2cpp_utils::ExtractType(light)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarLight, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, position, range, intensity, byref(light));
}
// Autogenerated method: OvrAvatar.CreateLightSpot
::GlobalNamespace::ovrAvatarLight GlobalNamespace::OvrAvatar::CreateLightSpot(uint id, ::UnityEngine::Vector3 position, ::UnityEngine::Vector3 direction, float spotAngleDeg, float range, float intensity, ByRef<::GlobalNamespace::ovrAvatarLight> light) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::CreateLightSpot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatar", "CreateLightSpot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(spotAngleDeg), ::il2cpp_utils::ExtractType(range), ::il2cpp_utils::ExtractType(intensity), ::il2cpp_utils::ExtractType(light)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarLight, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, position, direction, spotAngleDeg, range, intensity, byref(light));
}
// Autogenerated method: OvrAvatar.UpdateExpressive
void GlobalNamespace::OvrAvatar::UpdateExpressive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::UpdateExpressive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateExpressive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.ConfigureHelpers
void GlobalNamespace::OvrAvatar::ConfigureHelpers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::ConfigureHelpers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureHelpers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.WaitForMouthAudioSource
::System::Collections::IEnumerator* GlobalNamespace::OvrAvatar::WaitForMouthAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::WaitForMouthAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForMouthAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.DestroyHelperObjects
void GlobalNamespace::OvrAvatar::DestroyHelperObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::DestroyHelperObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyHelperObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar.CreateHelperObject
::UnityEngine::GameObject* GlobalNamespace::OvrAvatar::CreateHelperObject(::UnityEngine::Transform* parent, ::UnityEngine::Vector3 localPositionOffset, ::StringW helperName, ::StringW helperTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::CreateHelperObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateHelperObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(localPositionOffset), ::il2cpp_utils::ExtractType(helperName), ::il2cpp_utils::ExtractType(helperTag)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, parent, localPositionOffset, helperName, helperTag);
}
// Autogenerated method: OvrAvatar.UpdateVoiceData
void GlobalNamespace::OvrAvatar::UpdateVoiceData(::ArrayW<int16_t> pcmData, int numChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::UpdateVoiceData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVoiceData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmData), ::il2cpp_utils::ExtractType(numChannels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcmData, numChannels);
}
// Autogenerated method: OvrAvatar.UpdateVoiceData
void GlobalNamespace::OvrAvatar::UpdateVoiceData(::ArrayW<float> pcmData, int numChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::UpdateVoiceData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVoiceData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmData), ::il2cpp_utils::ExtractType(numChannels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcmData, numChannels);
}
// Autogenerated method: OvrAvatar.UpdateFacewave
void GlobalNamespace::OvrAvatar::UpdateFacewave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::UpdateFacewave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFacewave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatar/PacketEventArgs
#include "GlobalNamespace/OvrAvatar_PacketEventArgs.hpp"
// Including type: OvrAvatarPacket
#include "GlobalNamespace/OvrAvatarPacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly OvrAvatarPacket Packet
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarPacket*& GlobalNamespace::OvrAvatar::PacketEventArgs::dyn_Packet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::PacketEventArgs::dyn_Packet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Packet"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarPacket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatar/HandType
#include "GlobalNamespace/OvrAvatar_HandType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OvrAvatar/HandType Right
::GlobalNamespace::OvrAvatar::HandType GlobalNamespace::OvrAvatar::HandType::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandType::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatar::HandType>("", "OvrAvatar/HandType", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatar/HandType Right
void GlobalNamespace::OvrAvatar::HandType::_set_Right(::GlobalNamespace::OvrAvatar::HandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandType::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar/HandType", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatar/HandType Left
::GlobalNamespace::OvrAvatar::HandType GlobalNamespace::OvrAvatar::HandType::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandType::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatar::HandType>("", "OvrAvatar/HandType", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatar/HandType Left
void GlobalNamespace::OvrAvatar::HandType::_set_Left(::GlobalNamespace::OvrAvatar::HandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandType::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar/HandType", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatar/HandType Max
::GlobalNamespace::OvrAvatar::HandType GlobalNamespace::OvrAvatar::HandType::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandType::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatar::HandType>("", "OvrAvatar/HandType", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatar/HandType Max
void GlobalNamespace::OvrAvatar::HandType::_set_Max(::GlobalNamespace::OvrAvatar::HandType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandType::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar/HandType", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatar::HandType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatar/HandJoint
#include "GlobalNamespace/OvrAvatar_HandJoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OvrAvatar/HandJoint HandBase
::GlobalNamespace::OvrAvatar::HandJoint GlobalNamespace::OvrAvatar::HandJoint::_get_HandBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_get_HandBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatar::HandJoint>("", "OvrAvatar/HandJoint", "HandBase"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatar/HandJoint HandBase
void GlobalNamespace::OvrAvatar::HandJoint::_set_HandBase(::GlobalNamespace::OvrAvatar::HandJoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_set_HandBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar/HandJoint", "HandBase", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatar/HandJoint IndexBase
::GlobalNamespace::OvrAvatar::HandJoint GlobalNamespace::OvrAvatar::HandJoint::_get_IndexBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_get_IndexBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatar::HandJoint>("", "OvrAvatar/HandJoint", "IndexBase"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatar/HandJoint IndexBase
void GlobalNamespace::OvrAvatar::HandJoint::_set_IndexBase(::GlobalNamespace::OvrAvatar::HandJoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_set_IndexBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar/HandJoint", "IndexBase", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatar/HandJoint IndexTip
::GlobalNamespace::OvrAvatar::HandJoint GlobalNamespace::OvrAvatar::HandJoint::_get_IndexTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_get_IndexTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatar::HandJoint>("", "OvrAvatar/HandJoint", "IndexTip"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatar/HandJoint IndexTip
void GlobalNamespace::OvrAvatar::HandJoint::_set_IndexTip(::GlobalNamespace::OvrAvatar::HandJoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_set_IndexTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar/HandJoint", "IndexTip", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatar/HandJoint ThumbBase
::GlobalNamespace::OvrAvatar::HandJoint GlobalNamespace::OvrAvatar::HandJoint::_get_ThumbBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_get_ThumbBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatar::HandJoint>("", "OvrAvatar/HandJoint", "ThumbBase"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatar/HandJoint ThumbBase
void GlobalNamespace::OvrAvatar::HandJoint::_set_ThumbBase(::GlobalNamespace::OvrAvatar::HandJoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_set_ThumbBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar/HandJoint", "ThumbBase", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatar/HandJoint ThumbTip
::GlobalNamespace::OvrAvatar::HandJoint GlobalNamespace::OvrAvatar::HandJoint::_get_ThumbTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_get_ThumbTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatar::HandJoint>("", "OvrAvatar/HandJoint", "ThumbTip"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatar/HandJoint ThumbTip
void GlobalNamespace::OvrAvatar::HandJoint::_set_ThumbTip(::GlobalNamespace::OvrAvatar::HandJoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_set_ThumbTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar/HandJoint", "ThumbTip", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatar/HandJoint Max
::GlobalNamespace::OvrAvatar::HandJoint GlobalNamespace::OvrAvatar::HandJoint::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatar::HandJoint>("", "OvrAvatar/HandJoint", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatar/HandJoint Max
void GlobalNamespace::OvrAvatar::HandJoint::_set_Max(::GlobalNamespace::OvrAvatar::HandJoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatar/HandJoint", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatar::HandJoint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::HandJoint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OvrAvatar/<WaitForMouthAudioSource>d__137
#include "GlobalNamespace/OvrAvatar_-WaitForMouthAudioSource-d__137.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatar <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatar*& GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatar/<WaitForMouthAudioSource>d__137.System.IDisposable.Dispose
void GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar/<WaitForMouthAudioSource>d__137.MoveNext
bool GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar/<WaitForMouthAudioSource>d__137.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar/<WaitForMouthAudioSource>d__137.System.Collections.IEnumerator.Reset
void GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatar/<WaitForMouthAudioSource>d__137.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatar::$WaitForMouthAudioSource$d__137*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarAsset
#include "GlobalNamespace/OvrAvatarAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 assetID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OvrAvatarAsset::dyn_assetID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAsset::dyn_assetID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarAssetMesh
#include "GlobalNamespace/OvrAvatarAssetMesh.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::OvrAvatarAssetMesh::dyn_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetMesh::dyn_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ovrAvatarSkinnedMeshPose skinnedBindPose
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarSkinnedMeshPose& GlobalNamespace::OvrAvatarAssetMesh::dyn_skinnedBindPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetMesh::dyn_skinnedBindPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skinnedBindPose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarSkinnedMeshPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] jointNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::OvrAvatarAssetMesh::dyn_jointNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetMesh::dyn_jointNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jointNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarAssetMesh.LoadSubmeshes
void GlobalNamespace::OvrAvatarAssetMesh::LoadSubmeshes(::System::IntPtr asset, ::System::IntPtr indexBufferPtr, uint64_t indexCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetMesh::LoadSubmeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSubmeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(indexBufferPtr), ::il2cpp_utils::ExtractType(indexCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset, indexBufferPtr, indexCount);
}
// Autogenerated method: OvrAvatarAssetMesh.LoadBlendShapes
void GlobalNamespace::OvrAvatarAssetMesh::LoadBlendShapes(::System::IntPtr asset, int64_t vertexCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetMesh::LoadBlendShapes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBlendShapes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(vertexCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset, vertexCount);
}
// Autogenerated method: OvrAvatarAssetMesh.SetSkinnedBindPose
void GlobalNamespace::OvrAvatarAssetMesh::SetSkinnedBindPose(::System::IntPtr asset, ::GlobalNamespace::ovrAvatarAssetType meshType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetMesh::SetSkinnedBindPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSkinnedBindPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(meshType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset, meshType);
}
// Autogenerated method: OvrAvatarAssetMesh.GetVertexAndIndexData
void GlobalNamespace::OvrAvatarAssetMesh::GetVertexAndIndexData(::System::IntPtr asset, ::GlobalNamespace::ovrAvatarAssetType meshType, ByRef<int64_t> vertexCount, ByRef<::System::IntPtr> vertexBuffer, ByRef<uint> indexCount, ByRef<::System::IntPtr> indexBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetMesh::GetVertexAndIndexData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexAndIndexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset, meshType, byref(vertexCount), byref(vertexBuffer), byref(indexCount), byref(indexBuffer));
}
// Autogenerated method: OvrAvatarAssetMesh.CreateSkinnedMeshRendererOnObject
::UnityEngine::SkinnedMeshRenderer* GlobalNamespace::OvrAvatarAssetMesh::CreateSkinnedMeshRendererOnObject(::UnityEngine::GameObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetMesh::CreateSkinnedMeshRendererOnObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSkinnedMeshRendererOnObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SkinnedMeshRenderer*, false>(this, ___internal__method, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarAssetTexture
#include "GlobalNamespace/OvrAvatarAssetTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 ASTCHeaderSize
int GlobalNamespace::OvrAvatarAssetTexture::_get_ASTCHeaderSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetTexture::_get_ASTCHeaderSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OvrAvatarAssetTexture", "ASTCHeaderSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ASTCHeaderSize
void GlobalNamespace::OvrAvatarAssetTexture::_set_ASTCHeaderSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetTexture::_set_ASTCHeaderSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarAssetTexture", "ASTCHeaderSize", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D texture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::OvrAvatarAssetTexture::dyn_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetTexture::dyn_texture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarBase
#include "GlobalNamespace/OvrAvatarBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ovrAvatarBaseComponent component
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarBaseComponent& GlobalNamespace::OvrAvatarBase::dyn_component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarBase::dyn_component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "component"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarBaseComponent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarBase.Update
void GlobalNamespace::OvrAvatarBase::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarBase::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarBody
#include "GlobalNamespace/OvrAvatarBody.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ovrAvatarBodyComponent component
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarBodyComponent& GlobalNamespace::OvrAvatarBody::dyn_component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarBody::dyn_component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "component"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarBodyComponent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarBody.GetNativeAvatarComponent
::System::Nullable_1<::GlobalNamespace::ovrAvatarComponent> GlobalNamespace::OvrAvatarBody::GetNativeAvatarComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarBody::GetNativeAvatarComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeAvatarComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::GlobalNamespace::ovrAvatarComponent>, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarBody.Update
void GlobalNamespace::OvrAvatarBody::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarBody::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarComponent
#include "GlobalNamespace/OvrAvatarComponent_.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OvrAvatarRenderComponent
#include "GlobalNamespace/OvrAvatarRenderComponent.hpp"
// Including type: OvrAvatar
#include "GlobalNamespace/OvrAvatar.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: ovrAvatarVisibilityFlags
#include "GlobalNamespace/ovrAvatarVisibilityFlags.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String[] LayerKeywords
::ArrayW<::StringW> GlobalNamespace::OvrAvatarComponent_::_get_LayerKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_get_LayerKeywords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("", "OvrAvatarComponent", "LayerKeywords"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String[] LayerKeywords
void GlobalNamespace::OvrAvatarComponent_::_set_LayerKeywords(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_set_LayerKeywords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarComponent", "LayerKeywords", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String[] LayerSampleModeParameters
::ArrayW<::StringW> GlobalNamespace::OvrAvatarComponent_::_get_LayerSampleModeParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_get_LayerSampleModeParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("", "OvrAvatarComponent", "LayerSampleModeParameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String[] LayerSampleModeParameters
void GlobalNamespace::OvrAvatarComponent_::_set_LayerSampleModeParameters(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_set_LayerSampleModeParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarComponent", "LayerSampleModeParameters", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String[] LayerBlendModeParameters
::ArrayW<::StringW> GlobalNamespace::OvrAvatarComponent_::_get_LayerBlendModeParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_get_LayerBlendModeParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("", "OvrAvatarComponent", "LayerBlendModeParameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String[] LayerBlendModeParameters
void GlobalNamespace::OvrAvatarComponent_::_set_LayerBlendModeParameters(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_set_LayerBlendModeParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarComponent", "LayerBlendModeParameters", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String[] LayerMaskTypeParameters
::ArrayW<::StringW> GlobalNamespace::OvrAvatarComponent_::_get_LayerMaskTypeParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_get_LayerMaskTypeParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("", "OvrAvatarComponent", "LayerMaskTypeParameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String[] LayerMaskTypeParameters
void GlobalNamespace::OvrAvatarComponent_::_set_LayerMaskTypeParameters(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_set_LayerMaskTypeParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarComponent", "LayerMaskTypeParameters", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String[] LayerColorParameters
::ArrayW<::StringW> GlobalNamespace::OvrAvatarComponent_::_get_LayerColorParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_get_LayerColorParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("", "OvrAvatarComponent", "LayerColorParameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String[] LayerColorParameters
void GlobalNamespace::OvrAvatarComponent_::_set_LayerColorParameters(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_set_LayerColorParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarComponent", "LayerColorParameters", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String[] LayerSurfaceParameters
::ArrayW<::StringW> GlobalNamespace::OvrAvatarComponent_::_get_LayerSurfaceParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_get_LayerSurfaceParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("", "OvrAvatarComponent", "LayerSurfaceParameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String[] LayerSurfaceParameters
void GlobalNamespace::OvrAvatarComponent_::_set_LayerSurfaceParameters(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_set_LayerSurfaceParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarComponent", "LayerSurfaceParameters", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String[] LayerSampleParametersParameters
::ArrayW<::StringW> GlobalNamespace::OvrAvatarComponent_::_get_LayerSampleParametersParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_get_LayerSampleParametersParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("", "OvrAvatarComponent", "LayerSampleParametersParameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String[] LayerSampleParametersParameters
void GlobalNamespace::OvrAvatarComponent_::_set_LayerSampleParametersParameters(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_set_LayerSampleParametersParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarComponent", "LayerSampleParametersParameters", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String[] LayerMaskParametersParameters
::ArrayW<::StringW> GlobalNamespace::OvrAvatarComponent_::_get_LayerMaskParametersParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_get_LayerMaskParametersParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("", "OvrAvatarComponent", "LayerMaskParametersParameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String[] LayerMaskParametersParameters
void GlobalNamespace::OvrAvatarComponent_::_set_LayerMaskParametersParameters(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_set_LayerMaskParametersParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarComponent", "LayerMaskParametersParameters", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String[] LayerMaskAxisParameters
::ArrayW<::StringW> GlobalNamespace::OvrAvatarComponent_::_get_LayerMaskAxisParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_get_LayerMaskAxisParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("", "OvrAvatarComponent", "LayerMaskAxisParameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String[] LayerMaskAxisParameters
void GlobalNamespace::OvrAvatarComponent_::_set_LayerMaskAxisParameters(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::_set_LayerMaskAxisParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarComponent", "LayerMaskAxisParameters", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Material,ovrAvatarMaterialState> materialStates
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Material*, ::GlobalNamespace::ovrAvatarMaterialState>*& GlobalNamespace::OvrAvatarComponent_::dyn_materialStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::dyn_materialStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialStates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Material*, ::GlobalNamespace::ovrAvatarMaterialState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OvrAvatarRenderComponent> RenderParts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OvrAvatarRenderComponent*>*& GlobalNamespace::OvrAvatarComponent_::dyn_RenderParts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::dyn_RenderParts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RenderParts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OvrAvatarRenderComponent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OvrAvatar owner
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatar*& GlobalNamespace::OvrAvatarComponent_::dyn_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::dyn_owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owner"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected ovrAvatarComponent nativeAvatarComponent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarComponent& GlobalNamespace::OvrAvatarComponent_::dyn_nativeAvatarComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::dyn_nativeAvatarComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeAvatarComponent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarComponent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarComponent.SetOvrAvatarOwner
void GlobalNamespace::OvrAvatarComponent_::SetOvrAvatarOwner(::GlobalNamespace::OvrAvatar* ovrAvatarOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::SetOvrAvatarOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOvrAvatarOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ovrAvatarOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ovrAvatarOwner);
}
// Autogenerated method: OvrAvatarComponent.UpdateAvatar
void GlobalNamespace::OvrAvatarComponent_::UpdateAvatar(::System::IntPtr nativeComponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::UpdateAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeComponent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nativeComponent);
}
// Autogenerated method: OvrAvatarComponent.UpdateActive
void GlobalNamespace::OvrAvatarComponent_::UpdateActive(::GlobalNamespace::OvrAvatar* avatar, ::GlobalNamespace::ovrAvatarVisibilityFlags mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::UpdateActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatar, mask);
}
// Autogenerated method: OvrAvatarComponent.UpdateAvatarMaterial
void GlobalNamespace::OvrAvatarComponent_::UpdateAvatarMaterial(::UnityEngine::Material* mat, ::GlobalNamespace::ovrAvatarMaterialState matState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::UpdateAvatarMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatarMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(matState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat, matState);
}
// Autogenerated method: OvrAvatarComponent.GetLoadedTexture
::UnityEngine::Texture2D* GlobalNamespace::OvrAvatarComponent_::GetLoadedTexture(uint64_t assetId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::GetLoadedTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarComponent", "GetLoadedTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetId);
}
// Autogenerated method: OvrAvatarComponent..cctor
void GlobalNamespace::OvrAvatarComponent_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarComponent_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarComponent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarDriver
#include "GlobalNamespace/OvrAvatarDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OvrAvatarDriver/PacketMode Mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarDriver::PacketMode& GlobalNamespace::OvrAvatarDriver::dyn_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::dyn_Mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarDriver::PacketMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected OvrAvatarDriver/PoseFrame CurrentPose
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarDriver::PoseFrame& GlobalNamespace::OvrAvatarDriver::dyn_CurrentPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::dyn_CurrentPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentPose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarDriver::PoseFrame*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ovrAvatarControllerType ControllerType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarControllerType& GlobalNamespace::OvrAvatarDriver::dyn_ControllerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::dyn_ControllerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ControllerType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarControllerType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarDriver.GetCurrentPose
::GlobalNamespace::OvrAvatarDriver::PoseFrame GlobalNamespace::OvrAvatarDriver::GetCurrentPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::GetCurrentPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::PoseFrame, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarDriver.UpdateTransforms
void GlobalNamespace::OvrAvatarDriver::UpdateTransforms(::System::IntPtr sdkAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::UpdateTransforms");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarDriver*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sdkAvatar);
}
// Autogenerated method: OvrAvatarDriver.Start
void GlobalNamespace::OvrAvatarDriver::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarDriver.UpdateTransformsFromPose
void GlobalNamespace::OvrAvatarDriver::UpdateTransformsFromPose(::System::IntPtr sdkAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::UpdateTransformsFromPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTransformsFromPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sdkAvatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sdkAvatar);
}
// Autogenerated method: OvrAvatarDriver.GetIsTrackedRemote
bool GlobalNamespace::OvrAvatarDriver::GetIsTrackedRemote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::GetIsTrackedRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarDriver", "GetIsTrackedRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarDriver/PacketMode
#include "GlobalNamespace/OvrAvatarDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OvrAvatarDriver/PacketMode SDK
::GlobalNamespace::OvrAvatarDriver::PacketMode GlobalNamespace::OvrAvatarDriver::PacketMode::_get_SDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PacketMode::_get_SDK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatarDriver::PacketMode>("", "OvrAvatarDriver/PacketMode", "SDK"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatarDriver/PacketMode SDK
void GlobalNamespace::OvrAvatarDriver::PacketMode::_set_SDK(::GlobalNamespace::OvrAvatarDriver::PacketMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PacketMode::_set_SDK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarDriver/PacketMode", "SDK", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatarDriver/PacketMode Unity
::GlobalNamespace::OvrAvatarDriver::PacketMode GlobalNamespace::OvrAvatarDriver::PacketMode::_get_Unity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PacketMode::_get_Unity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatarDriver::PacketMode>("", "OvrAvatarDriver/PacketMode", "Unity"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatarDriver/PacketMode Unity
void GlobalNamespace::OvrAvatarDriver::PacketMode::_set_Unity(::GlobalNamespace::OvrAvatarDriver::PacketMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PacketMode::_set_Unity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarDriver/PacketMode", "Unity", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarDriver::PacketMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PacketMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarDriver/ControllerPose
#include "GlobalNamespace/OvrAvatarDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ovrAvatarButton buttons
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarButton& GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_buttons");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttons"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarTouch touches
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarTouch& GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_touches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_touches");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touches"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarTouch*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 joystickPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_joystickPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_joystickPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joystickPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single indexTrigger
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_indexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_indexTrigger");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indexTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single handTrigger
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_handTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_handTrigger");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::ControllerPose::dyn_isActive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarDriver/ControllerPose.Interpolate
::GlobalNamespace::OvrAvatarDriver::ControllerPose GlobalNamespace::OvrAvatarDriver::ControllerPose::Interpolate(::GlobalNamespace::OvrAvatarDriver::ControllerPose a, ::GlobalNamespace::OvrAvatarDriver::ControllerPose b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::ControllerPose::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarDriver/ControllerPose", "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::ControllerPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarDriver/PoseFrame
#include "GlobalNamespace/OvrAvatarDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 headPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_headPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_headPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion headRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_headRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_headRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 handLeftPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_handLeftPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_handLeftPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handLeftPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion handLeftRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_handLeftRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_handLeftRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handLeftRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 handRightPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_handRightPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_handRightPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handRightPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion handRightRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_handRightRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_handRightRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handRightRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single voiceAmplitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_voiceAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_voiceAmplitude");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatarDriver/ControllerPose controllerLeftPose
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarDriver::ControllerPose& GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_controllerLeftPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_controllerLeftPose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerLeftPose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarDriver::ControllerPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatarDriver/ControllerPose controllerRightPose
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarDriver::ControllerPose& GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_controllerRightPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PoseFrame::dyn_controllerRightPose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRightPose"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarDriver::ControllerPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarDriver/PoseFrame.Interpolate
::GlobalNamespace::OvrAvatarDriver::PoseFrame GlobalNamespace::OvrAvatarDriver::PoseFrame::Interpolate(::GlobalNamespace::OvrAvatarDriver::PoseFrame a, ::GlobalNamespace::OvrAvatarDriver::PoseFrame b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarDriver::PoseFrame::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarDriver/PoseFrame", "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::PoseFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarHand
#include "GlobalNamespace/OvrAvatarHand.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isLeftHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarHand::dyn_isLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarHand::dyn_isLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLeftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ovrAvatarHandComponent component
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarHandComponent& GlobalNamespace::OvrAvatarHand::dyn_component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarHand::dyn_component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "component"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarHandComponent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarHand.Update
void GlobalNamespace::OvrAvatarHand::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarHand::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarLocalDriver
#include "GlobalNamespace/OvrAvatarLocalDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 centerEyePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OvrAvatarLocalDriver::dyn_centerEyePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarLocalDriver::dyn_centerEyePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerEyePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion centerEyeRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OvrAvatarLocalDriver::dyn_centerEyeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarLocalDriver::dyn_centerEyeRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerEyeRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single voiceAmplitude
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OvrAvatarLocalDriver::dyn_voiceAmplitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarLocalDriver::dyn_voiceAmplitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceAmplitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarLocalDriver.GetMalibuControllerPose
::GlobalNamespace::OvrAvatarDriver::ControllerPose GlobalNamespace::OvrAvatarLocalDriver::GetMalibuControllerPose(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarLocalDriver::GetMalibuControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMalibuControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::ControllerPose, false>(this, ___internal__method, controller);
}
// Autogenerated method: OvrAvatarLocalDriver.GetControllerPose
::GlobalNamespace::OvrAvatarDriver::ControllerPose GlobalNamespace::OvrAvatarLocalDriver::GetControllerPose(::GlobalNamespace::OVRInput::Controller controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarLocalDriver::GetControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::ControllerPose, false>(this, ___internal__method, controller);
}
// Autogenerated method: OvrAvatarLocalDriver.CalculateCurrentPose
void GlobalNamespace::OvrAvatarLocalDriver::CalculateCurrentPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarLocalDriver::CalculateCurrentPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCurrentPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarLocalDriver.UpdateTransforms
void GlobalNamespace::OvrAvatarLocalDriver::UpdateTransforms(::System::IntPtr sdkAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarLocalDriver::UpdateTransforms");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarDriver*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sdkAvatar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarMaterialManager
#include "GlobalNamespace/OvrAvatarMaterialManager.hpp"
// Including type: OvrAvatarMaterialManager/TextureType
#include "GlobalNamespace/OvrAvatarMaterialManager_TextureType.hpp"
// Including type: OvrAvatarMaterialManager/AvatarComponentMaterialProperties
#include "GlobalNamespace/OvrAvatarMaterialManager_AvatarComponentMaterialProperties.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OvrAvatarMaterialManager/AvatarMaterialPropertyBlock
#include "GlobalNamespace/OvrAvatarMaterialManager_AvatarMaterialPropertyBlock.hpp"
// Including type: OvrAvatarMaterialManager/AvatarMaterialConfig
#include "GlobalNamespace/OvrAvatarMaterialManager_AvatarMaterialConfig.hpp"
// Including type: OvrAvatarMaterialManager/<RunLoadingAnimation>d__49
#include "GlobalNamespace/OvrAvatarMaterialManager_-RunLoadingAnimation-d__49.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Texture2DArray
#include "UnityEngine/Texture2DArray.hpp"
// Including type: ovrAvatarBodyPartType
#include "GlobalNamespace/ovrAvatarBodyPartType.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_LOADER
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_LOADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_LOADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_LOADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_LOADER
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_LOADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_LOADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_LOADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_MAINTEX
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_MAINTEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_MAINTEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_MAINTEX"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_MAINTEX
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_MAINTEX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_MAINTEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_MAINTEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_NORMALMAP
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_NORMALMAP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_NORMALMAP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_NORMALMAP"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_NORMALMAP
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_NORMALMAP(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_NORMALMAP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_NORMALMAP", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_ROUGHNESSMAP
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_ROUGHNESSMAP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_ROUGHNESSMAP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_ROUGHNESSMAP"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_ROUGHNESSMAP
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_ROUGHNESSMAP(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_ROUGHNESSMAP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_ROUGHNESSMAP", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_COLOR
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_COLOR
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_COLOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_DIFFUSEINTENSITY
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_DIFFUSEINTENSITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_DIFFUSEINTENSITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_DIFFUSEINTENSITY"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_DIFFUSEINTENSITY
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_DIFFUSEINTENSITY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_DIFFUSEINTENSITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_DIFFUSEINTENSITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_RIMINTENSITY
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_RIMINTENSITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_RIMINTENSITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_RIMINTENSITY"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_RIMINTENSITY
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_RIMINTENSITY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_RIMINTENSITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_RIMINTENSITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_REFLECTIONINTENSITY
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_REFLECTIONINTENSITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_REFLECTIONINTENSITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_REFLECTIONINTENSITY"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_REFLECTIONINTENSITY
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_REFLECTIONINTENSITY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_REFLECTIONINTENSITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_REFLECTIONINTENSITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_CUBEMAP
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_CUBEMAP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_CUBEMAP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_CUBEMAP"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_CUBEMAP
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_CUBEMAP(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_CUBEMAP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_CUBEMAP", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_ALPHA
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_ALPHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_ALPHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_ALPHA"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_ALPHA
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_ALPHA(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_ALPHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_ALPHA", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_LOADING_DIMMER
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_LOADING_DIMMER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_LOADING_DIMMER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_LOADING_DIMMER"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_LOADING_DIMMER
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_LOADING_DIMMER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_LOADING_DIMMER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_LOADING_DIMMER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_IRIS_COLOR
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_IRIS_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_IRIS_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_IRIS_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_IRIS_COLOR
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_IRIS_COLOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_IRIS_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_IRIS_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_LIP_COLOR
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_LIP_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_LIP_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_LIP_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_LIP_COLOR
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_LIP_COLOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_LIP_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_LIP_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_BROW_COLOR
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_BROW_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_BROW_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_BROW_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_BROW_COLOR
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_BROW_COLOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_BROW_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_BROW_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_LASH_COLOR
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_LASH_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_LASH_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_LASH_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_LASH_COLOR
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_LASH_COLOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_LASH_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_LASH_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_SCLERA_COLOR
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_SCLERA_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_SCLERA_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_SCLERA_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_SCLERA_COLOR
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_SCLERA_COLOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_SCLERA_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_SCLERA_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_GUM_COLOR
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_GUM_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_GUM_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_GUM_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_GUM_COLOR
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_GUM_COLOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_GUM_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_GUM_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_TEETH_COLOR
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_TEETH_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_TEETH_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_TEETH_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_TEETH_COLOR
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_TEETH_COLOR(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_TEETH_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_TEETH_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String AVATAR_SHADER_LIP_SMOOTHNESS
::StringW GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_LIP_SMOOTHNESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_AVATAR_SHADER_LIP_SMOOTHNESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarMaterialManager", "AVATAR_SHADER_LIP_SMOOTHNESS"));
}
// Autogenerated static field setter
// Set static field: static public System.String AVATAR_SHADER_LIP_SMOOTHNESS
void GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_LIP_SMOOTHNESS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_AVATAR_SHADER_LIP_SMOOTHNESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "AVATAR_SHADER_LIP_SMOOTHNESS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single[] DiffuseIntensities
::ArrayW<float> GlobalNamespace::OvrAvatarMaterialManager::_get_DiffuseIntensities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_DiffuseIntensities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "OvrAvatarMaterialManager", "DiffuseIntensities"));
}
// Autogenerated static field setter
// Set static field: static public System.Single[] DiffuseIntensities
void GlobalNamespace::OvrAvatarMaterialManager::_set_DiffuseIntensities(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_DiffuseIntensities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "DiffuseIntensities", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single[] RimIntensities
::ArrayW<float> GlobalNamespace::OvrAvatarMaterialManager::_get_RimIntensities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_RimIntensities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "OvrAvatarMaterialManager", "RimIntensities"));
}
// Autogenerated static field setter
// Set static field: static public System.Single[] RimIntensities
void GlobalNamespace::OvrAvatarMaterialManager::_set_RimIntensities(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_RimIntensities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "RimIntensities", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single[] ReflectionIntensities
::ArrayW<float> GlobalNamespace::OvrAvatarMaterialManager::_get_ReflectionIntensities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_ReflectionIntensities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("", "OvrAvatarMaterialManager", "ReflectionIntensities"));
}
// Autogenerated static field setter
// Set static field: static public System.Single[] ReflectionIntensities
void GlobalNamespace::OvrAvatarMaterialManager::_set_ReflectionIntensities(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_ReflectionIntensities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "ReflectionIntensities", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LOADING_ANIMATION_AMPLITUDE
float GlobalNamespace::OvrAvatarMaterialManager::_get_LOADING_ANIMATION_AMPLITUDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_LOADING_ANIMATION_AMPLITUDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OvrAvatarMaterialManager", "LOADING_ANIMATION_AMPLITUDE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LOADING_ANIMATION_AMPLITUDE
void GlobalNamespace::OvrAvatarMaterialManager::_set_LOADING_ANIMATION_AMPLITUDE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_LOADING_ANIMATION_AMPLITUDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "LOADING_ANIMATION_AMPLITUDE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LOADING_ANIMATION_PERIOD
float GlobalNamespace::OvrAvatarMaterialManager::_get_LOADING_ANIMATION_PERIOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_LOADING_ANIMATION_PERIOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OvrAvatarMaterialManager", "LOADING_ANIMATION_PERIOD"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LOADING_ANIMATION_PERIOD
void GlobalNamespace::OvrAvatarMaterialManager::_set_LOADING_ANIMATION_PERIOD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_LOADING_ANIMATION_PERIOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "LOADING_ANIMATION_PERIOD", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LOADING_ANIMATION_CURVE_SCALE
float GlobalNamespace::OvrAvatarMaterialManager::_get_LOADING_ANIMATION_CURVE_SCALE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_LOADING_ANIMATION_CURVE_SCALE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OvrAvatarMaterialManager", "LOADING_ANIMATION_CURVE_SCALE"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LOADING_ANIMATION_CURVE_SCALE
void GlobalNamespace::OvrAvatarMaterialManager::_set_LOADING_ANIMATION_CURVE_SCALE(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_LOADING_ANIMATION_CURVE_SCALE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "LOADING_ANIMATION_CURVE_SCALE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single LOADING_ANIMATION_DIMMER_MIN
float GlobalNamespace::OvrAvatarMaterialManager::_get_LOADING_ANIMATION_DIMMER_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_get_LOADING_ANIMATION_DIMMER_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OvrAvatarMaterialManager", "LOADING_ANIMATION_DIMMER_MIN"));
}
// Autogenerated static field setter
// Set static field: static private System.Single LOADING_ANIMATION_DIMMER_MIN
void GlobalNamespace::OvrAvatarMaterialManager::_set_LOADING_ANIMATION_DIMMER_MIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::_set_LOADING_ANIMATION_DIMMER_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager", "LOADING_ANIMATION_DIMMER_MIN", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer TargetRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::OvrAvatarMaterialManager::dyn_TargetRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::dyn_TargetRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OvrAvatarMaterialManager/AvatarTextureArrayProperties[] TextureArrays
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OvrAvatarMaterialManager::AvatarTextureArrayProperties>& GlobalNamespace::OvrAvatarMaterialManager::dyn_TextureArrays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::dyn_TextureArrays");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextureArrays"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OvrAvatarMaterialManager::AvatarTextureArrayProperties>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] TextureTypeToShaderProperties
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::OvrAvatarMaterialManager::dyn_TextureTypeToShaderProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::dyn_TextureTypeToShaderProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextureTypeToShaderProperties"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatarMaterialManager/AvatarMaterialConfig LocalAvatarConfig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialConfig*& GlobalNamespace::OvrAvatarMaterialManager::dyn_LocalAvatarConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::dyn_LocalAvatarConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalAvatarConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Rendering.ReflectionProbeBlendInfo> ReflectionProbes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Rendering::ReflectionProbeBlendInfo>*& GlobalNamespace::OvrAvatarMaterialManager::dyn_ReflectionProbes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::dyn_ReflectionProbes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReflectionProbes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Rendering::ReflectionProbeBlendInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader CombinedShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatarMaterialManager::dyn_CombinedShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::dyn_CombinedShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CombinedShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarMaterialManager.CreateTextureArrays
void GlobalNamespace::OvrAvatarMaterialManager::CreateTextureArrays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::CreateTextureArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextureArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarMaterialManager.SetRenderer
void GlobalNamespace::OvrAvatarMaterialManager::SetRenderer(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::SetRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderer);
}
// Autogenerated method: OvrAvatarMaterialManager.OnCombinedMeshReady
void GlobalNamespace::OvrAvatarMaterialManager::OnCombinedMeshReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::OnCombinedMeshReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCombinedMeshReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarMaterialManager.AddTextureIDToTextureManager
void GlobalNamespace::OvrAvatarMaterialManager::AddTextureIDToTextureManager(uint64_t assetID, bool isSingleComponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::AddTextureIDToTextureManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTextureIDToTextureManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetID), ::il2cpp_utils::ExtractType(isSingleComponent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, assetID, isSingleComponent);
}
// Autogenerated method: OvrAvatarMaterialManager.DeleteTextureSet
void GlobalNamespace::OvrAvatarMaterialManager::DeleteTextureSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::DeleteTextureSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteTextureSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarMaterialManager.InitTextureArrays
void GlobalNamespace::OvrAvatarMaterialManager::InitTextureArrays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::InitTextureArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTextureArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarMaterialManager.ProcessTexturesWithMips
void GlobalNamespace::OvrAvatarMaterialManager::ProcessTexturesWithMips(::ArrayW<::UnityEngine::Texture2D*> textures, int texArrayResolution, ::UnityEngine::Texture2DArray* texArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::ProcessTexturesWithMips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTexturesWithMips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textures), ::il2cpp_utils::ExtractType(texArrayResolution), ::il2cpp_utils::ExtractType(texArray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textures, texArrayResolution, texArray);
}
// Autogenerated method: OvrAvatarMaterialManager.SetMaterialPropertyBlock
void GlobalNamespace::OvrAvatarMaterialManager::SetMaterialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::SetMaterialPropertyBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialPropertyBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarMaterialManager.ApplyMaterialPropertyBlock
void GlobalNamespace::OvrAvatarMaterialManager::ApplyMaterialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::ApplyMaterialPropertyBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyMaterialPropertyBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarMaterialManager.GetComponentType
::GlobalNamespace::ovrAvatarBodyPartType GlobalNamespace::OvrAvatarMaterialManager::GetComponentType(::StringW objectName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::GetComponentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarMaterialManager", "GetComponentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarBodyPartType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectName);
}
// Autogenerated method: OvrAvatarMaterialManager.GetTextureIDForType
uint64_t GlobalNamespace::OvrAvatarMaterialManager::GetTextureIDForType(::GlobalNamespace::ovrAvatarPBSMaterialState materialState, ::GlobalNamespace::OvrAvatarMaterialManager::TextureType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::GetTextureIDForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureIDForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialState), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, materialState, type);
}
// Autogenerated method: OvrAvatarMaterialManager.ValidateTextures
void GlobalNamespace::OvrAvatarMaterialManager::ValidateTextures(::ArrayW<::GlobalNamespace::ovrAvatarPBSMaterialState> materialStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::ValidateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialStates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materialStates);
}
// Autogenerated method: OvrAvatarMaterialManager.RunLoadingAnimation
::System::Collections::IEnumerator* GlobalNamespace::OvrAvatarMaterialManager::RunLoadingAnimation(::System::Action* callBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::RunLoadingAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunLoadingAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callBack)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, callBack);
}
// Autogenerated method: OvrAvatarMaterialManager..cctor
void GlobalNamespace::OvrAvatarMaterialManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarMaterialManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarMaterialManager/TextureType
#include "GlobalNamespace/OvrAvatarMaterialManager_TextureType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OvrAvatarMaterialManager/TextureType DiffuseTextures
::GlobalNamespace::OvrAvatarMaterialManager::TextureType GlobalNamespace::OvrAvatarMaterialManager::TextureType::_get_DiffuseTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::TextureType::_get_DiffuseTextures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatarMaterialManager::TextureType>("", "OvrAvatarMaterialManager/TextureType", "DiffuseTextures"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatarMaterialManager/TextureType DiffuseTextures
void GlobalNamespace::OvrAvatarMaterialManager::TextureType::_set_DiffuseTextures(::GlobalNamespace::OvrAvatarMaterialManager::TextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::TextureType::_set_DiffuseTextures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager/TextureType", "DiffuseTextures", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatarMaterialManager/TextureType NormalMaps
::GlobalNamespace::OvrAvatarMaterialManager::TextureType GlobalNamespace::OvrAvatarMaterialManager::TextureType::_get_NormalMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::TextureType::_get_NormalMaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatarMaterialManager::TextureType>("", "OvrAvatarMaterialManager/TextureType", "NormalMaps"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatarMaterialManager/TextureType NormalMaps
void GlobalNamespace::OvrAvatarMaterialManager::TextureType::_set_NormalMaps(::GlobalNamespace::OvrAvatarMaterialManager::TextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::TextureType::_set_NormalMaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager/TextureType", "NormalMaps", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatarMaterialManager/TextureType RoughnessMaps
::GlobalNamespace::OvrAvatarMaterialManager::TextureType GlobalNamespace::OvrAvatarMaterialManager::TextureType::_get_RoughnessMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::TextureType::_get_RoughnessMaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatarMaterialManager::TextureType>("", "OvrAvatarMaterialManager/TextureType", "RoughnessMaps"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatarMaterialManager/TextureType RoughnessMaps
void GlobalNamespace::OvrAvatarMaterialManager::TextureType::_set_RoughnessMaps(::GlobalNamespace::OvrAvatarMaterialManager::TextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::TextureType::_set_RoughnessMaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager/TextureType", "RoughnessMaps", value));
}
// Autogenerated static field getter
// Get static field: static public OvrAvatarMaterialManager/TextureType Count
::GlobalNamespace::OvrAvatarMaterialManager::TextureType GlobalNamespace::OvrAvatarMaterialManager::TextureType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::TextureType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatarMaterialManager::TextureType>("", "OvrAvatarMaterialManager/TextureType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OvrAvatarMaterialManager/TextureType Count
void GlobalNamespace::OvrAvatarMaterialManager::TextureType::_set_Count(::GlobalNamespace::OvrAvatarMaterialManager::TextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::TextureType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarMaterialManager/TextureType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarMaterialManager::TextureType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::TextureType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarMaterialManager/AvatarMaterialConfig
#include "GlobalNamespace/OvrAvatarMaterialManager_AvatarMaterialConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OvrAvatarMaterialManager/AvatarComponentMaterialProperties[] ComponentMaterialProperties
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OvrAvatarMaterialManager::AvatarComponentMaterialProperties>& GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialConfig::dyn_ComponentMaterialProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialConfig::dyn_ComponentMaterialProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ComponentMaterialProperties"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OvrAvatarMaterialManager::AvatarComponentMaterialProperties>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatarMaterialManager/AvatarMaterialPropertyBlock MaterialPropertyBlock
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialPropertyBlock& GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialConfig::dyn_MaterialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialConfig::dyn_MaterialPropertyBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaterialPropertyBlock"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarMaterialManager::AvatarMaterialPropertyBlock*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OvrAvatarMaterialManager/<RunLoadingAnimation>d__49
#include "GlobalNamespace/OvrAvatarMaterialManager_-RunLoadingAnimation-d__49.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatarMaterialManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarMaterialManager*& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarMaterialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action callBack
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_callBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_callBack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callBack"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <srcBlend>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$srcBlend$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$srcBlend$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<srcBlend>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <dstBlend>5__3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$dstBlend$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$dstBlend$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dstBlend>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <lightModeTag>5__4
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$lightModeTag$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$lightModeTag$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lightModeTag>5__4"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <renderTypeTag>5__5
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$renderTypeTag$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$renderTypeTag$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<renderTypeTag>5__5"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <renderQueueTag>5__6
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$renderQueueTag$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$renderQueueTag$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<renderQueueTag>5__6"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ignoreProjectorTag>5__7
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$ignoreProjectorTag$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$ignoreProjectorTag$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ignoreProjectorTag>5__7"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <renderQueue>5__8
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$renderQueue$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$renderQueue$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<renderQueue>5__8"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <transparentQueue>5__9
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$transparentQueue$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::dyn_$transparentQueue$5__9");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<transparentQueue>5__9"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarMaterialManager/<RunLoadingAnimation>d__49.System.IDisposable.Dispose
void GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarMaterialManager/<RunLoadingAnimation>d__49.MoveNext
bool GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarMaterialManager/<RunLoadingAnimation>d__49.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarMaterialManager/<RunLoadingAnimation>d__49.System.Collections.IEnumerator.Reset
void GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarMaterialManager/<RunLoadingAnimation>d__49.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarMaterialManager::$RunLoadingAnimation$d__49*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarPacket
#include "GlobalNamespace/OvrAvatarPacket.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr ovrNativePacket
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::OvrAvatarPacket::dyn_ovrNativePacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarPacket::dyn_ovrNativePacket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ovrNativePacket"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> frameTimes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::OvrAvatarPacket::dyn_frameTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarPacket::dyn_frameTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameTimes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OvrAvatarDriver/PoseFrame> frames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OvrAvatarDriver::PoseFrame>*& GlobalNamespace::OvrAvatarPacket::dyn_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarPacket::dyn_frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OvrAvatarDriver::PoseFrame>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Byte[]> encodedAudioPackets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<uint8_t>>*& GlobalNamespace::OvrAvatarPacket::dyn_encodedAudioPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarPacket::dyn_encodedAudioPackets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encodedAudioPackets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarPacket.get_Duration
float GlobalNamespace::OvrAvatarPacket::get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarPacket::get_Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarPacket.get_FinalFrame
::GlobalNamespace::OvrAvatarDriver::PoseFrame GlobalNamespace::OvrAvatarPacket::get_FinalFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarPacket::get_FinalFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FinalFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::PoseFrame, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarPacket.AddFrame
void GlobalNamespace::OvrAvatarPacket::AddFrame(::GlobalNamespace::OvrAvatarDriver::PoseFrame frame, float deltaSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarPacket::AddFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(deltaSeconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame, deltaSeconds);
}
// Autogenerated method: OvrAvatarPacket.GetPoseFrame
::GlobalNamespace::OvrAvatarDriver::PoseFrame GlobalNamespace::OvrAvatarPacket::GetPoseFrame(float seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarPacket::GetPoseFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoseFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::PoseFrame, false>(this, ___internal__method, seconds);
}
// Autogenerated method: OvrAvatarPacket.Read
::GlobalNamespace::OvrAvatarPacket* GlobalNamespace::OvrAvatarPacket::Read(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarPacket::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarPacket", "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarPacket*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: OvrAvatarPacket.Write
void GlobalNamespace::OvrAvatarPacket::Write(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarPacket::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BinaryWriterExtensions
#include "GlobalNamespace/BinaryWriterExtensions.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BinaryWriterExtensions.Write
void GlobalNamespace::BinaryWriterExtensions::Write(::System::IO::BinaryWriter* writer, ::GlobalNamespace::OvrAvatarDriver::PoseFrame frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BinaryWriterExtensions::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BinaryWriterExtensions", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, frame);
}
// Autogenerated method: BinaryWriterExtensions.Write
void GlobalNamespace::BinaryWriterExtensions::Write(::System::IO::BinaryWriter* writer, ::UnityEngine::Vector3 vec3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BinaryWriterExtensions::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BinaryWriterExtensions", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(vec3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, vec3);
}
// Autogenerated method: BinaryWriterExtensions.Write
void GlobalNamespace::BinaryWriterExtensions::Write(::System::IO::BinaryWriter* writer, ::UnityEngine::Vector2 vec2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BinaryWriterExtensions::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BinaryWriterExtensions", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(vec2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, vec2);
}
// Autogenerated method: BinaryWriterExtensions.Write
void GlobalNamespace::BinaryWriterExtensions::Write(::System::IO::BinaryWriter* writer, ::UnityEngine::Quaternion quat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BinaryWriterExtensions::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BinaryWriterExtensions", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(quat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, quat);
}
// Autogenerated method: BinaryWriterExtensions.Write
void GlobalNamespace::BinaryWriterExtensions::Write(::System::IO::BinaryWriter* writer, ::GlobalNamespace::OvrAvatarDriver::ControllerPose pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BinaryWriterExtensions::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BinaryWriterExtensions", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, pose);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BinaryReaderExtensions
#include "GlobalNamespace/BinaryReaderExtensions.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BinaryReaderExtensions.ReadPoseFrame
::GlobalNamespace::OvrAvatarDriver::PoseFrame GlobalNamespace::BinaryReaderExtensions::ReadPoseFrame(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BinaryReaderExtensions::ReadPoseFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BinaryReaderExtensions", "ReadPoseFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::PoseFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: BinaryReaderExtensions.ReadVector2
::UnityEngine::Vector2 GlobalNamespace::BinaryReaderExtensions::ReadVector2(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BinaryReaderExtensions::ReadVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BinaryReaderExtensions", "ReadVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: BinaryReaderExtensions.ReadVector3
::UnityEngine::Vector3 GlobalNamespace::BinaryReaderExtensions::ReadVector3(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BinaryReaderExtensions::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BinaryReaderExtensions", "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: BinaryReaderExtensions.ReadQuaternion
::UnityEngine::Quaternion GlobalNamespace::BinaryReaderExtensions::ReadQuaternion(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BinaryReaderExtensions::ReadQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BinaryReaderExtensions", "ReadQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: BinaryReaderExtensions.ReadControllerPose
::GlobalNamespace::OvrAvatarDriver::ControllerPose GlobalNamespace::BinaryReaderExtensions::ReadControllerPose(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BinaryReaderExtensions::ReadControllerPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BinaryReaderExtensions", "ReadControllerPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarDriver::ControllerPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarRemoteDriver
#include "GlobalNamespace/OvrAvatarRemoteDriver.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: OvrAvatarPacket
#include "GlobalNamespace/OvrAvatarPacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MinPacketQueue
int GlobalNamespace::OvrAvatarRemoteDriver::_get_MinPacketQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::_get_MinPacketQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OvrAvatarRemoteDriver", "MinPacketQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MinPacketQueue
void GlobalNamespace::OvrAvatarRemoteDriver::_set_MinPacketQueue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::_set_MinPacketQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarRemoteDriver", "MinPacketQueue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxPacketQueue
int GlobalNamespace::OvrAvatarRemoteDriver::_get_MaxPacketQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::_get_MaxPacketQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OvrAvatarRemoteDriver", "MaxPacketQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxPacketQueue
void GlobalNamespace::OvrAvatarRemoteDriver::_set_MaxPacketQueue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::_set_MaxPacketQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarRemoteDriver", "MaxPacketQueue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<OvrAvatarPacket> packetQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::OvrAvatarPacket*>*& GlobalNamespace::OvrAvatarRemoteDriver::dyn_packetQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::dyn_packetQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::OvrAvatarPacket*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr CurrentSDKPacket
[[deprecated("Use field access instead!")]] ::System::IntPtr& GlobalNamespace::OvrAvatarRemoteDriver::dyn_CurrentSDKPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::dyn_CurrentSDKPacket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentSDKPacket"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single CurrentPacketTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OvrAvatarRemoteDriver::dyn_CurrentPacketTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::dyn_CurrentPacketTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentPacketTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 CurrentSequence
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarRemoteDriver::dyn_CurrentSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::dyn_CurrentSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentSequence"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isStreaming
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarRemoteDriver::dyn_isStreaming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::dyn_isStreaming");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isStreaming"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OvrAvatarPacket currentPacket
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarPacket*& GlobalNamespace::OvrAvatarRemoteDriver::dyn_currentPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::dyn_currentPacket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPacket"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarPacket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarRemoteDriver.QueuePacket
void GlobalNamespace::OvrAvatarRemoteDriver::QueuePacket(int sequence, ::GlobalNamespace::OvrAvatarPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::QueuePacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueuePacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequence), ::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sequence, packet);
}
// Autogenerated method: OvrAvatarRemoteDriver.UpdateFromSDKPacket
void GlobalNamespace::OvrAvatarRemoteDriver::UpdateFromSDKPacket(::System::IntPtr sdkAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::UpdateFromSDKPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFromSDKPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sdkAvatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sdkAvatar);
}
// Autogenerated method: OvrAvatarRemoteDriver.UpdateFromUnityPacket
void GlobalNamespace::OvrAvatarRemoteDriver::UpdateFromUnityPacket(::System::IntPtr sdkAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::UpdateFromUnityPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFromUnityPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sdkAvatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sdkAvatar);
}
// Autogenerated method: OvrAvatarRemoteDriver.UpdateTransforms
void GlobalNamespace::OvrAvatarRemoteDriver::UpdateTransforms(::System::IntPtr sdkAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRemoteDriver::UpdateTransforms");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarDriver*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sdkAvatar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarRenderComponent
#include "GlobalNamespace/OvrAvatarRenderComponent.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OvrAvatar
#include "GlobalNamespace/OvrAvatar.hpp"
// Including type: ovrAvatarVisibilityFlags
#include "GlobalNamespace/ovrAvatarVisibilityFlags.hpp"
// Including type: ovrAvatarTransform
#include "GlobalNamespace/ovrAvatarTransform.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean firstSkinnedUpdate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarRenderComponent::dyn_firstSkinnedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRenderComponent::dyn_firstSkinnedUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstSkinnedUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::OvrAvatarRenderComponent::dyn_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRenderComponent::dyn_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] bones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::OvrAvatarRenderComponent::dyn_bones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRenderComponent::dyn_bones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isBodyComponent
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarRenderComponent::dyn_isBodyComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRenderComponent::dyn_isBodyComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isBodyComponent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarRenderComponent.UpdateActive
void GlobalNamespace::OvrAvatarRenderComponent::UpdateActive(::GlobalNamespace::OvrAvatar* avatar, ::GlobalNamespace::ovrAvatarVisibilityFlags mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRenderComponent::UpdateActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatar, mask);
}
// Autogenerated method: OvrAvatarRenderComponent.CreateSkinnedMesh
::UnityEngine::SkinnedMeshRenderer* GlobalNamespace::OvrAvatarRenderComponent::CreateSkinnedMesh(uint64_t assetID, ::GlobalNamespace::ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRenderComponent::CreateSkinnedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSkinnedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetID), ::il2cpp_utils::ExtractType(visibilityMask), ::il2cpp_utils::ExtractType(thirdPersonLayer), ::il2cpp_utils::ExtractType(firstPersonLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SkinnedMeshRenderer*, false>(this, ___internal__method, assetID, visibilityMask, thirdPersonLayer, firstPersonLayer);
}
// Autogenerated method: OvrAvatarRenderComponent.UpdateSkinnedMesh
void GlobalNamespace::OvrAvatarRenderComponent::UpdateSkinnedMesh(::GlobalNamespace::OvrAvatar* avatar, ::ArrayW<::UnityEngine::Transform*> bones, ::GlobalNamespace::ovrAvatarTransform localTransform, ::GlobalNamespace::ovrAvatarVisibilityFlags visibilityMask, ::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRenderComponent::UpdateSkinnedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSkinnedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(localTransform), ::il2cpp_utils::ExtractType(visibilityMask), ::il2cpp_utils::ExtractType(renderPart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatar, bones, localTransform, visibilityMask, renderPart);
}
// Autogenerated method: OvrAvatarRenderComponent.CreateAvatarMaterial
::UnityEngine::Material* GlobalNamespace::OvrAvatarRenderComponent::CreateAvatarMaterial(::StringW name, ::UnityEngine::Shader* shader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarRenderComponent::CreateAvatarMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAvatarMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(shader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, name, shader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarCapabilities
#include "GlobalNamespace/ovrAvatarCapabilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarCapabilities Body
::GlobalNamespace::ovrAvatarCapabilities GlobalNamespace::ovrAvatarCapabilities::_get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_get_Body");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarCapabilities>("", "ovrAvatarCapabilities", "Body"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarCapabilities Body
void GlobalNamespace::ovrAvatarCapabilities::_set_Body(::GlobalNamespace::ovrAvatarCapabilities value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_set_Body");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarCapabilities", "Body", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarCapabilities Hands
::GlobalNamespace::ovrAvatarCapabilities GlobalNamespace::ovrAvatarCapabilities::_get_Hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_get_Hands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarCapabilities>("", "ovrAvatarCapabilities", "Hands"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarCapabilities Hands
void GlobalNamespace::ovrAvatarCapabilities::_set_Hands(::GlobalNamespace::ovrAvatarCapabilities value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_set_Hands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarCapabilities", "Hands", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarCapabilities Base
::GlobalNamespace::ovrAvatarCapabilities GlobalNamespace::ovrAvatarCapabilities::_get_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_get_Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarCapabilities>("", "ovrAvatarCapabilities", "Base"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarCapabilities Base
void GlobalNamespace::ovrAvatarCapabilities::_set_Base(::GlobalNamespace::ovrAvatarCapabilities value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_set_Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarCapabilities", "Base", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarCapabilities BodyTilt
::GlobalNamespace::ovrAvatarCapabilities GlobalNamespace::ovrAvatarCapabilities::_get_BodyTilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_get_BodyTilt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarCapabilities>("", "ovrAvatarCapabilities", "BodyTilt"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarCapabilities BodyTilt
void GlobalNamespace::ovrAvatarCapabilities::_set_BodyTilt(::GlobalNamespace::ovrAvatarCapabilities value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_set_BodyTilt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarCapabilities", "BodyTilt", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarCapabilities Expressive
::GlobalNamespace::ovrAvatarCapabilities GlobalNamespace::ovrAvatarCapabilities::_get_Expressive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_get_Expressive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarCapabilities>("", "ovrAvatarCapabilities", "Expressive"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarCapabilities Expressive
void GlobalNamespace::ovrAvatarCapabilities::_set_Expressive(::GlobalNamespace::ovrAvatarCapabilities value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_set_Expressive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarCapabilities", "Expressive", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarCapabilities All
::GlobalNamespace::ovrAvatarCapabilities GlobalNamespace::ovrAvatarCapabilities::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarCapabilities>("", "ovrAvatarCapabilities", "All"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarCapabilities All
void GlobalNamespace::ovrAvatarCapabilities::_set_All(::GlobalNamespace::ovrAvatarCapabilities value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarCapabilities", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarCapabilities::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarCapabilities::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarMessageType
#include "GlobalNamespace/ovrAvatarMessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarMessageType AvatarSpecification
::GlobalNamespace::ovrAvatarMessageType GlobalNamespace::ovrAvatarMessageType::_get_AvatarSpecification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMessageType::_get_AvatarSpecification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMessageType>("", "ovrAvatarMessageType", "AvatarSpecification"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMessageType AvatarSpecification
void GlobalNamespace::ovrAvatarMessageType::_set_AvatarSpecification(::GlobalNamespace::ovrAvatarMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMessageType::_set_AvatarSpecification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMessageType", "AvatarSpecification", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMessageType AssetLoaded
::GlobalNamespace::ovrAvatarMessageType GlobalNamespace::ovrAvatarMessageType::_get_AssetLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMessageType::_get_AssetLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMessageType>("", "ovrAvatarMessageType", "AssetLoaded"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMessageType AssetLoaded
void GlobalNamespace::ovrAvatarMessageType::_set_AssetLoaded(::GlobalNamespace::ovrAvatarMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMessageType::_set_AssetLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMessageType", "AssetLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMessageType Count
::GlobalNamespace::ovrAvatarMessageType GlobalNamespace::ovrAvatarMessageType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMessageType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMessageType>("", "ovrAvatarMessageType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMessageType Count
void GlobalNamespace::ovrAvatarMessageType::_set_Count(::GlobalNamespace::ovrAvatarMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMessageType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMessageType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarMessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarAssetType
#include "GlobalNamespace/ovrAvatarAssetType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetType Mesh
::GlobalNamespace::ovrAvatarAssetType GlobalNamespace::ovrAvatarAssetType::_get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_get_Mesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetType>("", "ovrAvatarAssetType", "Mesh"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetType Mesh
void GlobalNamespace::ovrAvatarAssetType::_set_Mesh(::GlobalNamespace::ovrAvatarAssetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_set_Mesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetType", "Mesh", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetType Texture
::GlobalNamespace::ovrAvatarAssetType GlobalNamespace::ovrAvatarAssetType::_get_Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_get_Texture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetType>("", "ovrAvatarAssetType", "Texture"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetType Texture
void GlobalNamespace::ovrAvatarAssetType::_set_Texture(::GlobalNamespace::ovrAvatarAssetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_set_Texture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetType", "Texture", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetType Pose
::GlobalNamespace::ovrAvatarAssetType GlobalNamespace::ovrAvatarAssetType::_get_Pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_get_Pose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetType>("", "ovrAvatarAssetType", "Pose"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetType Pose
void GlobalNamespace::ovrAvatarAssetType::_set_Pose(::GlobalNamespace::ovrAvatarAssetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_set_Pose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetType", "Pose", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetType Material
::GlobalNamespace::ovrAvatarAssetType GlobalNamespace::ovrAvatarAssetType::_get_Material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_get_Material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetType>("", "ovrAvatarAssetType", "Material"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetType Material
void GlobalNamespace::ovrAvatarAssetType::_set_Material(::GlobalNamespace::ovrAvatarAssetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_set_Material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetType", "Material", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetType CombinedMesh
::GlobalNamespace::ovrAvatarAssetType GlobalNamespace::ovrAvatarAssetType::_get_CombinedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_get_CombinedMesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetType>("", "ovrAvatarAssetType", "CombinedMesh"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetType CombinedMesh
void GlobalNamespace::ovrAvatarAssetType::_set_CombinedMesh(::GlobalNamespace::ovrAvatarAssetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_set_CombinedMesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetType", "CombinedMesh", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetType PBSMaterial
::GlobalNamespace::ovrAvatarAssetType GlobalNamespace::ovrAvatarAssetType::_get_PBSMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_get_PBSMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetType>("", "ovrAvatarAssetType", "PBSMaterial"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetType PBSMaterial
void GlobalNamespace::ovrAvatarAssetType::_set_PBSMaterial(::GlobalNamespace::ovrAvatarAssetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_set_PBSMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetType", "PBSMaterial", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetType FailedLoad
::GlobalNamespace::ovrAvatarAssetType GlobalNamespace::ovrAvatarAssetType::_get_FailedLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_get_FailedLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetType>("", "ovrAvatarAssetType", "FailedLoad"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetType FailedLoad
void GlobalNamespace::ovrAvatarAssetType::_set_FailedLoad(::GlobalNamespace::ovrAvatarAssetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_set_FailedLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetType", "FailedLoad", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetType Count
::GlobalNamespace::ovrAvatarAssetType GlobalNamespace::ovrAvatarAssetType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetType>("", "ovrAvatarAssetType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetType Count
void GlobalNamespace::ovrAvatarAssetType::_set_Count(::GlobalNamespace::ovrAvatarAssetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarAssetType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarTextureFormat
#include "GlobalNamespace/ovrAvatarTextureFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarTextureFormat RGB24
::GlobalNamespace::ovrAvatarTextureFormat GlobalNamespace::ovrAvatarTextureFormat::_get_RGB24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_get_RGB24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTextureFormat>("", "ovrAvatarTextureFormat", "RGB24"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTextureFormat RGB24
void GlobalNamespace::ovrAvatarTextureFormat::_set_RGB24(::GlobalNamespace::ovrAvatarTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_set_RGB24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTextureFormat", "RGB24", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTextureFormat DXT1
::GlobalNamespace::ovrAvatarTextureFormat GlobalNamespace::ovrAvatarTextureFormat::_get_DXT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_get_DXT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTextureFormat>("", "ovrAvatarTextureFormat", "DXT1"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTextureFormat DXT1
void GlobalNamespace::ovrAvatarTextureFormat::_set_DXT1(::GlobalNamespace::ovrAvatarTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_set_DXT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTextureFormat", "DXT1", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTextureFormat DXT5
::GlobalNamespace::ovrAvatarTextureFormat GlobalNamespace::ovrAvatarTextureFormat::_get_DXT5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_get_DXT5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTextureFormat>("", "ovrAvatarTextureFormat", "DXT5"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTextureFormat DXT5
void GlobalNamespace::ovrAvatarTextureFormat::_set_DXT5(::GlobalNamespace::ovrAvatarTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_set_DXT5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTextureFormat", "DXT5", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTextureFormat ASTC_RGB_6x6
::GlobalNamespace::ovrAvatarTextureFormat GlobalNamespace::ovrAvatarTextureFormat::_get_ASTC_RGB_6x6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_get_ASTC_RGB_6x6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTextureFormat>("", "ovrAvatarTextureFormat", "ASTC_RGB_6x6"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTextureFormat ASTC_RGB_6x6
void GlobalNamespace::ovrAvatarTextureFormat::_set_ASTC_RGB_6x6(::GlobalNamespace::ovrAvatarTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_set_ASTC_RGB_6x6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTextureFormat", "ASTC_RGB_6x6", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTextureFormat ASTC_RGB_6x6_MIPMAPS
::GlobalNamespace::ovrAvatarTextureFormat GlobalNamespace::ovrAvatarTextureFormat::_get_ASTC_RGB_6x6_MIPMAPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_get_ASTC_RGB_6x6_MIPMAPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTextureFormat>("", "ovrAvatarTextureFormat", "ASTC_RGB_6x6_MIPMAPS"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTextureFormat ASTC_RGB_6x6_MIPMAPS
void GlobalNamespace::ovrAvatarTextureFormat::_set_ASTC_RGB_6x6_MIPMAPS(::GlobalNamespace::ovrAvatarTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_set_ASTC_RGB_6x6_MIPMAPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTextureFormat", "ASTC_RGB_6x6_MIPMAPS", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTextureFormat Count
::GlobalNamespace::ovrAvatarTextureFormat GlobalNamespace::ovrAvatarTextureFormat::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTextureFormat>("", "ovrAvatarTextureFormat", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTextureFormat Count
void GlobalNamespace::ovrAvatarTextureFormat::_set_Count(::GlobalNamespace::ovrAvatarTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTextureFormat", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarTextureFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTextureFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarRenderPartType
#include "GlobalNamespace/ovrAvatarRenderPartType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarRenderPartType SkinnedMeshRender
::GlobalNamespace::ovrAvatarRenderPartType GlobalNamespace::ovrAvatarRenderPartType::_get_SkinnedMeshRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::_get_SkinnedMeshRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarRenderPartType>("", "ovrAvatarRenderPartType", "SkinnedMeshRender"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarRenderPartType SkinnedMeshRender
void GlobalNamespace::ovrAvatarRenderPartType::_set_SkinnedMeshRender(::GlobalNamespace::ovrAvatarRenderPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::_set_SkinnedMeshRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarRenderPartType", "SkinnedMeshRender", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarRenderPartType SkinnedMeshRenderPBS
::GlobalNamespace::ovrAvatarRenderPartType GlobalNamespace::ovrAvatarRenderPartType::_get_SkinnedMeshRenderPBS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::_get_SkinnedMeshRenderPBS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarRenderPartType>("", "ovrAvatarRenderPartType", "SkinnedMeshRenderPBS"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarRenderPartType SkinnedMeshRenderPBS
void GlobalNamespace::ovrAvatarRenderPartType::_set_SkinnedMeshRenderPBS(::GlobalNamespace::ovrAvatarRenderPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::_set_SkinnedMeshRenderPBS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarRenderPartType", "SkinnedMeshRenderPBS", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarRenderPartType ProjectorRender
::GlobalNamespace::ovrAvatarRenderPartType GlobalNamespace::ovrAvatarRenderPartType::_get_ProjectorRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::_get_ProjectorRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarRenderPartType>("", "ovrAvatarRenderPartType", "ProjectorRender"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarRenderPartType ProjectorRender
void GlobalNamespace::ovrAvatarRenderPartType::_set_ProjectorRender(::GlobalNamespace::ovrAvatarRenderPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::_set_ProjectorRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarRenderPartType", "ProjectorRender", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarRenderPartType SkinnedMeshRenderPBS_V2
::GlobalNamespace::ovrAvatarRenderPartType GlobalNamespace::ovrAvatarRenderPartType::_get_SkinnedMeshRenderPBS_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::_get_SkinnedMeshRenderPBS_V2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarRenderPartType>("", "ovrAvatarRenderPartType", "SkinnedMeshRenderPBS_V2"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarRenderPartType SkinnedMeshRenderPBS_V2
void GlobalNamespace::ovrAvatarRenderPartType::_set_SkinnedMeshRenderPBS_V2(::GlobalNamespace::ovrAvatarRenderPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::_set_SkinnedMeshRenderPBS_V2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarRenderPartType", "SkinnedMeshRenderPBS_V2", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarRenderPartType Count
::GlobalNamespace::ovrAvatarRenderPartType GlobalNamespace::ovrAvatarRenderPartType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarRenderPartType>("", "ovrAvatarRenderPartType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarRenderPartType Count
void GlobalNamespace::ovrAvatarRenderPartType::_set_Count(::GlobalNamespace::ovrAvatarRenderPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarRenderPartType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarRenderPartType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarRenderPartType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarLogLevel
#include "GlobalNamespace/ovrAvatarLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarLogLevel Unknown
::GlobalNamespace::ovrAvatarLogLevel GlobalNamespace::ovrAvatarLogLevel::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLogLevel>("", "ovrAvatarLogLevel", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLogLevel Unknown
void GlobalNamespace::ovrAvatarLogLevel::_set_Unknown(::GlobalNamespace::ovrAvatarLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLogLevel", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLogLevel Default
::GlobalNamespace::ovrAvatarLogLevel GlobalNamespace::ovrAvatarLogLevel::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLogLevel>("", "ovrAvatarLogLevel", "Default"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLogLevel Default
void GlobalNamespace::ovrAvatarLogLevel::_set_Default(::GlobalNamespace::ovrAvatarLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLogLevel", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLogLevel Verbose
::GlobalNamespace::ovrAvatarLogLevel GlobalNamespace::ovrAvatarLogLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLogLevel>("", "ovrAvatarLogLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLogLevel Verbose
void GlobalNamespace::ovrAvatarLogLevel::_set_Verbose(::GlobalNamespace::ovrAvatarLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLogLevel", "Verbose", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLogLevel Debug
::GlobalNamespace::ovrAvatarLogLevel GlobalNamespace::ovrAvatarLogLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLogLevel>("", "ovrAvatarLogLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLogLevel Debug
void GlobalNamespace::ovrAvatarLogLevel::_set_Debug(::GlobalNamespace::ovrAvatarLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLogLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLogLevel Info
::GlobalNamespace::ovrAvatarLogLevel GlobalNamespace::ovrAvatarLogLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLogLevel>("", "ovrAvatarLogLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLogLevel Info
void GlobalNamespace::ovrAvatarLogLevel::_set_Info(::GlobalNamespace::ovrAvatarLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLogLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLogLevel Warn
::GlobalNamespace::ovrAvatarLogLevel GlobalNamespace::ovrAvatarLogLevel::_get_Warn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_get_Warn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLogLevel>("", "ovrAvatarLogLevel", "Warn"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLogLevel Warn
void GlobalNamespace::ovrAvatarLogLevel::_set_Warn(::GlobalNamespace::ovrAvatarLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_set_Warn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLogLevel", "Warn", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLogLevel Error
::GlobalNamespace::ovrAvatarLogLevel GlobalNamespace::ovrAvatarLogLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLogLevel>("", "ovrAvatarLogLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLogLevel Error
void GlobalNamespace::ovrAvatarLogLevel::_set_Error(::GlobalNamespace::ovrAvatarLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLogLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLogLevel Fatal
::GlobalNamespace::ovrAvatarLogLevel GlobalNamespace::ovrAvatarLogLevel::_get_Fatal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_get_Fatal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLogLevel>("", "ovrAvatarLogLevel", "Fatal"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLogLevel Fatal
void GlobalNamespace::ovrAvatarLogLevel::_set_Fatal(::GlobalNamespace::ovrAvatarLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_set_Fatal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLogLevel", "Fatal", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLogLevel Silent
::GlobalNamespace::ovrAvatarLogLevel GlobalNamespace::ovrAvatarLogLevel::_get_Silent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_get_Silent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLogLevel>("", "ovrAvatarLogLevel", "Silent"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLogLevel Silent
void GlobalNamespace::ovrAvatarLogLevel::_set_Silent(::GlobalNamespace::ovrAvatarLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::_set_Silent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLogLevel", "Silent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarLogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarButton
#include "GlobalNamespace/ovrAvatarButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarButton One
::GlobalNamespace::ovrAvatarButton GlobalNamespace::ovrAvatarButton::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarButton::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarButton>("", "ovrAvatarButton", "One"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarButton One
void GlobalNamespace::ovrAvatarButton::_set_One(::GlobalNamespace::ovrAvatarButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarButton::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarButton", "One", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarButton Two
::GlobalNamespace::ovrAvatarButton GlobalNamespace::ovrAvatarButton::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarButton::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarButton>("", "ovrAvatarButton", "Two"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarButton Two
void GlobalNamespace::ovrAvatarButton::_set_Two(::GlobalNamespace::ovrAvatarButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarButton::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarButton", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarButton Three
::GlobalNamespace::ovrAvatarButton GlobalNamespace::ovrAvatarButton::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarButton::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarButton>("", "ovrAvatarButton", "Three"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarButton Three
void GlobalNamespace::ovrAvatarButton::_set_Three(::GlobalNamespace::ovrAvatarButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarButton::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarButton", "Three", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarButton Joystick
::GlobalNamespace::ovrAvatarButton GlobalNamespace::ovrAvatarButton::_get_Joystick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarButton::_get_Joystick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarButton>("", "ovrAvatarButton", "Joystick"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarButton Joystick
void GlobalNamespace::ovrAvatarButton::_set_Joystick(::GlobalNamespace::ovrAvatarButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarButton::_set_Joystick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarButton", "Joystick", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarTouch
#include "GlobalNamespace/ovrAvatarTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarTouch One
::GlobalNamespace::ovrAvatarTouch GlobalNamespace::ovrAvatarTouch::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTouch>("", "ovrAvatarTouch", "One"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTouch One
void GlobalNamespace::ovrAvatarTouch::_set_One(::GlobalNamespace::ovrAvatarTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTouch", "One", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTouch Two
::GlobalNamespace::ovrAvatarTouch GlobalNamespace::ovrAvatarTouch::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTouch>("", "ovrAvatarTouch", "Two"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTouch Two
void GlobalNamespace::ovrAvatarTouch::_set_Two(::GlobalNamespace::ovrAvatarTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTouch", "Two", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTouch Joystick
::GlobalNamespace::ovrAvatarTouch GlobalNamespace::ovrAvatarTouch::_get_Joystick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_get_Joystick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTouch>("", "ovrAvatarTouch", "Joystick"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTouch Joystick
void GlobalNamespace::ovrAvatarTouch::_set_Joystick(::GlobalNamespace::ovrAvatarTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_set_Joystick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTouch", "Joystick", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTouch ThumbRest
::GlobalNamespace::ovrAvatarTouch GlobalNamespace::ovrAvatarTouch::_get_ThumbRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_get_ThumbRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTouch>("", "ovrAvatarTouch", "ThumbRest"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTouch ThumbRest
void GlobalNamespace::ovrAvatarTouch::_set_ThumbRest(::GlobalNamespace::ovrAvatarTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_set_ThumbRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTouch", "ThumbRest", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTouch Index
::GlobalNamespace::ovrAvatarTouch GlobalNamespace::ovrAvatarTouch::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTouch>("", "ovrAvatarTouch", "Index"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTouch Index
void GlobalNamespace::ovrAvatarTouch::_set_Index(::GlobalNamespace::ovrAvatarTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTouch", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTouch Pointing
::GlobalNamespace::ovrAvatarTouch GlobalNamespace::ovrAvatarTouch::_get_Pointing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_get_Pointing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTouch>("", "ovrAvatarTouch", "Pointing"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTouch Pointing
void GlobalNamespace::ovrAvatarTouch::_set_Pointing(::GlobalNamespace::ovrAvatarTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_set_Pointing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTouch", "Pointing", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarTouch ThumbUp
::GlobalNamespace::ovrAvatarTouch GlobalNamespace::ovrAvatarTouch::_get_ThumbUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_get_ThumbUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarTouch>("", "ovrAvatarTouch", "ThumbUp"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarTouch ThumbUp
void GlobalNamespace::ovrAvatarTouch::_set_ThumbUp(::GlobalNamespace::ovrAvatarTouch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::_set_ThumbUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarTouch", "ThumbUp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarTouch::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarTouch::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarComponent_Offsets
#include "GlobalNamespace/ovrAvatarComponent_Offsets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int64 transform
int64_t GlobalNamespace::ovrAvatarComponent_Offsets::_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarComponent_Offsets::_get_transform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarComponent_Offsets", "transform"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 transform
void GlobalNamespace::ovrAvatarComponent_Offsets::_set_transform(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarComponent_Offsets::_set_transform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarComponent_Offsets", "transform", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 renderPartCount
int GlobalNamespace::ovrAvatarComponent_Offsets::_get_renderPartCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarComponent_Offsets::_get_renderPartCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ovrAvatarComponent_Offsets", "renderPartCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 renderPartCount
void GlobalNamespace::ovrAvatarComponent_Offsets::_set_renderPartCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarComponent_Offsets::_set_renderPartCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarComponent_Offsets", "renderPartCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 renderParts
int GlobalNamespace::ovrAvatarComponent_Offsets::_get_renderParts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarComponent_Offsets::_get_renderParts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ovrAvatarComponent_Offsets", "renderParts"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 renderParts
void GlobalNamespace::ovrAvatarComponent_Offsets::_set_renderParts(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarComponent_Offsets::_set_renderParts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarComponent_Offsets", "renderParts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 name
int GlobalNamespace::ovrAvatarComponent_Offsets::_get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarComponent_Offsets::_get_name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ovrAvatarComponent_Offsets", "name"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 name
void GlobalNamespace::ovrAvatarComponent_Offsets::_set_name(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarComponent_Offsets::_set_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarComponent_Offsets", "name", value));
}
// Autogenerated method: ovrAvatarComponent_Offsets..cctor
void GlobalNamespace::ovrAvatarComponent_Offsets::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarComponent_Offsets::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarComponent_Offsets", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarBodyComponent_Offsets
#include "GlobalNamespace/ovrAvatarBodyComponent_Offsets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int64 leftEyeTransform
int64_t GlobalNamespace::ovrAvatarBodyComponent_Offsets::_get_leftEyeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyComponent_Offsets::_get_leftEyeTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarBodyComponent_Offsets", "leftEyeTransform"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 leftEyeTransform
void GlobalNamespace::ovrAvatarBodyComponent_Offsets::_set_leftEyeTransform(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyComponent_Offsets::_set_leftEyeTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBodyComponent_Offsets", "leftEyeTransform", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 rightEyeTransform
int64_t GlobalNamespace::ovrAvatarBodyComponent_Offsets::_get_rightEyeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyComponent_Offsets::_get_rightEyeTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarBodyComponent_Offsets", "rightEyeTransform"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 rightEyeTransform
void GlobalNamespace::ovrAvatarBodyComponent_Offsets::_set_rightEyeTransform(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyComponent_Offsets::_set_rightEyeTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBodyComponent_Offsets", "rightEyeTransform", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 centerEyeTransform
int64_t GlobalNamespace::ovrAvatarBodyComponent_Offsets::_get_centerEyeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyComponent_Offsets::_get_centerEyeTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarBodyComponent_Offsets", "centerEyeTransform"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 centerEyeTransform
void GlobalNamespace::ovrAvatarBodyComponent_Offsets::_set_centerEyeTransform(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyComponent_Offsets::_set_centerEyeTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBodyComponent_Offsets", "centerEyeTransform", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 renderComponent
int64_t GlobalNamespace::ovrAvatarBodyComponent_Offsets::_get_renderComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyComponent_Offsets::_get_renderComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarBodyComponent_Offsets", "renderComponent"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 renderComponent
void GlobalNamespace::ovrAvatarBodyComponent_Offsets::_set_renderComponent(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyComponent_Offsets::_set_renderComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBodyComponent_Offsets", "renderComponent", value));
}
// Autogenerated method: ovrAvatarBodyComponent_Offsets..cctor
void GlobalNamespace::ovrAvatarBodyComponent_Offsets::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyComponent_Offsets::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarBodyComponent_Offsets", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarMaterialLayerBlendMode
#include "GlobalNamespace/ovrAvatarMaterialLayerBlendMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialLayerBlendMode Add
::GlobalNamespace::ovrAvatarMaterialLayerBlendMode GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialLayerBlendMode>("", "ovrAvatarMaterialLayerBlendMode", "Add"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialLayerBlendMode Add
void GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_set_Add(::GlobalNamespace::ovrAvatarMaterialLayerBlendMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialLayerBlendMode", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialLayerBlendMode Multiply
::GlobalNamespace::ovrAvatarMaterialLayerBlendMode GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_get_Multiply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_get_Multiply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialLayerBlendMode>("", "ovrAvatarMaterialLayerBlendMode", "Multiply"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialLayerBlendMode Multiply
void GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_set_Multiply(::GlobalNamespace::ovrAvatarMaterialLayerBlendMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_set_Multiply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialLayerBlendMode", "Multiply", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialLayerBlendMode Count
::GlobalNamespace::ovrAvatarMaterialLayerBlendMode GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialLayerBlendMode>("", "ovrAvatarMaterialLayerBlendMode", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialLayerBlendMode Count
void GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_set_Count(::GlobalNamespace::ovrAvatarMaterialLayerBlendMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerBlendMode::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialLayerBlendMode", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarMaterialLayerBlendMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerBlendMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarMaterialLayerSampleMode
#include "GlobalNamespace/ovrAvatarMaterialLayerSampleMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialLayerSampleMode Color
::GlobalNamespace::ovrAvatarMaterialLayerSampleMode GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialLayerSampleMode>("", "ovrAvatarMaterialLayerSampleMode", "Color"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialLayerSampleMode Color
void GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_set_Color(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialLayerSampleMode", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialLayerSampleMode Texture
::GlobalNamespace::ovrAvatarMaterialLayerSampleMode GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_get_Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_get_Texture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialLayerSampleMode>("", "ovrAvatarMaterialLayerSampleMode", "Texture"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialLayerSampleMode Texture
void GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_set_Texture(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_set_Texture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialLayerSampleMode", "Texture", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialLayerSampleMode TextureSingleChannel
::GlobalNamespace::ovrAvatarMaterialLayerSampleMode GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_get_TextureSingleChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_get_TextureSingleChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialLayerSampleMode>("", "ovrAvatarMaterialLayerSampleMode", "TextureSingleChannel"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialLayerSampleMode TextureSingleChannel
void GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_set_TextureSingleChannel(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_set_TextureSingleChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialLayerSampleMode", "TextureSingleChannel", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialLayerSampleMode Parallax
::GlobalNamespace::ovrAvatarMaterialLayerSampleMode GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_get_Parallax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_get_Parallax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialLayerSampleMode>("", "ovrAvatarMaterialLayerSampleMode", "Parallax"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialLayerSampleMode Parallax
void GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_set_Parallax(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_set_Parallax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialLayerSampleMode", "Parallax", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialLayerSampleMode Count
::GlobalNamespace::ovrAvatarMaterialLayerSampleMode GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialLayerSampleMode>("", "ovrAvatarMaterialLayerSampleMode", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialLayerSampleMode Count
void GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_set_Count(::GlobalNamespace::ovrAvatarMaterialLayerSampleMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialLayerSampleMode", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarMaterialLayerSampleMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerSampleMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarMaterialMaskType
#include "GlobalNamespace/ovrAvatarMaterialMaskType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialMaskType None
::GlobalNamespace::ovrAvatarMaterialMaskType GlobalNamespace::ovrAvatarMaterialMaskType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialMaskType>("", "ovrAvatarMaterialMaskType", "None"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialMaskType None
void GlobalNamespace::ovrAvatarMaterialMaskType::_set_None(::GlobalNamespace::ovrAvatarMaterialMaskType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialMaskType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialMaskType Positional
::GlobalNamespace::ovrAvatarMaterialMaskType GlobalNamespace::ovrAvatarMaterialMaskType::_get_Positional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_get_Positional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialMaskType>("", "ovrAvatarMaterialMaskType", "Positional"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialMaskType Positional
void GlobalNamespace::ovrAvatarMaterialMaskType::_set_Positional(::GlobalNamespace::ovrAvatarMaterialMaskType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_set_Positional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialMaskType", "Positional", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialMaskType ViewReflection
::GlobalNamespace::ovrAvatarMaterialMaskType GlobalNamespace::ovrAvatarMaterialMaskType::_get_ViewReflection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_get_ViewReflection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialMaskType>("", "ovrAvatarMaterialMaskType", "ViewReflection"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialMaskType ViewReflection
void GlobalNamespace::ovrAvatarMaterialMaskType::_set_ViewReflection(::GlobalNamespace::ovrAvatarMaterialMaskType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_set_ViewReflection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialMaskType", "ViewReflection", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialMaskType Fresnel
::GlobalNamespace::ovrAvatarMaterialMaskType GlobalNamespace::ovrAvatarMaterialMaskType::_get_Fresnel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_get_Fresnel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialMaskType>("", "ovrAvatarMaterialMaskType", "Fresnel"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialMaskType Fresnel
void GlobalNamespace::ovrAvatarMaterialMaskType::_set_Fresnel(::GlobalNamespace::ovrAvatarMaterialMaskType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_set_Fresnel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialMaskType", "Fresnel", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialMaskType Pulse
::GlobalNamespace::ovrAvatarMaterialMaskType GlobalNamespace::ovrAvatarMaterialMaskType::_get_Pulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_get_Pulse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialMaskType>("", "ovrAvatarMaterialMaskType", "Pulse"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialMaskType Pulse
void GlobalNamespace::ovrAvatarMaterialMaskType::_set_Pulse(::GlobalNamespace::ovrAvatarMaterialMaskType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_set_Pulse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialMaskType", "Pulse", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarMaterialMaskType Count
::GlobalNamespace::ovrAvatarMaterialMaskType GlobalNamespace::ovrAvatarMaterialMaskType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarMaterialMaskType>("", "ovrAvatarMaterialMaskType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarMaterialMaskType Count
void GlobalNamespace::ovrAvatarMaterialMaskType::_set_Count(::GlobalNamespace::ovrAvatarMaterialMaskType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarMaterialMaskType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarMaterialMaskType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialMaskType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarControllerType
#include "GlobalNamespace/ovrAvatarControllerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarControllerType Touch
::GlobalNamespace::ovrAvatarControllerType GlobalNamespace::ovrAvatarControllerType::_get_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::_get_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarControllerType>("", "ovrAvatarControllerType", "Touch"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarControllerType Touch
void GlobalNamespace::ovrAvatarControllerType::_set_Touch(::GlobalNamespace::ovrAvatarControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::_set_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarControllerType", "Touch", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarControllerType Malibu
::GlobalNamespace::ovrAvatarControllerType GlobalNamespace::ovrAvatarControllerType::_get_Malibu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::_get_Malibu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarControllerType>("", "ovrAvatarControllerType", "Malibu"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarControllerType Malibu
void GlobalNamespace::ovrAvatarControllerType::_set_Malibu(::GlobalNamespace::ovrAvatarControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::_set_Malibu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarControllerType", "Malibu", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarControllerType Go
::GlobalNamespace::ovrAvatarControllerType GlobalNamespace::ovrAvatarControllerType::_get_Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::_get_Go");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarControllerType>("", "ovrAvatarControllerType", "Go"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarControllerType Go
void GlobalNamespace::ovrAvatarControllerType::_set_Go(::GlobalNamespace::ovrAvatarControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::_set_Go");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarControllerType", "Go", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarControllerType Quest
::GlobalNamespace::ovrAvatarControllerType GlobalNamespace::ovrAvatarControllerType::_get_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::_get_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarControllerType>("", "ovrAvatarControllerType", "Quest"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarControllerType Quest
void GlobalNamespace::ovrAvatarControllerType::_set_Quest(::GlobalNamespace::ovrAvatarControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::_set_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarControllerType", "Quest", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarControllerType Count
::GlobalNamespace::ovrAvatarControllerType GlobalNamespace::ovrAvatarControllerType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarControllerType>("", "ovrAvatarControllerType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarControllerType Count
void GlobalNamespace::ovrAvatarControllerType::_set_Count(::GlobalNamespace::ovrAvatarControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarControllerType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarControllerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarControllerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarAssetLevelOfDetail
#include "GlobalNamespace/ovrAvatarAssetLevelOfDetail.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetLevelOfDetail Lowest
::GlobalNamespace::ovrAvatarAssetLevelOfDetail GlobalNamespace::ovrAvatarAssetLevelOfDetail::_get_Lowest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetLevelOfDetail::_get_Lowest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetLevelOfDetail>("", "ovrAvatarAssetLevelOfDetail", "Lowest"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetLevelOfDetail Lowest
void GlobalNamespace::ovrAvatarAssetLevelOfDetail::_set_Lowest(::GlobalNamespace::ovrAvatarAssetLevelOfDetail value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetLevelOfDetail::_set_Lowest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetLevelOfDetail", "Lowest", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetLevelOfDetail Medium
::GlobalNamespace::ovrAvatarAssetLevelOfDetail GlobalNamespace::ovrAvatarAssetLevelOfDetail::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetLevelOfDetail::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetLevelOfDetail>("", "ovrAvatarAssetLevelOfDetail", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetLevelOfDetail Medium
void GlobalNamespace::ovrAvatarAssetLevelOfDetail::_set_Medium(::GlobalNamespace::ovrAvatarAssetLevelOfDetail value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetLevelOfDetail::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetLevelOfDetail", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarAssetLevelOfDetail Highest
::GlobalNamespace::ovrAvatarAssetLevelOfDetail GlobalNamespace::ovrAvatarAssetLevelOfDetail::_get_Highest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetLevelOfDetail::_get_Highest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarAssetLevelOfDetail>("", "ovrAvatarAssetLevelOfDetail", "Highest"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarAssetLevelOfDetail Highest
void GlobalNamespace::ovrAvatarAssetLevelOfDetail::_set_Highest(::GlobalNamespace::ovrAvatarAssetLevelOfDetail value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetLevelOfDetail::_set_Highest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarAssetLevelOfDetail", "Highest", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarAssetLevelOfDetail::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarAssetLevelOfDetail::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarLookAndFeelVersion
#include "GlobalNamespace/ovrAvatarLookAndFeelVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarLookAndFeelVersion Unknown
::GlobalNamespace::ovrAvatarLookAndFeelVersion GlobalNamespace::ovrAvatarLookAndFeelVersion::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLookAndFeelVersion::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLookAndFeelVersion>("", "ovrAvatarLookAndFeelVersion", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLookAndFeelVersion Unknown
void GlobalNamespace::ovrAvatarLookAndFeelVersion::_set_Unknown(::GlobalNamespace::ovrAvatarLookAndFeelVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLookAndFeelVersion::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLookAndFeelVersion", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLookAndFeelVersion One
::GlobalNamespace::ovrAvatarLookAndFeelVersion GlobalNamespace::ovrAvatarLookAndFeelVersion::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLookAndFeelVersion::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLookAndFeelVersion>("", "ovrAvatarLookAndFeelVersion", "One"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLookAndFeelVersion One
void GlobalNamespace::ovrAvatarLookAndFeelVersion::_set_One(::GlobalNamespace::ovrAvatarLookAndFeelVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLookAndFeelVersion::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLookAndFeelVersion", "One", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLookAndFeelVersion Two
::GlobalNamespace::ovrAvatarLookAndFeelVersion GlobalNamespace::ovrAvatarLookAndFeelVersion::_get_Two() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLookAndFeelVersion::_get_Two");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLookAndFeelVersion>("", "ovrAvatarLookAndFeelVersion", "Two"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLookAndFeelVersion Two
void GlobalNamespace::ovrAvatarLookAndFeelVersion::_set_Two(::GlobalNamespace::ovrAvatarLookAndFeelVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLookAndFeelVersion::_set_Two");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLookAndFeelVersion", "Two", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarLookAndFeelVersion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLookAndFeelVersion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ovrAvatarMaterialLayerState
#include "GlobalNamespace/ovrAvatarMaterialLayerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ovrAvatarMaterialLayerBlendMode blendMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarMaterialLayerBlendMode& GlobalNamespace::ovrAvatarMaterialLayerState::dyn_blendMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::dyn_blendMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarMaterialLayerBlendMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarMaterialLayerSampleMode sampleMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarMaterialLayerSampleMode& GlobalNamespace::ovrAvatarMaterialLayerState::dyn_sampleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::dyn_sampleMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarMaterialLayerSampleMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarMaterialMaskType maskType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarMaterialMaskType& GlobalNamespace::ovrAvatarMaterialLayerState::dyn_maskType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::dyn_maskType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maskType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarMaterialMaskType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 layerColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialLayerState::dyn_layerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::dyn_layerColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 sampleParameters
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialLayerState::dyn_sampleParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::dyn_sampleParameters");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleParameters"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 sampleTexture
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarMaterialLayerState::dyn_sampleTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::dyn_sampleTexture");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleTexture"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 sampleScaleOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialLayerState::dyn_sampleScaleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::dyn_sampleScaleOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleScaleOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 maskParameters
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialLayerState::dyn_maskParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::dyn_maskParameters");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maskParameters"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 maskAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialLayerState::dyn_maskAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::dyn_maskAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maskAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ovrAvatarMaterialLayerState.VectorEquals
bool GlobalNamespace::ovrAvatarMaterialLayerState::VectorEquals(::UnityEngine::Vector4 a, ::UnityEngine::Vector4 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::VectorEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarMaterialLayerState", "VectorEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: ovrAvatarMaterialLayerState.Equals
bool GlobalNamespace::ovrAvatarMaterialLayerState::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ovrAvatarMaterialLayerState.GetHashCode
int GlobalNamespace::ovrAvatarMaterialLayerState::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialLayerState::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ovrAvatarMaterialState
#include "GlobalNamespace/ovrAvatarMaterialState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 baseColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialState::dyn_baseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_baseColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarMaterialMaskType baseMaskType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarMaterialMaskType& GlobalNamespace::ovrAvatarMaterialState::dyn_baseMaskType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_baseMaskType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMaskType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarMaterialMaskType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 baseMaskParameters
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialState::dyn_baseMaskParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_baseMaskParameters");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMaskParameters"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 baseMaskAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialState::dyn_baseMaskAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_baseMaskAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMaskAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarMaterialLayerSampleMode sampleMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarMaterialLayerSampleMode& GlobalNamespace::ovrAvatarMaterialState::dyn_sampleMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_sampleMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarMaterialLayerSampleMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 alphaMaskTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarMaterialState::dyn_alphaMaskTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_alphaMaskTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaMaskTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 alphaMaskScaleOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialState::dyn_alphaMaskScaleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_alphaMaskScaleOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaMaskScaleOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 normalMapTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarMaterialState::dyn_normalMapTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_normalMapTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalMapTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 normalMapScaleOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialState::dyn_normalMapScaleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_normalMapScaleOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalMapScaleOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 parallaxMapTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarMaterialState::dyn_parallaxMapTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_parallaxMapTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parallaxMapTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 parallaxMapScaleOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialState::dyn_parallaxMapScaleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_parallaxMapScaleOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parallaxMapScaleOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 roughnessMapTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarMaterialState::dyn_roughnessMapTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_roughnessMapTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roughnessMapTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 roughnessMapScaleOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarMaterialState::dyn_roughnessMapScaleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_roughnessMapScaleOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roughnessMapScaleOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 layerCount
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::ovrAvatarMaterialState::dyn_layerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_layerCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarMaterialLayerState[] layers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ovrAvatarMaterialLayerState>& GlobalNamespace::ovrAvatarMaterialState::dyn_layers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::dyn_layers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ovrAvatarMaterialLayerState>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ovrAvatarMaterialState.VectorEquals
bool GlobalNamespace::ovrAvatarMaterialState::VectorEquals(::UnityEngine::Vector4 a, ::UnityEngine::Vector4 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::VectorEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarMaterialState", "VectorEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: ovrAvatarMaterialState.Equals
bool GlobalNamespace::ovrAvatarMaterialState::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ovrAvatarMaterialState.GetHashCode
int GlobalNamespace::ovrAvatarMaterialState::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarMaterialState::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ovrAvatarExpressiveParameters
#include "GlobalNamespace/ovrAvatarExpressiveParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 irisColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarExpressiveParameters::dyn_irisColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::dyn_irisColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "irisColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 scleraColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarExpressiveParameters::dyn_scleraColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::dyn_scleraColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scleraColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 lashColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarExpressiveParameters::dyn_lashColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::dyn_lashColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lashColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 browColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarExpressiveParameters::dyn_browColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::dyn_browColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "browColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 lipColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarExpressiveParameters::dyn_lipColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::dyn_lipColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 teethColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarExpressiveParameters::dyn_teethColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::dyn_teethColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teethColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 gumColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarExpressiveParameters::dyn_gumColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::dyn_gumColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gumColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single browLashIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ovrAvatarExpressiveParameters::dyn_browLashIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::dyn_browLashIntensity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "browLashIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lipSmoothness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ovrAvatarExpressiveParameters::dyn_lipSmoothness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::dyn_lipSmoothness");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipSmoothness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ovrAvatarExpressiveParameters.VectorEquals
bool GlobalNamespace::ovrAvatarExpressiveParameters::VectorEquals(::UnityEngine::Vector4 a, ::UnityEngine::Vector4 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::VectorEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarExpressiveParameters", "VectorEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: ovrAvatarExpressiveParameters.Equals
bool GlobalNamespace::ovrAvatarExpressiveParameters::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ovrAvatarExpressiveParameters.GetHashCode
int GlobalNamespace::ovrAvatarExpressiveParameters::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarExpressiveParameters::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ovrAvatarPBSMaterialState
#include "GlobalNamespace/ovrAvatarPBSMaterialState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 baseColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_baseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_baseColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 albedoTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_albedoTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_albedoTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "albedoTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 albedoMultiplier
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_albedoMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_albedoMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "albedoMultiplier"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 metallicnessTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_metallicnessTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_metallicnessTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "metallicnessTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single glossinessScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_glossinessScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_glossinessScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "glossinessScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 normalTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_normalTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_normalTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 heightTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_heightTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_heightTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 occlusionTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_occlusionTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_occlusionTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occlusionTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 emissionTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_emissionTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_emissionTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emissionTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 emissionMultiplier
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_emissionMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_emissionMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emissionMultiplier"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 detailMaskTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_detailMaskTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_detailMaskTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detailMaskTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 detailAlbedoTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_detailAlbedoTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_detailAlbedoTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detailAlbedoTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 detailNormalTextureID
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::ovrAvatarPBSMaterialState::dyn_detailNormalTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::dyn_detailNormalTextureID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detailNormalTextureID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ovrAvatarPBSMaterialState.VectorEquals
bool GlobalNamespace::ovrAvatarPBSMaterialState::VectorEquals(::UnityEngine::Vector4 a, ::UnityEngine::Vector4 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::VectorEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarPBSMaterialState", "VectorEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: ovrAvatarPBSMaterialState.Equals
bool GlobalNamespace::ovrAvatarPBSMaterialState::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ovrAvatarPBSMaterialState.GetHashCode
int GlobalNamespace::ovrAvatarPBSMaterialState::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarPBSMaterialState::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarAssetMaterial
#include "GlobalNamespace/OvrAvatarAssetMaterial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ovrAvatarMaterialState material
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarMaterialState& GlobalNamespace::OvrAvatarAssetMaterial::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarAssetMaterial::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarMaterialState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarVisibilityFlags
#include "GlobalNamespace/ovrAvatarVisibilityFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarVisibilityFlags FirstPerson
::GlobalNamespace::ovrAvatarVisibilityFlags GlobalNamespace::ovrAvatarVisibilityFlags::_get_FirstPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisibilityFlags::_get_FirstPerson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarVisibilityFlags>("", "ovrAvatarVisibilityFlags", "FirstPerson"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarVisibilityFlags FirstPerson
void GlobalNamespace::ovrAvatarVisibilityFlags::_set_FirstPerson(::GlobalNamespace::ovrAvatarVisibilityFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisibilityFlags::_set_FirstPerson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarVisibilityFlags", "FirstPerson", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarVisibilityFlags ThirdPerson
::GlobalNamespace::ovrAvatarVisibilityFlags GlobalNamespace::ovrAvatarVisibilityFlags::_get_ThirdPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisibilityFlags::_get_ThirdPerson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarVisibilityFlags>("", "ovrAvatarVisibilityFlags", "ThirdPerson"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarVisibilityFlags ThirdPerson
void GlobalNamespace::ovrAvatarVisibilityFlags::_set_ThirdPerson(::GlobalNamespace::ovrAvatarVisibilityFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisibilityFlags::_set_ThirdPerson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarVisibilityFlags", "ThirdPerson", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarVisibilityFlags SelfOccluding
::GlobalNamespace::ovrAvatarVisibilityFlags GlobalNamespace::ovrAvatarVisibilityFlags::_get_SelfOccluding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisibilityFlags::_get_SelfOccluding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarVisibilityFlags>("", "ovrAvatarVisibilityFlags", "SelfOccluding"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarVisibilityFlags SelfOccluding
void GlobalNamespace::ovrAvatarVisibilityFlags::_set_SelfOccluding(::GlobalNamespace::ovrAvatarVisibilityFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisibilityFlags::_set_SelfOccluding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarVisibilityFlags", "SelfOccluding", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarVisibilityFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisibilityFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarHandGesture
#include "GlobalNamespace/ovrAvatarHandGesture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarHandGesture Default
::GlobalNamespace::ovrAvatarHandGesture GlobalNamespace::ovrAvatarHandGesture::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarHandGesture::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarHandGesture>("", "ovrAvatarHandGesture", "Default"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarHandGesture Default
void GlobalNamespace::ovrAvatarHandGesture::_set_Default(::GlobalNamespace::ovrAvatarHandGesture value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarHandGesture::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarHandGesture", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarHandGesture GripSphere
::GlobalNamespace::ovrAvatarHandGesture GlobalNamespace::ovrAvatarHandGesture::_get_GripSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarHandGesture::_get_GripSphere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarHandGesture>("", "ovrAvatarHandGesture", "GripSphere"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarHandGesture GripSphere
void GlobalNamespace::ovrAvatarHandGesture::_set_GripSphere(::GlobalNamespace::ovrAvatarHandGesture value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarHandGesture::_set_GripSphere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarHandGesture", "GripSphere", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarHandGesture GripCube
::GlobalNamespace::ovrAvatarHandGesture GlobalNamespace::ovrAvatarHandGesture::_get_GripCube() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarHandGesture::_get_GripCube");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarHandGesture>("", "ovrAvatarHandGesture", "GripCube"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarHandGesture GripCube
void GlobalNamespace::ovrAvatarHandGesture::_set_GripCube(::GlobalNamespace::ovrAvatarHandGesture value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarHandGesture::_set_GripCube");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarHandGesture", "GripCube", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarHandGesture Count
::GlobalNamespace::ovrAvatarHandGesture GlobalNamespace::ovrAvatarHandGesture::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarHandGesture::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarHandGesture>("", "ovrAvatarHandGesture", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarHandGesture Count
void GlobalNamespace::ovrAvatarHandGesture::_set_Count(::GlobalNamespace::ovrAvatarHandGesture value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarHandGesture::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarHandGesture", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarHandGesture::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarHandGesture::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarBodyPartType
#include "GlobalNamespace/ovrAvatarBodyPartType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarBodyPartType Body
::GlobalNamespace::ovrAvatarBodyPartType GlobalNamespace::ovrAvatarBodyPartType::_get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_get_Body");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarBodyPartType>("", "ovrAvatarBodyPartType", "Body"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarBodyPartType Body
void GlobalNamespace::ovrAvatarBodyPartType::_set_Body(::GlobalNamespace::ovrAvatarBodyPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_set_Body");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBodyPartType", "Body", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarBodyPartType Clothing
::GlobalNamespace::ovrAvatarBodyPartType GlobalNamespace::ovrAvatarBodyPartType::_get_Clothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_get_Clothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarBodyPartType>("", "ovrAvatarBodyPartType", "Clothing"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarBodyPartType Clothing
void GlobalNamespace::ovrAvatarBodyPartType::_set_Clothing(::GlobalNamespace::ovrAvatarBodyPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_set_Clothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBodyPartType", "Clothing", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarBodyPartType Eyewear
::GlobalNamespace::ovrAvatarBodyPartType GlobalNamespace::ovrAvatarBodyPartType::_get_Eyewear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_get_Eyewear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarBodyPartType>("", "ovrAvatarBodyPartType", "Eyewear"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarBodyPartType Eyewear
void GlobalNamespace::ovrAvatarBodyPartType::_set_Eyewear(::GlobalNamespace::ovrAvatarBodyPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_set_Eyewear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBodyPartType", "Eyewear", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarBodyPartType Hair
::GlobalNamespace::ovrAvatarBodyPartType GlobalNamespace::ovrAvatarBodyPartType::_get_Hair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_get_Hair");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarBodyPartType>("", "ovrAvatarBodyPartType", "Hair"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarBodyPartType Hair
void GlobalNamespace::ovrAvatarBodyPartType::_set_Hair(::GlobalNamespace::ovrAvatarBodyPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_set_Hair");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBodyPartType", "Hair", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarBodyPartType Beard
::GlobalNamespace::ovrAvatarBodyPartType GlobalNamespace::ovrAvatarBodyPartType::_get_Beard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_get_Beard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarBodyPartType>("", "ovrAvatarBodyPartType", "Beard"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarBodyPartType Beard
void GlobalNamespace::ovrAvatarBodyPartType::_set_Beard(::GlobalNamespace::ovrAvatarBodyPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_set_Beard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBodyPartType", "Beard", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarBodyPartType Count
::GlobalNamespace::ovrAvatarBodyPartType GlobalNamespace::ovrAvatarBodyPartType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarBodyPartType>("", "ovrAvatarBodyPartType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarBodyPartType Count
void GlobalNamespace::ovrAvatarBodyPartType::_set_Count(::GlobalNamespace::ovrAvatarBodyPartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBodyPartType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarBodyPartType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBodyPartType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarBlendShapeParams_Offsets
#include "GlobalNamespace/ovrAvatarBlendShapeParams_Offsets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 blendShapeParamCount
int GlobalNamespace::ovrAvatarBlendShapeParams_Offsets::_get_blendShapeParamCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBlendShapeParams_Offsets::_get_blendShapeParamCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ovrAvatarBlendShapeParams_Offsets", "blendShapeParamCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 blendShapeParamCount
void GlobalNamespace::ovrAvatarBlendShapeParams_Offsets::_set_blendShapeParamCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBlendShapeParams_Offsets::_set_blendShapeParamCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBlendShapeParams_Offsets", "blendShapeParamCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 blendShapeParams
int64_t GlobalNamespace::ovrAvatarBlendShapeParams_Offsets::_get_blendShapeParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBlendShapeParams_Offsets::_get_blendShapeParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarBlendShapeParams_Offsets", "blendShapeParams"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 blendShapeParams
void GlobalNamespace::ovrAvatarBlendShapeParams_Offsets::_set_blendShapeParams(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBlendShapeParams_Offsets::_set_blendShapeParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarBlendShapeParams_Offsets", "blendShapeParams", value));
}
// Autogenerated method: ovrAvatarBlendShapeParams_Offsets..cctor
void GlobalNamespace::ovrAvatarBlendShapeParams_Offsets::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarBlendShapeParams_Offsets::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarBlendShapeParams_Offsets", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarVisemes_Offsets
#include "GlobalNamespace/ovrAvatarVisemes_Offsets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 visemeParamCount
int GlobalNamespace::ovrAvatarVisemes_Offsets::_get_visemeParamCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisemes_Offsets::_get_visemeParamCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ovrAvatarVisemes_Offsets", "visemeParamCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 visemeParamCount
void GlobalNamespace::ovrAvatarVisemes_Offsets::_set_visemeParamCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisemes_Offsets::_set_visemeParamCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarVisemes_Offsets", "visemeParamCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 visemeParams
int64_t GlobalNamespace::ovrAvatarVisemes_Offsets::_get_visemeParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisemes_Offsets::_get_visemeParams");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarVisemes_Offsets", "visemeParams"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 visemeParams
void GlobalNamespace::ovrAvatarVisemes_Offsets::_set_visemeParams(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisemes_Offsets::_set_visemeParams");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarVisemes_Offsets", "visemeParams", value));
}
// Autogenerated method: ovrAvatarVisemes_Offsets..cctor
void GlobalNamespace::ovrAvatarVisemes_Offsets::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarVisemes_Offsets::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarVisemes_Offsets", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarGazeTargetType
#include "GlobalNamespace/ovrAvatarGazeTargetType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarGazeTargetType AvatarHead
::GlobalNamespace::ovrAvatarGazeTargetType GlobalNamespace::ovrAvatarGazeTargetType::_get_AvatarHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::_get_AvatarHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarGazeTargetType>("", "ovrAvatarGazeTargetType", "AvatarHead"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarGazeTargetType AvatarHead
void GlobalNamespace::ovrAvatarGazeTargetType::_set_AvatarHead(::GlobalNamespace::ovrAvatarGazeTargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::_set_AvatarHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarGazeTargetType", "AvatarHead", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarGazeTargetType AvatarHand
::GlobalNamespace::ovrAvatarGazeTargetType GlobalNamespace::ovrAvatarGazeTargetType::_get_AvatarHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::_get_AvatarHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarGazeTargetType>("", "ovrAvatarGazeTargetType", "AvatarHand"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarGazeTargetType AvatarHand
void GlobalNamespace::ovrAvatarGazeTargetType::_set_AvatarHand(::GlobalNamespace::ovrAvatarGazeTargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::_set_AvatarHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarGazeTargetType", "AvatarHand", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarGazeTargetType Object
::GlobalNamespace::ovrAvatarGazeTargetType GlobalNamespace::ovrAvatarGazeTargetType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarGazeTargetType>("", "ovrAvatarGazeTargetType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarGazeTargetType Object
void GlobalNamespace::ovrAvatarGazeTargetType::_set_Object(::GlobalNamespace::ovrAvatarGazeTargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarGazeTargetType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarGazeTargetType ObjectStatic
::GlobalNamespace::ovrAvatarGazeTargetType GlobalNamespace::ovrAvatarGazeTargetType::_get_ObjectStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::_get_ObjectStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarGazeTargetType>("", "ovrAvatarGazeTargetType", "ObjectStatic"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarGazeTargetType ObjectStatic
void GlobalNamespace::ovrAvatarGazeTargetType::_set_ObjectStatic(::GlobalNamespace::ovrAvatarGazeTargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::_set_ObjectStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarGazeTargetType", "ObjectStatic", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarGazeTargetType Count
::GlobalNamespace::ovrAvatarGazeTargetType GlobalNamespace::ovrAvatarGazeTargetType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarGazeTargetType>("", "ovrAvatarGazeTargetType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarGazeTargetType Count
void GlobalNamespace::ovrAvatarGazeTargetType::_set_Count(::GlobalNamespace::ovrAvatarGazeTargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarGazeTargetType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarGazeTargetType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargetType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarGazeTarget_Offsets
#include "GlobalNamespace/ovrAvatarGazeTarget_Offsets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 id
int GlobalNamespace::ovrAvatarGazeTarget_Offsets::_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTarget_Offsets::_get_id");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ovrAvatarGazeTarget_Offsets", "id"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 id
void GlobalNamespace::ovrAvatarGazeTarget_Offsets::_set_id(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTarget_Offsets::_set_id");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarGazeTarget_Offsets", "id", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 worldPosition
int GlobalNamespace::ovrAvatarGazeTarget_Offsets::_get_worldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTarget_Offsets::_get_worldPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ovrAvatarGazeTarget_Offsets", "worldPosition"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 worldPosition
void GlobalNamespace::ovrAvatarGazeTarget_Offsets::_set_worldPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTarget_Offsets::_set_worldPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarGazeTarget_Offsets", "worldPosition", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 type
int GlobalNamespace::ovrAvatarGazeTarget_Offsets::_get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTarget_Offsets::_get_type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ovrAvatarGazeTarget_Offsets", "type"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 type
void GlobalNamespace::ovrAvatarGazeTarget_Offsets::_set_type(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTarget_Offsets::_set_type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarGazeTarget_Offsets", "type", value));
}
// Autogenerated method: ovrAvatarGazeTarget_Offsets..cctor
void GlobalNamespace::ovrAvatarGazeTarget_Offsets::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTarget_Offsets::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarGazeTarget_Offsets", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarGazeTargets_Offsets
#include "GlobalNamespace/ovrAvatarGazeTargets_Offsets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 targetCount
int GlobalNamespace::ovrAvatarGazeTargets_Offsets::_get_targetCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargets_Offsets::_get_targetCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ovrAvatarGazeTargets_Offsets", "targetCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 targetCount
void GlobalNamespace::ovrAvatarGazeTargets_Offsets::_set_targetCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargets_Offsets::_set_targetCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarGazeTargets_Offsets", "targetCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 targets
int64_t GlobalNamespace::ovrAvatarGazeTargets_Offsets::_get_targets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargets_Offsets::_get_targets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarGazeTargets_Offsets", "targets"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 targets
void GlobalNamespace::ovrAvatarGazeTargets_Offsets::_set_targets(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargets_Offsets::_set_targets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarGazeTargets_Offsets", "targets", value));
}
// Autogenerated method: ovrAvatarGazeTargets_Offsets..cctor
void GlobalNamespace::ovrAvatarGazeTargets_Offsets::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarGazeTargets_Offsets::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarGazeTargets_Offsets", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarLightType
#include "GlobalNamespace/ovrAvatarLightType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarLightType Point
::GlobalNamespace::ovrAvatarLightType GlobalNamespace::ovrAvatarLightType::_get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLightType::_get_Point");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLightType>("", "ovrAvatarLightType", "Point"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLightType Point
void GlobalNamespace::ovrAvatarLightType::_set_Point(::GlobalNamespace::ovrAvatarLightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLightType::_set_Point");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLightType", "Point", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLightType Direction
::GlobalNamespace::ovrAvatarLightType GlobalNamespace::ovrAvatarLightType::_get_Direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLightType::_get_Direction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLightType>("", "ovrAvatarLightType", "Direction"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLightType Direction
void GlobalNamespace::ovrAvatarLightType::_set_Direction(::GlobalNamespace::ovrAvatarLightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLightType::_set_Direction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLightType", "Direction", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLightType Spot
::GlobalNamespace::ovrAvatarLightType GlobalNamespace::ovrAvatarLightType::_get_Spot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLightType::_get_Spot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLightType>("", "ovrAvatarLightType", "Spot"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLightType Spot
void GlobalNamespace::ovrAvatarLightType::_set_Spot(::GlobalNamespace::ovrAvatarLightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLightType::_set_Spot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLightType", "Spot", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarLightType Count
::GlobalNamespace::ovrAvatarLightType GlobalNamespace::ovrAvatarLightType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLightType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarLightType>("", "ovrAvatarLightType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarLightType Count
void GlobalNamespace::ovrAvatarLightType::_set_Count(::GlobalNamespace::ovrAvatarLightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLightType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLightType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ovrAvatarLightType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLightType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarLight_Offsets
#include "GlobalNamespace/ovrAvatarLight_Offsets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int64 id
int64_t GlobalNamespace::ovrAvatarLight_Offsets::_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_get_id");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarLight_Offsets", "id"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 id
void GlobalNamespace::ovrAvatarLight_Offsets::_set_id(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_set_id");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLight_Offsets", "id", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 type
int64_t GlobalNamespace::ovrAvatarLight_Offsets::_get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_get_type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarLight_Offsets", "type"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 type
void GlobalNamespace::ovrAvatarLight_Offsets::_set_type(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_set_type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLight_Offsets", "type", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 intensity
int64_t GlobalNamespace::ovrAvatarLight_Offsets::_get_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_get_intensity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarLight_Offsets", "intensity"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 intensity
void GlobalNamespace::ovrAvatarLight_Offsets::_set_intensity(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_set_intensity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLight_Offsets", "intensity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 worldDirection
int64_t GlobalNamespace::ovrAvatarLight_Offsets::_get_worldDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_get_worldDirection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarLight_Offsets", "worldDirection"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 worldDirection
void GlobalNamespace::ovrAvatarLight_Offsets::_set_worldDirection(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_set_worldDirection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLight_Offsets", "worldDirection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 worldPosition
int64_t GlobalNamespace::ovrAvatarLight_Offsets::_get_worldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_get_worldPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarLight_Offsets", "worldPosition"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 worldPosition
void GlobalNamespace::ovrAvatarLight_Offsets::_set_worldPosition(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_set_worldPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLight_Offsets", "worldPosition", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 range
int64_t GlobalNamespace::ovrAvatarLight_Offsets::_get_range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_get_range");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarLight_Offsets", "range"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 range
void GlobalNamespace::ovrAvatarLight_Offsets::_set_range(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_set_range");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLight_Offsets", "range", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 spotAngleDeg
int64_t GlobalNamespace::ovrAvatarLight_Offsets::_get_spotAngleDeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_get_spotAngleDeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarLight_Offsets", "spotAngleDeg"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 spotAngleDeg
void GlobalNamespace::ovrAvatarLight_Offsets::_set_spotAngleDeg(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::_set_spotAngleDeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLight_Offsets", "spotAngleDeg", value));
}
// Autogenerated method: ovrAvatarLight_Offsets..cctor
void GlobalNamespace::ovrAvatarLight_Offsets::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLight_Offsets::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarLight_Offsets", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarLights_Offsets
#include "GlobalNamespace/ovrAvatarLights_Offsets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int64 ambientIntensity
int64_t GlobalNamespace::ovrAvatarLights_Offsets::_get_ambientIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLights_Offsets::_get_ambientIntensity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarLights_Offsets", "ambientIntensity"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 ambientIntensity
void GlobalNamespace::ovrAvatarLights_Offsets::_set_ambientIntensity(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLights_Offsets::_set_ambientIntensity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLights_Offsets", "ambientIntensity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 lightCount
int64_t GlobalNamespace::ovrAvatarLights_Offsets::_get_lightCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLights_Offsets::_get_lightCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarLights_Offsets", "lightCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 lightCount
void GlobalNamespace::ovrAvatarLights_Offsets::_set_lightCount(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLights_Offsets::_set_lightCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLights_Offsets", "lightCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int64 lights
int64_t GlobalNamespace::ovrAvatarLights_Offsets::_get_lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLights_Offsets::_get_lights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "ovrAvatarLights_Offsets", "lights"));
}
// Autogenerated static field setter
// Set static field: static public System.Int64 lights
void GlobalNamespace::ovrAvatarLights_Offsets::_set_lights(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLights_Offsets::_set_lights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarLights_Offsets", "lights", value));
}
// Autogenerated method: ovrAvatarLights_Offsets..cctor
void GlobalNamespace::ovrAvatarLights_Offsets::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarLights_Offsets::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ovrAvatarLights_Offsets", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ovrAvatarDebugContext
#include "GlobalNamespace/ovrAvatarDebugContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ovrAvatarDebugContext None
::GlobalNamespace::ovrAvatarDebugContext GlobalNamespace::ovrAvatarDebugContext::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarDebugContext::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarDebugContext>("", "ovrAvatarDebugContext", "None"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarDebugContext None
void GlobalNamespace::ovrAvatarDebugContext::_set_None(::GlobalNamespace::ovrAvatarDebugContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarDebugContext::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarDebugContext", "None", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarDebugContext GazeTarget
::GlobalNamespace::ovrAvatarDebugContext GlobalNamespace::ovrAvatarDebugContext::_get_GazeTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarDebugContext::_get_GazeTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarDebugContext>("", "ovrAvatarDebugContext", "GazeTarget"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarDebugContext GazeTarget
void GlobalNamespace::ovrAvatarDebugContext::_set_GazeTarget(::GlobalNamespace::ovrAvatarDebugContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarDebugContext::_set_GazeTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarDebugContext", "GazeTarget", value));
}
// Autogenerated static field getter
// Get static field: static public ovrAvatarDebugContext Any
::GlobalNamespace::ovrAvatarDebugContext GlobalNamespace::ovrAvatarDebugContext::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarDebugContext::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ovrAvatarDebugContext>("", "ovrAvatarDebugContext", "Any"));
}
// Autogenerated static field setter
// Set static field: static public ovrAvatarDebugContext Any
void GlobalNamespace::ovrAvatarDebugContext::_set_Any(::GlobalNamespace::ovrAvatarDebugContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarDebugContext::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ovrAvatarDebugContext", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::ovrAvatarDebugContext::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ovrAvatarDebugContext::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: specificationCallback
#include "GlobalNamespace/specificationCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: specificationCallback.Invoke
void GlobalNamespace::specificationCallback::Invoke(::System::IntPtr specification) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::specificationCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::specificationCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, specification);
}
// Autogenerated method: specificationCallback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::specificationCallback::BeginInvoke(::System::IntPtr specification, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::specificationCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::specificationCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, specification, callback, object);
}
// Autogenerated method: specificationCallback.EndInvoke
void GlobalNamespace::specificationCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::specificationCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::specificationCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: assetLoadedCallback
#include "GlobalNamespace/assetLoadedCallback.hpp"
// Including type: OvrAvatarAsset
#include "GlobalNamespace/OvrAvatarAsset.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: assetLoadedCallback.Invoke
void GlobalNamespace::assetLoadedCallback::Invoke(::GlobalNamespace::OvrAvatarAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::assetLoadedCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::assetLoadedCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: assetLoadedCallback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::assetLoadedCallback::BeginInvoke(::GlobalNamespace::OvrAvatarAsset* asset, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::assetLoadedCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::assetLoadedCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, asset, callback, object);
}
// Autogenerated method: assetLoadedCallback.EndInvoke
void GlobalNamespace::assetLoadedCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::assetLoadedCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::assetLoadedCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: combinedMeshLoadedCallback
#include "GlobalNamespace/combinedMeshLoadedCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: combinedMeshLoadedCallback.Invoke
void GlobalNamespace::combinedMeshLoadedCallback::Invoke(::System::IntPtr asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::combinedMeshLoadedCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::combinedMeshLoadedCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: combinedMeshLoadedCallback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::combinedMeshLoadedCallback::BeginInvoke(::System::IntPtr asset, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::combinedMeshLoadedCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::combinedMeshLoadedCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, asset, callback, object);
}
// Autogenerated method: combinedMeshLoadedCallback.EndInvoke
void GlobalNamespace::combinedMeshLoadedCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::combinedMeshLoadedCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::combinedMeshLoadedCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarSDKManager
#include "GlobalNamespace/OvrAvatarSDKManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: specificationCallback
#include "GlobalNamespace/specificationCallback.hpp"
// Including type: assetLoadedCallback
#include "GlobalNamespace/assetLoadedCallback.hpp"
// Including type: combinedMeshLoadedCallback
#include "GlobalNamespace/combinedMeshLoadedCallback.hpp"
// Including type: OvrAvatarAsset
#include "GlobalNamespace/OvrAvatarAsset.hpp"
// Including type: OvrAvatarTextureCopyManager
#include "GlobalNamespace/OvrAvatarTextureCopyManager.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OvrAvatarSDKManager _instance
::GlobalNamespace::OvrAvatarSDKManager* GlobalNamespace::OvrAvatarSDKManager::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatarSDKManager*>("", "OvrAvatarSDKManager", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private OvrAvatarSDKManager _instance
void GlobalNamespace::OvrAvatarSDKManager::_set__instance(::GlobalNamespace::OvrAvatarSDKManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarSDKManager", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single AVATAR_SPEC_REQUEST_TIMEOUT
float GlobalNamespace::OvrAvatarSDKManager::_get_AVATAR_SPEC_REQUEST_TIMEOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::_get_AVATAR_SPEC_REQUEST_TIMEOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OvrAvatarSDKManager", "AVATAR_SPEC_REQUEST_TIMEOUT"));
}
// Autogenerated static field setter
// Set static field: static private System.Single AVATAR_SPEC_REQUEST_TIMEOUT
void GlobalNamespace::OvrAvatarSDKManager::_set_AVATAR_SPEC_REQUEST_TIMEOUT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::_set_AVATAR_SPEC_REQUEST_TIMEOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarSDKManager", "AVATAR_SPEC_REQUEST_TIMEOUT", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarSDKManager::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.UInt64,System.Collections.Generic.HashSet`1<specificationCallback>> specificationCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::specificationCallback*>*>*& GlobalNamespace::OvrAvatarSDKManager::dyn_specificationCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_specificationCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "specificationCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::specificationCallback*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.UInt64,System.Collections.Generic.HashSet`1<assetLoadedCallback>> assetLoadedCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::assetLoadedCallback*>*>*& GlobalNamespace::OvrAvatarSDKManager::dyn_assetLoadedCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_assetLoadedCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetLoadedCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::assetLoadedCallback*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.IntPtr,combinedMeshLoadedCallback> combinedMeshLoadedCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::IntPtr, ::GlobalNamespace::combinedMeshLoadedCallback*>*& GlobalNamespace::OvrAvatarSDKManager::dyn_combinedMeshLoadedCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_combinedMeshLoadedCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "combinedMeshLoadedCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::IntPtr, ::GlobalNamespace::combinedMeshLoadedCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.UInt64,OvrAvatarAsset> assetCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint64_t, ::GlobalNamespace::OvrAvatarAsset*>*& GlobalNamespace::OvrAvatarSDKManager::dyn_assetCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_assetCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, ::GlobalNamespace::OvrAvatarAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OvrAvatarTextureCopyManager textureCopyManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarTextureCopyManager*& GlobalNamespace::OvrAvatarSDKManager::dyn_textureCopyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_textureCopyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureCopyManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarTextureCopyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarLogLevel LoggingLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarLogLevel& GlobalNamespace::OvrAvatarSDKManager::dyn_LoggingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_LoggingLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggingLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarLogLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<OvrAvatarSDKManager/AvatarSpecRequestParams> avatarSpecificationQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams>*& GlobalNamespace::OvrAvatarSDKManager::dyn_avatarSpecificationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_avatarSpecificationQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatarSpecificationQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> loadingAvatars
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GlobalNamespace::OvrAvatarSDKManager::dyn_loadingAvatars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_loadingAvatars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingAvatars"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean avatarSpecRequestAvailable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarSDKManager::dyn_avatarSpecRequestAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_avatarSpecRequestAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatarSpecRequestAvailable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastDispatchedAvatarSpecRequestTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OvrAvatarSDKManager::dyn_lastDispatchedAvatarSpecRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::dyn_lastDispatchedAvatarSpecRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDispatchedAvatarSpecRequestTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarSDKManager.get_Instance
::GlobalNamespace::OvrAvatarSDKManager* GlobalNamespace::OvrAvatarSDKManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarSDKManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarSDKManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OvrAvatarSDKManager.Initialize
bool GlobalNamespace::OvrAvatarSDKManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarSDKManager.OnDestroy
void GlobalNamespace::OvrAvatarSDKManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarSDKManager.Update
void GlobalNamespace::OvrAvatarSDKManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarSDKManager.IsAvatarSpecWaiting
bool GlobalNamespace::OvrAvatarSDKManager::IsAvatarSpecWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::IsAvatarSpecWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAvatarSpecWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarSDKManager.IsAvatarLoading
bool GlobalNamespace::OvrAvatarSDKManager::IsAvatarLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::IsAvatarLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAvatarLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarSDKManager.AddLoadingAvatar
void GlobalNamespace::OvrAvatarSDKManager::AddLoadingAvatar(int gameobjectID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::AddLoadingAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLoadingAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameobjectID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameobjectID);
}
// Autogenerated method: OvrAvatarSDKManager.RemoveLoadingAvatar
void GlobalNamespace::OvrAvatarSDKManager::RemoveLoadingAvatar(int gameobjectID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::RemoveLoadingAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveLoadingAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameobjectID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameobjectID);
}
// Autogenerated method: OvrAvatarSDKManager.RequestAvatarSpecification
void GlobalNamespace::OvrAvatarSDKManager::RequestAvatarSpecification(::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams avatarSpecRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::RequestAvatarSpecification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestAvatarSpecification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarSpecRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarSpecRequest);
}
// Autogenerated method: OvrAvatarSDKManager.DispatchAvatarSpecificationRequest
void GlobalNamespace::OvrAvatarSDKManager::DispatchAvatarSpecificationRequest(::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams avatarSpecRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::DispatchAvatarSpecificationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DispatchAvatarSpecificationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarSpecRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarSpecRequest);
}
// Autogenerated method: OvrAvatarSDKManager.BeginLoadingAsset
void GlobalNamespace::OvrAvatarSDKManager::BeginLoadingAsset(uint64_t assetId, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod, ::GlobalNamespace::assetLoadedCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::BeginLoadingAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginLoadingAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetId), ::il2cpp_utils::ExtractType(lod), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, assetId, lod, callback);
}
// Autogenerated method: OvrAvatarSDKManager.RegisterCombinedMeshCallback
void GlobalNamespace::OvrAvatarSDKManager::RegisterCombinedMeshCallback(::System::IntPtr sdkAvatar, ::GlobalNamespace::combinedMeshLoadedCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::RegisterCombinedMeshCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterCombinedMeshCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sdkAvatar), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sdkAvatar, callback);
}
// Autogenerated method: OvrAvatarSDKManager.GetAsset
::GlobalNamespace::OvrAvatarAsset* GlobalNamespace::OvrAvatarSDKManager::GetAsset(uint64_t assetId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::GetAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarAsset*, false>(this, ___internal__method, assetId);
}
// Autogenerated method: OvrAvatarSDKManager.DeleteAssetFromCache
void GlobalNamespace::OvrAvatarSDKManager::DeleteAssetFromCache(uint64_t assetId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::DeleteAssetFromCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteAssetFromCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, assetId);
}
// Autogenerated method: OvrAvatarSDKManager.GetAppId
::StringW GlobalNamespace::OvrAvatarSDKManager::GetAppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::GetAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarSDKManager.GetTextureCopyManager
::GlobalNamespace::OvrAvatarTextureCopyManager* GlobalNamespace::OvrAvatarSDKManager::GetTextureCopyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::GetTextureCopyManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureCopyManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarTextureCopyManager*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarSDKManager/AvatarSpecRequestParams
#include "GlobalNamespace/OvrAvatarSDKManager.hpp"
// Including type: specificationCallback
#include "GlobalNamespace/specificationCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 _userId
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__userId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public specificationCallback _callback
[[deprecated("Use field access instead!")]] ::GlobalNamespace::specificationCallback*& GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__callback");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callback"))->offset;
  return *reinterpret_cast<::GlobalNamespace::specificationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useCombinedMesh
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__useCombinedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__useCombinedMesh");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useCombinedMesh"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarAssetLevelOfDetail _lod
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarAssetLevelOfDetail& GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__lod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__lod");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lod"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarAssetLevelOfDetail*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _forceMobileTextureFormat
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__forceMobileTextureFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__forceMobileTextureFormat");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceMobileTextureFormat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarLookAndFeelVersion _lookVersion
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarLookAndFeelVersion& GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__lookVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__lookVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lookVersion"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarLookAndFeelVersion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ovrAvatarLookAndFeelVersion _fallbackVersion
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarLookAndFeelVersion& GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__fallbackVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__fallbackVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fallbackVersion"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarLookAndFeelVersion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _enableExpressive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__enableExpressive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::dyn__enableExpressive");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableExpressive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarSDKManager/AvatarSpecRequestParams..ctor
// ABORTED elsewhere.  GlobalNamespace::OvrAvatarSDKManager::AvatarSpecRequestParams::AvatarSpecRequestParams(uint64_t userId, ::GlobalNamespace::specificationCallback* callback, bool useCombinedMesh, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ::GlobalNamespace::ovrAvatarLookAndFeelVersion lookVersion, ::GlobalNamespace::ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarSettings
#include "GlobalNamespace/OvrAvatarSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OvrAvatarSettings instance
::GlobalNamespace::OvrAvatarSettings* GlobalNamespace::OvrAvatarSettings::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSettings::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OvrAvatarSettings*>("", "OvrAvatarSettings", "instance"));
}
// Autogenerated static field setter
// Set static field: static private OvrAvatarSettings instance
void GlobalNamespace::OvrAvatarSettings::_set_instance(::GlobalNamespace::OvrAvatarSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSettings::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarSettings", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String ovrAppID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OvrAvatarSettings::dyn_ovrAppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSettings::dyn_ovrAppID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ovrAppID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ovrGearAppID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OvrAvatarSettings::dyn_ovrGearAppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSettings::dyn_ovrGearAppID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ovrGearAppID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarSettings.get_AppID
::StringW GlobalNamespace::OvrAvatarSettings::get_AppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSettings::get_AppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarSettings", "get_AppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OvrAvatarSettings.set_AppID
void GlobalNamespace::OvrAvatarSettings::set_AppID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSettings::set_AppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarSettings", "set_AppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OvrAvatarSettings.get_MobileAppID
::StringW GlobalNamespace::OvrAvatarSettings::get_MobileAppID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSettings::get_MobileAppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarSettings", "get_MobileAppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OvrAvatarSettings.set_MobileAppID
void GlobalNamespace::OvrAvatarSettings::set_MobileAppID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSettings::set_MobileAppID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarSettings", "set_MobileAppID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OvrAvatarSettings.get_Instance
::GlobalNamespace::OvrAvatarSettings* GlobalNamespace::OvrAvatarSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OvrAvatarSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OvrAvatarSettings.set_Instance
void GlobalNamespace::OvrAvatarSettings::set_Instance(::GlobalNamespace::OvrAvatarSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSettings::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OvrAvatarSettings", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarSkinnedMeshRenderComponent
#include "GlobalNamespace/OvrAvatarSkinnedMeshRenderComponent.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRender
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRender.hpp"
// Including type: OvrAvatarComponent
#include "GlobalNamespace/OvrAvatarComponent_.hpp"
// Including type: OvrAvatar
#include "GlobalNamespace/OvrAvatar.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: ovrAvatarVisibilityFlags
#include "GlobalNamespace/ovrAvatarVisibilityFlags.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader surface
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::dyn_surface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::dyn_surface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surface"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader surfaceSelfOccluding
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::dyn_surfaceSelfOccluding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::dyn_surfaceSelfOccluding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surfaceSelfOccluding"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean previouslyActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::dyn_previouslyActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::dyn_previouslyActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previouslyActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarSkinnedMeshRenderComponent.Initialize
void GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::Initialize(::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, ::UnityEngine::Shader* surface, ::UnityEngine::Shader* surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skinnedMeshRender), ::il2cpp_utils::ExtractType(surface), ::il2cpp_utils::ExtractType(surfaceSelfOccluding), ::il2cpp_utils::ExtractType(thirdPersonLayer), ::il2cpp_utils::ExtractType(firstPersonLayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skinnedMeshRender, surface, surfaceSelfOccluding, thirdPersonLayer, firstPersonLayer);
}
// Autogenerated method: OvrAvatarSkinnedMeshRenderComponent.UpdateSkinnedMeshRender
void GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::UpdateSkinnedMeshRender(::GlobalNamespace::OvrAvatarComponent_* component, ::GlobalNamespace::OvrAvatar* avatar, ::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::UpdateSkinnedMeshRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSkinnedMeshRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(renderPart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, avatar, renderPart);
}
// Autogenerated method: OvrAvatarSkinnedMeshRenderComponent.UpdateMeshMaterial
void GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::UpdateMeshMaterial(::GlobalNamespace::ovrAvatarVisibilityFlags visibilityMask, ::UnityEngine::SkinnedMeshRenderer* rootMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshRenderComponent::UpdateMeshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visibilityMask), ::il2cpp_utils::ExtractType(rootMesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visibilityMask, rootMesh);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarSkinnedMeshRenderPBSComponent
#include "GlobalNamespace/OvrAvatarSkinnedMeshRenderPBSComponent.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRenderPBS
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRenderPBS.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: OvrAvatar
#include "GlobalNamespace/OvrAvatar.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isMaterialInitilized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarSkinnedMeshRenderPBSComponent::dyn_isMaterialInitilized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshRenderPBSComponent::dyn_isMaterialInitilized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMaterialInitilized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarSkinnedMeshRenderPBSComponent.Initialize
void GlobalNamespace::OvrAvatarSkinnedMeshRenderPBSComponent::Initialize(::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, ::UnityEngine::Shader* shader, int thirdPersonLayer, int firstPersonLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshRenderPBSComponent::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skinnedMeshRenderPBS), ::il2cpp_utils::ExtractType(shader), ::il2cpp_utils::ExtractType(thirdPersonLayer), ::il2cpp_utils::ExtractType(firstPersonLayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skinnedMeshRenderPBS, shader, thirdPersonLayer, firstPersonLayer);
}
// Autogenerated method: OvrAvatarSkinnedMeshRenderPBSComponent.UpdateSkinnedMeshRenderPBS
void GlobalNamespace::OvrAvatarSkinnedMeshRenderPBSComponent::UpdateSkinnedMeshRenderPBS(::GlobalNamespace::OvrAvatar* avatar, ::System::IntPtr renderPart, ::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshRenderPBSComponent::UpdateSkinnedMeshRenderPBS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSkinnedMeshRenderPBS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatar, renderPart, mat);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarSkinnedMeshPBSV2RenderComponent
#include "GlobalNamespace/OvrAvatarSkinnedMeshPBSV2RenderComponent.hpp"
// Including type: OvrAvatarMaterialManager
#include "GlobalNamespace/OvrAvatarMaterialManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2.hpp"
// Including type: ovrAvatarAssetLevelOfDetail
#include "GlobalNamespace/ovrAvatarAssetLevelOfDetail.hpp"
// Including type: OvrAvatar
#include "GlobalNamespace/OvrAvatar.hpp"
// Including type: OvrAvatarComponent
#include "GlobalNamespace/OvrAvatarComponent_.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String MAIN_MATERIAL_NAME
::StringW GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_get_MAIN_MATERIAL_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_get_MAIN_MATERIAL_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarSkinnedMeshPBSV2RenderComponent", "MAIN_MATERIAL_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String MAIN_MATERIAL_NAME
void GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_set_MAIN_MATERIAL_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_set_MAIN_MATERIAL_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarSkinnedMeshPBSV2RenderComponent", "MAIN_MATERIAL_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String EYE_MATERIAL_NAME
::StringW GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_get_EYE_MATERIAL_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_get_EYE_MATERIAL_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarSkinnedMeshPBSV2RenderComponent", "EYE_MATERIAL_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String EYE_MATERIAL_NAME
void GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_set_EYE_MATERIAL_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_set_EYE_MATERIAL_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarSkinnedMeshPBSV2RenderComponent", "EYE_MATERIAL_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DEFAULT_MATERIAL_NAME
::StringW GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_get_DEFAULT_MATERIAL_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_get_DEFAULT_MATERIAL_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarSkinnedMeshPBSV2RenderComponent", "DEFAULT_MATERIAL_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String DEFAULT_MATERIAL_NAME
void GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_set_DEFAULT_MATERIAL_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::_set_DEFAULT_MATERIAL_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarSkinnedMeshPBSV2RenderComponent", "DEFAULT_MATERIAL_NAME", value));
}
// Autogenerated instance field getter
// Get instance field: private OvrAvatarMaterialManager avatarMaterialManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarMaterialManager*& GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_avatarMaterialManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_avatarMaterialManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatarMaterialManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarMaterialManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean previouslyActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_previouslyActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_previouslyActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previouslyActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isCombinedMaterial
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_isCombinedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_isCombinedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCombinedMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ovrAvatarExpressiveParameters ExpressiveParameters
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarExpressiveParameters& GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_ExpressiveParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_ExpressiveParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpressiveParameters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarExpressiveParameters*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean EnableExpressive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_EnableExpressive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_EnableExpressive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableExpressive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 blendShapeCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_blendShapeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_blendShapeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendShapeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ovrAvatarBlendShapeParams blendShapeParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarBlendShapeParams& GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_blendShapeParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::dyn_blendShapeParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendShapeParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarBlendShapeParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarSkinnedMeshPBSV2RenderComponent.Initialize
void GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::Initialize(::System::IntPtr renderPart, ::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, ::GlobalNamespace::OvrAvatarMaterialManager* materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, ::GlobalNamespace::OvrAvatar* avatar, bool isControllerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(skinnedMeshRender), ::il2cpp_utils::ExtractType(materialManager), ::il2cpp_utils::ExtractType(thirdPersonLayer), ::il2cpp_utils::ExtractType(firstPersonLayer), ::il2cpp_utils::ExtractType(combinedMesh), ::il2cpp_utils::ExtractType(lod), ::il2cpp_utils::ExtractType(assignExpressiveParams), ::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(isControllerModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderPart, skinnedMeshRender, materialManager, thirdPersonLayer, firstPersonLayer, combinedMesh, lod, assignExpressiveParams, avatar, isControllerModel);
}
// Autogenerated method: OvrAvatarSkinnedMeshPBSV2RenderComponent.UpdateSkinnedMeshRender
void GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::UpdateSkinnedMeshRender(::GlobalNamespace::OvrAvatarComponent_* component, ::GlobalNamespace::OvrAvatar* avatar, ::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::UpdateSkinnedMeshRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSkinnedMeshRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(renderPart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, avatar, renderPart);
}
// Autogenerated method: OvrAvatarSkinnedMeshPBSV2RenderComponent.InitializeSingleComponentMaterial
void GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::InitializeSingleComponentMaterial(::System::IntPtr renderPart, int lodIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::InitializeSingleComponentMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSingleComponentMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(lodIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderPart, lodIndex);
}
// Autogenerated method: OvrAvatarSkinnedMeshPBSV2RenderComponent.InitializeCombinedMaterial
void GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::InitializeCombinedMaterial(::System::IntPtr renderPart, int lodIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::InitializeCombinedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeCombinedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(lodIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderPart, lodIndex);
}
// Autogenerated method: OvrAvatarSkinnedMeshPBSV2RenderComponent.SetMaterialTransparent
void GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::SetMaterialTransparent(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::SetMaterialTransparent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialTransparent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: OvrAvatarSkinnedMeshPBSV2RenderComponent.SetMaterialOpaque
void GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::SetMaterialOpaque(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarSkinnedMeshPBSV2RenderComponent::SetMaterialOpaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialOpaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarTextureCopyManager
#include "GlobalNamespace/OvrAvatarTextureCopyManager.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OvrAvatarTextureCopyManager/<DeleteTextureSetCoroutine>d__24
#include "GlobalNamespace/OvrAvatarTextureCopyManager_-DeleteTextureSetCoroutine-d__24.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: ovrAvatarAssetLevelOfDetail
#include "GlobalNamespace/ovrAvatarAssetLevelOfDetail.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 TEXTURES_TO_COPY_QUEUE_CAPACITY
int GlobalNamespace::OvrAvatarTextureCopyManager::_get_TEXTURES_TO_COPY_QUEUE_CAPACITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_get_TEXTURES_TO_COPY_QUEUE_CAPACITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OvrAvatarTextureCopyManager", "TEXTURES_TO_COPY_QUEUE_CAPACITY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TEXTURES_TO_COPY_QUEUE_CAPACITY
void GlobalNamespace::OvrAvatarTextureCopyManager::_set_TEXTURES_TO_COPY_QUEUE_CAPACITY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_set_TEXTURES_TO_COPY_QUEUE_CAPACITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarTextureCopyManager", "TEXTURES_TO_COPY_QUEUE_CAPACITY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 COPIES_PER_FRAME
int GlobalNamespace::OvrAvatarTextureCopyManager::_get_COPIES_PER_FRAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_get_COPIES_PER_FRAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OvrAvatarTextureCopyManager", "COPIES_PER_FRAME"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 COPIES_PER_FRAME
void GlobalNamespace::OvrAvatarTextureCopyManager::_set_COPIES_PER_FRAME(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_set_COPIES_PER_FRAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarTextureCopyManager", "COPIES_PER_FRAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_HIGHEST_DIFFUSE_ROUGHNESS
::StringW GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_HIGHEST_DIFFUSE_ROUGHNESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_HIGHEST_DIFFUSE_ROUGHNESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarTextureCopyManager", "PATH_HIGHEST_DIFFUSE_ROUGHNESS"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_HIGHEST_DIFFUSE_ROUGHNESS
void GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_HIGHEST_DIFFUSE_ROUGHNESS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_HIGHEST_DIFFUSE_ROUGHNESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarTextureCopyManager", "PATH_HIGHEST_DIFFUSE_ROUGHNESS", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_MEDIUM_DIFFUSE_ROUGHNESS
::StringW GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_MEDIUM_DIFFUSE_ROUGHNESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_MEDIUM_DIFFUSE_ROUGHNESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarTextureCopyManager", "PATH_MEDIUM_DIFFUSE_ROUGHNESS"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_MEDIUM_DIFFUSE_ROUGHNESS
void GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_MEDIUM_DIFFUSE_ROUGHNESS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_MEDIUM_DIFFUSE_ROUGHNESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarTextureCopyManager", "PATH_MEDIUM_DIFFUSE_ROUGHNESS", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_LOWEST_DIFFUSE_ROUGHNESS
::StringW GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_LOWEST_DIFFUSE_ROUGHNESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_LOWEST_DIFFUSE_ROUGHNESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarTextureCopyManager", "PATH_LOWEST_DIFFUSE_ROUGHNESS"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_LOWEST_DIFFUSE_ROUGHNESS
void GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_LOWEST_DIFFUSE_ROUGHNESS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_LOWEST_DIFFUSE_ROUGHNESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarTextureCopyManager", "PATH_LOWEST_DIFFUSE_ROUGHNESS", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_HIGHEST_NORMAL
::StringW GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_HIGHEST_NORMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_HIGHEST_NORMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarTextureCopyManager", "PATH_HIGHEST_NORMAL"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_HIGHEST_NORMAL
void GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_HIGHEST_NORMAL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_HIGHEST_NORMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarTextureCopyManager", "PATH_HIGHEST_NORMAL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_MEDIUM_NORMAL
::StringW GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_MEDIUM_NORMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_MEDIUM_NORMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarTextureCopyManager", "PATH_MEDIUM_NORMAL"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_MEDIUM_NORMAL
void GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_MEDIUM_NORMAL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_MEDIUM_NORMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarTextureCopyManager", "PATH_MEDIUM_NORMAL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String PATH_LOWEST_NORMAL
::StringW GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_LOWEST_NORMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_get_PATH_LOWEST_NORMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OvrAvatarTextureCopyManager", "PATH_LOWEST_NORMAL"));
}
// Autogenerated static field setter
// Set static field: static private System.String PATH_LOWEST_NORMAL
void GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_LOWEST_NORMAL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_set_PATH_LOWEST_NORMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarTextureCopyManager", "PATH_LOWEST_NORMAL", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GPU_TEXTURE_COPY_WAIT_TIME
int GlobalNamespace::OvrAvatarTextureCopyManager::_get_GPU_TEXTURE_COPY_WAIT_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_get_GPU_TEXTURE_COPY_WAIT_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OvrAvatarTextureCopyManager", "GPU_TEXTURE_COPY_WAIT_TIME"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GPU_TEXTURE_COPY_WAIT_TIME
void GlobalNamespace::OvrAvatarTextureCopyManager::_set_GPU_TEXTURE_COPY_WAIT_TIME(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::_set_GPU_TEXTURE_COPY_WAIT_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OvrAvatarTextureCopyManager", "GPU_TEXTURE_COPY_WAIT_TIME", value));
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatarTextureCopyManager/FallbackTextureSet[] FallbackTextureSets
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OvrAvatarTextureCopyManager::FallbackTextureSet>& GlobalNamespace::OvrAvatarTextureCopyManager::dyn_FallbackTextureSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::dyn_FallbackTextureSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FallbackTextureSets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OvrAvatarTextureCopyManager::FallbackTextureSet>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<OvrAvatarTextureCopyManager/CopyTextureParams> texturesToCopy
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams>*& GlobalNamespace::OvrAvatarTextureCopyManager::dyn_texturesToCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::dyn_texturesToCopy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texturesToCopy"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,OvrAvatarTextureCopyManager/TextureSet> textureSets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::OvrAvatarTextureCopyManager::TextureSet>*& GlobalNamespace::OvrAvatarTextureCopyManager::dyn_textureSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::dyn_textureSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureSets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::OvrAvatarTextureCopyManager::TextureSet>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::OvrAvatarTextureCopyManager::dyn_FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::dyn_FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] FALLBACK_TEXTURE_PATHS_NORMAL
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::OvrAvatarTextureCopyManager::dyn_FALLBACK_TEXTURE_PATHS_NORMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::dyn_FALLBACK_TEXTURE_PATHS_NORMAL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FALLBACK_TEXTURE_PATHS_NORMAL"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarTextureCopyManager.Update
void GlobalNamespace::OvrAvatarTextureCopyManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarTextureCopyManager.GetTextureCount
int GlobalNamespace::OvrAvatarTextureCopyManager::GetTextureCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::GetTextureCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarTextureCopyManager.CopyTexture
void GlobalNamespace::OvrAvatarTextureCopyManager::CopyTexture(::UnityEngine::Texture* src, ::UnityEngine::Texture* dst, int mipLevel, int mipSize, int dstElement, bool useQueue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::CopyTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(mipLevel), ::il2cpp_utils::ExtractType(mipSize), ::il2cpp_utils::ExtractType(dstElement), ::il2cpp_utils::ExtractType(useQueue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dst, mipLevel, mipSize, dstElement, useQueue);
}
// Autogenerated method: OvrAvatarTextureCopyManager.CopyTexture
void GlobalNamespace::OvrAvatarTextureCopyManager::CopyTexture(::GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams copyTextureParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::CopyTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(copyTextureParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, copyTextureParams);
}
// Autogenerated method: OvrAvatarTextureCopyManager.AddTextureIDToTextureSet
void GlobalNamespace::OvrAvatarTextureCopyManager::AddTextureIDToTextureSet(int gameobjectID, uint64_t textureID, bool isSingleMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::AddTextureIDToTextureSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTextureIDToTextureSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameobjectID), ::il2cpp_utils::ExtractType(textureID), ::il2cpp_utils::ExtractType(isSingleMesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameobjectID, textureID, isSingleMesh);
}
// Autogenerated method: OvrAvatarTextureCopyManager.DeleteTextureSet
void GlobalNamespace::OvrAvatarTextureCopyManager::DeleteTextureSet(int gameobjectID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::DeleteTextureSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteTextureSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameobjectID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameobjectID);
}
// Autogenerated method: OvrAvatarTextureCopyManager.DeleteTextureSetCoroutine
::System::Collections::IEnumerator* GlobalNamespace::OvrAvatarTextureCopyManager::DeleteTextureSetCoroutine(::GlobalNamespace::OvrAvatarTextureCopyManager::TextureSet textureSetToDelete, int gameobjectID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::DeleteTextureSetCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteTextureSetCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureSetToDelete), ::il2cpp_utils::ExtractType(gameobjectID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, textureSetToDelete, gameobjectID);
}
// Autogenerated method: OvrAvatarTextureCopyManager.CheckFallbackTextureSet
void GlobalNamespace::OvrAvatarTextureCopyManager::CheckFallbackTextureSet(::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::CheckFallbackTextureSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckFallbackTextureSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lod);
}
// Autogenerated method: OvrAvatarTextureCopyManager.InitFallbackTextureSet
void GlobalNamespace::OvrAvatarTextureCopyManager::InitFallbackTextureSet(::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::InitFallbackTextureSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitFallbackTextureSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lod);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarTextureCopyManager/CopyTextureParams
#include "GlobalNamespace/OvrAvatarTextureCopyManager.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture Src
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::dyn_Src() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::dyn_Src");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Src"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture Dst
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::dyn_Dst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::dyn_Dst");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dst"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Mip
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::dyn_Mip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::dyn_Mip");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mip"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SrcSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::dyn_SrcSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::dyn_SrcSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SrcSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DstElement
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::dyn_DstElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::dyn_DstElement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DstElement"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarTextureCopyManager/CopyTextureParams..ctor
// ABORTED elsewhere.  GlobalNamespace::OvrAvatarTextureCopyManager::CopyTextureParams::CopyTextureParams(::UnityEngine::Texture* src, ::UnityEngine::Texture* dst, int mip, int srcSize, int dstElement)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarTextureCopyManager/TextureSet
#include "GlobalNamespace/OvrAvatarTextureCopyManager.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.UInt64,System.Boolean> TextureIDSingleMeshPair
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint64_t, bool>*& GlobalNamespace::OvrAvatarTextureCopyManager::TextureSet::dyn_TextureIDSingleMeshPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::TextureSet::dyn_TextureIDSingleMeshPair");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextureIDSingleMeshPair"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint64_t, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsProcessed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarTextureCopyManager::TextureSet::dyn_IsProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::TextureSet::dyn_IsProcessed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsProcessed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarTextureCopyManager/TextureSet..ctor
// ABORTED elsewhere.  GlobalNamespace::OvrAvatarTextureCopyManager::TextureSet::TextureSet(::System::Collections::Generic::Dictionary_2<uint64_t, bool>* textureIDSingleMeshPair, bool isProcessed)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OvrAvatarTextureCopyManager/<DeleteTextureSetCoroutine>d__24
#include "GlobalNamespace/OvrAvatarTextureCopyManager_-DeleteTextureSetCoroutine-d__24.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatarTextureCopyManager/TextureSet textureSetToDelete
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarTextureCopyManager::TextureSet& GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::dyn_textureSetToDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::dyn_textureSetToDelete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureSetToDelete"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarTextureCopyManager::TextureSet*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OvrAvatarTextureCopyManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OvrAvatarTextureCopyManager*& GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OvrAvatarTextureCopyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 gameobjectID
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::dyn_gameobjectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::dyn_gameobjectID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameobjectID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarTextureCopyManager/<DeleteTextureSetCoroutine>d__24.System.IDisposable.Dispose
void GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarTextureCopyManager/<DeleteTextureSetCoroutine>d__24.MoveNext
bool GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarTextureCopyManager/<DeleteTextureSetCoroutine>d__24.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarTextureCopyManager/<DeleteTextureSetCoroutine>d__24.System.Collections.IEnumerator.Reset
void GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OvrAvatarTextureCopyManager/<DeleteTextureSetCoroutine>d__24.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OvrAvatarTextureCopyManager::$DeleteTextureSetCoroutine$d__24*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OvrAvatarTouchController
#include "GlobalNamespace/OvrAvatarTouchController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isLeftHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OvrAvatarTouchController::dyn_isLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTouchController::dyn_isLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLeftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ovrAvatarControllerComponent component
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ovrAvatarControllerComponent& GlobalNamespace::OvrAvatarTouchController::dyn_component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTouchController::dyn_component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "component"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ovrAvatarControllerComponent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OvrAvatarTouchController.Update
void GlobalNamespace::OvrAvatarTouchController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OvrAvatarTouchController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnableSwitch
#include "GlobalNamespace/EnableSwitch.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] SwitchTargets
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::EnableSwitch::dyn_SwitchTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableSwitch::dyn_SwitchTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SwitchTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LipSyncDemo_Control
#include "GlobalNamespace/LipSyncDemo_Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode rotateLeftKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_rotateLeftKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotateLeftKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateLeftKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode rotateRightKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_rotateRightKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotateRightKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateRightKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode resetRotationKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_resetRotationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_resetRotationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetRotationKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single resetRotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LipSyncDemo_Control::dyn_resetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_resetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LipSyncDemo_Control::dyn_rotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotationAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LipSyncDemo_Control::dyn_rotationMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotationMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LipSyncDemo_Control.Start
void GlobalNamespace::LipSyncDemo_Control::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_Control.Update
void GlobalNamespace::LipSyncDemo_Control::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_Control.RotateObject
void GlobalNamespace::LipSyncDemo_Control::RotateObject(float amountDegrees, bool absolute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::RotateObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amountDegrees), ::il2cpp_utils::ExtractType(absolute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amountDegrees, absolute);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LipSyncDemo_SetCurrentTarget
#include "GlobalNamespace/LipSyncDemo_SetCurrentTarget.hpp"
// Including type: EnableSwitch
#include "GlobalNamespace/EnableSwitch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public EnableSwitch[] SwitchTargets
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::EnableSwitch*>& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_SwitchTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_SwitchTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SwitchTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::EnableSwitch*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 targetSet
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_targetSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_targetSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetSet"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxTarget
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_maxTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_maxTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean XRButtonBeingPressed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_XRButtonBeingPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_XRButtonBeingPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XRButtonBeingPressed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.Start
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.Update
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.SetCurrentTarget
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::SetCurrentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::SetCurrentTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurrentTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.LocalTouchEventCallback
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncDebugConsole
#include "GlobalNamespace/OVRLipSyncDebugConsole.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRLipSyncDebugConsole s_Instance
::GlobalNamespace::OVRLipSyncDebugConsole* GlobalNamespace::OVRLipSyncDebugConsole::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncDebugConsole*>("", "OVRLipSyncDebugConsole", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private OVRLipSyncDebugConsole s_Instance
void GlobalNamespace::OVRLipSyncDebugConsole::_set_s_Instance(::GlobalNamespace::OVRLipSyncDebugConsole* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncDebugConsole", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.ArrayList messages
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& GlobalNamespace::OVRLipSyncDebugConsole::dyn_messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messages"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxMessages
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncDebugConsole::dyn_maxMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_maxMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxMessages"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text textMsg
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::OVRLipSyncDebugConsole::dyn_textMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_textMsg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMsg"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clearTimeoutOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeoutOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeoutOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearTimeoutOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single clearTimeout
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearTimeout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncDebugConsole.get_instance
::GlobalNamespace::OVRLipSyncDebugConsole* GlobalNamespace::OVRLipSyncDebugConsole::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSyncDebugConsole*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Awake
void GlobalNamespace::OVRLipSyncDebugConsole::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Update
void GlobalNamespace::OVRLipSyncDebugConsole::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Init
void GlobalNamespace::OVRLipSyncDebugConsole::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Log
void GlobalNamespace::OVRLipSyncDebugConsole::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: OVRLipSyncDebugConsole.Log
void GlobalNamespace::OVRLipSyncDebugConsole::Log(::StringW message, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, color);
}
// Autogenerated method: OVRLipSyncDebugConsole.Clear
void GlobalNamespace::OVRLipSyncDebugConsole::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.ClearTimeout
void GlobalNamespace::OVRLipSyncDebugConsole::ClearTimeout(float timeToClear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::ClearTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "ClearTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeToClear)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeToClear);
}
// Autogenerated method: OVRLipSyncDebugConsole.AddMessage
void GlobalNamespace::OVRLipSyncDebugConsole::AddMessage(::StringW message, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::AddMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, color);
}
// Autogenerated method: OVRLipSyncDebugConsole.ClearMessages
void GlobalNamespace::OVRLipSyncDebugConsole::ClearMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::ClearMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.SetClearTimeout
void GlobalNamespace::OVRLipSyncDebugConsole::SetClearTimeout(float timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::SetClearTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClearTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeout);
}
// Autogenerated method: OVRLipSyncDebugConsole.Prune
void GlobalNamespace::OVRLipSyncDebugConsole::Prune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Prune");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Prune", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Display
void GlobalNamespace::OVRLipSyncDebugConsole::Display() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Display");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Display", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole..cctor
void GlobalNamespace::OVRLipSyncDebugConsole::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNamedArrayAttribute
#include "GlobalNamespace/OVRNamedArrayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] names
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::OVRNamedArrayAttribute::dyn_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNamedArrayAttribute::dyn_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "names"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpad
#include "GlobalNamespace/OVRTouchpad.hpp"
// Including type: OVRTouchpad/OVRTouchpadCallback`1
#include "GlobalNamespace/OVRTouchpad_OVRTouchpadCallback_1.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: OVRTouchpadHelper
#include "GlobalNamespace/OVRTouchpadHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 moveAmountMouse
::UnityEngine::Vector3 GlobalNamespace::OVRTouchpad::_get_moveAmountMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_moveAmountMouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRTouchpad", "moveAmountMouse"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 moveAmountMouse
void GlobalNamespace::OVRTouchpad::_set_moveAmountMouse(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_moveAmountMouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "moveAmountMouse", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single minMovMagnitudeMouse
float GlobalNamespace::OVRTouchpad::_get_minMovMagnitudeMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_minMovMagnitudeMouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTouchpad", "minMovMagnitudeMouse"));
}
// Autogenerated static field setter
// Set static field: static private System.Single minMovMagnitudeMouse
void GlobalNamespace::OVRTouchpad::_set_minMovMagnitudeMouse(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_minMovMagnitudeMouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "minMovMagnitudeMouse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Delegate touchPadCallbacks
::System::Delegate* GlobalNamespace::OVRTouchpad::_get_touchPadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_touchPadCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Delegate*>("", "OVRTouchpad", "touchPadCallbacks"));
}
// Autogenerated static field setter
// Set static field: static public System.Delegate touchPadCallbacks
void GlobalNamespace::OVRTouchpad::_set_touchPadCallbacks(::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_touchPadCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "touchPadCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private OVRTouchpadHelper touchpadHelper
::GlobalNamespace::OVRTouchpadHelper* GlobalNamespace::OVRTouchpad::_get_touchpadHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_touchpadHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpadHelper*>("", "OVRTouchpad", "touchpadHelper"));
}
// Autogenerated static field setter
// Set static field: static private OVRTouchpadHelper touchpadHelper
void GlobalNamespace::OVRTouchpad::_set_touchpadHelper(::GlobalNamespace::OVRTouchpadHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_touchpadHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "touchpadHelper", value));
}
// Autogenerated method: OVRTouchpad.Create
void GlobalNamespace::OVRTouchpad::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.Update
void GlobalNamespace::OVRTouchpad::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.OnDisable
void GlobalNamespace::OVRTouchpad::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.HandleInputMouse
void GlobalNamespace::OVRTouchpad::HandleInputMouse(ByRef<::UnityEngine::Vector3> move) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::HandleInputMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "HandleInputMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(move)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(move));
}
// Autogenerated method: OVRTouchpad.AddListener
void GlobalNamespace::OVRTouchpad::AddListener(::GlobalNamespace::OVRTouchpad::OVRTouchpadCallback_1<::GlobalNamespace::OVRTouchpad::TouchEvent>* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handler);
}
// Autogenerated method: OVRTouchpad..cctor
void GlobalNamespace::OVRTouchpad::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent SingleTap
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_SingleTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_SingleTap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "SingleTap"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent SingleTap
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_SingleTap(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_SingleTap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "SingleTap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent DoubleTap
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_DoubleTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_DoubleTap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "DoubleTap"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent DoubleTap
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_DoubleTap(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_DoubleTap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "DoubleTap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Left
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Left
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Left(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Right
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Right
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Right(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Up
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Up
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Up(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Down
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Down
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Down(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Down", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRTouchpad::TouchEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpadHelper
#include "GlobalNamespace/OVRTouchpadHelper.hpp"
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTouchpadHelper.Awake
void GlobalNamespace::OVRTouchpadHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.Start
void GlobalNamespace::OVRTouchpadHelper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.Update
void GlobalNamespace::OVRTouchpadHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.OnDisable
void GlobalNamespace::OVRTouchpadHelper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.LocalTouchEventCallback
void GlobalNamespace::OVRTouchpadHelper::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync
#include "GlobalNamespace/OVRLipSync.hpp"
// Including type: OVRLipSync/AudioDataType
#include "GlobalNamespace/OVRLipSync_AudioDataType.hpp"
// Including type: OVRLipSync/Viseme
#include "GlobalNamespace/OVRLipSync_Viseme.hpp"
// Including type: OVRLipSync/Signals
#include "GlobalNamespace/OVRLipSync_Signals.hpp"
// Including type: OVRLipSync/ContextProviders
#include "GlobalNamespace/OVRLipSync_ContextProviders.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 VisemeCount
int GlobalNamespace::OVRLipSync::_get_VisemeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_VisemeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRLipSync", "VisemeCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 VisemeCount
void GlobalNamespace::OVRLipSync::_set_VisemeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_VisemeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "VisemeCount", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SignalCount
int GlobalNamespace::OVRLipSync::_get_SignalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_SignalCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRLipSync", "SignalCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SignalCount
void GlobalNamespace::OVRLipSync::_set_SignalCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_SignalCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "SignalCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String strOVRLS
::StringW GlobalNamespace::OVRLipSync::_get_strOVRLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_strOVRLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRLipSync", "strOVRLS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOVRLS
void GlobalNamespace::OVRLipSync::_set_strOVRLS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_strOVRLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "strOVRLS", value));
}
// Autogenerated static field getter
// Get static field: static private OVRLipSync/Result sInitialized
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::_get_sInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_sInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync", "sInitialized"));
}
// Autogenerated static field setter
// Set static field: static private OVRLipSync/Result sInitialized
void GlobalNamespace::OVRLipSync::_set_sInitialized(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_sInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "sInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync sInstance
::GlobalNamespace::OVRLipSync* GlobalNamespace::OVRLipSync::_get_sInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_sInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync*>("", "OVRLipSync", "sInstance"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync sInstance
void GlobalNamespace::OVRLipSync::_set_sInstance(::GlobalNamespace::OVRLipSync* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_sInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "sInstance", value));
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_Initialize
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_Initialize(int samplerate, int buffersize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samplerate), ::il2cpp_utils::ExtractType(buffersize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, samplerate, buffersize);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_Shutdown
void GlobalNamespace::OVRLipSync::ovrLipSyncDll_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_GetVersion
::System::IntPtr GlobalNamespace::OVRLipSync::ovrLipSyncDll_GetVersion(ByRef<int> Major, ByRef<int> Minor, ByRef<int> Patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Major), ::il2cpp_utils::ExtractType(Minor), ::il2cpp_utils::ExtractType(Patch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(Major), byref(Minor), byref(Patch));
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_CreateContextEx
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextEx(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_CreateContextEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_CreateContextWithModelFile
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextWithModelFile(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, ::StringW modelPath, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextWithModelFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_CreateContextWithModelFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, modelPath, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_DestroyContext
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_DestroyContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_DestroyContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_DestroyContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_ResetContext
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_ResetContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_SendSignal
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_SendSignal(uint context, ::GlobalNamespace::OVRLipSync::Signals signal, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_SendSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_SendSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, signal, arg1, arg2);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_ProcessFrameEx
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_ProcessFrameEx(uint context, ::System::IntPtr audioBuffer, uint bufferSize, ::GlobalNamespace::OVRLipSync::AudioDataType dataType, ByRef<int> frameNumber, ByRef<int> frameDelay, ::ArrayW<float> visemes, int visemeCount, ByRef<float> laughterScore, ::ArrayW<float> laughterCategories, int laughterCategoriesLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_ProcessFrameEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_ProcessFrameEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(dataType), ::il2cpp_utils::ExtractType(frameNumber), ::il2cpp_utils::ExtractType(frameDelay), ::il2cpp_utils::ExtractType(visemes), ::il2cpp_utils::ExtractType(visemeCount), ::il2cpp_utils::ExtractType(laughterScore), ::il2cpp_utils::ExtractType(laughterCategories), ::il2cpp_utils::ExtractType(laughterCategoriesLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, bufferSize, dataType, byref(frameNumber), byref(frameDelay), visemes, visemeCount, byref(laughterScore), laughterCategories, laughterCategoriesLength);
}
// Autogenerated method: OVRLipSync.Awake
void GlobalNamespace::OVRLipSync::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSync.OnDestroy
void GlobalNamespace::OVRLipSync::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSync.Initialize
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.Initialize
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Initialize(int sampleRate, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sampleRate, bufferSize);
}
// Autogenerated method: OVRLipSync.Shutdown
void GlobalNamespace::OVRLipSync::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.IsInitialized
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.CreateContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::CreateContext(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::CreateContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "CreateContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.CreateContextWithModelFile
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::CreateContextWithModelFile(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, ::StringW modelPath, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::CreateContextWithModelFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "CreateContextWithModelFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, modelPath, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.DestroyContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::DestroyContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::DestroyContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "DestroyContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ResetContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ResetContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.SendSignal
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::SendSignal(uint context, ::GlobalNamespace::OVRLipSync::Signals signal, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::SendSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "SendSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, signal, arg1, arg2);
}
// Autogenerated method: OVRLipSync.ProcessFrame
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ProcessFrame(uint context, ::ArrayW<float> audioBuffer, ::GlobalNamespace::OVRLipSync::Frame* frame, bool stereo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(stereo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, frame, stereo);
}
// Autogenerated method: OVRLipSync.ProcessFrame
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ProcessFrame(uint context, ::ArrayW<int16_t> audioBuffer, ::GlobalNamespace::OVRLipSync::Frame* frame, bool stereo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(stereo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, frame, stereo);
}
// Autogenerated method: OVRLipSync..cctor
void GlobalNamespace::OVRLipSync::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Result
#include "GlobalNamespace/OVRLipSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result Success
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result Success
void GlobalNamespace::OVRLipSync::Result::_set_Success(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result Unknown
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result Unknown
void GlobalNamespace::OVRLipSync::Result::_set_Unknown(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result CannotCreateContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_CannotCreateContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_CannotCreateContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "CannotCreateContext"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result CannotCreateContext
void GlobalNamespace::OVRLipSync::Result::_set_CannotCreateContext(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_CannotCreateContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "CannotCreateContext", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result InvalidParam
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_InvalidParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_InvalidParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result InvalidParam
void GlobalNamespace::OVRLipSync::Result::_set_InvalidParam(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_InvalidParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result BadSampleRate
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_BadSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_BadSampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "BadSampleRate"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result BadSampleRate
void GlobalNamespace::OVRLipSync::Result::_set_BadSampleRate(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_BadSampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "BadSampleRate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result MissingDLL
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_MissingDLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_MissingDLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "MissingDLL"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result MissingDLL
void GlobalNamespace::OVRLipSync::Result::_set_MissingDLL(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_MissingDLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "MissingDLL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result BadVersion
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_BadVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_BadVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "BadVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result BadVersion
void GlobalNamespace::OVRLipSync::Result::_set_BadVersion(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_BadVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "BadVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result UndefinedFunction
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_UndefinedFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_UndefinedFunction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "UndefinedFunction"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result UndefinedFunction
void GlobalNamespace::OVRLipSync::Result::_set_UndefinedFunction(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_UndefinedFunction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "UndefinedFunction", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/AudioDataType
#include "GlobalNamespace/OVRLipSync_AudioDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType S16_Mono
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "S16_Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType S16_Mono
void GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Mono(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "S16_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType S16_Stereo
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "S16_Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType S16_Stereo
void GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Stereo(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "S16_Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType F32_Mono
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "F32_Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType F32_Mono
void GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Mono(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "F32_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType F32_Stereo
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "F32_Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType F32_Stereo
void GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Stereo(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "F32_Stereo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::AudioDataType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Viseme
#include "GlobalNamespace/OVRLipSync_Viseme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme sil
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_sil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_sil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "sil"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme sil
void GlobalNamespace::OVRLipSync::Viseme::_set_sil(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_sil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "sil", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme PP
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_PP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_PP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "PP"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme PP
void GlobalNamespace::OVRLipSync::Viseme::_set_PP(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_PP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "PP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme FF
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_FF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_FF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "FF"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme FF
void GlobalNamespace::OVRLipSync::Viseme::_set_FF(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_FF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "FF", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme TH
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_TH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_TH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "TH"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme TH
void GlobalNamespace::OVRLipSync::Viseme::_set_TH(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_TH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "TH", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme DD
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_DD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_DD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "DD"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme DD
void GlobalNamespace::OVRLipSync::Viseme::_set_DD(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_DD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "DD", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme kk
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_kk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_kk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "kk"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme kk
void GlobalNamespace::OVRLipSync::Viseme::_set_kk(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_kk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "kk", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme CH
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_CH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_CH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "CH"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme CH
void GlobalNamespace::OVRLipSync::Viseme::_set_CH(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_CH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "CH", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme SS
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_SS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_SS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "SS"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme SS
void GlobalNamespace::OVRLipSync::Viseme::_set_SS(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_SS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "SS", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme nn
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_nn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_nn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "nn"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme nn
void GlobalNamespace::OVRLipSync::Viseme::_set_nn(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_nn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "nn", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme RR
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_RR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_RR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "RR"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme RR
void GlobalNamespace::OVRLipSync::Viseme::_set_RR(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_RR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "RR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme aa
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_aa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_aa");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "aa"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme aa
void GlobalNamespace::OVRLipSync::Viseme::_set_aa(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_aa");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "aa", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme E
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_E() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_E");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "E"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme E
void GlobalNamespace::OVRLipSync::Viseme::_set_E(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_E");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "E", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme ih
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_ih() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_ih");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "ih"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme ih
void GlobalNamespace::OVRLipSync::Viseme::_set_ih(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_ih");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "ih", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme oh
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_oh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_oh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "oh"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme oh
void GlobalNamespace::OVRLipSync::Viseme::_set_oh(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_oh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "oh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme ou
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_ou() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_ou");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "ou"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme ou
void GlobalNamespace::OVRLipSync::Viseme::_set_ou(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_ou");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "ou", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Viseme::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Signals
#include "GlobalNamespace/OVRLipSync_Signals.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeOn
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeOn"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeOn
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeOn(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeOn", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeOff
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeOff"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeOff
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeOff(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeOff", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeAmount
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeAmount"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeAmount
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeAmount(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeAmount", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeSmoothing
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeSmoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeSmoothing"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeSmoothing
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeSmoothing(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeSmoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeSmoothing", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals LaughterAmount
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_LaughterAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_LaughterAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "LaughterAmount"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals LaughterAmount
void GlobalNamespace::OVRLipSync::Signals::_set_LaughterAmount(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_LaughterAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "LaughterAmount", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Signals::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/ContextProviders
#include "GlobalNamespace/OVRLipSync_ContextProviders.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Original
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Original() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Original");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Original"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Original
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Original(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Original");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Original", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Enhanced
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Enhanced"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Enhanced
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Enhanced", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Enhanced_with_Laughter
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced_with_Laughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced_with_Laughter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Enhanced_with_Laughter"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Enhanced_with_Laughter
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced_with_Laughter(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced_with_Laughter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Enhanced_with_Laughter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::ContextProviders::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Frame::dyn_frameNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_frameNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameDelay
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSync::Frame::dyn_frameDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_frameDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameDelay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] Visemes
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OVRLipSync::Frame::dyn_Visemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_Visemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visemes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterScore
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSync::Frame::dyn_laughterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_laughterScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSync/Frame.CopyInput
void GlobalNamespace::OVRLipSync::Frame::CopyInput(::GlobalNamespace::OVRLipSync::Frame* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::CopyInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: OVRLipSync/Frame.Reset
void GlobalNamespace::OVRLipSync::Frame::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContext
#include "GlobalNamespace/OVRLipSyncContext.hpp"
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableKeyboardInput
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_enableKeyboardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_enableKeyboardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableKeyboardInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableTouchInput
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_enableTouchInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_enableTouchInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableTouchInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean audioLoopback
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_audioLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_audioLoopback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLoopback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode loopbackKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_loopbackKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_loopbackKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopbackKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showVisemes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_showVisemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_showVisemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showVisemes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode debugVisemesKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_debugVisemesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_debugVisemesKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugVisemesKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean skipAudioSource
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_skipAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_skipAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipAudioSource"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContext::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasDebugConsole
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_hasDebugConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_hasDebugConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasDebugConsole"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode debugLaughterKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_debugLaughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_debugLaughterKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugLaughterKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showLaughter
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContext::dyn_showLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_showLaughter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLaughter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterScore
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContext::dyn_laughterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_laughterScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContext.Start
void GlobalNamespace::OVRLipSyncContext::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.HandleKeyboard
void GlobalNamespace::OVRLipSyncContext::HandleKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::HandleKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.Update
void GlobalNamespace::OVRLipSyncContext::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.PreprocessAudioSamples
void GlobalNamespace::OVRLipSyncContext::PreprocessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::PreprocessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.PostprocessAudioSamples
void GlobalNamespace::OVRLipSyncContext::PostprocessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::PostprocessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostprocessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamplesRaw
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamplesRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamplesRaw
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw(::ArrayW<int16_t> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamplesRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamples
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.OnAudioFilterRead
void GlobalNamespace::OVRLipSyncContext::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.DebugShowVisemesAndLaughter
void GlobalNamespace::OVRLipSyncContext::DebugShowVisemesAndLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::DebugShowVisemesAndLaughter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugShowVisemesAndLaughter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.ToggleAudioLoopback
void GlobalNamespace::OVRLipSyncContext::ToggleAudioLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ToggleAudioLoopback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleAudioLoopback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.LocalTouchEventCallback
void GlobalNamespace::OVRLipSyncContext::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::OVRLipSyncContextBase::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRLipSync/ContextProviders provider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSync::ContextProviders& GlobalNamespace::OVRLipSyncContextBase::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::ContextProviders*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableAcceleration
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContextBase::dyn_enableAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_enableAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAcceleration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame frame
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OVRLipSyncContextBase::dyn_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 context
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::OVRLipSyncContextBase::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _smoothing
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextBase::dyn__smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn__smoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextBase.set_Smoothing
void GlobalNamespace::OVRLipSyncContextBase::set_Smoothing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::set_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRLipSyncContextBase.get_Smoothing
int GlobalNamespace::OVRLipSyncContextBase::get_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.get_Context
uint GlobalNamespace::OVRLipSyncContextBase::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.get_Frame
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncContextBase::get_Frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Frame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Frame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.Awake
void GlobalNamespace::OVRLipSyncContextBase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.OnDestroy
void GlobalNamespace::OVRLipSyncContextBase::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.GetCurrentPhonemeFrame
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncContextBase::GetCurrentPhonemeFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::GetCurrentPhonemeFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPhonemeFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.SetVisemeBlend
void GlobalNamespace::OVRLipSyncContextBase::SetVisemeBlend(int viseme, int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::SetVisemeBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viseme), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viseme, amount);
}
// Autogenerated method: OVRLipSyncContextBase.SetLaughterBlend
void GlobalNamespace::OVRLipSyncContextBase::SetLaughterBlend(int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::SetLaughterBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaughterBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: OVRLipSyncContextBase.ResetContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSyncContextBase::ResetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextCanned
#include "GlobalNamespace/OVRLipSyncContextCanned.hpp"
// Including type: OVRLipSyncSequence
#include "GlobalNamespace/OVRLipSyncSequence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRLipSyncSequence currentSequence
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncSequence*& GlobalNamespace::OVRLipSyncContextCanned::dyn_currentSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextCanned::dyn_currentSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSequence"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncSequence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextCanned.Update
void GlobalNamespace::OVRLipSyncContextCanned::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextCanned::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextMorphTarget
#include "GlobalNamespace/OVRLipSyncContextMorphTarget.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer skinnedMeshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_skinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_skinnedMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skinnedMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] visemeToBlendTargets
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeToBlendTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeToBlendTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemeToBlendTargets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableVisemeTestKeys
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_enableVisemeTestKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_enableVisemeTestKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableVisemeTestKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] visemeTestKeys
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeTestKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeTestKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemeTestKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode laughterKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 laughterBlendTarget
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterBlendTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterBlendTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterBlendTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothAmount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_smoothAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_smoothAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContextBase lipsyncContext
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncContextBase*& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContextBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.Start
void GlobalNamespace::OVRLipSyncContextMorphTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.Update
void GlobalNamespace::OVRLipSyncContextMorphTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckForKeys
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckForKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckForKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.SetVisemeToMorphTarget
void GlobalNamespace::OVRLipSyncContextMorphTarget::SetVisemeToMorphTarget(::GlobalNamespace::OVRLipSync::Frame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::SetVisemeToMorphTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeToMorphTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.SetLaughterToMorphTarget
void GlobalNamespace::OVRLipSyncContextMorphTarget::SetLaughterToMorphTarget(::GlobalNamespace::OVRLipSync::Frame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::SetLaughterToMorphTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaughterToMorphTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckVisemeKey
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckVisemeKey(::UnityEngine::KeyCode key, int viseme, int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckVisemeKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckVisemeKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(viseme), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, viseme, amount);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckLaughterKey
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckLaughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckLaughterKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLaughterKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextTextureFlip
#include "GlobalNamespace/OVRLipSyncContextTextureFlip.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture[] Textures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Texture*>& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_Textures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_Textures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Textures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothAmount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_smoothAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_smoothAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContextBase lipsyncContext
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncContextBase*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContextBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame oldFrame
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_oldFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_oldFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldFrame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.Start
void GlobalNamespace::OVRLipSyncContextTextureFlip::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.Update
void GlobalNamespace::OVRLipSyncContextTextureFlip::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.SetVisemeToTexture
void GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncMicInput
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::OVRLipSyncMicInput::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableMicSelectionGUI
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_enableMicSelectionGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_enableMicSelectionGUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableMicSelectionGUI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode micSelectionGUIKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncMicInput::dyn_micSelectionGUIKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micSelectionGUIKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micSelectionGUIKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single micInputVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncMicInput::dyn_micInputVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micInputVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micInputVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 micFrequency
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_micFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRLipSyncMicInput/micActivation micControl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRLipSyncMicInput::micActivation& GlobalNamespace::OVRLipSyncMicInput::dyn_micControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncMicInput::micActivation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode micActivationKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncMicInput::dyn_micActivationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micActivationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micActivationKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String selectedDevice
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OVRLipSyncMicInput::dyn_selectedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_selectedDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedDevice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean micSelected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_micSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minFreq
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_minFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_minFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxFreq
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::dyn_maxFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_maxFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean focused
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_focused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_focused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "focused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OVRLipSyncMicInput::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncMicInput.get_MicFrequency
float GlobalNamespace::OVRLipSyncMicInput::get_MicFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::get_MicFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.set_MicFrequency
void GlobalNamespace::OVRLipSyncMicInput::set_MicFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::set_MicFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MicFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRLipSyncMicInput.Awake
void GlobalNamespace::OVRLipSyncMicInput::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.Start
void GlobalNamespace::OVRLipSyncMicInput::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.InitializeMicrophone
void GlobalNamespace::OVRLipSyncMicInput::InitializeMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::InitializeMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.Update
void GlobalNamespace::OVRLipSyncMicInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.OnApplicationFocus
void GlobalNamespace::OVRLipSyncMicInput::OnApplicationFocus(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: OVRLipSyncMicInput.OnApplicationPause
void GlobalNamespace::OVRLipSyncMicInput::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: OVRLipSyncMicInput.OnDisable
void GlobalNamespace::OVRLipSyncMicInput::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.OnGUI
void GlobalNamespace::OVRLipSyncMicInput::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.MicDeviceGUI
void GlobalNamespace::OVRLipSyncMicInput::MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::MicDeviceGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicDeviceGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(buttonSpaceTop), ::il2cpp_utils::ExtractType(buttonSpaceLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, top, width, height, buttonSpaceTop, buttonSpaceLeft);
}
// Autogenerated method: OVRLipSyncMicInput.GetMicCaps
void GlobalNamespace::OVRLipSyncMicInput::GetMicCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::GetMicCaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMicCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.StartMicrophone
void GlobalNamespace::OVRLipSyncMicInput::StartMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::StartMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.StopMicrophone
void GlobalNamespace::OVRLipSyncMicInput::StopMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::StopMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.GetAveragedVolume
float GlobalNamespace::OVRLipSyncMicInput::GetAveragedVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::GetAveragedVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAveragedVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncMicInput/micActivation
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation HoldToSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_HoldToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_HoldToSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "HoldToSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation HoldToSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_HoldToSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_HoldToSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "HoldToSpeak", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation PushToSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_PushToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_PushToSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "PushToSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation PushToSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_PushToSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_PushToSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "PushToSpeak", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation ConstantSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_ConstantSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_ConstantSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "ConstantSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation ConstantSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_ConstantSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_ConstantSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "ConstantSpeak", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRLipSyncMicInput::micActivation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncSequence
#include "GlobalNamespace/OVRLipSyncSequence.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRLipSync/Frame> entries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OVRLipSync::Frame*>*& GlobalNamespace::OVRLipSyncSequence::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRLipSync::Frame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OVRLipSyncSequence::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncSequence.GetFrameAtTime
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncSequence::GetFrameAtTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::GetFrameAtTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameAtTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder
#include "GlobalNamespace/DebugUIBuilder.hpp"
// Including type: DebugUIBuilder/OnClick
#include "GlobalNamespace/DebugUIBuilder_OnClick.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
// Including type: DebugUIBuilder/OnSlider
#include "GlobalNamespace/DebugUIBuilder_OnSlider.hpp"
// Including type: DebugUIBuilder/ActiveUpdate
#include "GlobalNamespace/DebugUIBuilder_ActiveUpdate.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass35_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass35_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass37_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass37_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass39_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass39_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass40_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass40_0.hpp"
// Including type: DebugUIBuilder/<>c__DisplayClass41_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass41_0.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.UI.ToggleGroup
#include "UnityEngine/UI/ToggleGroup.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DEBUG_PANE_CENTER
int GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_CENTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_CENTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DebugUIBuilder", "DEBUG_PANE_CENTER"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEBUG_PANE_CENTER
void GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_CENTER(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_CENTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "DEBUG_PANE_CENTER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DEBUG_PANE_RIGHT
int GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_RIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_RIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DebugUIBuilder", "DEBUG_PANE_RIGHT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEBUG_PANE_RIGHT
void GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_RIGHT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_RIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "DEBUG_PANE_RIGHT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DEBUG_PANE_LEFT
int GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_LEFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_DEBUG_PANE_LEFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DebugUIBuilder", "DEBUG_PANE_LEFT"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEBUG_PANE_LEFT
void GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_LEFT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_DEBUG_PANE_LEFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "DEBUG_PANE_LEFT", value));
}
// Autogenerated static field getter
// Get static field: static public DebugUIBuilder instance
::GlobalNamespace::DebugUIBuilder* GlobalNamespace::DebugUIBuilder::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DebugUIBuilder*>("", "DebugUIBuilder", "instance"));
}
// Autogenerated static field setter
// Set static field: static public DebugUIBuilder instance
void GlobalNamespace::DebugUIBuilder::_set_instance(::GlobalNamespace::DebugUIBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single elementSpacing
float GlobalNamespace::DebugUIBuilder::_get_elementSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_elementSpacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "DebugUIBuilder", "elementSpacing"));
}
// Autogenerated static field setter
// Set static field: static private System.Single elementSpacing
void GlobalNamespace::DebugUIBuilder::_set_elementSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_elementSpacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "elementSpacing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single marginH
float GlobalNamespace::DebugUIBuilder::_get_marginH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_marginH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "DebugUIBuilder", "marginH"));
}
// Autogenerated static field setter
// Set static field: static private System.Single marginH
void GlobalNamespace::DebugUIBuilder::_set_marginH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_marginH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "marginH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single marginV
float GlobalNamespace::DebugUIBuilder::_get_marginV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_get_marginV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "DebugUIBuilder", "marginV"));
}
// Autogenerated static field setter
// Set static field: static private System.Single marginV
void GlobalNamespace::DebugUIBuilder::_set_marginV(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::_set_marginV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DebugUIBuilder", "marginV", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform buttonPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_buttonPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_buttonPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform labelPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_labelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_labelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "labelPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform sliderPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_sliderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_sliderPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform dividerPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_dividerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_dividerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dividerPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform togglePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_togglePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_togglePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "togglePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform radioPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::DebugUIBuilder::dyn_radioPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_radioPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radioPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject uiHelpersToInstantiate
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::DebugUIBuilder::dyn_uiHelpersToInstantiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_uiHelpersToInstantiate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uiHelpersToInstantiate"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] targetContentPanels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::DebugUIBuilder::dyn_targetContentPanels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_targetContentPanels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetContentPanels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] reEnable
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& GlobalNamespace::DebugUIBuilder::dyn_reEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_reEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reEnable"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> toEnable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::DebugUIBuilder::dyn_toEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_toEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toEnable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> toDisable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::DebugUIBuilder::dyn_toDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_toDisable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDisable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] insertPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& GlobalNamespace::DebugUIBuilder::dyn_insertPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_insertPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "insertPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.RectTransform>[] insertedElements
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<::UnityEngine::RectTransform*>*>& GlobalNamespace::DebugUIBuilder::dyn_insertedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_insertedElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "insertedElements"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::List_1<::UnityEngine::RectTransform*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 menuOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::DebugUIBuilder::dyn_menuOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_menuOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig rig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::DebugUIBuilder::dyn_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_rig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.UI.ToggleGroup> radioGroups
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UI::ToggleGroup*>*& GlobalNamespace::DebugUIBuilder::dyn_radioGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_radioGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radioGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::UI::ToggleGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LaserPointer lp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LaserPointer*& GlobalNamespace::DebugUIBuilder::dyn_lp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_lp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LaserPointer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer lr
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::DebugUIBuilder::dyn_lr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_lr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lr"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LaserPointer/LaserBeamBehavior laserBeamBehavior
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LaserPointer::LaserBeamBehavior& GlobalNamespace::DebugUIBuilder::dyn_laserBeamBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::dyn_laserBeamBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laserBeamBehavior"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LaserPointer::LaserBeamBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder.Awake
void GlobalNamespace::DebugUIBuilder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.Show
void GlobalNamespace::DebugUIBuilder::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.Hide
void GlobalNamespace::DebugUIBuilder::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.Relayout
void GlobalNamespace::DebugUIBuilder::Relayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::Relayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Relayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder.AddRect
void GlobalNamespace::DebugUIBuilder::AddRect(::UnityEngine::RectTransform* r, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(targetCanvas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddButton
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddButton(::StringW label, ::GlobalNamespace::DebugUIBuilder::OnClick* handler, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, handler, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddLabel
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddLabel(::StringW label, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddSlider
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddSlider(::StringW label, float min, float max, ::GlobalNamespace::DebugUIBuilder::OnSlider* onValueChanged, bool wholeNumbersOnly, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddSlider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSlider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(onValueChanged), ::il2cpp_utils::ExtractType(wholeNumbersOnly), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, min, max, onValueChanged, wholeNumbersOnly, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddDivider
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddDivider(int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddDivider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDivider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddToggle
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddToggle(::StringW label, ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange* onValueChanged, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(onValueChanged), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, onValueChanged, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddToggle
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddToggle(::StringW label, ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange* onValueChanged, bool defaultValue, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(onValueChanged), ::il2cpp_utils::ExtractType(defaultValue), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, onValueChanged, defaultValue, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.AddRadio
::UnityEngine::RectTransform* GlobalNamespace::DebugUIBuilder::AddRadio(::StringW label, ::StringW group, ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange* handler, int targetCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::AddRadio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRadio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label), ::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(targetCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method, label, group, handler, targetCanvas);
}
// Autogenerated method: DebugUIBuilder.ToggleLaserPointer
void GlobalNamespace::DebugUIBuilder::ToggleLaserPointer(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ToggleLaserPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleLaserPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/OnClick
#include "GlobalNamespace/DebugUIBuilder_OnClick.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/OnClick.Invoke
void GlobalNamespace::DebugUIBuilder::OnClick::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnClick::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnClick*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder/OnClick.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::OnClick::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnClick::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnClick*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: DebugUIBuilder/OnClick.EndInvoke
void GlobalNamespace::DebugUIBuilder::OnClick::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnClick::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnClick*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/OnToggleValueChange.Invoke
void GlobalNamespace::DebugUIBuilder::OnToggleValueChange::Invoke(::UnityEngine::UI::Toggle* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnToggleValueChange::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: DebugUIBuilder/OnToggleValueChange.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::OnToggleValueChange::BeginInvoke(::UnityEngine::UI::Toggle* t, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnToggleValueChange::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, t, callback, object);
}
// Autogenerated method: DebugUIBuilder/OnToggleValueChange.EndInvoke
void GlobalNamespace::DebugUIBuilder::OnToggleValueChange::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnToggleValueChange::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/OnSlider
#include "GlobalNamespace/DebugUIBuilder_OnSlider.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/OnSlider.Invoke
void GlobalNamespace::DebugUIBuilder::OnSlider::Invoke(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnSlider::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnSlider*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated method: DebugUIBuilder/OnSlider.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::OnSlider::BeginInvoke(float f, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnSlider::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnSlider*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, f, callback, object);
}
// Autogenerated method: DebugUIBuilder/OnSlider.EndInvoke
void GlobalNamespace::DebugUIBuilder::OnSlider::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::OnSlider::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::OnSlider*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DebugUIBuilder/ActiveUpdate
#include "GlobalNamespace/DebugUIBuilder_ActiveUpdate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DebugUIBuilder/ActiveUpdate.Invoke
bool GlobalNamespace::DebugUIBuilder::ActiveUpdate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ActiveUpdate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::ActiveUpdate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DebugUIBuilder/ActiveUpdate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::DebugUIBuilder::ActiveUpdate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ActiveUpdate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::ActiveUpdate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: DebugUIBuilder/ActiveUpdate.EndInvoke
bool GlobalNamespace::DebugUIBuilder::ActiveUpdate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::ActiveUpdate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::DebugUIBuilder::ActiveUpdate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass35_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass35_0.hpp"
// Including type: DebugUIBuilder/OnClick
#include "GlobalNamespace/DebugUIBuilder_OnClick.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnClick handler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DebugUIBuilder::OnClick*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnClick**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass35_0.<AddButton>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::$AddButton$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass35_0::<AddButton>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddButton>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass37_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass37_0.hpp"
// Including type: DebugUIBuilder/OnSlider
#include "GlobalNamespace/DebugUIBuilder_OnSlider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnSlider onValueChanged
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DebugUIBuilder::OnSlider*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::dyn_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::dyn_onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValueChanged"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass37_0.<AddSlider>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::$AddSlider$b__0(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass37_0::<AddSlider>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSlider>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass39_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass39_0.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnToggleValueChange onValueChanged
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValueChanged"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnToggleValueChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle t
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass39_0.<AddToggle>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::$AddToggle$b__0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass39_0::<AddToggle>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddToggle>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass40_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass40_0.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnToggleValueChange onValueChanged
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onValueChanged"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnToggleValueChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle t
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass40_0.<AddToggle>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::$AddToggle$b__0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass40_0::<AddToggle>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddToggle>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DebugUIBuilder/<>c__DisplayClass41_0
#include "GlobalNamespace/DebugUIBuilder_--c__DisplayClass41_0.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: DebugUIBuilder/OnToggleValueChange
#include "GlobalNamespace/DebugUIBuilder_OnToggleValueChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DebugUIBuilder/OnToggleValueChange handler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DebugUIBuilder::OnToggleValueChange*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DebugUIBuilder::OnToggleValueChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Toggle tb
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_tb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::dyn_tb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tb"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DebugUIBuilder/<>c__DisplayClass41_0.<AddRadio>b__0
void GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::$AddRadio$b__0(bool $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DebugUIBuilder::$$c__DisplayClass41_0::<AddRadio>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddRadio>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HandedInputSelector
#include "GlobalNamespace/HandedInputSelector.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRCameraRig m_CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::HandedInputSelector::dyn_m_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::dyn_m_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.OVRInputModule m_InputModule
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::OVRInputModule*& GlobalNamespace::HandedInputSelector::dyn_m_InputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::dyn_m_InputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputModule"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::OVRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HandedInputSelector.Start
void GlobalNamespace::HandedInputSelector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandedInputSelector.Update
void GlobalNamespace::HandedInputSelector::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HandedInputSelector.SetActiveController
void GlobalNamespace::HandedInputSelector::SetActiveController(::GlobalNamespace::OVRInput::Controller c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HandedInputSelector::SetActiveController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LaserPointer
#include "GlobalNamespace/LaserPointer.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject cursorVisual
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::LaserPointer::dyn_cursorVisual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_cursorVisual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cursorVisual"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LaserPointer::dyn_maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LaserPointer/LaserBeamBehavior _laserBeamBehavior
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LaserPointer::LaserBeamBehavior& GlobalNamespace::LaserPointer::dyn__laserBeamBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__laserBeamBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_laserBeamBehavior"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LaserPointer::LaserBeamBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_restoreOnInputAcquired
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LaserPointer::dyn_m_restoreOnInputAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_m_restoreOnInputAcquired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_restoreOnInputAcquired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::LaserPointer::dyn__startPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__startPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _forward
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::LaserPointer::dyn__forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__forward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forward"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _endPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::LaserPointer::dyn__endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hitTarget
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LaserPointer::dyn__hitTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn__hitTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hitTarget"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::LaserPointer::dyn_lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::dyn_lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LaserPointer.set_laserBeamBehavior
void GlobalNamespace::LaserPointer::set_laserBeamBehavior(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::set_laserBeamBehavior");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_laserBeamBehavior", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LaserPointer.get_laserBeamBehavior
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::get_laserBeamBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::get_laserBeamBehavior");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_laserBeamBehavior", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LaserPointer::LaserBeamBehavior, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.Awake
void GlobalNamespace::LaserPointer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.Start
void GlobalNamespace::LaserPointer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.LateUpdate
void GlobalNamespace::LaserPointer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.UpdateLaserBeam
void GlobalNamespace::LaserPointer::UpdateLaserBeam(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::UpdateLaserBeam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLaserBeam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end);
}
// Autogenerated method: LaserPointer.OnDisable
void GlobalNamespace::LaserPointer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.OnInputFocusLost
void GlobalNamespace::LaserPointer::OnInputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnInputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.OnInputFocusAcquired
void GlobalNamespace::LaserPointer::OnInputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnInputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.OnDestroy
void GlobalNamespace::LaserPointer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LaserPointer.SetCursorStartDest
void GlobalNamespace::LaserPointer::SetCursorStartDest(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 dest, ::UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::SetCursorStartDest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCursor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, dest, normal);
}
// Autogenerated method: LaserPointer.SetCursorRay
void GlobalNamespace::LaserPointer::SetCursorRay(::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::SetCursorRay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRCursor*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LaserPointer/LaserBeamBehavior
#include "GlobalNamespace/LaserPointer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LaserPointer/LaserBeamBehavior On
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LaserPointer::LaserBeamBehavior>("", "LaserPointer/LaserBeamBehavior", "On"));
}
// Autogenerated static field setter
// Set static field: static public LaserPointer/LaserBeamBehavior On
void GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_On(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LaserPointer/LaserBeamBehavior", "On", value));
}
// Autogenerated static field getter
// Get static field: static public LaserPointer/LaserBeamBehavior Off
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LaserPointer::LaserBeamBehavior>("", "LaserPointer/LaserBeamBehavior", "Off"));
}
// Autogenerated static field setter
// Set static field: static public LaserPointer/LaserBeamBehavior Off
void GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_Off(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LaserPointer/LaserBeamBehavior", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public LaserPointer/LaserBeamBehavior OnWhenHitTarget
::GlobalNamespace::LaserPointer::LaserBeamBehavior GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_OnWhenHitTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_get_OnWhenHitTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LaserPointer::LaserBeamBehavior>("", "LaserPointer/LaserBeamBehavior", "OnWhenHitTarget"));
}
// Autogenerated static field setter
// Set static field: static public LaserPointer/LaserBeamBehavior OnWhenHitTarget
void GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_OnWhenHitTarget(::GlobalNamespace::LaserPointer::LaserBeamBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::_set_OnWhenHitTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LaserPointer/LaserBeamBehavior", "OnWhenHitTarget", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LaserPointer::LaserBeamBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LaserPointer::LaserBeamBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CharacterCameraConstraint
#include "GlobalNamespace/CharacterCameraConstraint.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: SimpleCapsuleWithStickMovement
#include "GlobalNamespace/SimpleCapsuleWithStickMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single FADE_RAY_LENGTH
float GlobalNamespace::CharacterCameraConstraint::_get_FADE_RAY_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::_get_FADE_RAY_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "CharacterCameraConstraint", "FADE_RAY_LENGTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Single FADE_RAY_LENGTH
void GlobalNamespace::CharacterCameraConstraint::_set_FADE_RAY_LENGTH(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::_set_FADE_RAY_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CharacterCameraConstraint", "FADE_RAY_LENGTH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single FADE_OVERLAP_MAXIMUM
float GlobalNamespace::CharacterCameraConstraint::_get_FADE_OVERLAP_MAXIMUM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::_get_FADE_OVERLAP_MAXIMUM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "CharacterCameraConstraint", "FADE_OVERLAP_MAXIMUM"));
}
// Autogenerated static field setter
// Set static field: static private System.Single FADE_OVERLAP_MAXIMUM
void GlobalNamespace::CharacterCameraConstraint::_set_FADE_OVERLAP_MAXIMUM(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::_set_FADE_OVERLAP_MAXIMUM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CharacterCameraConstraint", "FADE_OVERLAP_MAXIMUM", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single FADE_AMOUNT_MAXIMUM
float GlobalNamespace::CharacterCameraConstraint::_get_FADE_AMOUNT_MAXIMUM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::_get_FADE_AMOUNT_MAXIMUM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "CharacterCameraConstraint", "FADE_AMOUNT_MAXIMUM"));
}
// Autogenerated static field setter
// Set static field: static private System.Single FADE_AMOUNT_MAXIMUM
void GlobalNamespace::CharacterCameraConstraint::_set_FADE_AMOUNT_MAXIMUM(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::_set_FADE_AMOUNT_MAXIMUM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CharacterCameraConstraint", "FADE_AMOUNT_MAXIMUM", value));
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::CharacterCameraConstraint::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask CollideLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::CharacterCameraConstraint::dyn_CollideLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_CollideLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CollideLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single HeightOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCameraConstraint::dyn_HeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_HeightOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeightOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MinimumHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCameraConstraint::dyn_MinimumHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_MinimumHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinimumHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaximumHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CharacterCameraConstraint::dyn_MaximumHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn_MaximumHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaximumHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CapsuleCollider _character
[[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& GlobalNamespace::CharacterCameraConstraint::dyn__character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn__character");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_character"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleCapsuleWithStickMovement _simplePlayerController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleCapsuleWithStickMovement*& GlobalNamespace::CharacterCameraConstraint::dyn__simplePlayerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::dyn__simplePlayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simplePlayerController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleCapsuleWithStickMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CharacterCameraConstraint.Awake
void GlobalNamespace::CharacterCameraConstraint::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.OnEnable
void GlobalNamespace::CharacterCameraConstraint::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.OnDisable
void GlobalNamespace::CharacterCameraConstraint::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.CameraUpdate
void GlobalNamespace::CharacterCameraConstraint::CameraUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::CameraUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CameraUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.CheckCameraOverlapped
bool GlobalNamespace::CharacterCameraConstraint::CheckCameraOverlapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::CheckCameraOverlapped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCameraOverlapped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CharacterCameraConstraint.CheckCameraNearClipping
bool GlobalNamespace::CharacterCameraConstraint::CheckCameraNearClipping(ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CharacterCameraConstraint::CheckCameraNearClipping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCameraNearClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionController
#include "GlobalNamespace/LocomotionController.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: SimpleCapsuleWithStickMovement
#include "GlobalNamespace/SimpleCapsuleWithStickMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::LocomotionController::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CapsuleCollider CharacterController
[[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& GlobalNamespace::LocomotionController::dyn_CharacterController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::dyn_CharacterController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharacterController"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SimpleCapsuleWithStickMovement PlayerController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleCapsuleWithStickMovement*& GlobalNamespace::LocomotionController::dyn_PlayerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::dyn_PlayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleCapsuleWithStickMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionController.Start
void GlobalNamespace::LocomotionController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
// Including type: TeleportAimHandler
#include "GlobalNamespace/TeleportAimHandler.hpp"
// Including type: LocomotionController
#include "GlobalNamespace/LocomotionController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
// Including type: LocomotionTeleport/<ReadyStateCoroutine>d__52
#include "GlobalNamespace/LocomotionTeleport_-ReadyStateCoroutine-d__52.hpp"
// Including type: LocomotionTeleport/<AimStateCoroutine>d__64
#include "GlobalNamespace/LocomotionTeleport_-AimStateCoroutine-d__64.hpp"
// Including type: LocomotionTeleport/<CancelAimStateCoroutine>d__68
#include "GlobalNamespace/LocomotionTeleport_-CancelAimStateCoroutine-d__68.hpp"
// Including type: LocomotionTeleport/<PreTeleportStateCoroutine>d__72
#include "GlobalNamespace/LocomotionTeleport_-PreTeleportStateCoroutine-d__72.hpp"
// Including type: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76
#include "GlobalNamespace/LocomotionTeleport_-CancelTeleportStateCoroutine-d__76.hpp"
// Including type: LocomotionTeleport/<TeleportingStateCoroutine>d__80
#include "GlobalNamespace/LocomotionTeleport_-TeleportingStateCoroutine-d__80.hpp"
// Including type: LocomotionTeleport/<PostTeleportStateCoroutine>d__84
#include "GlobalNamespace/LocomotionTeleport_-PostTeleportStateCoroutine-d__84.hpp"
// Including type: TeleportDestination
#include "GlobalNamespace/TeleportDestination.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: TeleportInputHandler
#include "GlobalNamespace/TeleportInputHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringReady
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringAim
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringPreTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPreTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringPreTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableMovementDuringPostTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableMovementDuringPostTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableMovementDuringPostTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringReady
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringAim
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringPreTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPreTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringPreTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotationDuringPostTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnableRotationDuringPostTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotationDuringPostTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocomotionTeleport/States <CurrentState>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::States& GlobalNamespace::LocomotionTeleport::dyn_$CurrentState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_$CurrentState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentState>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::States*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportAimHandler AimHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportAimHandler*& GlobalNamespace::LocomotionTeleport::dyn_AimHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportAimHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportDestination TeleportDestinationPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportDestination*& GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportDestinationPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 TeleportDestinationLayer
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_TeleportDestinationLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportDestinationLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.Boolean,System.Nullable`1<UnityEngine.Vector3>,System.Nullable`1<UnityEngine.Quaternion>,System.Nullable`1<UnityEngine.Quaternion>> UpdateTeleportDestination
[[deprecated("Use field access instead!")]] ::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>*& GlobalNamespace::LocomotionTeleport::dyn_UpdateTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_UpdateTeleportDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateTeleportDestination"))->offset;
  return *reinterpret_cast<::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler InputHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::LocomotionTeleport::dyn_InputHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_InputHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport/TeleportIntentions CurrentIntention
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::TeleportIntentions& GlobalNamespace::LocomotionTeleport::dyn_CurrentIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_CurrentIntention");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentIntention"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::TeleportIntentions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPreTeleportRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_IsPreTeleportRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_IsPreTeleportRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPreTeleportRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsTransitioning
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_IsTransitioning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_IsTransitioning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsTransitioning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPostTeleportRequested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_IsPostTeleportRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_IsPostTeleportRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPostTeleportRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TeleportDestination _teleportDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportDestination*& GlobalNamespace::LocomotionTeleport::dyn__teleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn__teleportDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_teleportDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocomotionController <LocomotionController>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionController*& GlobalNamespace::LocomotionTeleport::dyn_$LocomotionController$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_$LocomotionController$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LocomotionController>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport/AimCollisionTypes AimCollisionType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::AimCollisionTypes& GlobalNamespace::LocomotionTeleport::dyn_AimCollisionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimCollisionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseCharacterCollisionData
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::dyn_UseCharacterCollisionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_UseCharacterCollisionData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseCharacterCollisionData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimCollisionRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocomotionTeleport::dyn_AimCollisionRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimCollisionRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimCollisionHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocomotionTeleport::dyn_AimCollisionHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_AimCollisionHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimCollisionHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateReady
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateReady"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateAim
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateAim"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<LocomotionTeleport/AimData> UpdateAimData
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::LocomotionTeleport::dyn_UpdateAimData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_UpdateAimData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateAimData"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action ExitStateAim
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_ExitStateAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_ExitStateAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExitStateAim"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateCancelAim
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelAim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateCancelAim"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStatePreTeleport
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStatePreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStatePreTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStatePreTeleport"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateCancelTeleport
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateCancelTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateCancelTeleport"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStateTeleporting
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStateTeleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStateTeleporting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStateTeleporting"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action EnterStatePostTeleport
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LocomotionTeleport::dyn_EnterStatePostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_EnterStatePostTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnterStatePostTeleport"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion> Teleported
[[deprecated("Use field access instead!")]] ::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>*& GlobalNamespace::LocomotionTeleport::dyn_Teleported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::dyn_Teleported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Teleported"))->offset;
  return *reinterpret_cast<::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport.EnableMovement
void GlobalNamespace::LocomotionTeleport::EnableMovement(bool ready, bool aim, bool pre, bool post) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::EnableMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ready), ::il2cpp_utils::ExtractType(aim), ::il2cpp_utils::ExtractType(pre), ::il2cpp_utils::ExtractType(post)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ready, aim, pre, post);
}
// Autogenerated method: LocomotionTeleport.EnableRotation
void GlobalNamespace::LocomotionTeleport::EnableRotation(bool ready, bool aim, bool pre, bool post) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::EnableRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ready), ::il2cpp_utils::ExtractType(aim), ::il2cpp_utils::ExtractType(pre), ::il2cpp_utils::ExtractType(post)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ready, aim, pre, post);
}
// Autogenerated method: LocomotionTeleport.get_CurrentState
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::States, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.set_CurrentState
void GlobalNamespace::LocomotionTeleport::set_CurrentState(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::set_CurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_UpdateTeleportDestination
void GlobalNamespace::LocomotionTeleport::add_UpdateTeleportDestination(::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_UpdateTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_UpdateTeleportDestination
void GlobalNamespace::LocomotionTeleport::remove_UpdateTeleportDestination(::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_UpdateTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.OnUpdateTeleportDestination
void GlobalNamespace::LocomotionTeleport::OnUpdateTeleportDestination(bool isValidDestination, ::System::Nullable_1<::UnityEngine::Vector3> position, ::System::Nullable_1<::UnityEngine::Quaternion> rotation, ::System::Nullable_1<::UnityEngine::Quaternion> landingRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnUpdateTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isValidDestination), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(landingRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isValidDestination, position, rotation, landingRotation);
}
// Autogenerated method: LocomotionTeleport.get_DestinationRotation
::UnityEngine::Quaternion GlobalNamespace::LocomotionTeleport::get_DestinationRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::get_DestinationRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DestinationRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.get_LocomotionController
::GlobalNamespace::LocomotionController* GlobalNamespace::LocomotionTeleport::get_LocomotionController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::get_LocomotionController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocomotionController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionController*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.set_LocomotionController
void GlobalNamespace::LocomotionTeleport::set_LocomotionController(::GlobalNamespace::LocomotionController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::set_LocomotionController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LocomotionController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.AimCollisionTest
bool GlobalNamespace::LocomotionTeleport::AimCollisionTest(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::UnityEngine::LayerMask aimCollisionLayerMask, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AimCollisionTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(aimCollisionLayerMask), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, end, aimCollisionLayerMask, byref(hitInfo));
}
// Autogenerated method: LocomotionTeleport.LogState
void GlobalNamespace::LocomotionTeleport::LogState(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::LogState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: LocomotionTeleport.CreateNewTeleportDestination
void GlobalNamespace::LocomotionTeleport::CreateNewTeleportDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::CreateNewTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.DeactivateDestination
void GlobalNamespace::LocomotionTeleport::DeactivateDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::DeactivateDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.RecycleTeleportDestination
void GlobalNamespace::LocomotionTeleport::RecycleTeleportDestination(::GlobalNamespace::TeleportDestination* oldDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::RecycleTeleportDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecycleTeleportDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldDestination);
}
// Autogenerated method: LocomotionTeleport.EnableMotion
void GlobalNamespace::LocomotionTeleport::EnableMotion(bool enableLinear, bool enableRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::EnableMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableLinear), ::il2cpp_utils::ExtractType(enableRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableLinear, enableRotation);
}
// Autogenerated method: LocomotionTeleport.Awake
void GlobalNamespace::LocomotionTeleport::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.OnEnable
void GlobalNamespace::LocomotionTeleport::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.OnDisable
void GlobalNamespace::LocomotionTeleport::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateReady
void GlobalNamespace::LocomotionTeleport::add_EnterStateReady(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateReady
void GlobalNamespace::LocomotionTeleport::remove_EnterStateReady(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.ReadyStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::ReadyStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::ReadyStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadyStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateAim
void GlobalNamespace::LocomotionTeleport::add_EnterStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateAim
void GlobalNamespace::LocomotionTeleport::remove_EnterStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.add_UpdateAimData
void GlobalNamespace::LocomotionTeleport::add_UpdateAimData(::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_UpdateAimData
void GlobalNamespace::LocomotionTeleport::remove_UpdateAimData(::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.OnUpdateAimData
void GlobalNamespace::LocomotionTeleport::OnUpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* aimData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::OnUpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aimData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aimData);
}
// Autogenerated method: LocomotionTeleport.add_ExitStateAim
void GlobalNamespace::LocomotionTeleport::add_ExitStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_ExitStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ExitStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_ExitStateAim
void GlobalNamespace::LocomotionTeleport::remove_ExitStateAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_ExitStateAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ExitStateAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.AimStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::AimStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AimStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateCancelAim
void GlobalNamespace::LocomotionTeleport::add_EnterStateCancelAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateCancelAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateCancelAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateCancelAim
void GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelAim(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateCancelAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.CancelAimStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::CancelAimStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::CancelAimStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAimStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.add_EnterStatePreTeleport
void GlobalNamespace::LocomotionTeleport::add_EnterStatePreTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStatePreTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStatePreTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStatePreTeleport
void GlobalNamespace::LocomotionTeleport::remove_EnterStatePreTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStatePreTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStatePreTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.PreTeleportStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::PreTeleportStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::PreTeleportStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreTeleportStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateCancelTeleport
void GlobalNamespace::LocomotionTeleport::add_EnterStateCancelTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateCancelTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateCancelTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateCancelTeleport
void GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateCancelTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateCancelTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.CancelTeleportStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::CancelTeleportStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::CancelTeleportStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelTeleportStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.add_EnterStateTeleporting
void GlobalNamespace::LocomotionTeleport::add_EnterStateTeleporting(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStateTeleporting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStateTeleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStateTeleporting
void GlobalNamespace::LocomotionTeleport::remove_EnterStateTeleporting(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStateTeleporting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStateTeleporting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.TeleportingStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::TeleportingStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportingStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportingStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.add_EnterStatePostTeleport
void GlobalNamespace::LocomotionTeleport::add_EnterStatePostTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_EnterStatePostTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_EnterStatePostTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_EnterStatePostTeleport
void GlobalNamespace::LocomotionTeleport::remove_EnterStatePostTeleport(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_EnterStatePostTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_EnterStatePostTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.PostTeleportStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LocomotionTeleport::PostTeleportStateCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::PostTeleportStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostTeleportStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.add_Teleported
void GlobalNamespace::LocomotionTeleport::add_Teleported(::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::add_Teleported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Teleported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.remove_Teleported
void GlobalNamespace::LocomotionTeleport::remove_Teleported(::System::Action_3<::UnityEngine::Transform*, ::UnityEngine::Vector3, ::UnityEngine::Quaternion>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::remove_Teleported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Teleported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport.DoTeleport
void GlobalNamespace::LocomotionTeleport::DoTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::DoTeleport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoTeleport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.GetCharacterPosition
::UnityEngine::Vector3 GlobalNamespace::LocomotionTeleport::GetCharacterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::GetCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.GetHeadRotationY
::UnityEngine::Quaternion GlobalNamespace::LocomotionTeleport::GetHeadRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::GetHeadRotationY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeadRotationY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport.DoWarp
void GlobalNamespace::LocomotionTeleport::DoWarp(::UnityEngine::Vector3 startPos, float positionPercent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::DoWarp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoWarp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(positionPercent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startPos, positionPercent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/States
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States Ready
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States Ready
void GlobalNamespace::LocomotionTeleport::States::_set_Ready(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States Aim
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_Aim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_Aim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "Aim"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States Aim
void GlobalNamespace::LocomotionTeleport::States::_set_Aim(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_Aim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "Aim", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States CancelAim
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_CancelAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_CancelAim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "CancelAim"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States CancelAim
void GlobalNamespace::LocomotionTeleport::States::_set_CancelAim(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_CancelAim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "CancelAim", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States PreTeleport
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_PreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_PreTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "PreTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States PreTeleport
void GlobalNamespace::LocomotionTeleport::States::_set_PreTeleport(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_PreTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "PreTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States CancelTeleport
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_CancelTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_CancelTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "CancelTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States CancelTeleport
void GlobalNamespace::LocomotionTeleport::States::_set_CancelTeleport(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_CancelTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "CancelTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States Teleporting
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_Teleporting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_Teleporting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "Teleporting"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States Teleporting
void GlobalNamespace::LocomotionTeleport::States::_set_Teleporting(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_Teleporting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "Teleporting", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/States PostTeleport
::GlobalNamespace::LocomotionTeleport::States GlobalNamespace::LocomotionTeleport::States::_get_PostTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_get_PostTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::States>("", "LocomotionTeleport/States", "PostTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/States PostTeleport
void GlobalNamespace::LocomotionTeleport::States::_set_PostTeleport(::GlobalNamespace::LocomotionTeleport::States value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::_set_PostTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/States", "PostTeleport", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::States::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::States::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/TeleportIntentions
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions None
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "None"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions None
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_None(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions Aim
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Aim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Aim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "Aim"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions Aim
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Aim(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Aim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "Aim", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions PreTeleport
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_PreTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_PreTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "PreTeleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions PreTeleport
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_PreTeleport(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_PreTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "PreTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/TeleportIntentions Teleport
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Teleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_get_Teleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::TeleportIntentions>("", "LocomotionTeleport/TeleportIntentions", "Teleport"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/TeleportIntentions Teleport
void GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Teleport(::GlobalNamespace::LocomotionTeleport::TeleportIntentions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::_set_Teleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/TeleportIntentions", "Teleport", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::TeleportIntentions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::TeleportIntentions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/AimCollisionTypes
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/AimCollisionTypes Point
::GlobalNamespace::LocomotionTeleport::AimCollisionTypes GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Point");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes>("", "LocomotionTeleport/AimCollisionTypes", "Point"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/AimCollisionTypes Point
void GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Point(::GlobalNamespace::LocomotionTeleport::AimCollisionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Point");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/AimCollisionTypes", "Point", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/AimCollisionTypes Sphere
::GlobalNamespace::LocomotionTeleport::AimCollisionTypes GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Sphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Sphere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes>("", "LocomotionTeleport/AimCollisionTypes", "Sphere"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/AimCollisionTypes Sphere
void GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Sphere(::GlobalNamespace::LocomotionTeleport::AimCollisionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Sphere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/AimCollisionTypes", "Sphere", value));
}
// Autogenerated static field getter
// Get static field: static public LocomotionTeleport/AimCollisionTypes Capsule
::GlobalNamespace::LocomotionTeleport::AimCollisionTypes GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Capsule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_get_Capsule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocomotionTeleport::AimCollisionTypes>("", "LocomotionTeleport/AimCollisionTypes", "Capsule"));
}
// Autogenerated static field setter
// Set static field: static public LocomotionTeleport/AimCollisionTypes Capsule
void GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Capsule(::GlobalNamespace::LocomotionTeleport::AimCollisionTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::_set_Capsule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocomotionTeleport/AimCollisionTypes", "Capsule", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::AimCollisionTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimCollisionTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RaycastHit TargetHitInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetHitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetHitInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetHitInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TargetValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_TargetValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<UnityEngine.Vector3> Destination
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Vector3>& GlobalNamespace::LocomotionTeleport::AimData::dyn_Destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_Destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Destination"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocomotionTeleport::AimData::dyn_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> <Points>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::LocomotionTeleport::AimData::dyn_$Points$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::dyn_$Points$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Points>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/AimData.get_Points
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* GlobalNamespace::LocomotionTeleport::AimData::get_Points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::get_Points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/AimData.set_Points
void GlobalNamespace::LocomotionTeleport::AimData::set_Points(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::set_Points");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Points", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocomotionTeleport/AimData.Reset
void GlobalNamespace::LocomotionTeleport::AimData::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::AimData::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<ReadyStateCoroutine>d__52
#include "GlobalNamespace/LocomotionTeleport_-ReadyStateCoroutine-d__52.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.MoveNext
bool GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<ReadyStateCoroutine>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$ReadyStateCoroutine$d__52*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<AimStateCoroutine>d__64
#include "GlobalNamespace/LocomotionTeleport_-AimStateCoroutine-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.MoveNext
bool GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<AimStateCoroutine>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$AimStateCoroutine$d__64*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<CancelAimStateCoroutine>d__68
#include "GlobalNamespace/LocomotionTeleport_-CancelAimStateCoroutine-d__68.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.MoveNext
bool GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelAimStateCoroutine>d__68.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelAimStateCoroutine$d__68*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<PreTeleportStateCoroutine>d__72
#include "GlobalNamespace/LocomotionTeleport_-PreTeleportStateCoroutine-d__72.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.MoveNext
bool GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PreTeleportStateCoroutine>d__72.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PreTeleportStateCoroutine$d__72*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76
#include "GlobalNamespace/LocomotionTeleport_-CancelTeleportStateCoroutine-d__76.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.MoveNext
bool GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<CancelTeleportStateCoroutine>d__76.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$CancelTeleportStateCoroutine$d__76*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<TeleportingStateCoroutine>d__80
#include "GlobalNamespace/LocomotionTeleport_-TeleportingStateCoroutine-d__80.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.MoveNext
bool GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<TeleportingStateCoroutine>d__80.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$TeleportingStateCoroutine$d__80*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocomotionTeleport/<PostTeleportStateCoroutine>d__84
#include "GlobalNamespace/LocomotionTeleport_-PostTeleportStateCoroutine-d__84.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.IDisposable.Dispose
void GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.MoveNext
bool GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.IEnumerator.Reset
void GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocomotionTeleport/<PostTeleportStateCoroutine>d__84.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::LocomotionTeleport::$PostTeleportStateCoroutine$d__84*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleCapsuleWithStickMovement
#include "GlobalNamespace/SimpleCapsuleWithStickMovement.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableLinearMovement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableLinearMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableLinearMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableLinearMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EnableRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_EnableRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EnableRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HMDRotatesPlayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_HMDRotatesPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_HMDRotatesPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HMDRotatesPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RotationEitherThumbstick
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationEitherThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationEitherThumbstick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationEitherThumbstick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single RotationAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_RotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_Speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCameraRig CameraRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCameraRig*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCameraRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ReadyToSnapTurn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_ReadyToSnapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_ReadyToSnapTurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReadyToSnapTurn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action CameraUpdated
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_CameraUpdated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraUpdated"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreCharacterMove
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_PreCharacterMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::dyn_PreCharacterMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreCharacterMove"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.add_CameraUpdated
void GlobalNamespace::SimpleCapsuleWithStickMovement::add_CameraUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::add_CameraUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CameraUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.remove_CameraUpdated
void GlobalNamespace::SimpleCapsuleWithStickMovement::remove_CameraUpdated(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::remove_CameraUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CameraUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.add_PreCharacterMove
void GlobalNamespace::SimpleCapsuleWithStickMovement::add_PreCharacterMove(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::add_PreCharacterMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreCharacterMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.remove_PreCharacterMove
void GlobalNamespace::SimpleCapsuleWithStickMovement::remove_PreCharacterMove(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::remove_PreCharacterMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreCharacterMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.Awake
void GlobalNamespace::SimpleCapsuleWithStickMovement::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.Start
void GlobalNamespace::SimpleCapsuleWithStickMovement::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.FixedUpdate
void GlobalNamespace::SimpleCapsuleWithStickMovement::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.RotatePlayerToHMD
void GlobalNamespace::SimpleCapsuleWithStickMovement::RotatePlayerToHMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::RotatePlayerToHMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotatePlayerToHMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.StickMovement
void GlobalNamespace::SimpleCapsuleWithStickMovement::StickMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::StickMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StickMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleCapsuleWithStickMovement.SnapTurn
void GlobalNamespace::SimpleCapsuleWithStickMovement::SnapTurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleCapsuleWithStickMovement::SnapTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SnapTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimHandler
#include "GlobalNamespace/TeleportAimHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TeleportAimHandler.GetPoints
void GlobalNamespace::TeleportAimHandler::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::GetPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportAimHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated method: TeleportAimHandler.OnEnable
void GlobalNamespace::TeleportAimHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::OnEnable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimHandler.OnDisable
void GlobalNamespace::TeleportAimHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandler::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimHandlerLaser
#include "GlobalNamespace/TeleportAimHandlerLaser.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Range
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerLaser::dyn_Range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerLaser::dyn_Range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Range"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimHandlerLaser.GetPoints
void GlobalNamespace::TeleportAimHandlerLaser::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerLaser::GetPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportAimHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimHandlerParabolic
#include "GlobalNamespace/TeleportAimHandlerParabolic.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Range
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_Range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_Range");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Range"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MinimumElevation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_MinimumElevation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_MinimumElevation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinimumElevation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Gravity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_Gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_Gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Gravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AimStep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::dyn_AimStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimHandlerParabolic.GetPoints
void GlobalNamespace::TeleportAimHandlerParabolic::GetPoints(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimHandlerParabolic::GetPoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportAimHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportAimVisualLaser
#include "GlobalNamespace/TeleportAimVisualLaser.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LocomotionTeleport/AimData
#include "GlobalNamespace/LocomotionTeleport_AimData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LineRenderer LaserPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::TeleportAimVisualLaser::dyn_LaserPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn_LaserPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LaserPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _enterAimStateAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportAimVisualLaser::dyn__enterAimStateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__enterAimStateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enterAimStateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _exitAimStateAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportAimVisualLaser::dyn__exitAimStateAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__exitAimStateAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exitAimStateAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<LocomotionTeleport/AimData> _updateAimDataAction
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>*& GlobalNamespace::TeleportAimVisualLaser::dyn__updateAimDataAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__updateAimDataAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateAimDataAction"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LocomotionTeleport::AimData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _lineRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& GlobalNamespace::TeleportAimVisualLaser::dyn__lineRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__lineRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _linePoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::TeleportAimVisualLaser::dyn__linePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::dyn__linePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linePoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportAimVisualLaser.EnterAimState
void GlobalNamespace::TeleportAimVisualLaser::EnterAimState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::EnterAimState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterAimState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.ExitAimState
void GlobalNamespace::TeleportAimVisualLaser::ExitAimState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::ExitAimState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAimState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.Awake
void GlobalNamespace::TeleportAimVisualLaser::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.UpdateAimData
void GlobalNamespace::TeleportAimVisualLaser::UpdateAimData(::GlobalNamespace::LocomotionTeleport::AimData* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::UpdateAimData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAimData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: TeleportAimVisualLaser.AddEventHandlers
void GlobalNamespace::TeleportAimVisualLaser::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportAimVisualLaser.RemoveEventHandlers
void GlobalNamespace::TeleportAimVisualLaser::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportAimVisualLaser::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportDestination
#include "GlobalNamespace/TeleportDestination.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: LocomotionTeleport
#include "GlobalNamespace/LocomotionTeleport.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsValidDestination>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportDestination::dyn_$IsValidDestination$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_$IsValidDestination$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsValidDestination>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform PositionIndicator
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportDestination::dyn_PositionIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_PositionIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PositionIndicator"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform OrientationIndicator
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportDestination::dyn_OrientationIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_OrientationIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OrientationIndicator"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion LandingRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TeleportDestination::dyn_LandingRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_LandingRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LandingRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport LocomotionTeleport
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport*& GlobalNamespace::TeleportDestination::dyn_LocomotionTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_LocomotionTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocomotionTeleport"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocomotionTeleport/States TeleportState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocomotionTeleport::States& GlobalNamespace::TeleportDestination::dyn_TeleportState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_TeleportState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocomotionTeleport::States*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`4<System.Boolean,System.Nullable`1<UnityEngine.Vector3>,System.Nullable`1<UnityEngine.Quaternion>,System.Nullable`1<UnityEngine.Quaternion>> _updateTeleportDestinationAction
[[deprecated("Use field access instead!")]] ::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>*& GlobalNamespace::TeleportDestination::dyn__updateTeleportDestinationAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn__updateTeleportDestinationAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateTeleportDestinationAction"))->offset;
  return *reinterpret_cast<::System::Action_4<bool, ::System::Nullable_1<::UnityEngine::Vector3>, ::System::Nullable_1<::UnityEngine::Quaternion>, ::System::Nullable_1<::UnityEngine::Quaternion>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _eventsActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportDestination::dyn__eventsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn__eventsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<TeleportDestination> Deactivated
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::TeleportDestination*>*& GlobalNamespace::TeleportDestination::dyn_Deactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::dyn_Deactivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Deactivated"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::TeleportDestination*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportDestination.get_IsValidDestination
bool GlobalNamespace::TeleportDestination::get_IsValidDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::get_IsValidDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValidDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.set_IsValidDestination
void GlobalNamespace::TeleportDestination::set_IsValidDestination(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::set_IsValidDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsValidDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.OnEnable
void GlobalNamespace::TeleportDestination::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.TryDisableEventHandlers
void GlobalNamespace::TeleportDestination::TryDisableEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::TryDisableEventHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDisableEventHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.OnDisable
void GlobalNamespace::TeleportDestination::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.add_Deactivated
void GlobalNamespace::TeleportDestination::add_Deactivated(::System::Action_1<::GlobalNamespace::TeleportDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::add_Deactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Deactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.remove_Deactivated
void GlobalNamespace::TeleportDestination::remove_Deactivated(::System::Action_1<::GlobalNamespace::TeleportDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::remove_Deactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Deactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportDestination.OnDeactivated
void GlobalNamespace::TeleportDestination::OnDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::OnDeactivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeactivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.Recycle
void GlobalNamespace::TeleportDestination::Recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::Recycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportDestination.UpdateTeleportDestination
void GlobalNamespace::TeleportDestination::UpdateTeleportDestination(bool isValidDestination, ::System::Nullable_1<::UnityEngine::Vector3> position, ::System::Nullable_1<::UnityEngine::Quaternion> rotation, ::System::Nullable_1<::UnityEngine::Quaternion> landingRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportDestination::UpdateTeleportDestination");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportDestination*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isValidDestination, position, rotation, landingRotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandler
#include "GlobalNamespace/TeleportInputHandler.hpp"
// Including type: TeleportInputHandler/<TeleportReadyCoroutine>d__5
#include "GlobalNamespace/TeleportInputHandler_-TeleportReadyCoroutine-d__5.hpp"
// Including type: TeleportInputHandler/<TeleportAimCoroutine>d__6
#include "GlobalNamespace/TeleportInputHandler_-TeleportAimCoroutine-d__6.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: LocomotionTeleport/TeleportIntentions
#include "GlobalNamespace/LocomotionTeleport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startReadyAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportInputHandler::dyn__startReadyAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::dyn__startReadyAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startReadyAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action _startAimAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TeleportInputHandler::dyn__startAimAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::dyn__startAimAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAimAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler.TeleportReadyCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportInputHandler::TeleportReadyCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::TeleportReadyCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportReadyCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.TeleportAimCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TeleportInputHandler::TeleportAimCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::TeleportAimCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TeleportAimCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandler::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::GetIntention");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.GetAimData
void GlobalNamespace::TeleportInputHandler::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::GetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated method: TeleportInputHandler.<.ctor>b__2_0
void GlobalNamespace::TeleportInputHandler::$_ctor$b__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::<.ctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.<.ctor>b__2_1
void GlobalNamespace::TeleportInputHandler::$_ctor$b__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::<.ctor>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.AddEventHandlers
void GlobalNamespace::TeleportInputHandler::AddEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::AddEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler.RemoveEventHandlers
void GlobalNamespace::TeleportInputHandler::RemoveEventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::RemoveEventHandlers");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportSupport*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportInputHandler/<TeleportReadyCoroutine>d__5
#include "GlobalNamespace/TeleportInputHandler_-TeleportReadyCoroutine-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.IDisposable.Dispose
void GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.MoveNext
bool GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportReadyCoroutine>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportReadyCoroutine$d__5*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TeleportInputHandler/<TeleportAimCoroutine>d__6
#include "GlobalNamespace/TeleportInputHandler_-TeleportAimCoroutine-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandler*& GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.IDisposable.Dispose
void GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.MoveNext
bool GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandler/<TeleportAimCoroutine>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler::$TeleportAimCoroutine$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerHMD
#include "GlobalNamespace/TeleportInputHandlerHMD.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <Pointer>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerHMD::dyn_$Pointer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_$Pointer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pointer>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton AimButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::TeleportInputHandlerHMD::dyn_AimButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_AimButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/RawButton TeleportButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::RawButton& GlobalNamespace::TeleportInputHandlerHMD::dyn_TeleportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_TeleportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeleportButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::RawButton*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean FastTeleport
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TeleportInputHandlerHMD::dyn_FastTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::dyn_FastTeleport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FastTeleport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandlerHMD.get_Pointer
::UnityEngine::Transform* GlobalNamespace::TeleportInputHandlerHMD::get_Pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::get_Pointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerHMD.set_Pointer
void GlobalNamespace::TeleportInputHandlerHMD::set_Pointer(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::set_Pointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TeleportInputHandlerHMD.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandlerHMD::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::GetIntention");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerHMD.GetAimData
void GlobalNamespace::TeleportInputHandlerHMD::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerHMD::GetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform LeftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerTouch::dyn_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_LeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform RightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TeleportInputHandlerTouch::dyn_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_RightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandlerTouch/InputModes InputMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandlerTouch::InputModes& GlobalNamespace::TeleportInputHandlerTouch::dyn_InputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_InputMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandlerTouch::InputModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/RawButton[] _rawButtons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRInput::RawButton>& GlobalNamespace::TeleportInputHandlerTouch::dyn__rawButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn__rawButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRInput::RawButton>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OVRInput/RawTouch[] _rawTouch
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::OVRInput::RawTouch>& GlobalNamespace::TeleportInputHandlerTouch::dyn__rawTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn__rawTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawTouch"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::OVRInput::RawTouch>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Controller AimingController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportInputHandlerTouch::dyn_AimingController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_AimingController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AimingController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRInput/Controller InitiatingController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Controller& GlobalNamespace::TeleportInputHandlerTouch::dyn_InitiatingController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_InitiatingController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitiatingController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Controller*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TeleportInputHandlerTouch/AimCapTouchButtons CapacitiveAimAndTeleportButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons& GlobalNamespace::TeleportInputHandlerTouch::dyn_CapacitiveAimAndTeleportButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_CapacitiveAimAndTeleportButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapacitiveAimAndTeleportButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ThumbstickTeleportThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TeleportInputHandlerTouch::dyn_ThumbstickTeleportThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::dyn_ThumbstickTeleportThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThumbstickTeleportThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TeleportInputHandlerTouch.Start
void GlobalNamespace::TeleportInputHandlerTouch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerTouch.GetIntention
::GlobalNamespace::LocomotionTeleport::TeleportIntentions GlobalNamespace::TeleportInputHandlerTouch::GetIntention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::GetIntention");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandlerHMD*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocomotionTeleport::TeleportIntentions, false>(this, ___internal__method);
}
// Autogenerated method: TeleportInputHandlerTouch.GetAimData
void GlobalNamespace::TeleportInputHandlerTouch::GetAimData(ByRef<::UnityEngine::Ray> aimRay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::GetAimData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TeleportInputHandlerHMD*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(aimRay));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch/InputModes
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes CapacitiveButtonForAimAndTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_CapacitiveButtonForAimAndTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_CapacitiveButtonForAimAndTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "CapacitiveButtonForAimAndTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes CapacitiveButtonForAimAndTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_CapacitiveButtonForAimAndTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_CapacitiveButtonForAimAndTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "CapacitiveButtonForAimAndTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes SeparateButtonsForAimAndTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_SeparateButtonsForAimAndTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_SeparateButtonsForAimAndTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "SeparateButtonsForAimAndTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes SeparateButtonsForAimAndTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_SeparateButtonsForAimAndTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_SeparateButtonsForAimAndTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "SeparateButtonsForAimAndTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleport
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleport"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleport
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleport(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleport", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleportForwardBackOnly
::GlobalNamespace::TeleportInputHandlerTouch::InputModes GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleportForwardBackOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_get_ThumbstickTeleportForwardBackOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::InputModes>("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleportForwardBackOnly"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/InputModes ThumbstickTeleportForwardBackOnly
void GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleportForwardBackOnly(::GlobalNamespace::TeleportInputHandlerTouch::InputModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::_set_ThumbstickTeleportForwardBackOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/InputModes", "ThumbstickTeleportForwardBackOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandlerTouch::InputModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::InputModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TeleportInputHandlerTouch/AimCapTouchButtons
#include "GlobalNamespace/TeleportInputHandlerTouch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons A
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "A"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons A
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_A(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "A", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons B
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "B"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons B
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_B(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "B", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftTrigger
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftTrigger"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftTrigger
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftTrigger(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftThumbstick
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_LeftThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons LeftThumbstick
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftThumbstick(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_LeftThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "LeftThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightTrigger
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightTrigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightTrigger"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightTrigger
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightTrigger(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightTrigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightTrigger", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightThumbstick
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightThumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_RightThumbstick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightThumbstick"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons RightThumbstick
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightThumbstick(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_RightThumbstick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "RightThumbstick", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons X
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "X"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons X
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_X(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "X", value));
}
// Autogenerated static field getter
// Get static field: static public TeleportInputHandlerTouch/AimCapTouchButtons Y
::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons>("", "TeleportInputHandlerTouch/AimCapTouchButtons", "Y"));
}
// Autogenerated static field setter
// Set static field: static public TeleportInputHandlerTouch/AimCapTouchButtons Y
void GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_Y(::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TeleportInputHandlerTouch/AimCapTouchButtons", "Y", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TeleportInputHandlerTouch::AimCapTouchButtons::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
