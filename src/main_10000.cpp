// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.SourceTemplateAttribute
#include "VivoxUnity/Properties/SourceTemplateAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.MacroAttribute
#include "VivoxUnity/Properties/MacroAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Expression>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::MacroAttribute::dyn_$Expression$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::MacroAttribute::dyn_$Expression$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Expression>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Editable>k__BackingField
[[deprecated("Use field access instead!")]] int& VivoxUnity::Properties::MacroAttribute::dyn_$Editable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::MacroAttribute::dyn_$Editable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Editable>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Target>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::MacroAttribute::dyn_$Target$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::MacroAttribute::dyn_$Target$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Target>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.MacroAttribute.get_Expression
::StringW VivoxUnity::Properties::MacroAttribute::get_Expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::MacroAttribute::get_Expression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.MacroAttribute.set_Expression
void VivoxUnity::Properties::MacroAttribute::set_Expression(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::MacroAttribute::set_Expression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Expression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Properties.MacroAttribute.get_Editable
int VivoxUnity::Properties::MacroAttribute::get_Editable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::MacroAttribute::get_Editable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Editable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.MacroAttribute.set_Editable
void VivoxUnity::Properties::MacroAttribute::set_Editable(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::MacroAttribute::set_Editable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Editable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Properties.MacroAttribute.get_Target
::StringW VivoxUnity::Properties::MacroAttribute::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::MacroAttribute::get_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.MacroAttribute.set_Target
void VivoxUnity::Properties::MacroAttribute::set_Target(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::MacroAttribute::set_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcAreaMasterLocationFormatAttribute
#include "VivoxUnity/Properties/AspMvcAreaMasterLocationFormatAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Format>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspMvcAreaMasterLocationFormatAttribute::dyn_$Format$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaMasterLocationFormatAttribute::dyn_$Format$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Format>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcAreaMasterLocationFormatAttribute.get_Format
::StringW VivoxUnity::Properties::AspMvcAreaMasterLocationFormatAttribute::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaMasterLocationFormatAttribute::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcAreaMasterLocationFormatAttribute.set_Format
void VivoxUnity::Properties::AspMvcAreaMasterLocationFormatAttribute::set_Format(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaMasterLocationFormatAttribute::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcAreaPartialViewLocationFormatAttribute
#include "VivoxUnity/Properties/AspMvcAreaPartialViewLocationFormatAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Format>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspMvcAreaPartialViewLocationFormatAttribute::dyn_$Format$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaPartialViewLocationFormatAttribute::dyn_$Format$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Format>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcAreaPartialViewLocationFormatAttribute.get_Format
::StringW VivoxUnity::Properties::AspMvcAreaPartialViewLocationFormatAttribute::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaPartialViewLocationFormatAttribute::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcAreaPartialViewLocationFormatAttribute.set_Format
void VivoxUnity::Properties::AspMvcAreaPartialViewLocationFormatAttribute::set_Format(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaPartialViewLocationFormatAttribute::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcAreaViewLocationFormatAttribute
#include "VivoxUnity/Properties/AspMvcAreaViewLocationFormatAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Format>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspMvcAreaViewLocationFormatAttribute::dyn_$Format$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaViewLocationFormatAttribute::dyn_$Format$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Format>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcAreaViewLocationFormatAttribute.get_Format
::StringW VivoxUnity::Properties::AspMvcAreaViewLocationFormatAttribute::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaViewLocationFormatAttribute::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcAreaViewLocationFormatAttribute.set_Format
void VivoxUnity::Properties::AspMvcAreaViewLocationFormatAttribute::set_Format(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaViewLocationFormatAttribute::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcMasterLocationFormatAttribute
#include "VivoxUnity/Properties/AspMvcMasterLocationFormatAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Format>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspMvcMasterLocationFormatAttribute::dyn_$Format$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcMasterLocationFormatAttribute::dyn_$Format$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Format>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcMasterLocationFormatAttribute.get_Format
::StringW VivoxUnity::Properties::AspMvcMasterLocationFormatAttribute::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcMasterLocationFormatAttribute::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcMasterLocationFormatAttribute.set_Format
void VivoxUnity::Properties::AspMvcMasterLocationFormatAttribute::set_Format(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcMasterLocationFormatAttribute::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcPartialViewLocationFormatAttribute
#include "VivoxUnity/Properties/AspMvcPartialViewLocationFormatAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Format>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspMvcPartialViewLocationFormatAttribute::dyn_$Format$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcPartialViewLocationFormatAttribute::dyn_$Format$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Format>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcPartialViewLocationFormatAttribute.get_Format
::StringW VivoxUnity::Properties::AspMvcPartialViewLocationFormatAttribute::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcPartialViewLocationFormatAttribute::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcPartialViewLocationFormatAttribute.set_Format
void VivoxUnity::Properties::AspMvcPartialViewLocationFormatAttribute::set_Format(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcPartialViewLocationFormatAttribute::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcViewLocationFormatAttribute
#include "VivoxUnity/Properties/AspMvcViewLocationFormatAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Format>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspMvcViewLocationFormatAttribute::dyn_$Format$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcViewLocationFormatAttribute::dyn_$Format$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Format>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcViewLocationFormatAttribute.get_Format
::StringW VivoxUnity::Properties::AspMvcViewLocationFormatAttribute::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcViewLocationFormatAttribute::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcViewLocationFormatAttribute.set_Format
void VivoxUnity::Properties::AspMvcViewLocationFormatAttribute::set_Format(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcViewLocationFormatAttribute::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcActionAttribute
#include "VivoxUnity/Properties/AspMvcActionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <AnonymousProperty>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspMvcActionAttribute::dyn_$AnonymousProperty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcActionAttribute::dyn_$AnonymousProperty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AnonymousProperty>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcActionAttribute.get_AnonymousProperty
::StringW VivoxUnity::Properties::AspMvcActionAttribute::get_AnonymousProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcActionAttribute::get_AnonymousProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnonymousProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcActionAttribute.set_AnonymousProperty
void VivoxUnity::Properties::AspMvcActionAttribute::set_AnonymousProperty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcActionAttribute::set_AnonymousProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AnonymousProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcAreaAttribute
#include "VivoxUnity/Properties/AspMvcAreaAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <AnonymousProperty>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspMvcAreaAttribute::dyn_$AnonymousProperty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaAttribute::dyn_$AnonymousProperty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AnonymousProperty>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcAreaAttribute.get_AnonymousProperty
::StringW VivoxUnity::Properties::AspMvcAreaAttribute::get_AnonymousProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaAttribute::get_AnonymousProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnonymousProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcAreaAttribute.set_AnonymousProperty
void VivoxUnity::Properties::AspMvcAreaAttribute::set_AnonymousProperty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcAreaAttribute::set_AnonymousProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AnonymousProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcControllerAttribute
#include "VivoxUnity/Properties/AspMvcControllerAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <AnonymousProperty>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspMvcControllerAttribute::dyn_$AnonymousProperty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcControllerAttribute::dyn_$AnonymousProperty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AnonymousProperty>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcControllerAttribute.get_AnonymousProperty
::StringW VivoxUnity::Properties::AspMvcControllerAttribute::get_AnonymousProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcControllerAttribute::get_AnonymousProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnonymousProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspMvcControllerAttribute.set_AnonymousProperty
void VivoxUnity::Properties::AspMvcControllerAttribute::set_AnonymousProperty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspMvcControllerAttribute::set_AnonymousProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AnonymousProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcMasterAttribute
#include "VivoxUnity/Properties/AspMvcMasterAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcModelTypeAttribute
#include "VivoxUnity/Properties/AspMvcModelTypeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcPartialViewAttribute
#include "VivoxUnity/Properties/AspMvcPartialViewAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcSuppressViewErrorAttribute
#include "VivoxUnity/Properties/AspMvcSuppressViewErrorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcDisplayTemplateAttribute
#include "VivoxUnity/Properties/AspMvcDisplayTemplateAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcEditorTemplateAttribute
#include "VivoxUnity/Properties/AspMvcEditorTemplateAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcTemplateAttribute
#include "VivoxUnity/Properties/AspMvcTemplateAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcViewAttribute
#include "VivoxUnity/Properties/AspMvcViewAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcViewComponentAttribute
#include "VivoxUnity/Properties/AspMvcViewComponentAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcViewComponentViewAttribute
#include "VivoxUnity/Properties/AspMvcViewComponentViewAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMvcActionSelectorAttribute
#include "VivoxUnity/Properties/AspMvcActionSelectorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.HtmlElementAttributesAttribute
#include "VivoxUnity/Properties/HtmlElementAttributesAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::HtmlElementAttributesAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::HtmlElementAttributesAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.HtmlElementAttributesAttribute.get_Name
::StringW VivoxUnity::Properties::HtmlElementAttributesAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::HtmlElementAttributesAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.HtmlElementAttributesAttribute.set_Name
void VivoxUnity::Properties::HtmlElementAttributesAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::HtmlElementAttributesAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.HtmlAttributeValueAttribute
#include "VivoxUnity/Properties/HtmlAttributeValueAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::HtmlAttributeValueAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::HtmlAttributeValueAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.HtmlAttributeValueAttribute.get_Name
::StringW VivoxUnity::Properties::HtmlAttributeValueAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::HtmlAttributeValueAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.HtmlAttributeValueAttribute.set_Name
void VivoxUnity::Properties::HtmlAttributeValueAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::HtmlAttributeValueAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.RazorSectionAttribute
#include "VivoxUnity/Properties/RazorSectionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.CollectionAccessAttribute
#include "VivoxUnity/Properties/CollectionAccessAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Properties.CollectionAccessType <CollectionAccessType>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::Properties::CollectionAccessType& VivoxUnity::Properties::CollectionAccessAttribute::dyn_$CollectionAccessType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessAttribute::dyn_$CollectionAccessType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CollectionAccessType>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::Properties::CollectionAccessType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.CollectionAccessAttribute.get_CollectionAccessType
::VivoxUnity::Properties::CollectionAccessType VivoxUnity::Properties::CollectionAccessAttribute::get_CollectionAccessType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessAttribute::get_CollectionAccessType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CollectionAccessType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::Properties::CollectionAccessType, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.CollectionAccessAttribute.set_CollectionAccessType
void VivoxUnity::Properties::CollectionAccessAttribute::set_CollectionAccessType(::VivoxUnity::Properties::CollectionAccessType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessAttribute::set_CollectionAccessType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CollectionAccessType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.CollectionAccessType
#include "VivoxUnity/Properties/CollectionAccessType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VivoxUnity.Properties.CollectionAccessType None
::VivoxUnity::Properties::CollectionAccessType VivoxUnity::Properties::CollectionAccessType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VivoxUnity::Properties::CollectionAccessType>("VivoxUnity.Properties", "CollectionAccessType", "None"));
}
// Autogenerated static field setter
// Set static field: static public VivoxUnity.Properties.CollectionAccessType None
void VivoxUnity::Properties::CollectionAccessType::_set_None(::VivoxUnity::Properties::CollectionAccessType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VivoxUnity.Properties", "CollectionAccessType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public VivoxUnity.Properties.CollectionAccessType Read
::VivoxUnity::Properties::CollectionAccessType VivoxUnity::Properties::CollectionAccessType::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessType::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VivoxUnity::Properties::CollectionAccessType>("VivoxUnity.Properties", "CollectionAccessType", "Read"));
}
// Autogenerated static field setter
// Set static field: static public VivoxUnity.Properties.CollectionAccessType Read
void VivoxUnity::Properties::CollectionAccessType::_set_Read(::VivoxUnity::Properties::CollectionAccessType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessType::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VivoxUnity.Properties", "CollectionAccessType", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public VivoxUnity.Properties.CollectionAccessType ModifyExistingContent
::VivoxUnity::Properties::CollectionAccessType VivoxUnity::Properties::CollectionAccessType::_get_ModifyExistingContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessType::_get_ModifyExistingContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VivoxUnity::Properties::CollectionAccessType>("VivoxUnity.Properties", "CollectionAccessType", "ModifyExistingContent"));
}
// Autogenerated static field setter
// Set static field: static public VivoxUnity.Properties.CollectionAccessType ModifyExistingContent
void VivoxUnity::Properties::CollectionAccessType::_set_ModifyExistingContent(::VivoxUnity::Properties::CollectionAccessType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessType::_set_ModifyExistingContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VivoxUnity.Properties", "CollectionAccessType", "ModifyExistingContent", value));
}
// Autogenerated static field getter
// Get static field: static public VivoxUnity.Properties.CollectionAccessType UpdatedContent
::VivoxUnity::Properties::CollectionAccessType VivoxUnity::Properties::CollectionAccessType::_get_UpdatedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessType::_get_UpdatedContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VivoxUnity::Properties::CollectionAccessType>("VivoxUnity.Properties", "CollectionAccessType", "UpdatedContent"));
}
// Autogenerated static field setter
// Set static field: static public VivoxUnity.Properties.CollectionAccessType UpdatedContent
void VivoxUnity::Properties::CollectionAccessType::_set_UpdatedContent(::VivoxUnity::Properties::CollectionAccessType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessType::_set_UpdatedContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VivoxUnity.Properties", "CollectionAccessType", "UpdatedContent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VivoxUnity::Properties::CollectionAccessType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::CollectionAccessType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AssertionMethodAttribute
#include "VivoxUnity/Properties/AssertionMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AssertionConditionAttribute
#include "VivoxUnity/Properties/AssertionConditionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Properties.AssertionConditionType <ConditionType>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::Properties::AssertionConditionType& VivoxUnity::Properties::AssertionConditionAttribute::dyn_$ConditionType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionAttribute::dyn_$ConditionType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConditionType>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::Properties::AssertionConditionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AssertionConditionAttribute.get_ConditionType
::VivoxUnity::Properties::AssertionConditionType VivoxUnity::Properties::AssertionConditionAttribute::get_ConditionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionAttribute::get_ConditionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConditionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::Properties::AssertionConditionType, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AssertionConditionAttribute.set_ConditionType
void VivoxUnity::Properties::AssertionConditionAttribute::set_ConditionType(::VivoxUnity::Properties::AssertionConditionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionAttribute::set_ConditionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConditionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AssertionConditionType
#include "VivoxUnity/Properties/AssertionConditionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VivoxUnity.Properties.AssertionConditionType IS_TRUE
::VivoxUnity::Properties::AssertionConditionType VivoxUnity::Properties::AssertionConditionType::_get_IS_TRUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionType::_get_IS_TRUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VivoxUnity::Properties::AssertionConditionType>("VivoxUnity.Properties", "AssertionConditionType", "IS_TRUE"));
}
// Autogenerated static field setter
// Set static field: static public VivoxUnity.Properties.AssertionConditionType IS_TRUE
void VivoxUnity::Properties::AssertionConditionType::_set_IS_TRUE(::VivoxUnity::Properties::AssertionConditionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionType::_set_IS_TRUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VivoxUnity.Properties", "AssertionConditionType", "IS_TRUE", value));
}
// Autogenerated static field getter
// Get static field: static public VivoxUnity.Properties.AssertionConditionType IS_FALSE
::VivoxUnity::Properties::AssertionConditionType VivoxUnity::Properties::AssertionConditionType::_get_IS_FALSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionType::_get_IS_FALSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VivoxUnity::Properties::AssertionConditionType>("VivoxUnity.Properties", "AssertionConditionType", "IS_FALSE"));
}
// Autogenerated static field setter
// Set static field: static public VivoxUnity.Properties.AssertionConditionType IS_FALSE
void VivoxUnity::Properties::AssertionConditionType::_set_IS_FALSE(::VivoxUnity::Properties::AssertionConditionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionType::_set_IS_FALSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VivoxUnity.Properties", "AssertionConditionType", "IS_FALSE", value));
}
// Autogenerated static field getter
// Get static field: static public VivoxUnity.Properties.AssertionConditionType IS_NULL
::VivoxUnity::Properties::AssertionConditionType VivoxUnity::Properties::AssertionConditionType::_get_IS_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionType::_get_IS_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VivoxUnity::Properties::AssertionConditionType>("VivoxUnity.Properties", "AssertionConditionType", "IS_NULL"));
}
// Autogenerated static field setter
// Set static field: static public VivoxUnity.Properties.AssertionConditionType IS_NULL
void VivoxUnity::Properties::AssertionConditionType::_set_IS_NULL(::VivoxUnity::Properties::AssertionConditionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionType::_set_IS_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VivoxUnity.Properties", "AssertionConditionType", "IS_NULL", value));
}
// Autogenerated static field getter
// Get static field: static public VivoxUnity.Properties.AssertionConditionType IS_NOT_NULL
::VivoxUnity::Properties::AssertionConditionType VivoxUnity::Properties::AssertionConditionType::_get_IS_NOT_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionType::_get_IS_NOT_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VivoxUnity::Properties::AssertionConditionType>("VivoxUnity.Properties", "AssertionConditionType", "IS_NOT_NULL"));
}
// Autogenerated static field setter
// Set static field: static public VivoxUnity.Properties.AssertionConditionType IS_NOT_NULL
void VivoxUnity::Properties::AssertionConditionType::_set_IS_NOT_NULL(::VivoxUnity::Properties::AssertionConditionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionType::_set_IS_NOT_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VivoxUnity.Properties", "AssertionConditionType", "IS_NOT_NULL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VivoxUnity::Properties::AssertionConditionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AssertionConditionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.TerminatesProgramAttribute
#include "VivoxUnity/Properties/TerminatesProgramAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.LinqTunnelAttribute
#include "VivoxUnity/Properties/LinqTunnelAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.NoEnumerationAttribute
#include "VivoxUnity/Properties/NoEnumerationAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.RegexPatternAttribute
#include "VivoxUnity/Properties/RegexPatternAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.NoReorderAttribute
#include "VivoxUnity/Properties/NoReorderAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.XamlItemsControlAttribute
#include "VivoxUnity/Properties/XamlItemsControlAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.XamlItemBindingOfItemsControlAttribute
#include "VivoxUnity/Properties/XamlItemBindingOfItemsControlAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspChildControlTypeAttribute
#include "VivoxUnity/Properties/AspChildControlTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <TagName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspChildControlTypeAttribute::dyn_$TagName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspChildControlTypeAttribute::dyn_$TagName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TagName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <ControlType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& VivoxUnity::Properties::AspChildControlTypeAttribute::dyn_$ControlType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspChildControlTypeAttribute::dyn_$ControlType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ControlType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspChildControlTypeAttribute.get_TagName
::StringW VivoxUnity::Properties::AspChildControlTypeAttribute::get_TagName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspChildControlTypeAttribute::get_TagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspChildControlTypeAttribute.set_TagName
void VivoxUnity::Properties::AspChildControlTypeAttribute::set_TagName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspChildControlTypeAttribute::set_TagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Properties.AspChildControlTypeAttribute.get_ControlType
::System::Type* VivoxUnity::Properties::AspChildControlTypeAttribute::get_ControlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspChildControlTypeAttribute::get_ControlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ControlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspChildControlTypeAttribute.set_ControlType
void VivoxUnity::Properties::AspChildControlTypeAttribute::set_ControlType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspChildControlTypeAttribute::set_ControlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ControlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspDataFieldAttribute
#include "VivoxUnity/Properties/AspDataFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspDataFieldsAttribute
#include "VivoxUnity/Properties/AspDataFieldsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspMethodPropertyAttribute
#include "VivoxUnity/Properties/AspMethodPropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspRequiredAttributeAttribute
#include "VivoxUnity/Properties/AspRequiredAttributeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Attribute>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::AspRequiredAttributeAttribute::dyn_$Attribute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspRequiredAttributeAttribute::dyn_$Attribute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Attribute>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspRequiredAttributeAttribute.get_Attribute
::StringW VivoxUnity::Properties::AspRequiredAttributeAttribute::get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspRequiredAttributeAttribute::get_Attribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspRequiredAttributeAttribute.set_Attribute
void VivoxUnity::Properties::AspRequiredAttributeAttribute::set_Attribute(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspRequiredAttributeAttribute::set_Attribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Attribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.AspTypePropertyAttribute
#include "VivoxUnity/Properties/AspTypePropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CreateConstructorReferences>k__BackingField
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Properties::AspTypePropertyAttribute::dyn_$CreateConstructorReferences$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspTypePropertyAttribute::dyn_$CreateConstructorReferences$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CreateConstructorReferences>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.AspTypePropertyAttribute.get_CreateConstructorReferences
bool VivoxUnity::Properties::AspTypePropertyAttribute::get_CreateConstructorReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspTypePropertyAttribute::get_CreateConstructorReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreateConstructorReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.AspTypePropertyAttribute.set_CreateConstructorReferences
void VivoxUnity::Properties::AspTypePropertyAttribute::set_CreateConstructorReferences(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::AspTypePropertyAttribute::set_CreateConstructorReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CreateConstructorReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.RazorImportNamespaceAttribute
#include "VivoxUnity/Properties/RazorImportNamespaceAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::RazorImportNamespaceAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorImportNamespaceAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.RazorImportNamespaceAttribute.get_Name
::StringW VivoxUnity::Properties::RazorImportNamespaceAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorImportNamespaceAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.RazorImportNamespaceAttribute.set_Name
void VivoxUnity::Properties::RazorImportNamespaceAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorImportNamespaceAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.RazorInjectionAttribute
#include "VivoxUnity/Properties/RazorInjectionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::RazorInjectionAttribute::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorInjectionAttribute::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <FieldName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::RazorInjectionAttribute::dyn_$FieldName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorInjectionAttribute::dyn_$FieldName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FieldName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.RazorInjectionAttribute.get_Type
::StringW VivoxUnity::Properties::RazorInjectionAttribute::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorInjectionAttribute::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.RazorInjectionAttribute.set_Type
void VivoxUnity::Properties::RazorInjectionAttribute::set_Type(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorInjectionAttribute::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Properties.RazorInjectionAttribute.get_FieldName
::StringW VivoxUnity::Properties::RazorInjectionAttribute::get_FieldName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorInjectionAttribute::get_FieldName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FieldName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.RazorInjectionAttribute.set_FieldName
void VivoxUnity::Properties::RazorInjectionAttribute::set_FieldName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorInjectionAttribute::set_FieldName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FieldName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.RazorDirectiveAttribute
#include "VivoxUnity/Properties/RazorDirectiveAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Directive>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Properties::RazorDirectiveAttribute::dyn_$Directive$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorDirectiveAttribute::dyn_$Directive$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Directive>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Properties.RazorDirectiveAttribute.get_Directive
::StringW VivoxUnity::Properties::RazorDirectiveAttribute::get_Directive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorDirectiveAttribute::get_Directive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Directive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Properties.RazorDirectiveAttribute.set_Directive
void VivoxUnity::Properties::RazorDirectiveAttribute::set_Directive(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Properties::RazorDirectiveAttribute::set_Directive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Directive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.RazorHelperCommonAttribute
#include "VivoxUnity/Properties/RazorHelperCommonAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.RazorLayoutAttribute
#include "VivoxUnity/Properties/RazorLayoutAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.RazorWriteLiteralMethodAttribute
#include "VivoxUnity/Properties/RazorWriteLiteralMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.RazorWriteMethodAttribute
#include "VivoxUnity/Properties/RazorWriteMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Properties.RazorWriteMethodParameterAttribute
#include "VivoxUnity/Properties/RazorWriteMethodParameterAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ArchiveQueryResult
#include "VivoxUnity/Private/ArchiveQueryResult.hpp"
// Including type: vx_evt_session_archive_query_end_t
#include "GlobalNamespace/vx_evt_session_archive_query_end_t.hpp"
// Including type: vx_evt_account_archive_query_end_t
#include "GlobalNamespace/vx_evt_account_archive_query_end_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <QueryId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ArchiveQueryResult::dyn_$QueryId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::dyn_$QueryId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<QueryId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ReturnCode>k__BackingField
[[deprecated("Use field access instead!")]] int& VivoxUnity::Private::ArchiveQueryResult::dyn_$ReturnCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::dyn_$ReturnCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReturnCode>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StatusCode>k__BackingField
[[deprecated("Use field access instead!")]] int& VivoxUnity::Private::ArchiveQueryResult::dyn_$StatusCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::dyn_$StatusCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StatusCode>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <FirstId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ArchiveQueryResult::dyn_$FirstId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::dyn_$FirstId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FirstId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <LastId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ArchiveQueryResult::dyn_$LastId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::dyn_$LastId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LastId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <FirstIndex>k__BackingField
[[deprecated("Use field access instead!")]] uint& VivoxUnity::Private::ArchiveQueryResult::dyn_$FirstIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::dyn_$FirstIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FirstIndex>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <TotalCount>k__BackingField
[[deprecated("Use field access instead!")]] uint& VivoxUnity::Private::ArchiveQueryResult::dyn_$TotalCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::dyn_$TotalCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TotalCount>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Running>k__BackingField
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ArchiveQueryResult::dyn_$Running$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::dyn_$Running$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Running>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.get_QueryId
::StringW VivoxUnity::Private::ArchiveQueryResult::get_QueryId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::get_QueryId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ArchiveQueryResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.set_QueryId
void VivoxUnity::Private::ArchiveQueryResult::set_QueryId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::set_QueryId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QueryId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.get_ReturnCode
int VivoxUnity::Private::ArchiveQueryResult::get_ReturnCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::get_ReturnCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ArchiveQueryResult*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.set_ReturnCode
void VivoxUnity::Private::ArchiveQueryResult::set_ReturnCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::set_ReturnCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReturnCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.get_StatusCode
int VivoxUnity::Private::ArchiveQueryResult::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::get_StatusCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ArchiveQueryResult*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.set_StatusCode
void VivoxUnity::Private::ArchiveQueryResult::set_StatusCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.get_FirstId
::StringW VivoxUnity::Private::ArchiveQueryResult::get_FirstId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::get_FirstId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ArchiveQueryResult*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.set_FirstId
void VivoxUnity::Private::ArchiveQueryResult::set_FirstId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::set_FirstId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FirstId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.get_LastId
::StringW VivoxUnity::Private::ArchiveQueryResult::get_LastId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::get_LastId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ArchiveQueryResult*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.set_LastId
void VivoxUnity::Private::ArchiveQueryResult::set_LastId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::set_LastId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.get_FirstIndex
uint VivoxUnity::Private::ArchiveQueryResult::get_FirstIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::get_FirstIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ArchiveQueryResult*), 9));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.set_FirstIndex
void VivoxUnity::Private::ArchiveQueryResult::set_FirstIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::set_FirstIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FirstIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.get_TotalCount
uint VivoxUnity::Private::ArchiveQueryResult::get_TotalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::get_TotalCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ArchiveQueryResult*), 10));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.set_TotalCount
void VivoxUnity::Private::ArchiveQueryResult::set_TotalCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::set_TotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.get_Running
bool VivoxUnity::Private::ArchiveQueryResult::get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::get_Running");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ArchiveQueryResult*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ArchiveQueryResult.set_Running
void VivoxUnity::Private::ArchiveQueryResult::set_Running(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ArchiveQueryResult::set_Running");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Running", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VivoxUnity.Private.AudioDevice
#include "VivoxUnity/Private/AudioDevice.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::AudioDevice::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::AudioDevice::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::AudioDevice::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioDevice.get_Name
::StringW VivoxUnity::Private::AudioDevice::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioDevice*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioDevice.set_Name
void VivoxUnity::Private::AudioDevice::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioDevice.get_Key
::StringW VivoxUnity::Private::AudioDevice::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioDevice*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioDevice.set_Key
void VivoxUnity::Private::AudioDevice::set_Key(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::set_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioDevice.Equals
bool VivoxUnity::Private::AudioDevice::Equals(::VivoxUnity::Private::AudioDevice* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: VivoxUnity.Private.AudioDevice.add_PropertyChanged
void VivoxUnity::Private::AudioDevice::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioDevice*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioDevice.remove_PropertyChanged
void VivoxUnity::Private::AudioDevice::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioDevice*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioDevice.OnPropertyChanged
void VivoxUnity::Private::AudioDevice::OnPropertyChanged(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::OnPropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioDevice*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: VivoxUnity.Private.AudioDevice.Equals
bool VivoxUnity::Private::AudioDevice::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: VivoxUnity.Private.AudioDevice.GetHashCode
int VivoxUnity::Private::AudioDevice::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioDevice::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AudioInputDevices
#include "VivoxUnity/Private/AudioInputDevices.hpp"
// Including type: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass23_0
#include "VivoxUnity/Private/AudioInputDevices_--c__DisplayClass23_0.hpp"
// Including type: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass27_0
#include "VivoxUnity/Private/AudioInputDevices_--c__DisplayClass27_0.hpp"
// Including type: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass30_0
#include "VivoxUnity/Private/AudioInputDevices_--c__DisplayClass30_0.hpp"
// Including type: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass31_0
#include "VivoxUnity/Private/AudioInputDevices_--c__DisplayClass31_0.hpp"
// Including type: VivoxUnity.Private.AudioDevice
#include "VivoxUnity/Private/AudioDevice.hpp"
// Including type: VivoxUnity.VxClient
#include "VivoxUnity/VxClient.hpp"
// Including type: VivoxUnity.Common.ReadWriteDictionary`3
#include "VivoxUnity/Common/ReadWriteDictionary_3.hpp"
// Including type: VivoxUnity.IAudioDevice
#include "VivoxUnity/IAudioDevice.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.IReadOnlyDictionary`2
#include "VivoxUnity/IReadOnlyDictionary_2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: vx_evt_base_t
#include "GlobalNamespace/vx_evt_base_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.AudioDevice _systemDevice
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioDevice*& VivoxUnity::Private::AudioInputDevices::dyn__systemDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::dyn__systemDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_systemDevice"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.AudioDevice _communicationDevice
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioDevice*& VivoxUnity::Private::AudioInputDevices::dyn__communicationDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::dyn__communicationDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_communicationDevice"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.AudioDevice _activeDevice
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioDevice*& VivoxUnity::Private::AudioInputDevices::dyn__activeDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::dyn__activeDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeDevice"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.AudioDevice _effectiveDevice
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioDevice*& VivoxUnity::Private::AudioInputDevices::dyn__effectiveDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::dyn__effectiveDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectiveDevice"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _audioGain
[[deprecated("Use field access instead!")]] int& VivoxUnity::Private::AudioInputDevices::dyn__audioGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::dyn__audioGain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioGain"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _muted
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::AudioInputDevices::dyn__muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::dyn__muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.VxClient _client
[[deprecated("Use field access instead!")]] ::VivoxUnity::VxClient*& VivoxUnity::Private::AudioInputDevices::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::VivoxUnity::VxClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteDictionary`3<System.String,VivoxUnity.IAudioDevice,VivoxUnity.Private.AudioDevice> _devices
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteDictionary_3<::StringW, ::VivoxUnity::IAudioDevice*, ::VivoxUnity::Private::AudioDevice*>*& VivoxUnity::Private::AudioInputDevices::dyn__devices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::dyn__devices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_devices"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteDictionary_3<::StringW, ::VivoxUnity::IAudioDevice*, ::VivoxUnity::Private::AudioDevice*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::AudioInputDevices::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.ConvertGain
int VivoxUnity::Private::AudioInputDevices::ConvertGain(int gain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::ConvertGain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertGain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gain)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, gain);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.add_PropertyChanged
void VivoxUnity::Private::AudioInputDevices::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.remove_PropertyChanged
void VivoxUnity::Private::AudioInputDevices::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.get_SystemDevice
::VivoxUnity::IAudioDevice* VivoxUnity::Private::AudioInputDevices::get_SystemDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::get_SystemDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IAudioDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.get_CommunicationDevice
::VivoxUnity::IAudioDevice* VivoxUnity::Private::AudioInputDevices::get_CommunicationDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::get_CommunicationDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CommunicationDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IAudioDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.get_ActiveDevice
::VivoxUnity::IAudioDevice* VivoxUnity::Private::AudioInputDevices::get_ActiveDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::get_ActiveDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IAudioDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.get_EffectiveDevice
::VivoxUnity::IAudioDevice* VivoxUnity::Private::AudioInputDevices::get_EffectiveDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::get_EffectiveDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IAudioDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.get_AvailableDevices
::VivoxUnity::IReadOnlyDictionary_2<::StringW, ::VivoxUnity::IAudioDevice*>* VivoxUnity::Private::AudioInputDevices::get_AvailableDevices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::get_AvailableDevices");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyDictionary_2<::StringW, ::VivoxUnity::IAudioDevice*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.BeginSetActiveDevice
::System::IAsyncResult* VivoxUnity::Private::AudioInputDevices::BeginSetActiveDevice(::VivoxUnity::IAudioDevice* device, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::BeginSetActiveDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, device, callback);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.EndSetActiveDevice
void VivoxUnity::Private::AudioInputDevices::EndSetActiveDevice(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::EndSetActiveDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.get_VolumeAdjustment
int VivoxUnity::Private::AudioInputDevices::get_VolumeAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::get_VolumeAdjustment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.set_VolumeAdjustment
void VivoxUnity::Private::AudioInputDevices::set_VolumeAdjustment(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::set_VolumeAdjustment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.get_Muted
bool VivoxUnity::Private::AudioInputDevices::get_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::get_Muted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.set_Muted
void VivoxUnity::Private::AudioInputDevices::set_Muted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::set_Muted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.BeginRefresh
::System::IAsyncResult* VivoxUnity::Private::AudioInputDevices::BeginRefresh(::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::BeginRefresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.EndRefresh
void VivoxUnity::Private::AudioInputDevices::EndRefresh(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::EndRefresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioInputDevices*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.OnEventMessageReceived
void VivoxUnity::Private::AudioInputDevices::OnEventMessageReceived(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::OnEventMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEventMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.HandleDeviceHotSwap
void VivoxUnity::Private::AudioInputDevices::HandleDeviceHotSwap(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::HandleDeviceHotSwap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDeviceHotSwap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.Clear
void VivoxUnity::Private::AudioInputDevices::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices.<HandleDeviceHotSwap>b__34_0
void VivoxUnity::Private::AudioInputDevices::$HandleDeviceHotSwap$b__34_0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::<HandleDeviceHotSwap>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleDeviceHotSwap>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass23_0
#include "VivoxUnity/Private/AudioInputDevices_--c__DisplayClass23_0.hpp"
// Including type: VivoxUnity.IAudioDevice
#include "VivoxUnity/IAudioDevice.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_aux_set_capture_device_t
#include "GlobalNamespace/vx_req_aux_set_capture_device_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.AudioInputDevices <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioInputDevices*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass23_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass23_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioInputDevices**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.IAudioDevice device
[[deprecated("Use field access instead!")]] ::VivoxUnity::IAudioDevice*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass23_0::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass23_0::dyn_device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::VivoxUnity::IAudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult result
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass23_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass23_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_aux_set_capture_device_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_aux_set_capture_device_t*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass23_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass23_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_aux_set_capture_device_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass23_0.<BeginSetActiveDevice>b__0
void VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass23_0::$BeginSetActiveDevice$b__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass23_0::<BeginSetActiveDevice>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSetActiveDevice>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass27_0
#include "VivoxUnity/Private/AudioInputDevices_--c__DisplayClass27_0.hpp"
// Including type: vx_req_aux_set_mic_level_t
#include "GlobalNamespace/vx_req_aux_set_mic_level_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.AudioInputDevices <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioInputDevices*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass27_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass27_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioInputDevices**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_aux_set_mic_level_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_aux_set_mic_level_t*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass27_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass27_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_aux_set_mic_level_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass27_0.<set_VolumeAdjustment>b__0
void VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass27_0::$set_VolumeAdjustment$b__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass27_0::<set_VolumeAdjustment>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_VolumeAdjustment>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass30_0
#include "VivoxUnity/Private/AudioInputDevices_--c__DisplayClass30_0.hpp"
// Including type: vx_req_connector_mute_local_mic_t
#include "GlobalNamespace/vx_req_connector_mute_local_mic_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.AudioInputDevices <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioInputDevices*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass30_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass30_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioInputDevices**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_connector_mute_local_mic_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_connector_mute_local_mic_t*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass30_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass30_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_connector_mute_local_mic_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass30_0.<set_Muted>b__0
void VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass30_0::$set_Muted$b__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass30_0::<set_Muted>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_Muted>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass31_0
#include "VivoxUnity/Private/AudioInputDevices_--c__DisplayClass31_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_aux_get_capture_devices_t
#include "GlobalNamespace/vx_req_aux_get_capture_devices_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.AudioInputDevices <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioInputDevices*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass31_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass31_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioInputDevices**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult result
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass31_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass31_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_aux_get_capture_devices_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_aux_get_capture_devices_t*& VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass31_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass31_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_aux_get_capture_devices_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioInputDevices/<>c__DisplayClass31_0.<BeginRefresh>b__0
void VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass31_0::$BeginRefresh$b__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioInputDevices::$$c__DisplayClass31_0::<BeginRefresh>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginRefresh>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AudioOutputDevices
#include "VivoxUnity/Private/AudioOutputDevices.hpp"
// Including type: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass23_0
#include "VivoxUnity/Private/AudioOutputDevices_--c__DisplayClass23_0.hpp"
// Including type: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass27_0
#include "VivoxUnity/Private/AudioOutputDevices_--c__DisplayClass27_0.hpp"
// Including type: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass30_0
#include "VivoxUnity/Private/AudioOutputDevices_--c__DisplayClass30_0.hpp"
// Including type: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass31_0
#include "VivoxUnity/Private/AudioOutputDevices_--c__DisplayClass31_0.hpp"
// Including type: VivoxUnity.Private.AudioDevice
#include "VivoxUnity/Private/AudioDevice.hpp"
// Including type: VivoxUnity.VxClient
#include "VivoxUnity/VxClient.hpp"
// Including type: VivoxUnity.Common.ReadWriteDictionary`3
#include "VivoxUnity/Common/ReadWriteDictionary_3.hpp"
// Including type: VivoxUnity.IAudioDevice
#include "VivoxUnity/IAudioDevice.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.IReadOnlyDictionary`2
#include "VivoxUnity/IReadOnlyDictionary_2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: vx_evt_base_t
#include "GlobalNamespace/vx_evt_base_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.AudioDevice _systemDevice
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioDevice*& VivoxUnity::Private::AudioOutputDevices::dyn__systemDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::dyn__systemDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_systemDevice"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.AudioDevice _communicationDevice
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioDevice*& VivoxUnity::Private::AudioOutputDevices::dyn__communicationDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::dyn__communicationDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_communicationDevice"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.AudioDevice _activeDevice
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioDevice*& VivoxUnity::Private::AudioOutputDevices::dyn__activeDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::dyn__activeDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeDevice"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.AudioDevice _effectiveDevice
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioDevice*& VivoxUnity::Private::AudioOutputDevices::dyn__effectiveDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::dyn__effectiveDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectiveDevice"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _volumeAdjustment
[[deprecated("Use field access instead!")]] int& VivoxUnity::Private::AudioOutputDevices::dyn__volumeAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::dyn__volumeAdjustment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeAdjustment"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _muted
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::AudioOutputDevices::dyn__muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::dyn__muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.VxClient _client
[[deprecated("Use field access instead!")]] ::VivoxUnity::VxClient*& VivoxUnity::Private::AudioOutputDevices::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::VivoxUnity::VxClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteDictionary`3<System.String,VivoxUnity.IAudioDevice,VivoxUnity.Private.AudioDevice> _devices
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteDictionary_3<::StringW, ::VivoxUnity::IAudioDevice*, ::VivoxUnity::Private::AudioDevice*>*& VivoxUnity::Private::AudioOutputDevices::dyn__devices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::dyn__devices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_devices"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteDictionary_3<::StringW, ::VivoxUnity::IAudioDevice*, ::VivoxUnity::Private::AudioDevice*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::AudioOutputDevices::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.ConvertGain
int VivoxUnity::Private::AudioOutputDevices::ConvertGain(int gain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::ConvertGain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertGain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gain)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, gain);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.add_PropertyChanged
void VivoxUnity::Private::AudioOutputDevices::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.remove_PropertyChanged
void VivoxUnity::Private::AudioOutputDevices::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.get_SystemDevice
::VivoxUnity::IAudioDevice* VivoxUnity::Private::AudioOutputDevices::get_SystemDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::get_SystemDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IAudioDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.get_CommunicationDevice
::VivoxUnity::IAudioDevice* VivoxUnity::Private::AudioOutputDevices::get_CommunicationDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::get_CommunicationDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CommunicationDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IAudioDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.get_ActiveDevice
::VivoxUnity::IAudioDevice* VivoxUnity::Private::AudioOutputDevices::get_ActiveDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::get_ActiveDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IAudioDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.get_EffectiveDevice
::VivoxUnity::IAudioDevice* VivoxUnity::Private::AudioOutputDevices::get_EffectiveDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::get_EffectiveDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IAudioDevice*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.get_AvailableDevices
::VivoxUnity::IReadOnlyDictionary_2<::StringW, ::VivoxUnity::IAudioDevice*>* VivoxUnity::Private::AudioOutputDevices::get_AvailableDevices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::get_AvailableDevices");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyDictionary_2<::StringW, ::VivoxUnity::IAudioDevice*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.BeginSetActiveDevice
::System::IAsyncResult* VivoxUnity::Private::AudioOutputDevices::BeginSetActiveDevice(::VivoxUnity::IAudioDevice* device, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::BeginSetActiveDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, device, callback);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.EndSetActiveDevice
void VivoxUnity::Private::AudioOutputDevices::EndSetActiveDevice(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::EndSetActiveDevice");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.get_VolumeAdjustment
int VivoxUnity::Private::AudioOutputDevices::get_VolumeAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::get_VolumeAdjustment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.set_VolumeAdjustment
void VivoxUnity::Private::AudioOutputDevices::set_VolumeAdjustment(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::set_VolumeAdjustment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.get_Muted
bool VivoxUnity::Private::AudioOutputDevices::get_Muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::get_Muted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.set_Muted
void VivoxUnity::Private::AudioOutputDevices::set_Muted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::set_Muted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.BeginRefresh
::System::IAsyncResult* VivoxUnity::Private::AudioOutputDevices::BeginRefresh(::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::BeginRefresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.EndRefresh
void VivoxUnity::Private::AudioOutputDevices::EndRefresh(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::EndRefresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::AudioOutputDevices*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.OnEventMessageReceived
void VivoxUnity::Private::AudioOutputDevices::OnEventMessageReceived(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::OnEventMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEventMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.HandleDeviceHotSwap
void VivoxUnity::Private::AudioOutputDevices::HandleDeviceHotSwap(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::HandleDeviceHotSwap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDeviceHotSwap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.Clear
void VivoxUnity::Private::AudioOutputDevices::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices.<HandleDeviceHotSwap>b__34_0
void VivoxUnity::Private::AudioOutputDevices::$HandleDeviceHotSwap$b__34_0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::<HandleDeviceHotSwap>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleDeviceHotSwap>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass23_0
#include "VivoxUnity/Private/AudioOutputDevices_--c__DisplayClass23_0.hpp"
// Including type: VivoxUnity.IAudioDevice
#include "VivoxUnity/IAudioDevice.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_aux_set_render_device_t
#include "GlobalNamespace/vx_req_aux_set_render_device_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.AudioOutputDevices <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioOutputDevices*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass23_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass23_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioOutputDevices**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.IAudioDevice device
[[deprecated("Use field access instead!")]] ::VivoxUnity::IAudioDevice*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass23_0::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass23_0::dyn_device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::VivoxUnity::IAudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult result
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass23_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass23_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_aux_set_render_device_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_aux_set_render_device_t*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass23_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass23_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_aux_set_render_device_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass23_0.<BeginSetActiveDevice>b__0
void VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass23_0::$BeginSetActiveDevice$b__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass23_0::<BeginSetActiveDevice>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSetActiveDevice>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass27_0
#include "VivoxUnity/Private/AudioOutputDevices_--c__DisplayClass27_0.hpp"
// Including type: vx_req_aux_set_speaker_level_t
#include "GlobalNamespace/vx_req_aux_set_speaker_level_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.AudioOutputDevices <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioOutputDevices*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass27_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass27_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioOutputDevices**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_aux_set_speaker_level_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_aux_set_speaker_level_t*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass27_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass27_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_aux_set_speaker_level_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass27_0.<set_VolumeAdjustment>b__0
void VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass27_0::$set_VolumeAdjustment$b__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass27_0::<set_VolumeAdjustment>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_VolumeAdjustment>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass30_0
#include "VivoxUnity/Private/AudioOutputDevices_--c__DisplayClass30_0.hpp"
// Including type: vx_req_connector_mute_local_speaker_t
#include "GlobalNamespace/vx_req_connector_mute_local_speaker_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.AudioOutputDevices <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioOutputDevices*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass30_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass30_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioOutputDevices**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_connector_mute_local_speaker_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_connector_mute_local_speaker_t*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass30_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass30_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_connector_mute_local_speaker_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass30_0.<set_Muted>b__0
void VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass30_0::$set_Muted$b__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass30_0::<set_Muted>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_Muted>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass31_0
#include "VivoxUnity/Private/AudioOutputDevices_--c__DisplayClass31_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_aux_get_render_devices_t
#include "GlobalNamespace/vx_req_aux_get_render_devices_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.AudioOutputDevices <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::AudioOutputDevices*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass31_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass31_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::AudioOutputDevices**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult result
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass31_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass31_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_aux_get_render_devices_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_aux_get_render_devices_t*& VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass31_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass31_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_aux_get_render_devices_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.AudioOutputDevices/<>c__DisplayClass31_0.<BeginRefresh>b__0
void VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass31_0::$BeginRefresh$b__0(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::AudioOutputDevices::$$c__DisplayClass31_0::<BeginRefresh>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginRefresh>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelParticipant
#include "VivoxUnity/Private/ChannelParticipant.hpp"
// Including type: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass24_0
#include "VivoxUnity/Private/ChannelParticipant_--c__DisplayClass24_0.hpp"
// Including type: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass39_0
#include "VivoxUnity/Private/ChannelParticipant_--c__DisplayClass39_0.hpp"
// Including type: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass39_1
#include "VivoxUnity/Private/ChannelParticipant_--c__DisplayClass39_1.hpp"
// Including type: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass42_0
#include "VivoxUnity/Private/ChannelParticipant_--c__DisplayClass42_0.hpp"
// Including type: VivoxUnity.Private.ChannelSession
#include "VivoxUnity/Private/ChannelSession.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: vx_evt_participant_added_t
#include "GlobalNamespace/vx_evt_participant_added_t.hpp"
// Including type: VivoxUnity.IChannelSession
#include "VivoxUnity/IChannelSession.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Private.ChannelSession _parent
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession*& VivoxUnity::Private::ChannelParticipant::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _speechDetected
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelParticipant::dyn__speechDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn__speechDetected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speechDetected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isTyping
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelParticipant::dyn__isTyping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn__isTyping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isTyping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _textActive
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelParticipant::dyn__textActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn__textActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _audioActive
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelParticipant::dyn__audioActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn__audioActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _audioEnergy
[[deprecated("Use field access instead!")]] double& VivoxUnity::Private::ChannelParticipant::dyn__audioEnergy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn__audioEnergy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioEnergy"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isMutedForEveryone
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelParticipant::dyn__isMutedForEveryone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn__isMutedForEveryone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMutedForEveryone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _localMute
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelParticipant::dyn__localMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn__localMute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localMute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _localVolumeAdjustment
[[deprecated("Use field access instead!")]] int& VivoxUnity::Private::ChannelParticipant::dyn__localVolumeAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn__localVolumeAdjustment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localVolumeAdjustment"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::ChannelParticipant::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <IsSelf>k__BackingField
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelParticipant::dyn_$IsSelf$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn_$IsSelf$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsSelf>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.AccountId <Account>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::ChannelParticipant::dyn_$Account$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn_$Account$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Account>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ChannelParticipant::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get__internalMute
bool VivoxUnity::Private::ChannelParticipant::get__internalMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get__internalMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__internalMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.set__internalMute
void VivoxUnity::Private::ChannelParticipant::set__internalMute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::set__internalMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set__internalMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get__internalVolumeAdjustment
int VivoxUnity::Private::ChannelParticipant::get__internalVolumeAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get__internalVolumeAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__internalVolumeAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.set__internalVolumeAdjustment
void VivoxUnity::Private::ChannelParticipant::set__internalVolumeAdjustment(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::set__internalVolumeAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set__internalVolumeAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.add_PropertyChanged
void VivoxUnity::Private::ChannelParticipant::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.remove_PropertyChanged
void VivoxUnity::Private::ChannelParticipant::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_ParentChannelSession
::VivoxUnity::IChannelSession* VivoxUnity::Private::ChannelParticipant::get_ParentChannelSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_ParentChannelSession");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IChannelSession*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_IsSelf
bool VivoxUnity::Private::ChannelParticipant::get_IsSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_IsSelf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.SetIsMuteForAll
::System::IAsyncResult* VivoxUnity::Private::ChannelParticipant::SetIsMuteForAll(::StringW accountHandle, bool setMuted, ::StringW accessToken, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::SetIsMuteForAll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, accountHandle, setMuted, accessToken, callback);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_Account
::VivoxUnity::AccountId* VivoxUnity::Private::ChannelParticipant::get_Account() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_Account");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_Key
::StringW VivoxUnity::Private::ChannelParticipant::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_SpeechDetected
bool VivoxUnity::Private::ChannelParticipant::get_SpeechDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_SpeechDetected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.set_SpeechDetected
void VivoxUnity::Private::ChannelParticipant::set_SpeechDetected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::set_SpeechDetected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SpeechDetected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_IsMutedForAll
bool VivoxUnity::Private::ChannelParticipant::get_IsMutedForAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_IsMutedForAll");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.set_IsMutedForAll
void VivoxUnity::Private::ChannelParticipant::set_IsMutedForAll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::set_IsMutedForAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsMutedForAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_LocalMute
bool VivoxUnity::Private::ChannelParticipant::get_LocalMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_LocalMute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.set_LocalMute
void VivoxUnity::Private::ChannelParticipant::set_LocalMute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::set_LocalMute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_LocalVolumeAdjustment
int VivoxUnity::Private::ChannelParticipant::get_LocalVolumeAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_LocalVolumeAdjustment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.set_LocalVolumeAdjustment
void VivoxUnity::Private::ChannelParticipant::set_LocalVolumeAdjustment(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::set_LocalVolumeAdjustment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_IsTyping
bool VivoxUnity::Private::ChannelParticipant::get_IsTyping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_IsTyping");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.set_IsTyping
void VivoxUnity::Private::ChannelParticipant::set_IsTyping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::set_IsTyping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsTyping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_InText
bool VivoxUnity::Private::ChannelParticipant::get_InText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_InText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.set_InText
void VivoxUnity::Private::ChannelParticipant::set_InText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::set_InText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_InAudio
bool VivoxUnity::Private::ChannelParticipant::get_InAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_InAudio");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.set_InAudio
void VivoxUnity::Private::ChannelParticipant::set_InAudio(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::set_InAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_AudioEnergy
double VivoxUnity::Private::ChannelParticipant::get_AudioEnergy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_AudioEnergy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 15));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.set_AudioEnergy
void VivoxUnity::Private::ChannelParticipant::set_AudioEnergy(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::set_AudioEnergy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioEnergy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant.get_ParticipantId
::StringW VivoxUnity::Private::ChannelParticipant::get_ParticipantId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::get_ParticipantId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelParticipant*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass24_0
#include "VivoxUnity/Private/ChannelParticipant_--c__DisplayClass24_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_channel_mute_user_t
#include "GlobalNamespace/vx_req_channel_mute_user_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass24_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass24_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_channel_mute_user_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_channel_mute_user_t*& VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass24_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass24_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_channel_mute_user_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass24_0.<SetIsMuteForAll>b__0
void VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass24_0::$SetIsMuteForAll$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass24_0::<SetIsMuteForAll>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetIsMuteForAll>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass39_0
#include "VivoxUnity/Private/ChannelParticipant_--c__DisplayClass39_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelParticipant <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelParticipant*& VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelParticipant**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean value
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_0::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_0::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass39_1
#include "VivoxUnity/Private/ChannelParticipant_--c__DisplayClass39_1.hpp"
// Including type: vx_req_session_set_participant_mute_for_me_t
#include "GlobalNamespace/vx_req_session_set_participant_mute_for_me_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass39_0
#include "VivoxUnity/Private/ChannelParticipant_--c__DisplayClass39_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_session_set_participant_mute_for_me_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_set_participant_mute_for_me_t*& VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_1::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_1::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_set_participant_mute_for_me_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass39_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_0*& VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass39_1.<set_LocalMute>b__0
void VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_1::$set_LocalMute$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass39_1::<set_LocalMute>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_LocalMute>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass42_0
#include "VivoxUnity/Private/ChannelParticipant_--c__DisplayClass42_0.hpp"
// Including type: vx_req_session_set_participant_volume_for_me_t
#include "GlobalNamespace/vx_req_session_set_participant_volume_for_me_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_session_set_participant_volume_for_me_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_set_participant_volume_for_me_t*& VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass42_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass42_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_set_participant_volume_for_me_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelParticipant <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelParticipant*& VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass42_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass42_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelParticipant**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelParticipant/<>c__DisplayClass42_0.<set_LocalVolumeAdjustment>b__0
void VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass42_0::$set_LocalVolumeAdjustment$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelParticipant::$$c__DisplayClass42_0::<set_LocalVolumeAdjustment>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_LocalVolumeAdjustment>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VivoxUnity.Private.ChannelSession
#include "VivoxUnity/Private/ChannelSession.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass31_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass31_0.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass33_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass33_0.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass33_1
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass33_1.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass34_0.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_1
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass34_1.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_2
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass34_2.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass36_0.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_1
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass36_1.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_2
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass36_2.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass58_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass58_0.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass58_1
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass58_1.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass60_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass60_0.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass66_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass66_0.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass77_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass77_0.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass82_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass82_0.hpp"
// Including type: VivoxUnity.Private.LoginSession
#include "VivoxUnity/Private/LoginSession.hpp"
// Including type: VivoxUnity.Common.ReadWriteDictionary`3
#include "VivoxUnity/Common/ReadWriteDictionary_3.hpp"
// Including type: VivoxUnity.IParticipant
#include "VivoxUnity/IParticipant.hpp"
// Including type: VivoxUnity.Private.ChannelParticipant
#include "VivoxUnity/Private/ChannelParticipant.hpp"
// Including type: VivoxUnity.Common.ReadWriteQueue`1
#include "VivoxUnity/Common/ReadWriteQueue_1.hpp"
// Including type: VivoxUnity.IChannelTextMessage
#include "VivoxUnity/IChannelTextMessage.hpp"
// Including type: VivoxUnity.ISessionArchiveMessage
#include "VivoxUnity/ISessionArchiveMessage.hpp"
// Including type: VivoxUnity.ITranscribedMessage
#include "VivoxUnity/ITranscribedMessage.hpp"
// Including type: VivoxUnity.Private.ArchiveQueryResult
#include "VivoxUnity/Private/ArchiveQueryResult.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: VivoxUnity.ChannelId
#include "VivoxUnity/ChannelId.hpp"
// Including type: vx_evt_base_t
#include "GlobalNamespace/vx_evt_base_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: VivoxUnity.ILoginSession
#include "VivoxUnity/ILoginSession.hpp"
// Including type: VivoxUnity.IReadOnlyDictionary`2
#include "VivoxUnity/IReadOnlyDictionary_2.hpp"
// Including type: VivoxUnity.IReadOnlyQueue`1
#include "VivoxUnity/IReadOnlyQueue_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.IArchiveQueryResult
#include "VivoxUnity/IArchiveQueryResult.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.ComponentModel.PropertyChangedEventArgs
#include "System/ComponentModel/PropertyChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Private.LoginSession _loginSession
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::ChannelSession::dyn__loginSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__loginSession");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loginSession"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _sessionHandle
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ChannelSession::dyn__sessionHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__sessionHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sessionHandle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _typing
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelSession::dyn__typing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__typing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isSessionBeingTranscribed
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelSession::dyn__isSessionBeingTranscribed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__isSessionBeingTranscribed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSessionBeingTranscribed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteDictionary`3<System.String,VivoxUnity.IParticipant,VivoxUnity.Private.ChannelParticipant> _participants
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteDictionary_3<::StringW, ::VivoxUnity::IParticipant*, ::VivoxUnity::Private::ChannelParticipant*>*& VivoxUnity::Private::ChannelSession::dyn__participants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__participants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_participants"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteDictionary_3<::StringW, ::VivoxUnity::IParticipant*, ::VivoxUnity::Private::ChannelParticipant*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteQueue`1<VivoxUnity.IChannelTextMessage> _messageLog
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::IChannelTextMessage*>*& VivoxUnity::Private::ChannelSession::dyn__messageLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__messageLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messageLog"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::IChannelTextMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteQueue`1<VivoxUnity.ISessionArchiveMessage> _sessionArchive
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::ISessionArchiveMessage*>*& VivoxUnity::Private::ChannelSession::dyn__sessionArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__sessionArchive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sessionArchive"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::ISessionArchiveMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteQueue`1<VivoxUnity.ITranscribedMessage> _transcribedLog
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::ITranscribedMessage*>*& VivoxUnity::Private::ChannelSession::dyn__transcribedLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__transcribedLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transcribedLog"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::ITranscribedMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.ArchiveQueryResult _sessionArchiveResult
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ArchiveQueryResult*& VivoxUnity::Private::ChannelSession::dyn__sessionArchiveResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__sessionArchiveResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sessionArchiveResult"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ArchiveQueryResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.ConnectionState _audioState
[[deprecated("Use field access instead!")]] ::VivoxUnity::ConnectionState& VivoxUnity::Private::ChannelSession::dyn__audioState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__audioState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioState"))->offset;
  return *reinterpret_cast<::VivoxUnity::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.ConnectionState _textState
[[deprecated("Use field access instead!")]] ::VivoxUnity::ConnectionState& VivoxUnity::Private::ChannelSession::dyn__textState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__textState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textState"))->offset;
  return *reinterpret_cast<::VivoxUnity::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nextTextId
[[deprecated("Use field access instead!")]] int& VivoxUnity::Private::ChannelSession::dyn__nextTextId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__nextTextId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextTextId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nextTranscriptiontId
[[deprecated("Use field access instead!")]] int& VivoxUnity::Private::ChannelSession::dyn__nextTranscriptiontId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__nextTranscriptiontId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextTranscriptiontId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _deleted
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelSession::dyn__deleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn__deleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deleted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::ChannelSession::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <GroupId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::ChannelSession::dyn_$GroupId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn_$GroupId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GroupId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.ChannelId <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::ChannelId*& VivoxUnity::Private::ChannelSession::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::ChannelId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.add_PropertyChanged
void VivoxUnity::Private::ChannelSession::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.remove_PropertyChanged
void VivoxUnity::Private::ChannelSession::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.AlreadyDone
bool VivoxUnity::Private::ChannelSession::AlreadyDone(bool connect, ::VivoxUnity::ConnectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::AlreadyDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlreadyDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connect), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, connect, state);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.AssertSessionNotDeleted
void VivoxUnity::Private::ChannelSession::AssertSessionNotDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::AssertSessionNotDeleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertSessionNotDeleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.InstanceOnEventMessageReceived
void VivoxUnity::Private::ChannelSession::InstanceOnEventMessageReceived(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::InstanceOnEventMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstanceOnEventMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.HandleParticipantAdded
void VivoxUnity::Private::ChannelSession::HandleParticipantAdded(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::HandleParticipantAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleParticipantAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.HandleParticipantRemoved
void VivoxUnity::Private::ChannelSession::HandleParticipantRemoved(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::HandleParticipantRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleParticipantRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.HandleParticipantUpdated
void VivoxUnity::Private::ChannelSession::HandleParticipantUpdated(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::HandleParticipantUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleParticipantUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.HandleMediaStreamUpdated
void VivoxUnity::Private::ChannelSession::HandleMediaStreamUpdated(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::HandleMediaStreamUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMediaStreamUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.HandleTextStreamUpdated
void VivoxUnity::Private::ChannelSession::HandleTextStreamUpdated(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::HandleTextStreamUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTextStreamUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.HandleSessionRemoved
void VivoxUnity::Private::ChannelSession::HandleSessionRemoved(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::HandleSessionRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSessionRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.HandleSessionMessage
void VivoxUnity::Private::ChannelSession::HandleSessionMessage(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::HandleSessionMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSessionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.HandleSessionArchiveMessage
void VivoxUnity::Private::ChannelSession::HandleSessionArchiveMessage(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::HandleSessionArchiveMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSessionArchiveMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.HandleSessionArchiveQueryEnd
void VivoxUnity::Private::ChannelSession::HandleSessionArchiveQueryEnd(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::HandleSessionArchiveQueryEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSessionArchiveQueryEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.HandleSessionTranscribedMessage
void VivoxUnity::Private::ChannelSession::HandleSessionTranscribedMessage(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::HandleSessionTranscribedMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSessionTranscribedMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.BeginConnect
::System::IAsyncResult* VivoxUnity::Private::ChannelSession::BeginConnect(bool connectAudio, bool connectText, bool switchTransmission, ::StringW accessToken, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::BeginConnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, connectAudio, connectText, switchTransmission, accessToken, callback);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.EndConnect
void VivoxUnity::Private::ChannelSession::EndConnect(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::EndConnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.Disconnect
::System::IAsyncResult* VivoxUnity::Private::ChannelSession::Disconnect(::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::Disconnect");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.BeginSetAudioConnected
::System::IAsyncResult* VivoxUnity::Private::ChannelSession::BeginSetAudioConnected(bool value, bool switchTransmission, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::BeginSetAudioConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, value, switchTransmission, callback);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.EndSetAudioConnected
void VivoxUnity::Private::ChannelSession::EndSetAudioConnected(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::EndSetAudioConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.BeginSetTextConnected
::System::IAsyncResult* VivoxUnity::Private::ChannelSession::BeginSetTextConnected(bool value, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::BeginSetTextConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, value, callback);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.EndSetTextConnected
void VivoxUnity::Private::ChannelSession::EndSetTextConnected(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::EndSetTextConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_SessionHandle
::StringW VivoxUnity::Private::ChannelSession::get_SessionHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_SessionHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_Parent
::VivoxUnity::ILoginSession* VivoxUnity::Private::ChannelSession::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_Parent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ILoginSession*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_GroupId
::StringW VivoxUnity::Private::ChannelSession::get_GroupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_GroupId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GroupId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_Key
::VivoxUnity::ChannelId* VivoxUnity::Private::ChannelSession::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ChannelId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_AudioState
::VivoxUnity::ConnectionState VivoxUnity::Private::ChannelSession::get_AudioState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_AudioState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.set_AudioState
void VivoxUnity::Private::ChannelSession::set_AudioState(::VivoxUnity::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::set_AudioState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_TextState
::VivoxUnity::ConnectionState VivoxUnity::Private::ChannelSession::get_TextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_TextState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.set_TextState
void VivoxUnity::Private::ChannelSession::set_TextState(::VivoxUnity::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::set_TextState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TextState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_Participants
::VivoxUnity::IReadOnlyDictionary_2<::StringW, ::VivoxUnity::IParticipant*>* VivoxUnity::Private::ChannelSession::get_Participants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_Participants");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyDictionary_2<::StringW, ::VivoxUnity::IParticipant*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_Typing
bool VivoxUnity::Private::ChannelSession::get_Typing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_Typing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.set_Typing
void VivoxUnity::Private::ChannelSession::set_Typing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::set_Typing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.BeginSendText
::System::IAsyncResult* VivoxUnity::Private::ChannelSession::BeginSendText(::StringW message, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::BeginSendText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, message, callback);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.BeginSendText
::System::IAsyncResult* VivoxUnity::Private::ChannelSession::BeginSendText(::StringW language, ::StringW message, ::StringW applicationStanzaNamespace, ::StringW applicationStanzaBody, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::BeginSendText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, language, message, applicationStanzaNamespace, applicationStanzaBody, callback);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.EndSendText
void VivoxUnity::Private::ChannelSession::EndSendText(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::EndSendText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_MessageLog
::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IChannelTextMessage*>* VivoxUnity::Private::ChannelSession::get_MessageLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_MessageLog");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IChannelTextMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_TranscribedLog
::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::ITranscribedMessage*>* VivoxUnity::Private::ChannelSession::get_TranscribedLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_TranscribedLog");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::ITranscribedMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.BeginSessionArchiveQuery
::System::IAsyncResult* VivoxUnity::Private::ChannelSession::BeginSessionArchiveQuery(::System::Nullable_1<::System::DateTime> timeStart, ::System::Nullable_1<::System::DateTime> timeEnd, ::StringW searchText, ::VivoxUnity::AccountId* userId, uint max, ::StringW afterId, ::StringW beforeId, int firstMessageIndex, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::BeginSessionArchiveQuery");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, timeStart, timeEnd, searchText, userId, max, afterId, beforeId, firstMessageIndex, callback);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.EndSessionArchiveQuery
void VivoxUnity::Private::ChannelSession::EndSessionArchiveQuery(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::EndSessionArchiveQuery");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_SessionArchive
::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::ISessionArchiveMessage*>* VivoxUnity::Private::ChannelSession::get_SessionArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_SessionArchive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::ISessionArchiveMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_SessionArchiveResult
::VivoxUnity::IArchiveQueryResult* VivoxUnity::Private::ChannelSession::get_SessionArchiveResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_SessionArchiveResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IArchiveQueryResult*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.GetConnectToken
::StringW VivoxUnity::Private::ChannelSession::GetConnectToken(::StringW key, ::System::TimeSpan expiration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::GetConnectToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key, expiration);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_IsTransmitting
bool VivoxUnity::Private::ChannelSession::get_IsTransmitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_IsTransmitting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_IsSessionBeingTranscribed
bool VivoxUnity::Private::ChannelSession::get_IsSessionBeingTranscribed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_IsSessionBeingTranscribed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.BeginSetChannelTranscription
::System::IAsyncResult* VivoxUnity::Private::ChannelSession::BeginSetChannelTranscription(bool value, ::StringW accessToken, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::BeginSetChannelTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, value, accessToken, callback);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.EndSetChannelTranscription
void VivoxUnity::Private::ChannelSession::EndSetChannelTranscription(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::EndSetChannelTranscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.GetTranscriptionToken
::StringW VivoxUnity::Private::ChannelSession::GetTranscriptionToken(::StringW tokenSigningKey, ::System::TimeSpan tokenExpirationDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::GetTranscriptionToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, tokenSigningKey, tokenExpirationDuration);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.get_Channel
::VivoxUnity::ChannelId* VivoxUnity::Private::ChannelSession::get_Channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::get_Channel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ChannelId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.Set3DPosition
void VivoxUnity::Private::ChannelSession::Set3DPosition(::UnityEngine::Vector3 speakerPos, ::UnityEngine::Vector3 listenerPos, ::UnityEngine::Vector3 listenerAtOrient, ::UnityEngine::Vector3 listenerUpOrient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::Set3DPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::ChannelSession*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speakerPos, listenerPos, listenerAtOrient, listenerUpOrient);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.Delete
void VivoxUnity::Private::ChannelSession::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession.<.ctor>b__19_0
void VivoxUnity::Private::ChannelSession::$_ctor$b__19_0(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangedEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::<.ctor>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass31_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass31_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_sessiongroup_add_session_t
#include "GlobalNamespace/vx_req_sessiongroup_add_session_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass31_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass31_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_sessiongroup_add_session_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_sessiongroup_add_session_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass31_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass31_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_sessiongroup_add_session_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass31_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass31_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass31_0.<BeginConnect>b__0
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass31_0::$BeginConnect$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass31_0::<BeginConnect>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginConnect>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass33_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass33_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass33_1
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass33_1.hpp"
// Including type: vx_req_sessiongroup_remove_session_t
#include "GlobalNamespace/vx_req_sessiongroup_remove_session_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass33_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass33_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_sessiongroup_remove_session_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_sessiongroup_remove_session_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_1::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_1::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_sessiongroup_remove_session_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession/<>c__DisplayClass33_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_0*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass33_1.<Disconnect>b__0
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_1::$Disconnect$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass33_1::<Disconnect>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Disconnect>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass34_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_1
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass34_1.hpp"
// Including type: vx_req_session_media_connect_t
#include "GlobalNamespace/vx_req_session_media_connect_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass34_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_session_media_connect_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_media_connect_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_1::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_1::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_media_connect_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_0*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_1.<BeginSetAudioConnected>b__0
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_1::$BeginSetAudioConnected$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_1::<BeginSetAudioConnected>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSetAudioConnected>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_2
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass34_2.hpp"
// Including type: vx_req_session_media_disconnect_t
#include "GlobalNamespace/vx_req_session_media_disconnect_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass34_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_session_media_disconnect_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_media_disconnect_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_2::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_2::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_media_disconnect_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_0 CS$<>8__locals2
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_0*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_2::dyn_CS$$$8__locals2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_2::dyn_CS$$$8__locals2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals2"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass34_2.<BeginSetAudioConnected>b__1
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_2::$BeginSetAudioConnected$b__1(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass34_2::<BeginSetAudioConnected>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSetAudioConnected>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass36_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_1
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass36_1.hpp"
// Including type: vx_req_session_text_connect_t
#include "GlobalNamespace/vx_req_session_text_connect_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass36_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_session_text_connect_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_text_connect_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_1::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_1::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_text_connect_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_0*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_1.<BeginSetTextConnected>b__0
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_1::$BeginSetTextConnected$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_1::<BeginSetTextConnected>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSetTextConnected>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_2
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass36_2.hpp"
// Including type: vx_req_session_text_disconnect_t
#include "GlobalNamespace/vx_req_session_text_disconnect_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass36_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_session_text_disconnect_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_text_disconnect_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_2::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_2::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_text_disconnect_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_0 CS$<>8__locals2
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_0*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_2::dyn_CS$$$8__locals2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_2::dyn_CS$$$8__locals2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals2"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass36_2.<BeginSetTextConnected>b__1
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_2::$BeginSetTextConnected$b__1(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass36_2::<BeginSetTextConnected>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSetTextConnected>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass58_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass58_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean value
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_0::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_0::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass58_1
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass58_1.hpp"
// Including type: vx_req_session_send_notification_t
#include "GlobalNamespace/vx_req_session_send_notification_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass58_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass58_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_session_send_notification_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_send_notification_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_1::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_1::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_send_notification_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession/<>c__DisplayClass58_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_0*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass58_1.<set_Typing>b__0
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_1::$set_Typing$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_1::<set_Typing>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_Typing>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass60_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass60_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_session_send_message_t
#include "GlobalNamespace/vx_req_session_send_message_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass60_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass60_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_session_send_message_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_send_message_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass60_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass60_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_send_message_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass60_0.<BeginSendText>b__0
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass60_0::$BeginSendText$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass60_0::<BeginSendText>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSendText>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass66_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass66_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_session_archive_query_t
#include "GlobalNamespace/vx_req_session_archive_query_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass66_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass66_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass66_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass66_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_session_archive_query_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_archive_query_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass66_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass66_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_archive_query_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass66_0.<BeginSessionArchiveQuery>b__0
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass66_0::$BeginSessionArchiveQuery$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass66_0::<BeginSessionArchiveQuery>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSessionArchiveQuery>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass77_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass77_0.hpp"
// Including type: vx_req_session_transcription_control_t
#include "GlobalNamespace/vx_req_session_transcription_control_t.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.ChannelSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass77_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass77_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ChannelSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_session_transcription_control_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_transcription_control_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass77_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass77_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_transcription_control_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass77_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass77_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass77_0.<BeginSetChannelTranscription>b__0
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass77_0::$BeginSetChannelTranscription$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass77_0::<BeginSetChannelTranscription>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSetChannelTranscription>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass82_0
#include "VivoxUnity/Private/ChannelSession_--c__DisplayClass82_0.hpp"
// Including type: vx_req_session_set_3d_position_t
#include "GlobalNamespace/vx_req_session_set_3d_position_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public vx_req_session_set_3d_position_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_session_set_3d_position_t*& VivoxUnity::Private::ChannelSession::$$c__DisplayClass82_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass82_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_session_set_3d_position_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.ChannelSession/<>c__DisplayClass82_0.<Set3DPosition>b__0
void VivoxUnity::Private::ChannelSession::$$c__DisplayClass82_0::$Set3DPosition$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass82_0::<Set3DPosition>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Set3DPosition>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.DirectedMessageResult
#include "VivoxUnity/Private/DirectedMessageResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <RequestId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::DirectedMessageResult::dyn_$RequestId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedMessageResult::dyn_$RequestId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.DirectedMessageResult.get_RequestId
::StringW VivoxUnity::Private::DirectedMessageResult::get_RequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedMessageResult::get_RequestId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::DirectedMessageResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.DirectedMessageResult.set_RequestId
void VivoxUnity::Private::DirectedMessageResult::set_RequestId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedMessageResult::set_RequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession
#include "VivoxUnity/Private/LoginSession.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass70_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass70_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass70_1
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass70_1.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass85_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass85_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass87_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass87_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass89_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass89_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass93_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass93_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c
#include "VivoxUnity/Private/LoginSession_--c.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass94_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass94_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass95_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass95_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass97_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass97_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass99_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass99_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass102_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass102_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass104_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass104_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass106_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass106_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass106_1
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass106_1.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass106_2
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass106_2.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass108_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass108_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass110_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass110_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass112_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass112_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass114_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass114_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass115_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass115_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass116_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass116_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass117_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass117_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass125_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass125_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass126_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass126_0.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass127_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass127_0.hpp"
// Including type: VivoxUnity.Client
#include "VivoxUnity/Client.hpp"
// Including type: VivoxUnity.Common.ReadWriteDictionary`3
#include "VivoxUnity/Common/ReadWriteDictionary_3.hpp"
// Including type: VivoxUnity.ChannelId
#include "VivoxUnity/ChannelId.hpp"
// Including type: VivoxUnity.IChannelSession
#include "VivoxUnity/IChannelSession.hpp"
// Including type: VivoxUnity.Private.ChannelSession
#include "VivoxUnity/Private/ChannelSession.hpp"
// Including type: VivoxUnity.Common.ReadWriteHashSet`1
#include "VivoxUnity/Common/ReadWriteHashSet_1.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.IPresenceSubscription
#include "VivoxUnity/IPresenceSubscription.hpp"
// Including type: VivoxUnity.Private.PresenceSubscription
#include "VivoxUnity/Private/PresenceSubscription.hpp"
// Including type: VivoxUnity.Common.ReadWriteQueue`1
#include "VivoxUnity/Common/ReadWriteQueue_1.hpp"
// Including type: VivoxUnity.IDirectedTextMessage
#include "VivoxUnity/IDirectedTextMessage.hpp"
// Including type: VivoxUnity.IFailedDirectedTextMessage
#include "VivoxUnity/IFailedDirectedTextMessage.hpp"
// Including type: VivoxUnity.IAccountArchiveMessage
#include "VivoxUnity/IAccountArchiveMessage.hpp"
// Including type: VivoxUnity.Private.DirectedMessageResult
#include "VivoxUnity/Private/DirectedMessageResult.hpp"
// Including type: VivoxUnity.Private.ArchiveQueryResult
#include "VivoxUnity/Private/ArchiveQueryResult.hpp"
// Including type: VivoxUnity.ITextToSpeech
#include "VivoxUnity/ITextToSpeech.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: vx_evt_base_t
#include "GlobalNamespace/vx_evt_base_t.hpp"
// Including type: VivoxUnity.IReadOnlyDictionary`2
#include "VivoxUnity/IReadOnlyDictionary_2.hpp"
// Including type: VivoxUnity.IReadOnlyQueue`1
#include "VivoxUnity/IReadOnlyQueue_1.hpp"
// Including type: VivoxUnity.IArchiveQueryResult
#include "VivoxUnity/IArchiveQueryResult.hpp"
// Including type: VivoxUnity.IDirectedMessageResult
#include "VivoxUnity/IDirectedMessageResult.hpp"
// Including type: VivoxUnity.IReadOnlyHashSet`1
#include "VivoxUnity/IReadOnlyHashSet_1.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: vx_control_communications_operation
#include "GlobalNamespace/vx_control_communications_operation.hpp"
// Including type: vx_mute_scope
#include "GlobalNamespace/vx_mute_scope.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: vx_resp_account_control_communications_t
#include "GlobalNamespace/vx_resp_account_control_communications_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _accountHandle
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::LoginSession::dyn__accountHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__accountHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accountHandle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _groupHandle
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::LoginSession::dyn__groupHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__groupHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupHandle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Client _client
[[deprecated("Use field access instead!")]] ::VivoxUnity::Client*& VivoxUnity::Private::LoginSession::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::VivoxUnity::Client**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.LoginState _state
[[deprecated("Use field access instead!")]] ::VivoxUnity::LoginState& VivoxUnity::Private::LoginSession::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::VivoxUnity::LoginState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.TransmissionMode _transmissionType
[[deprecated("Use field access instead!")]] ::VivoxUnity::TransmissionMode& VivoxUnity::Private::LoginSession::dyn__transmissionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__transmissionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transmissionType"))->offset;
  return *reinterpret_cast<::VivoxUnity::TransmissionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInjectingAudio
[[deprecated("Use field access instead!")]] bool& VivoxUnity::Private::LoginSession::dyn__isInjectingAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__isInjectingAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInjectingAudio"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteDictionary`3<VivoxUnity.ChannelId,VivoxUnity.IChannelSession,VivoxUnity.Private.ChannelSession> _channelSessions
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteDictionary_3<::VivoxUnity::ChannelId*, ::VivoxUnity::IChannelSession*, ::VivoxUnity::Private::ChannelSession*>*& VivoxUnity::Private::LoginSession::dyn__channelSessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__channelSessions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_channelSessions"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteDictionary_3<::VivoxUnity::ChannelId*, ::VivoxUnity::IChannelSession*, ::VivoxUnity::Private::ChannelSession*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.ChannelId _transmittingChannel
[[deprecated("Use field access instead!")]] ::VivoxUnity::ChannelId*& VivoxUnity::Private::LoginSession::dyn__transmittingChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__transmittingChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transmittingChannel"))->offset;
  return *reinterpret_cast<::VivoxUnity::ChannelId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteHashSet`1<VivoxUnity.AccountId> _blockedSubscriptions
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteHashSet_1<::VivoxUnity::AccountId*>*& VivoxUnity::Private::LoginSession::dyn__blockedSubscriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__blockedSubscriptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockedSubscriptions"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteHashSet_1<::VivoxUnity::AccountId*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteHashSet`1<VivoxUnity.AccountId> _allowedSubscriptions
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteHashSet_1<::VivoxUnity::AccountId*>*& VivoxUnity::Private::LoginSession::dyn__allowedSubscriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__allowedSubscriptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowedSubscriptions"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteHashSet_1<::VivoxUnity::AccountId*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteDictionary`3<VivoxUnity.AccountId,VivoxUnity.IPresenceSubscription,VivoxUnity.Private.PresenceSubscription> _presenceSubscriptions
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteDictionary_3<::VivoxUnity::AccountId*, ::VivoxUnity::IPresenceSubscription*, ::VivoxUnity::Private::PresenceSubscription*>*& VivoxUnity::Private::LoginSession::dyn__presenceSubscriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__presenceSubscriptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presenceSubscriptions"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteDictionary_3<::VivoxUnity::AccountId*, ::VivoxUnity::IPresenceSubscription*, ::VivoxUnity::Private::PresenceSubscription*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Presence _presence
[[deprecated("Use field access instead!")]] ::VivoxUnity::Presence& VivoxUnity::Private::LoginSession::dyn__presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__presence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presence"))->offset;
  return *reinterpret_cast<::VivoxUnity::Presence*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteQueue`1<VivoxUnity.IDirectedTextMessage> _directedMessages
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::IDirectedTextMessage*>*& VivoxUnity::Private::LoginSession::dyn__directedMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__directedMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directedMessages"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::IDirectedTextMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteQueue`1<VivoxUnity.IFailedDirectedTextMessage> _failedDirectedMessages
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::IFailedDirectedTextMessage*>*& VivoxUnity::Private::LoginSession::dyn__failedDirectedMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__failedDirectedMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failedDirectedMessages"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::IFailedDirectedTextMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteQueue`1<VivoxUnity.IAccountArchiveMessage> _accountArchive
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::IAccountArchiveMessage*>*& VivoxUnity::Private::LoginSession::dyn__accountArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__accountArchive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accountArchive"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::IAccountArchiveMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime lastMessageTime
[[deprecated("Use field access instead!")]] ::System::DateTime& VivoxUnity::Private::LoginSession::dyn_lastMessageTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn_lastMessageTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastMessageTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.DirectedMessageResult _directedMessageResult
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::DirectedMessageResult*& VivoxUnity::Private::LoginSession::dyn__directedMessageResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__directedMessageResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directedMessageResult"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::DirectedMessageResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Private.ArchiveQueryResult _accountArchiveResult
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ArchiveQueryResult*& VivoxUnity::Private::LoginSession::dyn__accountArchiveResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__accountArchiveResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accountArchiveResult"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::ArchiveQueryResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.Common.ReadWriteHashSet`1<VivoxUnity.AccountId> _crossMutedCommunications
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteHashSet_1<::VivoxUnity::AccountId*>*& VivoxUnity::Private::LoginSession::dyn__crossMutedCommunications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__crossMutedCommunications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crossMutedCommunications"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteHashSet_1<::VivoxUnity::AccountId*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.Common.ReadWriteQueue`1<VivoxUnity.AccountId> _incomingSubscriptionRequests
[[deprecated("Use field access instead!")]] ::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::AccountId*>*& VivoxUnity::Private::LoginSession::dyn__incomingSubscriptionRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__incomingSubscriptionRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_incomingSubscriptionRequests"))->offset;
  return *reinterpret_cast<::VivoxUnity::Common::ReadWriteQueue_1<::VivoxUnity::AccountId*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VivoxUnity.ParticipantPropertyUpdateFrequency _participantPropertyFrequency
[[deprecated("Use field access instead!")]] ::VivoxUnity::ParticipantPropertyUpdateFrequency& VivoxUnity::Private::LoginSession::dyn__participantPropertyFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__participantPropertyFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_participantPropertyFrequency"))->offset;
  return *reinterpret_cast<::VivoxUnity::ParticipantPropertyUpdateFrequency*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.ITextToSpeech _ttsSubSystem
[[deprecated("Use field access instead!")]] ::VivoxUnity::ITextToSpeech*& VivoxUnity::Private::LoginSession::dyn__ttsSubSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn__ttsSubSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ttsSubSystem"))->offset;
  return *reinterpret_cast<::VivoxUnity::ITextToSpeech**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& VivoxUnity::Private::LoginSession::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VivoxUnity.AccountId <Key>k__BackingField
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::LoginSession::dyn_$Key$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::dyn_$Key$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Key>k__BackingField"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.add_PropertyChanged
void VivoxUnity::Private::LoginSession::add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::add_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 58));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.remove_PropertyChanged
void VivoxUnity::Private::LoginSession::remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::remove_PropertyChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.Instance_EventMessageReceived
void VivoxUnity::Private::LoginSession::Instance_EventMessageReceived(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::Instance_EventMessageReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Instance_EventMessageReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.HandleMediaComplete
void VivoxUnity::Private::LoginSession::HandleMediaComplete(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::HandleMediaComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMediaComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.HandleBuddyPresenceEvt
void VivoxUnity::Private::LoginSession::HandleBuddyPresenceEvt(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::HandleBuddyPresenceEvt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBuddyPresenceEvt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.HandleUserToUserMessage
void VivoxUnity::Private::LoginSession::HandleUserToUserMessage(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::HandleUserToUserMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUserToUserMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.HandleAccountLoginStateChangeEvt
void VivoxUnity::Private::LoginSession::HandleAccountLoginStateChangeEvt(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::HandleAccountLoginStateChangeEvt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAccountLoginStateChangeEvt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.HandleSubscription
void VivoxUnity::Private::LoginSession::HandleSubscription(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::HandleSubscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSubscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.HandleAccountArchiveMessage
void VivoxUnity::Private::LoginSession::HandleAccountArchiveMessage(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::HandleAccountArchiveMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAccountArchiveMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.HandleAccountArchiveQueryEnd
void VivoxUnity::Private::LoginSession::HandleAccountArchiveQueryEnd(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::HandleAccountArchiveQueryEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAccountArchiveQueryEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.HandleAccountSendMessageFailed
void VivoxUnity::Private::LoginSession::HandleAccountSendMessageFailed(::GlobalNamespace::vx_evt_base_t* eventMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::HandleAccountSendMessageFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAccountSendMessageFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventMessage);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_AccountHandle
::StringW VivoxUnity::Private::LoginSession::get_AccountHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_AccountHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AccountHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_LoginSessionId
::VivoxUnity::AccountId* VivoxUnity::Private::LoginSession::get_LoginSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_LoginSessionId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_TTS
::VivoxUnity::ITextToSpeech* VivoxUnity::Private::LoginSession::get_TTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_TTS");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ITextToSpeech*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_ParticipantPropertyFrequency
::VivoxUnity::ParticipantPropertyUpdateFrequency VivoxUnity::Private::LoginSession::get_ParticipantPropertyFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_ParticipantPropertyFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ParticipantPropertyUpdateFrequency, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.set_ParticipantPropertyFrequency
void VivoxUnity::Private::LoginSession::set_ParticipantPropertyFrequency(::VivoxUnity::ParticipantPropertyUpdateFrequency value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::set_ParticipantPropertyFrequency");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_ChannelSessions
::VivoxUnity::IReadOnlyDictionary_2<::VivoxUnity::ChannelId*, ::VivoxUnity::IChannelSession*>* VivoxUnity::Private::LoginSession::get_ChannelSessions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_ChannelSessions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyDictionary_2<::VivoxUnity::ChannelId*, ::VivoxUnity::IChannelSession*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_TransmittingChannel
::VivoxUnity::ChannelId* VivoxUnity::Private::LoginSession::get_TransmittingChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_TransmittingChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransmittingChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::ChannelId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.set_TransmittingChannel
void VivoxUnity::Private::LoginSession::set_TransmittingChannel(::VivoxUnity::ChannelId* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::set_TransmittingChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TransmittingChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_Key
::VivoxUnity::AccountId* VivoxUnity::Private::LoginSession::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::AccountId*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_State
::VivoxUnity::LoginState VivoxUnity::Private::LoginSession::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_State");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::LoginState, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.set_State
void VivoxUnity::Private::LoginSession::set_State(::VivoxUnity::LoginState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_IsInjectingAudio
bool VivoxUnity::Private::LoginSession::get_IsInjectingAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_IsInjectingAudio");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.set_IsInjectingAudio
void VivoxUnity::Private::LoginSession::set_IsInjectingAudio(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::set_IsInjectingAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsInjectingAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_DirectedMessages
::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IDirectedTextMessage*>* VivoxUnity::Private::LoginSession::get_DirectedMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_DirectedMessages");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IDirectedTextMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_FailedDirectedMessages
::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IFailedDirectedTextMessage*>* VivoxUnity::Private::LoginSession::get_FailedDirectedMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_FailedDirectedMessages");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IFailedDirectedTextMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_AccountArchive
::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IAccountArchiveMessage*>* VivoxUnity::Private::LoginSession::get_AccountArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_AccountArchive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IAccountArchiveMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_AccountArchiveResult
::VivoxUnity::IArchiveQueryResult* VivoxUnity::Private::LoginSession::get_AccountArchiveResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_AccountArchiveResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IArchiveQueryResult*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_DirectedMessageResult
::VivoxUnity::IDirectedMessageResult* VivoxUnity::Private::LoginSession::get_DirectedMessageResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_DirectedMessageResult");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IDirectedMessageResult*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_Presence
::VivoxUnity::Presence VivoxUnity::Private::LoginSession::get_Presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_Presence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::Presence, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.set_Presence
void VivoxUnity::Private::LoginSession::set_Presence(::VivoxUnity::Presence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::set_Presence");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_PresenceSubscriptions
::VivoxUnity::IReadOnlyDictionary_2<::VivoxUnity::AccountId*, ::VivoxUnity::IPresenceSubscription*>* VivoxUnity::Private::LoginSession::get_PresenceSubscriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_PresenceSubscriptions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyDictionary_2<::VivoxUnity::AccountId*, ::VivoxUnity::IPresenceSubscription*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_BlockedSubscriptions
::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* VivoxUnity::Private::LoginSession::get_BlockedSubscriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_BlockedSubscriptions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_AllowedSubscriptions
::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* VivoxUnity::Private::LoginSession::get_AllowedSubscriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_AllowedSubscriptions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_IncomingSubscriptionRequests
::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::AccountId*>* VivoxUnity::Private::LoginSession::get_IncomingSubscriptionRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_IncomingSubscriptionRequests");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::AccountId*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_CrossMutedCommunications
::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* VivoxUnity::Private::LoginSession::get_CrossMutedCommunications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_CrossMutedCommunications");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_TransmissionType
::VivoxUnity::TransmissionMode VivoxUnity::Private::LoginSession::get_TransmissionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_TransmissionType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::TransmissionMode, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.get_TransmittingChannels
::System::Collections::ObjectModel::ReadOnlyCollection_1<::VivoxUnity::ChannelId*>* VivoxUnity::Private::LoginSession::get_TransmittingChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::get_TransmittingChannels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::VivoxUnity::ChannelId*>*, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginLogin
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginLogin(::System::Uri* server, ::StringW accessToken, ::VivoxUnity::SubscriptionMode subscriptionMode, ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* presenceSubscriptions, ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* blockedPresenceSubscriptions, ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* allowedPresenceSubscriptions, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginLogin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, server, accessToken, subscriptionMode, presenceSubscriptions, blockedPresenceSubscriptions, allowedPresenceSubscriptions, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.GetLoginToken
::StringW VivoxUnity::Private::LoginSession::GetLoginToken(::StringW key, ::System::TimeSpan expiration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::GetLoginToken");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 51));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key, expiration);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.Login
void VivoxUnity::Private::LoginSession::Login(::StringW accessToken, ::StringW connectorHandle, ::VivoxUnity::AsyncNoResult* ar, ::System::Nullable_1<::VivoxUnity::SubscriptionMode> mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::Login");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Login", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken), ::il2cpp_utils::ExtractType(connectorHandle), ::il2cpp_utils::ExtractType(ar), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accessToken, connectorHandle, ar, mode);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.Logout
void VivoxUnity::Private::LoginSession::Logout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::Logout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 50));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginLogin
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginLogin(::System::Uri* server, ::StringW accessToken, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginLogin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, server, accessToken, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.EndLogin
void VivoxUnity::Private::LoginSession::EndLogin(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::EndLogin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.GetChannelSession
::VivoxUnity::IChannelSession* VivoxUnity::Private::LoginSession::GetChannelSession(::VivoxUnity::ChannelId* channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::GetChannelSession");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IChannelSession*, false>(this, ___internal__method, channelId);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.DeleteChannelSession
void VivoxUnity::Private::LoginSession::DeleteChannelSession(::VivoxUnity::ChannelId* channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::DeleteChannelSession");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.StartAudioInjection
void VivoxUnity::Private::LoginSession::StartAudioInjection(::StringW audioFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::StartAudioInjection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioFilePath);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.StopAudioInjection
void VivoxUnity::Private::LoginSession::StopAudioInjection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::StopAudioInjection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 53));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginAccountSetLoginProperties
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginAccountSetLoginProperties(::VivoxUnity::ParticipantPropertyUpdateFrequency participantPropertyFrequency, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginAccountSetLoginProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, participantPropertyFrequency, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.EndAccountSetLoginProperties
void VivoxUnity::Private::LoginSession::EndAccountSetLoginProperties(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::EndAccountSetLoginProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginAddBlockedSubscription
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginAddBlockedSubscription(::VivoxUnity::AccountId* userId, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginAddBlockedSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 32));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.EndAddBlockedSubscription
void VivoxUnity::Private::LoginSession::EndAddBlockedSubscription(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::EndAddBlockedSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginRemoveBlockedSubscription
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginRemoveBlockedSubscription(::VivoxUnity::AccountId* userId, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginRemoveBlockedSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.EndRemoveBlockedSubscription
void VivoxUnity::Private::LoginSession::EndRemoveBlockedSubscription(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::EndRemoveBlockedSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginSendDirectedMessage
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginSendDirectedMessage(::VivoxUnity::AccountId* userId, ::StringW message, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginSendDirectedMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, message, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginSendDirectedMessage
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginSendDirectedMessage(::VivoxUnity::AccountId* userId, ::StringW language, ::StringW message, ::StringW applicationStanzaNamespace, ::StringW applicationStanzaBody, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginSendDirectedMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, language, message, applicationStanzaNamespace, applicationStanzaBody, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.EndSendDirectedMessage
void VivoxUnity::Private::LoginSession::EndSendDirectedMessage(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::EndSendDirectedMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 46));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginAccountArchiveQuery
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginAccountArchiveQuery(::System::Nullable_1<::System::DateTime> timeStart, ::System::Nullable_1<::System::DateTime> timeEnd, ::StringW searchText, ::VivoxUnity::AccountId* userId, ::VivoxUnity::ChannelId* channel, uint max, ::StringW afterId, ::StringW beforeId, int firstMessageIndex, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginAccountArchiveQuery");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, timeStart, timeEnd, searchText, userId, channel, max, afterId, beforeId, firstMessageIndex, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.EndAccountArchiveQuery
void VivoxUnity::Private::LoginSession::EndAccountArchiveQuery(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::EndAccountArchiveQuery");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginAddAllowedSubscription
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginAddAllowedSubscription(::VivoxUnity::AccountId* userId, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginAddAllowedSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.EndAddAllowedSubscription
void VivoxUnity::Private::LoginSession::EndAddAllowedSubscription(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::EndAddAllowedSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginRemoveAllowedSubscription
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginRemoveAllowedSubscription(::VivoxUnity::AccountId* userId, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginRemoveAllowedSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.EndRemoveAllowedSubscription
void VivoxUnity::Private::LoginSession::EndRemoveAllowedSubscription(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::EndRemoveAllowedSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginAddPresenceSubscription
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginAddPresenceSubscription(::VivoxUnity::AccountId* userId, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginAddPresenceSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.EndAddPresenceSubscription
::VivoxUnity::IPresenceSubscription* VivoxUnity::Private::LoginSession::EndAddPresenceSubscription(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::EndAddPresenceSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::VivoxUnity::IPresenceSubscription*, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.BeginRemovePresenceSubscription
::System::IAsyncResult* VivoxUnity::Private::LoginSession::BeginRemovePresenceSubscription(::VivoxUnity::AccountId* userId, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::BeginRemovePresenceSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.EndRemovePresenceSubscription
void VivoxUnity::Private::LoginSession::EndRemovePresenceSubscription(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::EndRemovePresenceSubscription");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.SetCrossMutedCommunications
::System::IAsyncResult* VivoxUnity::Private::LoginSession::SetCrossMutedCommunications(::VivoxUnity::AccountId* accountId, bool muted, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::SetCrossMutedCommunications");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, accountId, muted, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.SetCrossMutedCommunications
::System::IAsyncResult* VivoxUnity::Private::LoginSession::SetCrossMutedCommunications(::System::Collections::Generic::List_1<::VivoxUnity::AccountId*>* accountIdSet, bool muted, ::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::SetCrossMutedCommunications");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, accountIdSet, muted, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.ClearCrossMutedCommunications
::System::IAsyncResult* VivoxUnity::Private::LoginSession::ClearCrossMutedCommunications(::System::AsyncCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::ClearCrossMutedCommunications");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.SendCrossMuteOperationRequest
void VivoxUnity::Private::LoginSession::SendCrossMuteOperationRequest(::GlobalNamespace::vx_control_communications_operation controlOp, ::StringW userURIs, ::GlobalNamespace::vx_mute_scope muteScope, ::System::Action_1<::GlobalNamespace::vx_resp_account_control_communications_t*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::SendCrossMuteOperationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendCrossMuteOperationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controlOp), ::il2cpp_utils::ExtractType(userURIs), ::il2cpp_utils::ExtractType(muteScope), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controlOp, userURIs, muteScope, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.SendCrossMuteOperationRequest
void VivoxUnity::Private::LoginSession::SendCrossMuteOperationRequest(::GlobalNamespace::vx_control_communications_operation controlOp, ::System::Collections::Generic::List_1<::VivoxUnity::AccountId*>* users, ::GlobalNamespace::vx_mute_scope muteScope, ::System::Action_1<::GlobalNamespace::vx_resp_account_control_communications_t*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::SendCrossMuteOperationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendCrossMuteOperationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controlOp), ::il2cpp_utils::ExtractType(users), ::il2cpp_utils::ExtractType(muteScope), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controlOp, users, muteScope, callback);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.AssertLoggedIn
void VivoxUnity::Private::LoginSession::AssertLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::AssertLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.AssertLoggedOut
void VivoxUnity::Private::LoginSession::AssertLoggedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::AssertLoggedOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertLoggedOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.ClearTransmittingChannel
void VivoxUnity::Private::LoginSession::ClearTransmittingChannel(::VivoxUnity::ChannelId* channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::ClearTransmittingChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTransmittingChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.Cleanup
void VivoxUnity::Private::LoginSession::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.SetTransmissionMode
void VivoxUnity::Private::LoginSession::SetTransmissionMode(::VivoxUnity::TransmissionMode mode, ::VivoxUnity::ChannelId* singleChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::SetTransmissionMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VivoxUnity::Private::LoginSession*), 49));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode, singleChannel);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.SetTransmission
void VivoxUnity::Private::LoginSession::SetTransmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::SetTransmission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTransmission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.SetTransmitting
void VivoxUnity::Private::LoginSession::SetTransmitting(::VivoxUnity::ChannelId* channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::SetTransmitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTransmitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channel);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.SetNoSessionTransmitting
void VivoxUnity::Private::LoginSession::SetNoSessionTransmitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::SetNoSessionTransmitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNoSessionTransmitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession.SetAllSessionsTransmitting
void VivoxUnity::Private::LoginSession::SetAllSessionsTransmitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::SetAllSessionsTransmitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllSessionsTransmitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass70_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass70_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass70_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass70_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Presence value
[[deprecated("Use field access instead!")]] ::VivoxUnity::Presence& VivoxUnity::Private::LoginSession::$$c__DisplayClass70_0::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass70_0::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::VivoxUnity::Presence*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass70_1
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass70_1.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_account_set_presence_t
#include "GlobalNamespace/vx_req_account_set_presence_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass70_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass70_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass70_1::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass70_1::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_set_presence_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_set_presence_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass70_1::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass70_1::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_set_presence_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession/<>c__DisplayClass70_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession::$$c__DisplayClass70_0*& VivoxUnity::Private::LoginSession::$$c__DisplayClass70_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass70_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession::$$c__DisplayClass70_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass70_1.<set_Presence>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass70_1::$set_Presence$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass70_1::<set_Presence>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_Presence>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass85_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass85_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass85_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass85_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult result
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass85_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass85_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String accessToken
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::LoginSession::$$c__DisplayClass85_0::dyn_accessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass85_0::dyn_accessToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accessToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.SubscriptionMode subscriptionMode
[[deprecated("Use field access instead!")]] ::VivoxUnity::SubscriptionMode& VivoxUnity::Private::LoginSession::$$c__DisplayClass85_0::dyn_subscriptionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass85_0::dyn_subscriptionMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subscriptionMode"))->offset;
  return *reinterpret_cast<::VivoxUnity::SubscriptionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass85_0.<BeginLogin>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass85_0::$BeginLogin$b__0(::System::IAsyncResult* ar2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass85_0::<BeginLogin>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginLogin>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass87_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass87_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_account_anonymous_login_t
#include "GlobalNamespace/vx_req_account_anonymous_login_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass87_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass87_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass87_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass87_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_anonymous_login_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_anonymous_login_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass87_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass87_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_anonymous_login_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass87_0.<Login>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass87_0::$Login$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass87_0::<Login>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Login>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass89_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass89_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass89_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass89_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String accessToken
[[deprecated("Use field access instead!")]] ::StringW& VivoxUnity::Private::LoginSession::$$c__DisplayClass89_0::dyn_accessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass89_0::dyn_accessToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accessToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult result
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass89_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass89_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass89_0.<BeginLogin>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass89_0::$BeginLogin$b__0(::System::IAsyncResult* ar2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass89_0::<BeginLogin>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginLogin>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass93_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass93_0.hpp"
// Including type: vx_req_sessiongroup_control_audio_injection_t
#include "GlobalNamespace/vx_req_sessiongroup_control_audio_injection_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass93_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass93_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_sessiongroup_control_audio_injection_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_sessiongroup_control_audio_injection_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass93_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass93_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_sessiongroup_control_audio_injection_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass93_0.<StartAudioInjection>b__1
void VivoxUnity::Private::LoginSession::$$c__DisplayClass93_0::$StartAudioInjection$b__1(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass93_0::<StartAudioInjection>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAudioInjection>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c
#include "VivoxUnity/Private/LoginSession_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: VivoxUnity.IChannelSession
#include "VivoxUnity/IChannelSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VivoxUnity.Private.LoginSession/<>c <>9
::VivoxUnity::Private::LoginSession::$$c* VivoxUnity::Private::LoginSession::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::VivoxUnity::Private::LoginSession::$$c*>("VivoxUnity.Private", "LoginSession/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly VivoxUnity.Private.LoginSession/<>c <>9
void VivoxUnity::Private::LoginSession::$$c::_set_$$9(::VivoxUnity::Private::LoginSession::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VivoxUnity.Private", "LoginSession/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<VivoxUnity.IChannelSession,System.Boolean> <>9__93_0
::System::Func_2<::VivoxUnity::IChannelSession*, bool>* VivoxUnity::Private::LoginSession::$$c::_get_$$9__93_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c::_get_$$9__93_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::VivoxUnity::IChannelSession*, bool>*>("VivoxUnity.Private", "LoginSession/<>c", "<>9__93_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<VivoxUnity.IChannelSession,System.Boolean> <>9__93_0
void VivoxUnity::Private::LoginSession::$$c::_set_$$9__93_0(::System::Func_2<::VivoxUnity::IChannelSession*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c::_set_$$9__93_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VivoxUnity.Private", "LoginSession/<>c", "<>9__93_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<VivoxUnity.IChannelSession,System.Boolean> <>9__94_0
::System::Func_2<::VivoxUnity::IChannelSession*, bool>* VivoxUnity::Private::LoginSession::$$c::_get_$$9__94_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c::_get_$$9__94_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::VivoxUnity::IChannelSession*, bool>*>("VivoxUnity.Private", "LoginSession/<>c", "<>9__94_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<VivoxUnity.IChannelSession,System.Boolean> <>9__94_0
void VivoxUnity::Private::LoginSession::$$c::_set_$$9__94_0(::System::Func_2<::VivoxUnity::IChannelSession*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c::_set_$$9__94_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VivoxUnity.Private", "LoginSession/<>c", "<>9__94_0", value)));
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c..cctor
void VivoxUnity::Private::LoginSession::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VivoxUnity.Private", "LoginSession/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c.<StartAudioInjection>b__93_0
bool VivoxUnity::Private::LoginSession::$$c::$StartAudioInjection$b__93_0(::VivoxUnity::IChannelSession* cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c::<StartAudioInjection>b__93_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAudioInjection>b__93_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cs);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c.<StopAudioInjection>b__94_0
bool VivoxUnity::Private::LoginSession::$$c::$StopAudioInjection$b__94_0(::VivoxUnity::IChannelSession* cs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c::<StopAudioInjection>b__94_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StopAudioInjection>b__94_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass94_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass94_0.hpp"
// Including type: vx_req_sessiongroup_control_audio_injection_t
#include "GlobalNamespace/vx_req_sessiongroup_control_audio_injection_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass94_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass94_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_sessiongroup_control_audio_injection_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_sessiongroup_control_audio_injection_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass94_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass94_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_sessiongroup_control_audio_injection_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass94_0.<StopAudioInjection>b__1
void VivoxUnity::Private::LoginSession::$$c__DisplayClass94_0::$StopAudioInjection$b__1(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass94_0::<StopAudioInjection>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StopAudioInjection>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass95_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass95_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_account_set_login_properties_t
#include "GlobalNamespace/vx_req_account_set_login_properties_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass95_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass95_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.ParticipantPropertyUpdateFrequency participantPropertyFrequency
[[deprecated("Use field access instead!")]] ::VivoxUnity::ParticipantPropertyUpdateFrequency& VivoxUnity::Private::LoginSession::$$c__DisplayClass95_0::dyn_participantPropertyFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass95_0::dyn_participantPropertyFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "participantPropertyFrequency"))->offset;
  return *reinterpret_cast<::VivoxUnity::ParticipantPropertyUpdateFrequency*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass95_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass95_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_set_login_properties_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_set_login_properties_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass95_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass95_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_set_login_properties_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass95_0.<BeginAccountSetLoginProperties>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass95_0::$BeginAccountSetLoginProperties$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass95_0::<BeginAccountSetLoginProperties>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginAccountSetLoginProperties>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass97_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass97_0.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_account_create_block_rule_t
#include "GlobalNamespace/vx_req_account_create_block_rule_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass97_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass97_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AccountId userId
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::LoginSession::$$c__DisplayClass97_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass97_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass97_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass97_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_create_block_rule_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_create_block_rule_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass97_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass97_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_create_block_rule_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass97_0.<BeginAddBlockedSubscription>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass97_0::$BeginAddBlockedSubscription$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass97_0::<BeginAddBlockedSubscription>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginAddBlockedSubscription>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass99_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass99_0.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_account_delete_block_rule_t
#include "GlobalNamespace/vx_req_account_delete_block_rule_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass99_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass99_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AccountId userId
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::LoginSession::$$c__DisplayClass99_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass99_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass99_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass99_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_delete_block_rule_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_delete_block_rule_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass99_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass99_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_delete_block_rule_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass99_0.<BeginRemoveBlockedSubscription>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass99_0::$BeginRemoveBlockedSubscription$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass99_0::<BeginRemoveBlockedSubscription>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginRemoveBlockedSubscription>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass102_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass102_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_account_send_message_t
#include "GlobalNamespace/vx_req_account_send_message_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass102_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass102_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass102_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass102_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_send_message_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_send_message_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass102_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass102_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_send_message_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass102_0.<BeginSendDirectedMessage>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass102_0::$BeginSendDirectedMessage$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass102_0::<BeginSendDirectedMessage>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSendDirectedMessage>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass104_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass104_0.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
// Including type: vx_req_account_archive_query_t
#include "GlobalNamespace/vx_req_account_archive_query_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass104_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass104_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass104_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass104_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public vx_req_account_archive_query_t request
[[deprecated("Use field access instead!")]] ::GlobalNamespace::vx_req_account_archive_query_t*& VivoxUnity::Private::LoginSession::$$c__DisplayClass104_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass104_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::GlobalNamespace::vx_req_account_archive_query_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VivoxUnity.Private.LoginSession/<>c__DisplayClass104_0.<BeginAccountArchiveQuery>b__0
void VivoxUnity::Private::LoginSession::$$c__DisplayClass104_0::$BeginAccountArchiveQuery$b__0(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass104_0::<BeginAccountArchiveQuery>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginAccountArchiveQuery>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VivoxUnity.Private.LoginSession/<>c__DisplayClass106_0
#include "VivoxUnity/Private/LoginSession_--c__DisplayClass106_0.hpp"
// Including type: VivoxUnity.AccountId
#include "VivoxUnity/AccountId.hpp"
// Including type: VivoxUnity.AsyncNoResult
#include "VivoxUnity/AsyncNoResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.Private.LoginSession <>4__this
[[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& VivoxUnity::Private::LoginSession::$$c__DisplayClass106_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VivoxUnity::Private::LoginSession**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AccountId userId
[[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& VivoxUnity::Private::LoginSession::$$c__DisplayClass106_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::VivoxUnity::AccountId**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VivoxUnity.AsyncNoResult ar
[[deprecated("Use field access instead!")]] ::VivoxUnity::AsyncNoResult*& VivoxUnity::Private::LoginSession::$$c__DisplayClass106_0::dyn_ar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::LoginSession::$$c__DisplayClass106_0::dyn_ar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ar"))->offset;
  return *reinterpret_cast<::VivoxUnity::AsyncNoResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
