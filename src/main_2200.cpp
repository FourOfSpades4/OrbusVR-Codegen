// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.TextureAtlas
#include "Blaze/TextureAtlas.hpp"
// Including type: Blaze.AtlasStack
#include "Blaze/AtlasStack.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: Blaze.AtlasLocation
#include "Blaze/AtlasLocation.hpp"
// Including type: Blaze.AtlasEntity
#include "Blaze/AtlasEntity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 RawSpacing
[[deprecated("Use field access instead!")]] int& Blaze::TextureAtlas::dyn_RawSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_RawSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RawSpacing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.AtlasStack Stack
[[deprecated("Use field access instead!")]] ::Blaze::AtlasStack*& Blaze::TextureAtlas::dyn_Stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_Stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Stack"))->offset;
  return *reinterpret_cast<::Blaze::AtlasStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.TextureAtlas Next
[[deprecated("Use field access instead!")]] ::Blaze::TextureAtlas*& Blaze::TextureAtlas::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Blaze::TextureAtlas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.TextureAtlas Previous
[[deprecated("Use field access instead!")]] ::Blaze::TextureAtlas*& Blaze::TextureAtlas::dyn_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_Previous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Previous"))->offset;
  return *reinterpret_cast<::Blaze::TextureAtlas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Dimension
[[deprecated("Use field access instead!")]] int& Blaze::TextureAtlas::dyn_Dimension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_Dimension");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dimension"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DimensionF
[[deprecated("Use field access instead!")]] float& Blaze::TextureAtlas::dyn_DimensionF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_DimensionF");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DimensionF"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single InvertedSize
[[deprecated("Use field access instead!")]] float& Blaze::TextureAtlas::dyn_InvertedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_InvertedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertedSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color32[] Pixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color32>& Blaze::TextureAtlas::dyn_Pixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_Pixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean PixelChange
[[deprecated("Use field access instead!")]] bool& Blaze::TextureAtlas::dyn_PixelChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_PixelChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PixelChange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean CanOptimize
[[deprecated("Use field access instead!")]] bool& Blaze::TextureAtlas::dyn_CanOptimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_CanOptimize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CanOptimize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D Texture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& Blaze::TextureAtlas::dyn_Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_Texture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Texture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ColumnProgressX
[[deprecated("Use field access instead!")]] int& Blaze::TextureAtlas::dyn_ColumnProgressX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_ColumnProgressX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColumnProgressX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ColumnProgressY
[[deprecated("Use field access instead!")]] int& Blaze::TextureAtlas::dyn_ColumnProgressY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_ColumnProgressY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColumnProgressY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ColumnWidth
[[deprecated("Use field access instead!")]] int& Blaze::TextureAtlas::dyn_ColumnWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_ColumnWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColumnWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OptimizeRequested
[[deprecated("Use field access instead!")]] bool& Blaze::TextureAtlas::dyn_OptimizeRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_OptimizeRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OptimizeRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.AtlasLocation LastEmpty
[[deprecated("Use field access instead!")]] ::Blaze::AtlasLocation*& Blaze::TextureAtlas::dyn_LastEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_LastEmpty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastEmpty"))->offset;
  return *reinterpret_cast<::Blaze::AtlasLocation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.AtlasLocation FirstEmpty
[[deprecated("Use field access instead!")]] ::Blaze::AtlasLocation*& Blaze::TextureAtlas::dyn_FirstEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_FirstEmpty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstEmpty"))->offset;
  return *reinterpret_cast<::Blaze::AtlasLocation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.AtlasingMode Mode
[[deprecated("Use field access instead!")]] ::Blaze::AtlasingMode& Blaze::TextureAtlas::dyn_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::dyn_Mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mode"))->offset;
  return *reinterpret_cast<::Blaze::AtlasingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.TextureAtlas.get_Spacing
int Blaze::TextureAtlas::get_Spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::get_Spacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Spacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.TextureAtlas.set_Spacing
void Blaze::TextureAtlas::set_Spacing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::set_Spacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Spacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.TextureAtlas.RemoveFromStack
void Blaze::TextureAtlas::RemoveFromStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::RemoveFromStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFromStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.TextureAtlas.get_FilterMode
::UnityEngine::FilterMode Blaze::TextureAtlas::get_FilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::get_FilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::FilterMode, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.TextureAtlas.set_FilterMode
void Blaze::TextureAtlas::set_FilterMode(::UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::set_FilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.TextureAtlas.Reset
void Blaze::TextureAtlas::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.TextureAtlas.Flush
void Blaze::TextureAtlas::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.TextureAtlas.OptimiseAdd
bool Blaze::TextureAtlas::OptimiseAdd(::Blaze::AtlasLocation* location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::OptimiseAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OptimiseAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, location);
}
// Autogenerated method: Blaze.TextureAtlas.Add
::Blaze::AtlasLocation* Blaze::TextureAtlas::Add(::Blaze::AtlasEntity* texture, int entityID, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(entityID), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::AtlasLocation*, false>(this, ___internal__method, texture, entityID, width, height);
}
// Autogenerated method: Blaze.TextureAtlas.Optimize
bool Blaze::TextureAtlas::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::Optimize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Optimize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.TextureAtlas.Destroy
void Blaze::TextureAtlas::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TextureAtlas::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.UVBlock
#include "Blaze/UVBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single MinX
[[deprecated("Use field access instead!")]] float& Blaze::UVBlock::dyn_MinX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::UVBlock::dyn_MinX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MinY
[[deprecated("Use field access instead!")]] float& Blaze::UVBlock::dyn_MinY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::UVBlock::dyn_MinY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxX
[[deprecated("Use field access instead!")]] float& Blaze::UVBlock::dyn_MaxX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::UVBlock::dyn_MaxX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxY
[[deprecated("Use field access instead!")]] float& Blaze::UVBlock::dyn_MaxY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::UVBlock::dyn_MaxY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.UVBlock.Write
void Blaze::UVBlock::Write(::ArrayW<::UnityEngine::Vector2> buffer, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::UVBlock::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index);
}
// Autogenerated method: Blaze.UVBlock.get_Shared
bool Blaze::UVBlock::get_Shared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::UVBlock::get_Shared");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::UVBlock*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.DistanceCachePoint
#include "Blaze/DistanceCachePoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Single X
[[deprecated("Use field access instead!")]] float& Blaze::DistanceCachePoint::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCachePoint::dyn_X");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single Y
[[deprecated("Use field access instead!")]] float& Blaze::DistanceCachePoint::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCachePoint::dyn_Y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.DistanceCachePoint..ctor
// ABORTED elsewhere.  Blaze::DistanceCachePoint::DistanceCachePoint(float x, float y)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.DistanceCacheSquare
#include "Blaze/DistanceCacheSquare.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Blaze.Scanner
#include "Blaze/Scanner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 X
[[deprecated("Use field access instead!")]] int& Blaze::DistanceCacheSquare::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_X");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Y
[[deprecated("Use field access instead!")]] int& Blaze::DistanceCacheSquare::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Index
[[deprecated("Use field access instead!")]] int& Blaze::DistanceCacheSquare::dyn_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_Index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Count
[[deprecated("Use field access instead!")]] int& Blaze::DistanceCacheSquare::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single XOffset
[[deprecated("Use field access instead!")]] float& Blaze::DistanceCacheSquare::dyn_XOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_XOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single YOffset
[[deprecated("Use field access instead!")]] float& Blaze::DistanceCacheSquare::dyn_YOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_YOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "YOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean InRange
[[deprecated("Use field access instead!")]] bool& Blaze::DistanceCacheSquare::dyn_InRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_InRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InRange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 PixelIndexX
[[deprecated("Use field access instead!")]] int& Blaze::DistanceCacheSquare::dyn_PixelIndexX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_PixelIndexX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PixelIndexX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 PixelIndexY
[[deprecated("Use field access instead!")]] int& Blaze::DistanceCacheSquare::dyn_PixelIndexY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_PixelIndexY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PixelIndexY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Blaze.DistanceCacheSquare[] SearchSet
[[deprecated("Use field access instead!")]] ::ArrayW<::Blaze::DistanceCacheSquare*>& Blaze::DistanceCacheSquare::dyn_SearchSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_SearchSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SearchSet"))->offset;
  return *reinterpret_cast<::ArrayW<::Blaze::DistanceCacheSquare*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<Blaze.DistanceCachePoint> Points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Blaze::DistanceCachePoint>*& Blaze::DistanceCacheSquare::dyn_Points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::dyn_Points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Blaze::DistanceCachePoint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.DistanceCacheSquare.Setup
void Blaze::DistanceCacheSquare::Setup(::Blaze::Scanner* scanner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scanner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scanner);
}
// Autogenerated method: Blaze.DistanceCacheSquare.RecalculateIndex
void Blaze::DistanceCacheSquare::RecalculateIndex(::Blaze::Scanner* scanner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::RecalculateIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scanner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scanner);
}
// Autogenerated method: Blaze.DistanceCacheSquare.Clear
void Blaze::DistanceCacheSquare::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.DistanceCacheSquare.Add
void Blaze::DistanceCacheSquare::Add(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::DistanceCacheSquare::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.Scanner
#include "Blaze/Scanner.hpp"
// Including type: Blaze.DistanceCacheSquare
#include "Blaze/DistanceCacheSquare.hpp"
// Including type: Blaze.ScannerPixel
#include "Blaze/ScannerPixel.hpp"
// Including type: Blaze.ScannerScanLine
#include "Blaze/ScannerScanLine.hpp"
// Including type: Blaze.VectorPath
#include "Blaze/VectorPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 MaxPoolCount
int Blaze::Scanner::_get_MaxPoolCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::_get_MaxPoolCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Blaze", "Scanner", "MaxPoolCount"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MaxPoolCount
void Blaze::Scanner::_set_MaxPoolCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::_set_MaxPoolCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Blaze", "Scanner", "MaxPoolCount", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BlurSpread
[[deprecated("Use field access instead!")]] int& Blaze::Scanner::dyn_BlurSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_BlurSpread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlurSpread"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ScalarX
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_ScalarX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_ScalarX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScalarX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ScalarY
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_ScalarY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_ScalarY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScalarY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single RawSampleDistance
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_RawSampleDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_RawSampleDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RawSampleDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 PooledPixels
[[deprecated("Use field access instead!")]] int& Blaze::Scanner::dyn_PooledPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_PooledPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PooledPixels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Blaze.DistanceCacheSquare[] DistanceCache
[[deprecated("Use field access instead!")]] ::ArrayW<::Blaze::DistanceCacheSquare*>& Blaze::Scanner::dyn_DistanceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_DistanceCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DistanceCache"))->offset;
  return *reinterpret_cast<::ArrayW<::Blaze::DistanceCacheSquare*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 DistanceCacheWidth
[[deprecated("Use field access instead!")]] int& Blaze::Scanner::dyn_DistanceCacheWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_DistanceCacheWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DistanceCacheWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 DistanceCacheHeight
[[deprecated("Use field access instead!")]] int& Blaze::Scanner::dyn_DistanceCacheHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_DistanceCacheHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DistanceCacheHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean Blurred
[[deprecated("Use field access instead!")]] bool& Blaze::Scanner::dyn_Blurred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_Blurred");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Blurred"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 DoubleBlurSpread
[[deprecated("Use field access instead!")]] int& Blaze::Scanner::dyn_DoubleBlurSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_DoubleBlurSpread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DoubleBlurSpread"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single HalfBlurSpreadF
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_HalfBlurSpreadF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_HalfBlurSpreadF");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HalfBlurSpreadF"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 HalfBlurSpread
[[deprecated("Use field access instead!")]] int& Blaze::Scanner::dyn_HalfBlurSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_HalfBlurSpread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HalfBlurSpread"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single VerticalOffset
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_VerticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_VerticalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VerticalOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single HorizontalOffset
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_HorizontalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_HorizontalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HorizontalOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Blaze.ScannerPixel FirstPooled
[[deprecated("Use field access instead!")]] ::Blaze::ScannerPixel*& Blaze::Scanner::dyn_FirstPooled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_FirstPooled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstPooled"))->offset;
  return *reinterpret_cast<::Blaze::ScannerPixel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Blaze.ScannerScanLine[] ScanLineBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Blaze::ScannerScanLine*>& Blaze::Scanner::dyn_ScanLineBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_ScanLineBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScanLineBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Blaze::ScannerScanLine*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RequiresStart
[[deprecated("Use field access instead!")]] bool& Blaze::Scanner::dyn_RequiresStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_RequiresStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequiresStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single MaxDistance
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_MaxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_MaxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single MaxDistanceSquared
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_MaxDistanceSquared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_MaxDistanceSquared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxDistanceSquared"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single DistanceAdjuster
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_DistanceAdjuster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_DistanceAdjuster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DistanceAdjuster"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 RawSDFSize
[[deprecated("Use field access instead!")]] int& Blaze::Scanner::dyn_RawSDFSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_RawSDFSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RawSDFSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean WentUp
[[deprecated("Use field access instead!")]] bool& Blaze::Scanner::dyn_WentUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_WentUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WentUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 MoveToY
[[deprecated("Use field access instead!")]] int& Blaze::Scanner::dyn_MoveToY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_MoveToY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MoveToY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 PreviousY
[[deprecated("Use field access instead!")]] int& Blaze::Scanner::dyn_PreviousY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_PreviousY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreviousY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 LineChangeY
[[deprecated("Use field access instead!")]] int& Blaze::Scanner::dyn_LineChangeY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_LineChangeY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineChangeY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single LineChangeX
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_LineChangeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_LineChangeX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineChangeX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean LineChangeWentUp
[[deprecated("Use field access instead!")]] bool& Blaze::Scanner::dyn_LineChangeWentUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_LineChangeWentUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineChangeWentUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single SDFExtrudeBy
[[deprecated("Use field access instead!")]] float& Blaze::Scanner::dyn_SDFExtrudeBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::dyn_SDFExtrudeBy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SDFExtrudeBy"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.Scanner.get_ExtrudeBy
float Blaze::Scanner::get_ExtrudeBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::get_ExtrudeBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::Scanner*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.set_ExtrudeBy
void Blaze::Scanner::set_ExtrudeBy(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::set_ExtrudeBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::Scanner*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.Scanner.get_SampleDistance
float Blaze::Scanner::get_SampleDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::get_SampleDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::Scanner*), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.set_SampleDistance
void Blaze::Scanner::set_SampleDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::set_SampleDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::Scanner*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.Scanner.get_SDFSize
int Blaze::Scanner::get_SDFSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::get_SDFSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SDFSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.set_SDFSize
void Blaze::Scanner::set_SDFSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::set_SDFSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SDFSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.Scanner.get_SDF
bool Blaze::Scanner::get_SDF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::get_SDF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SDF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.set_SDF
void Blaze::Scanner::set_SDF(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::set_SDF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SDF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.Scanner.get_ScaleY
float Blaze::Scanner::get_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::get_ScaleY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScaleY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.set_ScaleY
void Blaze::Scanner::set_ScaleY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::set_ScaleY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScaleY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.Scanner.get_ScaleX
float Blaze::Scanner::get_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::get_ScaleX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScaleX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.set_ScaleX
void Blaze::Scanner::set_ScaleX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::set_ScaleX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScaleX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.Scanner.get_Scale
float Blaze::Scanner::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::get_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.set_Scale
void Blaze::Scanner::set_Scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::set_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.Scanner.get_DrawHeight
int Blaze::Scanner::get_DrawHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::get_DrawHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DrawHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.set_DrawHeight
void Blaze::Scanner::set_DrawHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::set_DrawHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DrawHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.Scanner.Start
void Blaze::Scanner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.CreateDistanceCache
void Blaze::Scanner::CreateDistanceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::CreateDistanceCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDistanceCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.MoveTo
void Blaze::Scanner::MoveTo(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::MoveTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::Scanner*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Blaze.Scanner.AddPoint
void Blaze::Scanner::AddPoint(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::AddPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::Scanner*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Blaze.Scanner.AddPixel
void Blaze::Scanner::AddPixel(float x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::AddPixel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPixel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Blaze.Scanner.ReindexDistanceCache
void Blaze::Scanner::ReindexDistanceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::ReindexDistanceCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReindexDistanceCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.ClearDistanceCache
void Blaze::Scanner::ClearDistanceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::ClearDistanceCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDistanceCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Scanner.Rasterise
bool Blaze::Scanner::Rasterise(::Blaze::VectorPath* glyph, ::ArrayW<::UnityEngine::Color32> atlasPixels, int atlasWidth, int baseIndex, int width, int height, float hOffset, float vOffset, ::UnityEngine::Color32 fill, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Scanner::Rasterise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rasterise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyph), ::il2cpp_utils::ExtractType(atlasPixels), ::il2cpp_utils::ExtractType(atlasWidth), ::il2cpp_utils::ExtractType(baseIndex), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(hOffset), ::il2cpp_utils::ExtractType(vOffset), ::il2cpp_utils::ExtractType(fill), ::il2cpp_utils::ExtractType(clear)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, glyph, atlasPixels, atlasWidth, baseIndex, width, height, hOffset, vOffset, fill, clear);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.ScannerPixel
#include "Blaze/ScannerPixel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single X
[[deprecated("Use field access instead!")]] float& Blaze::ScannerPixel::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerPixel::dyn_X");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Fill
[[deprecated("Use field access instead!")]] uint8_t& Blaze::ScannerPixel::dyn_Fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerPixel::dyn_Fill");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fill"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.ScannerPixel Next
[[deprecated("Use field access instead!")]] ::Blaze::ScannerPixel*& Blaze::ScannerPixel::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerPixel::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Blaze::ScannerPixel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.ScannerPixel Previous
[[deprecated("Use field access instead!")]] ::Blaze::ScannerPixel*& Blaze::ScannerPixel::dyn_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerPixel::dyn_Previous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Previous"))->offset;
  return *reinterpret_cast<::Blaze::ScannerPixel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.ScannerPixel.get_PixelIndex
int Blaze::ScannerPixel::get_PixelIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerPixel::get_PixelIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PixelIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.ScannerScanLine
#include "Blaze/ScannerScanLine.hpp"
// Including type: Blaze.Scanner
#include "Blaze/Scanner.hpp"
// Including type: Blaze.ScannerPixel
#include "Blaze/ScannerPixel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Count
[[deprecated("Use field access instead!")]] int& Blaze::ScannerScanLine::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerScanLine::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.Scanner Scanner
[[deprecated("Use field access instead!")]] ::Blaze::Scanner*& Blaze::ScannerScanLine::dyn_Scanner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerScanLine::dyn_Scanner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scanner"))->offset;
  return *reinterpret_cast<::Blaze::Scanner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.ScannerPixel Last
[[deprecated("Use field access instead!")]] ::Blaze::ScannerPixel*& Blaze::ScannerScanLine::dyn_Last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerScanLine::dyn_Last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Last"))->offset;
  return *reinterpret_cast<::Blaze::ScannerPixel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.ScannerPixel First
[[deprecated("Use field access instead!")]] ::Blaze::ScannerPixel*& Blaze::ScannerScanLine::dyn_First() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerScanLine::dyn_First");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "First"))->offset;
  return *reinterpret_cast<::Blaze::ScannerPixel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.ScannerScanLine.Clear
void Blaze::ScannerScanLine::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerScanLine::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.ScannerScanLine.Flatten
::ArrayW<::Blaze::SubScanPixel> Blaze::ScannerScanLine::Flatten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerScanLine::Flatten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flatten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Blaze::SubScanPixel>, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.ScannerScanLine.Add
void Blaze::ScannerScanLine::Add(::Blaze::ScannerPixel* pixel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ScannerScanLine::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pixel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.SubRaster
#include "Blaze/SubRaster.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Width
[[deprecated("Use field access instead!")]] int& Blaze::SubRaster::dyn_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::SubRaster::dyn_Width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.SubScanPixel[][] Intersects
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::Blaze::SubScanPixel>>& Blaze::SubRaster::dyn_Intersects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::SubRaster::dyn_Intersects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Intersects"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::Blaze::SubScanPixel>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.SubRaster.get_Height
int Blaze::SubRaster::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::SubRaster::get_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.SubScanPixel
#include "Blaze/SubScanPixel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt16 X
[[deprecated("Use field access instead!")]] uint16_t& Blaze::SubScanPixel::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::SubScanPixel::dyn_X");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Fill
[[deprecated("Use field access instead!")]] uint8_t& Blaze::SubScanPixel::dyn_Fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::SubScanPixel::dyn_Fill");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fill"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.SubScanPixel..ctor
// ABORTED elsewhere.  Blaze::SubScanPixel::SubScanPixel(uint16_t x, uint8_t fill)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.TriangulationVertex
#include "Blaze/TriangulationVertex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single X
[[deprecated("Use field access instead!")]] float& Blaze::TriangulationVertex::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TriangulationVertex::dyn_X");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Y
[[deprecated("Use field access instead!")]] float& Blaze::TriangulationVertex::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TriangulationVertex::dyn_Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Index
[[deprecated("Use field access instead!")]] int& Blaze::TriangulationVertex::dyn_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TriangulationVertex::dyn_Index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.TriangulationVertex Next
[[deprecated("Use field access instead!")]] ::Blaze::TriangulationVertex*& Blaze::TriangulationVertex::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TriangulationVertex::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Blaze::TriangulationVertex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.TriangulationVertex Previous
[[deprecated("Use field access instead!")]] ::Blaze::TriangulationVertex*& Blaze::TriangulationVertex::dyn_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TriangulationVertex::dyn_Previous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Previous"))->offset;
  return *reinterpret_cast<::Blaze::TriangulationVertex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.TriangulationVertex.Remove
void Blaze::TriangulationVertex::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::TriangulationVertex::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Blaze.OnTriangulatorRange
#include "Blaze/OnTriangulatorRange.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Blaze.OnTriangulatorRange.Invoke
void Blaze::OnTriangulatorRange::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::OnTriangulatorRange::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::OnTriangulatorRange*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.OnTriangulatorRange.BeginInvoke
::System::IAsyncResult* Blaze::OnTriangulatorRange::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::OnTriangulatorRange::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::OnTriangulatorRange*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Blaze.OnTriangulatorRange.EndInvoke
void Blaze::OnTriangulatorRange::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::OnTriangulatorRange::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::OnTriangulatorRange*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.Triangulator
#include "Blaze/Triangulator.hpp"
// Including type: Blaze.TriangulationVertex
#include "Blaze/TriangulationVertex.hpp"
// Including type: Blaze.OnTriangulatorRange
#include "Blaze/OnTriangulatorRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean RawClockwise
[[deprecated("Use field access instead!")]] bool& Blaze::Triangulator::dyn_RawClockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::dyn_RawClockwise");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RawClockwise"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OutputClockwise
[[deprecated("Use field access instead!")]] bool& Blaze::Triangulator::dyn_OutputClockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::dyn_OutputClockwise");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutputClockwise"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] Triangles
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Blaze::Triangulator::dyn_Triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::dyn_Triangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Triangles"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] Vertices
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Blaze::Triangulator::dyn_Vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::dyn_Vertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Vertices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 TriangleIndex
[[deprecated("Use field access instead!")]] int& Blaze::Triangulator::dyn_TriangleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::dyn_TriangleIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TriangleIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 VertexCount
[[deprecated("Use field access instead!")]] int& Blaze::Triangulator::dyn_VertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::dyn_VertexCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 VertexOffset
[[deprecated("Use field access instead!")]] int& Blaze::Triangulator::dyn_VertexOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::dyn_VertexOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.TriangulationVertex Current
[[deprecated("Use field access instead!")]] ::Blaze::TriangulationVertex*& Blaze::Triangulator::dyn_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::dyn_Current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Current"))->offset;
  return *reinterpret_cast<::Blaze::TriangulationVertex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseZ
[[deprecated("Use field access instead!")]] bool& Blaze::Triangulator::dyn_UseZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::dyn_UseZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.OnTriangulatorRange OutOfRange
[[deprecated("Use field access instead!")]] ::Blaze::OnTriangulatorRange*& Blaze::Triangulator::dyn_OutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::dyn_OutOfRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutOfRange"))->offset;
  return *reinterpret_cast<::Blaze::OnTriangulatorRange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.Triangulator.get_Clockwise
bool Blaze::Triangulator::get_Clockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::get_Clockwise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Clockwise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Triangulator.set_Clockwise
void Blaze::Triangulator::set_Clockwise(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::set_Clockwise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Clockwise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.Triangulator.Reset
void Blaze::Triangulator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Triangulator.AddVertex
void Blaze::Triangulator::AddVertex(::UnityEngine::Vector3 vert, ByRef<::Blaze::TriangulationVertex*> first, ByRef<::Blaze::TriangulationVertex*> last) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::AddVertex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVertex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vert), ::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(last)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vert, byref(first), byref(last));
}
// Autogenerated method: Blaze.Triangulator.Complete
void Blaze::Triangulator::Complete(::Blaze::TriangulationVertex* first, ::Blaze::TriangulationVertex* last) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(last)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, first, last);
}
// Autogenerated method: Blaze.Triangulator.Select
void Blaze::Triangulator::Select(int start, int vertexCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::Select");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(vertexCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, vertexCount);
}
// Autogenerated method: Blaze.Triangulator.FindWinding
void Blaze::Triangulator::FindWinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::FindWinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindWinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Triangulator.GetArea
float Blaze::Triangulator::GetArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::GetArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Triangulator.GetSignedArea
float Blaze::Triangulator::GetSignedArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::GetSignedArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSignedArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Triangulator.AddTriangle
void Blaze::Triangulator::AddTriangle(int a, int b, int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::AddTriangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTriangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, c);
}
// Autogenerated method: Blaze.Triangulator.Triangulate
::ArrayW<int> Blaze::Triangulator::Triangulate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::Triangulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Triangulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.Triangulator.Triangulate
void Blaze::Triangulator::Triangulate(::ArrayW<int> triangles, int triangleCount, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::Triangulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Triangulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractType(triangleCount), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, triangles, triangleCount, offset);
}
// Autogenerated method: Blaze.Triangulator.InsideTriangleAnti
bool Blaze::Triangulator::InsideTriangleAnti(::Blaze::TriangulationVertex* A, ::Blaze::TriangulationVertex* B, ::Blaze::TriangulationVertex* C, ::Blaze::TriangulationVertex* P) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::InsideTriangleAnti");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsideTriangleAnti", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(A), ::il2cpp_utils::ExtractType(B), ::il2cpp_utils::ExtractType(C), ::il2cpp_utils::ExtractType(P)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, A, B, C, P);
}
// Autogenerated method: Blaze.Triangulator.InsideTriangle
bool Blaze::Triangulator::InsideTriangle(::Blaze::TriangulationVertex* A, ::Blaze::TriangulationVertex* B, ::Blaze::TriangulationVertex* C, ::Blaze::TriangulationVertex* P) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::Triangulator::InsideTriangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsideTriangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(A), ::il2cpp_utils::ExtractType(B), ::il2cpp_utils::ExtractType(C), ::il2cpp_utils::ExtractType(P)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, A, B, C, P);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.ArcLinePoint
#include "Blaze/ArcLinePoint.hpp"
// Including type: Blaze.VectorTransform
#include "Blaze/VectorTransform.hpp"
// Including type: Blaze.VectorPath
#include "Blaze/VectorPath.hpp"
// Including type: Blaze.PointReceiver
#include "Blaze/PointReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Radius
[[deprecated("Use field access instead!")]] float& Blaze::ArcLinePoint::dyn_Radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::dyn_Radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single EndAngle
[[deprecated("Use field access instead!")]] float& Blaze::ArcLinePoint::dyn_EndAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::dyn_EndAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EndAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single StartAngle
[[deprecated("Use field access instead!")]] float& Blaze::ArcLinePoint::dyn_StartAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::dyn_StartAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CircleCenterX
[[deprecated("Use field access instead!")]] float& Blaze::ArcLinePoint::dyn_CircleCenterX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::dyn_CircleCenterX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CircleCenterX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CircleCenterY
[[deprecated("Use field access instead!")]] float& Blaze::ArcLinePoint::dyn_CircleCenterY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::dyn_CircleCenterY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CircleCenterY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.ArcLinePoint.Transform
void Blaze::ArcLinePoint::Transform(::Blaze::VectorTransform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform);
}
// Autogenerated method: Blaze.ArcLinePoint.RecalculateBounds
void Blaze::ArcLinePoint::RecalculateBounds(::Blaze::VectorPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::RecalculateBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Blaze.ArcLinePoint.ComputeLinePoints
void Blaze::ArcLinePoint::ComputeLinePoints(::Blaze::PointReceiver* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::ComputeLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Blaze.ArcLinePoint.SampleAt
void Blaze::ArcLinePoint::SampleAt(float t, ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::SampleAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorLine*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, byref(x), byref(y));
}
// Autogenerated method: Blaze.ArcLinePoint.get_IsCurve
bool Blaze::ArcLinePoint::get_IsCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::get_IsCurve");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.ArcLinePoint.Copy
::Blaze::VectorPoint* Blaze::ArcLinePoint::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.ArcLinePoint.ToString
::StringW Blaze::ArcLinePoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::ArcLinePoint::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.CurveLinePoint
#include "Blaze/CurveLinePoint.hpp"
// Including type: Blaze.VectorTransform
#include "Blaze/VectorTransform.hpp"
// Including type: Blaze.VectorPath
#include "Blaze/VectorPath.hpp"
// Including type: Blaze.PointReceiver
#include "Blaze/PointReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Control2X
[[deprecated("Use field access instead!")]] float& Blaze::CurveLinePoint::dyn_Control2X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::dyn_Control2X");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Control2X"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Control2Y
[[deprecated("Use field access instead!")]] float& Blaze::CurveLinePoint::dyn_Control2Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::dyn_Control2Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Control2Y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.CurveLinePoint.Transform
void Blaze::CurveLinePoint::Transform(::Blaze::VectorTransform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform);
}
// Autogenerated method: Blaze.CurveLinePoint.RecalculateBounds
void Blaze::CurveLinePoint::RecalculateBounds(::Blaze::VectorPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::RecalculateBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Blaze.CurveLinePoint.SampleAt
void Blaze::CurveLinePoint::SampleAt(float t, ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::SampleAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, byref(x), byref(y));
}
// Autogenerated method: Blaze.CurveLinePoint.Split
::Blaze::VectorPoint* Blaze::CurveLinePoint::Split(float t, ::Blaze::VectorPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::Split");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method, t, path);
}
// Autogenerated method: Blaze.CurveLinePoint.NormalAt
void Blaze::CurveLinePoint::NormalAt(float t, ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::NormalAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, byref(x), byref(y));
}
// Autogenerated method: Blaze.CurveLinePoint.StartNormal
void Blaze::CurveLinePoint::StartNormal(ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::StartNormal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(x), byref(y));
}
// Autogenerated method: Blaze.CurveLinePoint.EndNormal
void Blaze::CurveLinePoint::EndNormal(ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::EndNormal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(x), byref(y));
}
// Autogenerated method: Blaze.CurveLinePoint.ComputeLinePoints
void Blaze::CurveLinePoint::ComputeLinePoints(::Blaze::PointReceiver* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::ComputeLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Blaze.CurveLinePoint.Copy
::Blaze::VectorPoint* Blaze::CurveLinePoint::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.CurveLinePoint.ToString
::StringW Blaze::CurveLinePoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.CurveLinePoint.Multiply
void Blaze::CurveLinePoint::Multiply(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::Multiply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated method: Blaze.CurveLinePoint.Squash
void Blaze::CurveLinePoint::Squash(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::Squash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated method: Blaze.CurveLinePoint.Sheer
void Blaze::CurveLinePoint::Sheer(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CurveLinePoint::Sheer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.MoveToPoint
#include "Blaze/MoveToPoint.hpp"
// Including type: Blaze.PointReceiver
#include "Blaze/PointReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Blaze.VectorPoint ClosePoint
[[deprecated("Use field access instead!")]] ::Blaze::VectorPoint*& Blaze::MoveToPoint::dyn_ClosePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::MoveToPoint::dyn_ClosePoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClosePoint"))->offset;
  return *reinterpret_cast<::Blaze::VectorPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.MoveToPoint.ComputeLinePoints
void Blaze::MoveToPoint::ComputeLinePoints(::Blaze::PointReceiver* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::MoveToPoint::ComputeLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Blaze.MoveToPoint.Copy
::Blaze::VectorPoint* Blaze::MoveToPoint::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::MoveToPoint::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.MoveToPoint.ToString
::StringW Blaze::MoveToPoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::MoveToPoint::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.PointReceiver
#include "Blaze/PointReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Blaze.PointReceiver.get_ExtrudeBy
float Blaze::PointReceiver::get_ExtrudeBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::PointReceiver::get_ExtrudeBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::PointReceiver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.PointReceiver.set_ExtrudeBy
void Blaze::PointReceiver::set_ExtrudeBy(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::PointReceiver::set_ExtrudeBy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::PointReceiver*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.PointReceiver.get_SampleDistance
float Blaze::PointReceiver::get_SampleDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::PointReceiver::get_SampleDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::PointReceiver*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.PointReceiver.set_SampleDistance
void Blaze::PointReceiver::set_SampleDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::PointReceiver::set_SampleDistance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::PointReceiver*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.PointReceiver.MoveTo
void Blaze::PointReceiver::MoveTo(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::PointReceiver::MoveTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::PointReceiver*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Blaze.PointReceiver.AddPoint
void Blaze::PointReceiver::AddPoint(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::PointReceiver::AddPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::PointReceiver*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.QuadLinePoint
#include "Blaze/QuadLinePoint.hpp"
// Including type: Blaze.VectorTransform
#include "Blaze/VectorTransform.hpp"
// Including type: Blaze.VectorPath
#include "Blaze/VectorPath.hpp"
// Including type: Blaze.PointReceiver
#include "Blaze/PointReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Control1X
[[deprecated("Use field access instead!")]] float& Blaze::QuadLinePoint::dyn_Control1X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::dyn_Control1X");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Control1X"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Control1Y
[[deprecated("Use field access instead!")]] float& Blaze::QuadLinePoint::dyn_Control1Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::dyn_Control1Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Control1Y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.QuadLinePoint.NormalAt
void Blaze::QuadLinePoint::NormalAt(float t, ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::NormalAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::QuadLinePoint*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, byref(x), byref(y));
}
// Autogenerated method: Blaze.QuadLinePoint.StraightLineNormal
void Blaze::QuadLinePoint::StraightLineNormal(float dx, float dy, ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::StraightLineNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StraightLineNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dx), ::il2cpp_utils::ExtractType(dy), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dx, dy, byref(x), byref(y));
}
// Autogenerated method: Blaze.QuadLinePoint.Transform
void Blaze::QuadLinePoint::Transform(::Blaze::VectorTransform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform);
}
// Autogenerated method: Blaze.QuadLinePoint.StartNormal
void Blaze::QuadLinePoint::StartNormal(ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::StartNormal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(x), byref(y));
}
// Autogenerated method: Blaze.QuadLinePoint.EndNormal
void Blaze::QuadLinePoint::EndNormal(ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::EndNormal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(x), byref(y));
}
// Autogenerated method: Blaze.QuadLinePoint.Split
::Blaze::VectorPoint* Blaze::QuadLinePoint::Split(float t, ::Blaze::VectorPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::Split");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method, t, path);
}
// Autogenerated method: Blaze.QuadLinePoint.ComputeLinePoints
void Blaze::QuadLinePoint::ComputeLinePoints(::Blaze::PointReceiver* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::ComputeLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Blaze.QuadLinePoint.RecalculateBounds
void Blaze::QuadLinePoint::RecalculateBounds(::Blaze::VectorPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::RecalculateBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Blaze.QuadLinePoint.SampleAt
void Blaze::QuadLinePoint::SampleAt(float t, ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::SampleAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorLine*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, byref(x), byref(y));
}
// Autogenerated method: Blaze.QuadLinePoint.get_IsCurve
bool Blaze::QuadLinePoint::get_IsCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::get_IsCurve");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.QuadLinePoint.Copy
::Blaze::VectorPoint* Blaze::QuadLinePoint::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.QuadLinePoint.ToString
::StringW Blaze::QuadLinePoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.QuadLinePoint.Multiply
void Blaze::QuadLinePoint::Multiply(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::Multiply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated method: Blaze.QuadLinePoint.Squash
void Blaze::QuadLinePoint::Squash(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::Squash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated method: Blaze.QuadLinePoint.Sheer
void Blaze::QuadLinePoint::Sheer(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::QuadLinePoint::Sheer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.StraightLinePoint
#include "Blaze/StraightLinePoint.hpp"
// Including type: Blaze.VectorPath
#include "Blaze/VectorPath.hpp"
// Including type: Blaze.PointReceiver
#include "Blaze/PointReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Blaze.StraightLinePoint.Split
::Blaze::VectorPoint* Blaze::StraightLinePoint::Split(float t, ::Blaze::VectorPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::StraightLinePoint::Split");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method, t, path);
}
// Autogenerated method: Blaze.StraightLinePoint.SampleAt
void Blaze::StraightLinePoint::SampleAt(float t, ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::StraightLinePoint::SampleAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorLine*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, byref(x), byref(y));
}
// Autogenerated method: Blaze.StraightLinePoint.RecalculateBounds
void Blaze::StraightLinePoint::RecalculateBounds(::Blaze::VectorPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::StraightLinePoint::RecalculateBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Blaze.StraightLinePoint.ComputeLinePoints
void Blaze::StraightLinePoint::ComputeLinePoints(::Blaze::PointReceiver* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::StraightLinePoint::ComputeLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Blaze.StraightLinePoint.StartNormal
void Blaze::StraightLinePoint::StartNormal(ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::StraightLinePoint::StartNormal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(x), byref(y));
}
// Autogenerated method: Blaze.StraightLinePoint.EndNormal
void Blaze::StraightLinePoint::EndNormal(ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::StraightLinePoint::EndNormal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(x), byref(y));
}
// Autogenerated method: Blaze.StraightLinePoint.Copy
::Blaze::VectorPoint* Blaze::StraightLinePoint::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::StraightLinePoint::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.StraightLinePoint.ToString
::StringW Blaze::StraightLinePoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::StraightLinePoint::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.VectorLine
#include "Blaze/VectorLine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Close
[[deprecated("Use field access instead!")]] bool& Blaze::VectorLine::dyn_Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorLine::dyn_Close");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Close"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Length
[[deprecated("Use field access instead!")]] float& Blaze::VectorLine::dyn_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorLine::dyn_Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.VectorLine.SampleAt
void Blaze::VectorLine::SampleAt(float c, ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorLine::SampleAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorLine*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c, byref(x), byref(y));
}
// Autogenerated method: Blaze.VectorLine.get_IsClose
bool Blaze::VectorLine::get_IsClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorLine::get_IsClose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorLine.set_IsClose
void Blaze::VectorLine::set_IsClose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorLine::set_IsClose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.VectorLine.get_HasLine
bool Blaze::VectorLine::get_HasLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorLine::get_HasLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Blaze.VectorPath
#include "Blaze/VectorPath.hpp"
// Including type: Blaze.VectorPath/PathSegment
#include "Blaze/VectorPath_PathSegment.hpp"
// Including type: Blaze.MoveToPoint
#include "Blaze/MoveToPoint.hpp"
// Including type: Blaze.VectorPoint
#include "Blaze/VectorPoint.hpp"
// Including type: Blaze.StraightLinePoint
#include "Blaze/StraightLinePoint.hpp"
// Including type: Blaze.QuadLinePoint
#include "Blaze/QuadLinePoint.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single MinX
[[deprecated("Use field access instead!")]] float& Blaze::VectorPath::dyn_MinX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::dyn_MinX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MinY
[[deprecated("Use field access instead!")]] float& Blaze::VectorPath::dyn_MinY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::dyn_MinY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Width
[[deprecated("Use field access instead!")]] float& Blaze::VectorPath::dyn_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::dyn_Width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Height
[[deprecated("Use field access instead!")]] float& Blaze::VectorPath::dyn_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::dyn_Height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PathNodeCount
[[deprecated("Use field access instead!")]] int& Blaze::VectorPath::dyn_PathNodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::dyn_PathNodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PathNodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.MoveToPoint CloseNode
[[deprecated("Use field access instead!")]] ::Blaze::MoveToPoint*& Blaze::VectorPath::dyn_CloseNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::dyn_CloseNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CloseNode"))->offset;
  return *reinterpret_cast<::Blaze::MoveToPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.VectorPoint FirstPathNode
[[deprecated("Use field access instead!")]] ::Blaze::VectorPoint*& Blaze::VectorPath::dyn_FirstPathNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::dyn_FirstPathNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstPathNode"))->offset;
  return *reinterpret_cast<::Blaze::VectorPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.VectorPoint LatestPathNode
[[deprecated("Use field access instead!")]] ::Blaze::VectorPoint*& Blaze::VectorPath::dyn_LatestPathNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::dyn_LatestPathNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LatestPathNode"))->offset;
  return *reinterpret_cast<::Blaze::VectorPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean HoleSorted
[[deprecated("Use field access instead!")]] bool& Blaze::VectorPath::dyn_HoleSorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::dyn_HoleSorted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HoleSorted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.VectorPath.MoveTo
void Blaze::VectorPath::MoveTo(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::MoveTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Blaze.VectorPath.CopyInto
void Blaze::VectorPath::CopyInto(::Blaze::VectorPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::CopyInto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Blaze.VectorPath.Clear
void Blaze::VectorPath::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPath.AddPathNode
void Blaze::VectorPath::AddPathNode(::Blaze::VectorPoint* point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::AddPathNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPathNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point);
}
// Autogenerated method: Blaze.VectorPath.ClosePathFast
void Blaze::VectorPath::ClosePathFast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::ClosePathFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosePathFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPath.ClosePath
void Blaze::VectorPath::ClosePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::ClosePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPath.CloseLast
void Blaze::VectorPath::CloseLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::CloseLast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseLast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPath.LineTo
::Blaze::StraightLinePoint* Blaze::VectorPath::LineTo(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::LineTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LineTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::StraightLinePoint*, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Blaze.VectorPath.QuadraticCurveTo
::Blaze::QuadLinePoint* Blaze::VectorPath::QuadraticCurveTo(float cx, float cy, float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::QuadraticCurveTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuadraticCurveTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cx), ::il2cpp_utils::ExtractType(cy), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::QuadLinePoint*, false>(this, ___internal__method, cx, cy, x, y);
}
// Autogenerated method: Blaze.VectorPath.CurveTo
void Blaze::VectorPath::CurveTo(float c1x, float c1y, float c2x, float c2y, float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::CurveTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurveTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1x), ::il2cpp_utils::ExtractType(c1y), ::il2cpp_utils::ExtractType(c2x), ::il2cpp_utils::ExtractType(c2y), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c1x, c1y, c2x, c2y, x, y);
}
// Autogenerated method: Blaze.VectorPath.RecalculateMeta
void Blaze::VectorPath::RecalculateMeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::RecalculateMeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateMeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPath.RecalculateBounds
void Blaze::VectorPath::RecalculateBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::RecalculateBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPath.Sheer
void Blaze::VectorPath::Sheer(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::Sheer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sheer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(by)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated method: Blaze.VectorPath.Scale
void Blaze::VectorPath::Scale(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(by)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated method: Blaze.VectorPath.GetSignedArea
float Blaze::VectorPath::GetSignedArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::GetSignedArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSignedArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPath.get_Unclosed
bool Blaze::VectorPath::get_Unclosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::get_Unclosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unclosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPath.get_WasHoleSorted
bool Blaze::VectorPath::get_WasHoleSorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::get_WasHoleSorted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WasHoleSorted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPath.HoleSort
void Blaze::VectorPath::HoleSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::HoleSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HoleSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPath.Nearest
::Blaze::VectorPoint* Blaze::VectorPath::Nearest(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::Nearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Nearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Blaze.VectorPath.Nearest
::Blaze::VectorPoint* Blaze::VectorPath::Nearest(float x, float y, ::Blaze::VectorPoint* from, ::Blaze::VectorPoint* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::Nearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Nearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method, x, y, from, to);
}
// Autogenerated method: Blaze.VectorPath.Contains
bool Blaze::VectorPath::Contains(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Blaze.VectorPath.Contains
bool Blaze::VectorPath::Contains(float x, float y, ::Blaze::VectorPoint* from, ::Blaze::VectorPoint* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y, from, to);
}
// Autogenerated method: Blaze.VectorPath.GetVertices
void Blaze::VectorPath::GetVertices(::ArrayW<::UnityEngine::Vector3> vertices, ::ArrayW<::UnityEngine::Vector3> normals, float accuracy, float offsetX, float offsetY, float scale, ByRef<int> index, ::System::Collections::Generic::List_1<int>* contourStarts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::GetVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(accuracy), ::il2cpp_utils::ExtractType(offsetX), ::il2cpp_utils::ExtractType(offsetY), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(contourStarts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vertices, normals, accuracy, offsetX, offsetY, scale, byref(index), contourStarts);
}
// Autogenerated method: Blaze.VectorPath.GetVertexCount
int Blaze::VectorPath::GetVertexCount(float accuracy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::GetVertexCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accuracy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, accuracy);
}
// Autogenerated method: Blaze.VectorPath.ToString
::StringW Blaze::VectorPath::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.VectorPath/PathSegment
#include "Blaze/VectorPath_PathSegment.hpp"
// Including type: Blaze.VectorPoint
#include "Blaze/VectorPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Blaze.VectorPath Path
[[deprecated("Use field access instead!")]] ::Blaze::VectorPath*& Blaze::VectorPath::PathSegment::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::PathSegment::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::Blaze::VectorPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.VectorPoint Last
[[deprecated("Use field access instead!")]] ::Blaze::VectorPoint*& Blaze::VectorPath::PathSegment::dyn_Last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::PathSegment::dyn_Last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Last"))->offset;
  return *reinterpret_cast<::Blaze::VectorPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.VectorPoint First
[[deprecated("Use field access instead!")]] ::Blaze::VectorPoint*& Blaze::VectorPath::PathSegment::dyn_First() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::PathSegment::dyn_First");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "First"))->offset;
  return *reinterpret_cast<::Blaze::VectorPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.VectorPath/PathSegment.Contains
bool Blaze::VectorPath::PathSegment::Contains(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::PathSegment::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Blaze.VectorPath/PathSegment.Nearest
::Blaze::VectorPoint* Blaze::VectorPath::PathSegment::Nearest(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::PathSegment::Nearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Nearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Blaze.VectorPath/PathSegment.Remove
void Blaze::VectorPath::PathSegment::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPath::PathSegment::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Blaze.VectorPoint
#include "Blaze/VectorPoint.hpp"
// Including type: Blaze.VectorPath
#include "Blaze/VectorPath.hpp"
// Including type: Blaze.PointReceiver
#include "Blaze/PointReceiver.hpp"
// Including type: Blaze.VectorTransform
#include "Blaze/VectorTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single X
[[deprecated("Use field access instead!")]] float& Blaze::VectorPoint::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::dyn_X");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Y
[[deprecated("Use field access instead!")]] float& Blaze::VectorPoint::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::dyn_Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.VectorPoint Next
[[deprecated("Use field access instead!")]] ::Blaze::VectorPoint*& Blaze::VectorPoint::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Blaze::VectorPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.VectorPoint Previous
[[deprecated("Use field access instead!")]] ::Blaze::VectorPoint*& Blaze::VectorPoint::dyn_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::dyn_Previous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Previous"))->offset;
  return *reinterpret_cast<::Blaze::VectorPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Blaze.VectorPoint.get_Unloaded
bool Blaze::VectorPoint::get_Unloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::get_Unloaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPoint.RecalculateBounds
void Blaze::VectorPoint::RecalculateBounds(::Blaze::VectorPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::RecalculateBounds");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path);
}
// Autogenerated method: Blaze.VectorPoint.Split
::Blaze::VectorPoint* Blaze::VectorPoint::Split(float t, ::Blaze::VectorPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::Split");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method, t, path);
}
// Autogenerated method: Blaze.VectorPoint.ComputeLinePoints
void Blaze::VectorPoint::ComputeLinePoints(::Blaze::PointReceiver* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::ComputeLinePoints");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: Blaze.VectorPoint.get_IsCurve
bool Blaze::VectorPoint::get_IsCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::get_IsCurve");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPoint.get_HasLine
bool Blaze::VectorPoint::get_HasLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::get_HasLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPoint.StartNormal
void Blaze::VectorPoint::StartNormal(ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::StartNormal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(x), byref(y));
}
// Autogenerated method: Blaze.VectorPoint.EndNormal
void Blaze::VectorPoint::EndNormal(ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::EndNormal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(x), byref(y));
}
// Autogenerated method: Blaze.VectorPoint.Copy
::Blaze::VectorPoint* Blaze::VectorPoint::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPoint.GetShapeEnd
::Blaze::VectorPoint* Blaze::VectorPoint::GetShapeEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::GetShapeEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShapeEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::VectorPoint*, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPoint.Transform
void Blaze::VectorPoint::Transform(::Blaze::VectorTransform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::Transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform);
}
// Autogenerated method: Blaze.VectorPoint.get_IsClose
bool Blaze::VectorPoint::get_IsClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::get_IsClose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Blaze.VectorPoint.set_IsClose
void Blaze::VectorPoint::set_IsClose(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::set_IsClose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Blaze.VectorPoint.Multiply
void Blaze::VectorPoint::Multiply(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::Multiply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated method: Blaze.VectorPoint.Squash
void Blaze::VectorPoint::Squash(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::Squash");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated method: Blaze.VectorPoint.Sheer
void Blaze::VectorPoint::Sheer(float by) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::Sheer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::VectorPoint*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, by);
}
// Autogenerated method: Blaze.VectorPoint.ToString
::StringW Blaze::VectorPoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorPoint::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.VectorTransform
#include "Blaze/VectorTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Dx
[[deprecated("Use field access instead!")]] float& Blaze::VectorTransform::dyn_Dx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorTransform::dyn_Dx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dx"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Dy
[[deprecated("Use field access instead!")]] float& Blaze::VectorTransform::dyn_Dy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorTransform::dyn_Dy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dy"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Scale01
[[deprecated("Use field access instead!")]] float& Blaze::VectorTransform::dyn_Scale01() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorTransform::dyn_Scale01");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scale01"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Scale10
[[deprecated("Use field access instead!")]] float& Blaze::VectorTransform::dyn_Scale10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorTransform::dyn_Scale10");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scale10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Index
[[deprecated("Use field access instead!")]] int& Blaze::VectorTransform::dyn_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorTransform::dyn_Index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single XScale
[[deprecated("Use field access instead!")]] float& Blaze::VectorTransform::dyn_XScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorTransform::dyn_XScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single YScale
[[deprecated("Use field access instead!")]] float& Blaze::VectorTransform::dyn_YScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorTransform::dyn_YScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "YScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.VectorTransform Next
[[deprecated("Use field access instead!")]] ::Blaze::VectorTransform*& Blaze::VectorTransform::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::VectorTransform::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::Blaze::VectorTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Blaze.CanvasStraightLinePoint
#include "Blaze/CanvasStraightLinePoint.hpp"
// Including type: PowerUI.CanvasContext
#include "PowerUI/CanvasContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Blaze.CanvasStraightLinePoint.RenderLine
void Blaze::CanvasStraightLinePoint::RenderLine(::PowerUI::CanvasContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Blaze::CanvasStraightLinePoint::RenderLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Blaze::CanvasStraightLinePoint*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.JSArray
#include "PowerUI/JSArray.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PowerUI.JSObject> Values
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::JSObject*>*& PowerUI::JSArray::dyn_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSArray::dyn_Values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Values"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::JSObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.JSArray.get_internalLength
int PowerUI::JSArray::get_internalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSArray::get_internalLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.JSArray.push
void PowerUI::JSArray::push(::PowerUI::JSObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSArray::push");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.JSArray.get_Item
::PowerUI::JSObject* PowerUI::JSArray::get_Item(::StringW index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSArray::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::JSObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.JSArray.set_Item
void PowerUI::JSArray::set_Item(::StringW index, ::PowerUI::JSObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSArray::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: PowerUI.JSArray.ToJSONString
::StringW PowerUI::JSArray::ToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSArray::ToJSONString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.JSArray.ToString
::StringW PowerUI::JSArray::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSArray::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.JSArray.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::PowerUI::JSObject*>>* PowerUI::JSArray::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSArray::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::PowerUI::JSObject*>>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.JSObject
#include "PowerUI/JSObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.JSObject.get_internalLength
int PowerUI::JSObject::get_internalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSObject::get_internalLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.JSObject.get_length
int PowerUI::JSObject::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSObject::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.JSObject.push
void PowerUI::JSObject::push(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSObject::push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.JSObject.push
void PowerUI::JSObject::push(::PowerUI::JSObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSObject::push");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.JSObject.get_Item
::PowerUI::JSObject* PowerUI::JSObject::get_Item(::StringW index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSObject::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::JSObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.JSObject.set_Item
void PowerUI::JSObject::set_Item(::StringW index, ::PowerUI::JSObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSObject::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: PowerUI.JSObject.ToJSONString
::StringW PowerUI::JSObject::ToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSObject::ToJSONString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.JSObject.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* PowerUI::JSObject::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSObject::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.JSObject.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::PowerUI::JSObject*>>* PowerUI::JSObject::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSObject::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::PowerUI::JSObject*>>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.JSON
#include "PowerUI/JSON.hpp"
// Including type: PowerUI.JSObject
#include "PowerUI/JSObject.hpp"
// Including type: Nitro.CodeLexer
#include "Nitro/CodeLexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.JSON.Stringify
::StringW PowerUI::JSON::Stringify(::PowerUI::JSObject* jsonObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSON::Stringify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "JSON", "Stringify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jsonObject);
}
// Autogenerated method: PowerUI.JSON.Parse
::PowerUI::JSObject* PowerUI::JSON::Parse(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSON::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "JSON", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::JSObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json);
}
// Autogenerated method: PowerUI.JSON.ReadObject
::PowerUI::JSObject* PowerUI::JSON::ReadObject(::Nitro::CodeLexer* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSON::ReadObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "JSON", "ReadObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::JSObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parser);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.JSValue
#include "PowerUI/JSValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Value
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::JSValue::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSValue::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.JSValue.ToJSONString
::StringW PowerUI::JSValue::ToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSValue::ToJSONString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::JSObject*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.JSValue.ToString
::StringW PowerUI::JSValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::JSValue::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.Ajax
#include "PowerUI/Ajax.hpp"
// Including type: Nitro.DynamicMethod`1
#include "Nitro/DynamicMethod_1.hpp"
// Including type: UnityHttp.HttpRequest
#include "UnityHttp/HttpRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Ajax.Get
void PowerUI::Ajax::Get(::StringW url, ::Nitro::DynamicMethod_1<::Nitro::Void>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Ajax::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Ajax", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, callback);
}
// Autogenerated method: PowerUI.Ajax.Get
void PowerUI::Ajax::Get(::StringW url, ::Nitro::DynamicMethod_1<::Nitro::Void>* callback, ::Il2CppObject* extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Ajax::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Ajax", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(extraData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, callback, extraData);
}
// Autogenerated method: PowerUI.Ajax.Post
void PowerUI::Ajax::Post(::StringW url, ::StringW postData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Ajax::Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Ajax", "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(postData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, postData);
}
// Autogenerated method: PowerUI.Ajax.Post
void PowerUI::Ajax::Post(::StringW url, ::StringW postData, ::Nitro::DynamicMethod_1<::Nitro::Void>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Ajax::Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Ajax", "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(postData), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, postData, callback);
}
// Autogenerated method: PowerUI.Ajax.Post
void PowerUI::Ajax::Post(::StringW url, ::StringW postData, ::Nitro::DynamicMethod_1<::Nitro::Void>* callback, ::Il2CppObject* extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Ajax::Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Ajax", "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(postData), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(extraData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, postData, callback, extraData);
}
// Autogenerated method: PowerUI.Ajax.OnAjaxDone
void PowerUI::Ajax::OnAjaxDone(::UnityHttp::HttpRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Ajax::OnAjaxDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Ajax", "OnAjaxDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.AttributeLookup
#include "PowerUI/AttributeLookup.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.AttributeLookupLink
#include "PowerUI/AttributeLookupLink.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PowerUI.AttributeLookupLink> Lookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::AttributeLookupLink*>*& PowerUI::AttributeLookup::dyn_Lookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AttributeLookup::dyn_Lookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Lookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::AttributeLookupLink*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.AttributeLookup.get_Count
int PowerUI::AttributeLookup::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AttributeLookup::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.AttributeLookup.Add
void PowerUI::AttributeLookup::Add(::StringW key, ::PowerUI::Element* ele) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AttributeLookup::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(ele)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, ele);
}
// Autogenerated method: PowerUI.AttributeLookup.Remove
bool PowerUI::AttributeLookup::Remove(::StringW key, ::PowerUI::Element* ele) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AttributeLookup::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(ele)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, ele);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.AttributeLookupLink
#include "PowerUI/AttributeLookupLink.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element Element
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::AttributeLookupLink::dyn_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AttributeLookupLink::dyn_Element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Element"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.AttributeLookupLink Next
[[deprecated("Use field access instead!")]] ::PowerUI::AttributeLookupLink*& PowerUI::AttributeLookupLink::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AttributeLookupLink::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::PowerUI::AttributeLookupLink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.AttributeLookup
#include "PowerUI/AttributeLookup.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.Window
#include "PowerUI/Window.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
// Including type: PowerUI.Renderman
#include "PowerUI/Renderman.hpp"
// Including type: PowerUI.UICode
#include "PowerUI/UICode.hpp"
// Including type: PowerUI.Css.StyleSheet
#include "PowerUI/Css/StyleSheet.hpp"
// Including type: PowerUI.OnSizeChange
#include "PowerUI/OnSizeChange.hpp"
// Including type: PowerUI.InputEvent
#include "PowerUI/InputEvent.hpp"
// Including type: PowerUI.TitleChange
#include "PowerUI/TitleChange.hpp"
// Including type: Nitro.DynamicMethod`1
#include "Nitro/DynamicMethod_1.hpp"
// Including type: PowerUI.DynamicFont
#include "PowerUI/DynamicFont.hpp"
// Including type: Nitro.NitroDomainManager
#include "Nitro/NitroDomainManager.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
// Including type: PowerUI.DocumentElements
#include "PowerUI/DocumentElements.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PowerUI.Css.SelectorStyle
#include "PowerUI/Css/SelectorStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.StyleSheet DefaultStyleSheet
::PowerUI::Css::StyleSheet* PowerUI::Document::_get_DefaultStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::_get_DefaultStyleSheet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::StyleSheet*>("PowerUI", "Document", "DefaultStyleSheet"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.StyleSheet DefaultStyleSheet
void PowerUI::Document::_set_DefaultStyleSheet(::PowerUI::Css::StyleSheet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::_set_DefaultStyleSheet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Document", "DefaultStyleSheet", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PowerUI.AttributeLookup> AttributeIndex
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::AttributeLookup*>*& PowerUI::Document::dyn_AttributeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_AttributeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AttributeIndex"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::AttributeLookup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element html
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::Document::dyn_html() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_html");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "html"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element body
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::Document::dyn_body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "body"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Window window
[[deprecated("Use field access instead!")]] ::PowerUI::Window*& PowerUI::Document::dyn_window() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_window");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "window"))->offset;
  return *reinterpret_cast<::PowerUI::Window**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FilePath location
[[deprecated("Use field access instead!")]] ::PowerUI::FilePath*& PowerUI::Document::dyn_location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "location"))->offset;
  return *reinterpret_cast<::PowerUI::FilePath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AotDocument
[[deprecated("Use field access instead!")]] bool& PowerUI::Document::dyn_AotDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_AotDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AotDocument"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Renderman Renderer
[[deprecated("Use field access instead!")]] ::PowerUI::Renderman*& PowerUI::Document::dyn_Renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_Renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Renderer"))->offset;
  return *reinterpret_cast<::PowerUI::Renderman**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] CodeBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& PowerUI::Document::dyn_CodeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_CodeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CodeBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UICode CodeInstance
[[deprecated("Use field access instead!")]] ::PowerUI::UICode*& PowerUI::Document::dyn_CodeInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_CodeInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CodeInstance"))->offset;
  return *reinterpret_cast<::PowerUI::UICode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element DropdownBox
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::Document::dyn_DropdownBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_DropdownBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DropdownBox"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] StyleBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& PowerUI::Document::dyn_StyleBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_StyleBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StyleBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean FinishedParsing
[[deprecated("Use field access instead!")]] bool& PowerUI::Document::dyn_FinishedParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_FinishedParsing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FinishedParsing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.StyleSheet Style
[[deprecated("Use field access instead!")]] ::PowerUI::Css::StyleSheet*& PowerUI::Document::dyn_Style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_Style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Style"))->offset;
  return *reinterpret_cast<::PowerUI::Css::StyleSheet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String CurrentTitle
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Document::dyn_CurrentTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_CurrentTitle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentTitle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ScriptLocation
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Document::dyn_ScriptLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_ScriptLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScriptLocation"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.OnSizeChange OnResized
[[deprecated("Use field access instead!")]] ::PowerUI::OnSizeChange*& PowerUI::Document::dyn_OnResized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_OnResized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnResized"))->offset;
  return *reinterpret_cast<::PowerUI::OnSizeChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String CurrentTooltip
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::Document::dyn_CurrentTooltip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_CurrentTooltip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentTooltip"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.InputEvent KeyUp
[[deprecated("Use field access instead!")]] ::PowerUI::InputEvent*& PowerUI::Document::dyn_KeyUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_KeyUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyUp"))->offset;
  return *reinterpret_cast<::PowerUI::InputEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.InputEvent KeyDown
[[deprecated("Use field access instead!")]] ::PowerUI::InputEvent*& PowerUI::Document::dyn_KeyDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_KeyDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyDown"))->offset;
  return *reinterpret_cast<::PowerUI::InputEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.InputEvent MouseMove
[[deprecated("Use field access instead!")]] ::PowerUI::InputEvent*& PowerUI::Document::dyn_MouseMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_MouseMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MouseMove"))->offset;
  return *reinterpret_cast<::PowerUI::InputEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.TitleChange OnTitleChange
[[deprecated("Use field access instead!")]] ::PowerUI::TitleChange*& PowerUI::Document::dyn_OnTitleChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_OnTitleChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTitleChange"))->offset;
  return *reinterpret_cast<::PowerUI::TitleChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.TitleChange OnTooltipChange
[[deprecated("Use field access instead!")]] ::PowerUI::TitleChange*& PowerUI::Document::dyn_OnTooltipChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_OnTooltipChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnTooltipChange"))->offset;
  return *reinterpret_cast<::PowerUI::TitleChange**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Nitro.DynamicMethod`1<Nitro.Void> onkeyup
[[deprecated("Use field access instead!")]] ::Nitro::DynamicMethod_1<::Nitro::Void>*& PowerUI::Document::dyn_onkeyup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_onkeyup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onkeyup"))->offset;
  return *reinterpret_cast<::Nitro::DynamicMethod_1<::Nitro::Void>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Nitro.DynamicMethod`1<Nitro.Void> onresize
[[deprecated("Use field access instead!")]] ::Nitro::DynamicMethod_1<::Nitro::Void>*& PowerUI::Document::dyn_onresize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_onresize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onresize"))->offset;
  return *reinterpret_cast<::Nitro::DynamicMethod_1<::Nitro::Void>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Nitro.DynamicMethod`1<Nitro.Void> onkeydown
[[deprecated("Use field access instead!")]] ::Nitro::DynamicMethod_1<::Nitro::Void>*& PowerUI::Document::dyn_onkeydown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_onkeydown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onkeydown"))->offset;
  return *reinterpret_cast<::Nitro::DynamicMethod_1<::Nitro::Void>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Nitro.DynamicMethod`1<Nitro.Void> onmousemove
[[deprecated("Use field access instead!")]] ::Nitro::DynamicMethod_1<::Nitro::Void>*& PowerUI::Document::dyn_onmousemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_onmousemove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onmousemove"))->offset;
  return *reinterpret_cast<::Nitro::DynamicMethod_1<::Nitro::Void>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,PowerUI.DynamicFont> ActiveFonts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::DynamicFont*>*& PowerUI::Document::dyn_ActiveFonts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_ActiveFonts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveFonts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::DynamicFont*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Nitro.NitroDomainManager SecurityDomain
[[deprecated("Use field access instead!")]] ::Nitro::NitroDomainManager*& PowerUI::Document::dyn_SecurityDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::dyn_SecurityDomain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecurityDomain"))->offset;
  return *reinterpret_cast<::Nitro::NitroDomainManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Document.get_AttributesCached
bool PowerUI::Document::get_AttributesCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::get_AttributesCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributesCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.RemoveCachedElement
void PowerUI::Document::RemoveCachedElement(::PowerUI::Element* ele) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::RemoveCachedElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCachedElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ele)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ele);
}
// Autogenerated method: PowerUI.Document.IndexAttribute
void PowerUI::Document::IndexAttribute(::StringW attrib) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::IndexAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrib)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrib);
}
// Autogenerated method: PowerUI.Document.StartAttributeIndex
void PowerUI::Document::StartAttributeIndex(::StringW attrib) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::StartAttributeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartAttributeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrib)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrib);
}
// Autogenerated method: PowerUI.Document.add_KeyUp
void PowerUI::Document::add_KeyUp(::PowerUI::InputEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::add_KeyUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_KeyUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Document.remove_KeyUp
void PowerUI::Document::remove_KeyUp(::PowerUI::InputEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::remove_KeyUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_KeyUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Document.add_KeyDown
void PowerUI::Document::add_KeyDown(::PowerUI::InputEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::add_KeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_KeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Document.remove_KeyDown
void PowerUI::Document::remove_KeyDown(::PowerUI::InputEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::remove_KeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_KeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Document.add_MouseMove
void PowerUI::Document::add_MouseMove(::PowerUI::InputEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::add_MouseMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_MouseMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Document.remove_MouseMove
void PowerUI::Document::remove_MouseMove(::PowerUI::InputEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::remove_MouseMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_MouseMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Document.GetOrCreateFont
::PowerUI::DynamicFont* PowerUI::Document::GetOrCreateFont(::StringW fontName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::GetOrCreateFont");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateFont", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontName)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::DynamicFont*, false>(this, ___internal__method, fontName);
}
// Autogenerated method: PowerUI.Document.GetFont
::PowerUI::DynamicFont* PowerUI::Document::GetFont(::StringW fontName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::GetFont");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFont", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontName)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::DynamicFont*, false>(this, ___internal__method, fontName);
}
// Autogenerated method: PowerUI.Document.write
void PowerUI::Document::write(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: PowerUI.Document.clear
void PowerUI::Document::clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.ClearStyle
void PowerUI::Document::ClearStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::ClearStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.ClearEvents
void PowerUI::Document::ClearEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::ClearEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.RunKeyUp
bool PowerUI::Document::RunKeyUp(::PowerUI::UIEvent* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::RunKeyUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunKeyUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e);
}
// Autogenerated method: PowerUI.Document.RunMouseMove
bool PowerUI::Document::RunMouseMove(::PowerUI::UIEvent* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::RunMouseMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunMouseMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e);
}
// Autogenerated method: PowerUI.Document.RunKeyDown
bool PowerUI::Document::RunKeyDown(::PowerUI::UIEvent* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::RunKeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunKeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e);
}
// Autogenerated method: PowerUI.Document.get_basepath
::StringW PowerUI::Document::get_basepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::get_basepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_basepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.get_title
::StringW PowerUI::Document::get_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::get_title");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_title", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.set_title
void PowerUI::Document::set_title(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::set_title");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_title", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Document.get_tooltip
::StringW PowerUI::Document::get_tooltip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::get_tooltip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tooltip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.set_tooltip
void PowerUI::Document::set_tooltip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::set_tooltip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tooltip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Document.get_Item
::Il2CppObject* PowerUI::Document::get_Item(::StringW index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.Document.set_Item
void PowerUI::Document::set_Item(::StringW index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: PowerUI.Document.createElement
::PowerUI::Element* PowerUI::Document::createElement(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::createElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method, tag);
}
// Autogenerated method: PowerUI.Document.OnWindowOpen
::Il2CppObject* PowerUI::Document::OnWindowOpen(::ArrayW<::Il2CppObject*> extra) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::OnWindowOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWindowOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extra)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, extra);
}
// Autogenerated method: PowerUI.Document.Run
::Il2CppObject* PowerUI::Document::Run(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, args);
}
// Autogenerated method: PowerUI.Document.RunLiteral
::Il2CppObject* PowerUI::Document::RunLiteral(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::RunLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, args);
}
// Autogenerated method: PowerUI.Document.RunLiteral
::Il2CppObject* PowerUI::Document::RunLiteral(::StringW name, ::PowerUI::Element* element, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::RunLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, element, args);
}
// Autogenerated method: PowerUI.Document.RunLiteral
::Il2CppObject* PowerUI::Document::RunLiteral(::StringW name, ::ArrayW<::Il2CppObject*> args, bool optional) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::RunLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(optional)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, args, optional);
}
// Autogenerated method: PowerUI.Document.RunLiteral
::Il2CppObject* PowerUI::Document::RunLiteral(::StringW name, ::PowerUI::Element* element, ::ArrayW<::Il2CppObject*> args, bool optional) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::RunLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(optional)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, element, args, optional);
}
// Autogenerated method: PowerUI.Document.RunOptionally
::Il2CppObject* PowerUI::Document::RunOptionally(::StringW name, ::PowerUI::Element* element, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::RunOptionally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunOptionally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, element, args);
}
// Autogenerated method: PowerUI.Document.RunOptionally
::Il2CppObject* PowerUI::Document::RunOptionally(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::RunOptionally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunOptionally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, args);
}
// Autogenerated method: PowerUI.Document.AddStyle
void PowerUI::Document::AddStyle(::StringW css) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::AddStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(css)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, css);
}
// Autogenerated method: PowerUI.Document.AddStyle
void PowerUI::Document::AddStyle(::StringW css, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::AddStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(css), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, css, index);
}
// Autogenerated method: PowerUI.Document.GetStyleIndex
int PowerUI::Document::GetStyleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::GetStyleIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStyleIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.TryStyle
bool PowerUI::Document::TryStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::TryStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.AddCode
void PowerUI::Document::AddCode(::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::AddCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code);
}
// Autogenerated method: PowerUI.Document.AddCode
void PowerUI::Document::AddCode(::StringW code, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::AddCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, index);
}
// Autogenerated method: PowerUI.Document.ClearCode
void PowerUI::Document::ClearCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::ClearCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.GetCodeIndex
int PowerUI::Document::GetCodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::GetCodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.TryCompile
bool PowerUI::Document::TryCompile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::TryCompile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryCompile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.get_allElements
::PowerUI::DocumentElements* PowerUI::Document::get_allElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::get_allElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::DocumentElements*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.getElementByTagName
::PowerUI::Element* PowerUI::Document::getElementByTagName(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::getElementByTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementByTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method, tag);
}
// Autogenerated method: PowerUI.Document.getElementsByTagName
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Document::getElementsByTagName(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::getElementsByTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsByTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Element*>*, false>(this, ___internal__method, tag);
}
// Autogenerated method: PowerUI.Document.getElementsByAttribute
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Document::getElementsByAttribute(::StringW property, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::getElementsByAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsByAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Element*>*, false>(this, ___internal__method, property, value);
}
// Autogenerated method: PowerUI.Document.getElementByAttribute
::PowerUI::Element* PowerUI::Document::getElementByAttribute(::StringW property, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::getElementByAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementByAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method, property, value);
}
// Autogenerated method: PowerUI.Document.getElementsByClassName
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Document::getElementsByClassName(::StringW className) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::getElementsByClassName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsByClassName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(className)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Element*>*, false>(this, ___internal__method, className);
}
// Autogenerated method: PowerUI.Document.getElementById
::PowerUI::Element* PowerUI::Document::getElementById(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::getElementById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method, id);
}
// Autogenerated method: PowerUI.Document.getStyleBySelector
::PowerUI::Css::SelectorStyle* PowerUI::Document::getStyleBySelector(::StringW selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::getStyleBySelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getStyleBySelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selector)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::SelectorStyle*, false>(this, ___internal__method, selector);
}
// Autogenerated method: PowerUI.Document.get_innerHTML
::StringW PowerUI::Document::get_innerHTML() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::get_innerHTML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_innerHTML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Document.set_innerHTML
void PowerUI::Document::set_innerHTML(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::set_innerHTML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_innerHTML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Document.NewBody
void PowerUI::Document::NewBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Document::NewBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: PowerUI.Css.ElementStyle
#include "PowerUI/Css/ElementStyle.hpp"
// Including type: PowerUI.HtmlTagHandler
#include "PowerUI/HtmlTagHandler.hpp"
// Including type: PowerUI.InputTag
#include "PowerUI/InputTag.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PowerUI.OnDomEvent
#include "PowerUI/OnDomEvent.hpp"
// Including type: PowerUI.AttributeLookup
#include "PowerUI/AttributeLookup.hpp"
// Including type: Wrench.MLLexer
#include "Wrench/MLLexer.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
// Including type: PowerUI.Css.SelectorType
#include "PowerUI/Css/SelectorType.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: PowerUI.UIAnimation
#include "PowerUI/UIAnimation.hpp"
// Including type: PowerUI.DynamicFont
#include "PowerUI/DynamicFont.hpp"
// Including type: PowerUI.Text3D
#include "PowerUI/Text3D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: PowerUI.CanvasContext
#include "PowerUI/CanvasContext.hpp"
// Including type: PowerUI.FormTag
#include "PowerUI/FormTag.hpp"
// Including type: Wrench.TagHandler
#include "Wrench/TagHandler.hpp"
// Including type: Wrench.MLVariableElement
#include "Wrench/MLVariableElement.hpp"
// Including type: Wrench.MLTextElement
#include "Wrench/MLTextElement.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object Data
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PowerUI::Element::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HScrollbar
[[deprecated("Use field access instead!")]] bool& PowerUI::Element::dyn_HScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_HScrollbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HScrollbar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean VScrollbar
[[deprecated("Use field access instead!")]] bool& PowerUI::Element::dyn_VScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_VScrollbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VScrollbar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Document Document
[[deprecated("Use field access instead!")]] ::PowerUI::Document*& PowerUI::Element::dyn_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_Document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Document"))->offset;
  return *reinterpret_cast<::PowerUI::Document**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element ParentNode
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::Element::dyn_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_ParentNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParentNode"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ElementStyle Style
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ElementStyle*& PowerUI::Element::dyn_Style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_Style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Style"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ElementStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.HtmlTagHandler Handler
[[deprecated("Use field access instead!")]] ::PowerUI::HtmlTagHandler*& PowerUI::Element::dyn_Handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_Handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handler"))->offset;
  return *reinterpret_cast<::PowerUI::HtmlTagHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.MouseOverState MousedOver
[[deprecated("Use field access instead!")]] ::PowerUI::MouseOverState& PowerUI::Element::dyn_MousedOver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_MousedOver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MousedOver"))->offset;
  return *reinterpret_cast<::PowerUI::MouseOverState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.InputTag VerticalScrollbar
[[deprecated("Use field access instead!")]] ::PowerUI::InputTag*& PowerUI::Element::dyn_VerticalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_VerticalScrollbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VerticalScrollbar"))->offset;
  return *reinterpret_cast<::PowerUI::InputTag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<PowerUI.Element> ChildNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PowerUI::Element*>*& PowerUI::Element::dyn_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_ChildNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChildNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PowerUI::Element*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.InputTag HorizontalScrollbar
[[deprecated("Use field access instead!")]] ::PowerUI::InputTag*& PowerUI::Element::dyn_HorizontalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_HorizontalScrollbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HorizontalScrollbar"))->offset;
  return *reinterpret_cast<::PowerUI::InputTag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PowerUI.Element> KidsToRender
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PowerUI::Element*>*& PowerUI::Element::dyn_KidsToRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_KidsToRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KidsToRender"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PowerUI::Element*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsRebuildingChildren
[[deprecated("Use field access instead!")]] bool& PowerUI::Element::dyn_IsRebuildingChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_IsRebuildingChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsRebuildingChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnKeyUp
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnKeyUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnKeyUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnKeyUp"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnKeyDown
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnKeyDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnKeyDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnKeyDown"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnMouseUp
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnMouseUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnMouseUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnMouseUp"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnMouseOut
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnMouseOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnMouseOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnMouseOut"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnMouseDown
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnMouseDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnMouseDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnMouseDown"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnMouseMove
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnMouseMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnMouseMove");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnMouseMove"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnMouseOver
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnMouseOver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnMouseOver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnMouseOver"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnLoadedEvent
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnLoadedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnLoadedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnLoadedEvent"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnFocus
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnFocus"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnBlur
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnBlur");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnBlur"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDomEvent OnClick
[[deprecated("Use field access instead!")]] ::PowerUI::OnDomEvent*& PowerUI::Element::dyn_OnClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_OnClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnClick"))->offset;
  return *reinterpret_cast<::PowerUI::OnDomEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element VirtualAfter
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::Element::dyn_VirtualAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_VirtualAfter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VirtualAfter"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element VirtualBefore
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::Element::dyn_VirtualBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::dyn_VirtualBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VirtualBefore"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.Element.AddToAttributeLookups
void PowerUI::Element::AddToAttributeLookups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::AddToAttributeLookups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToAttributeLookups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.AddToAttributeLookup
void PowerUI::Element::AddToAttributeLookup(::StringW attrib, ::PowerUI::AttributeLookup* lookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::AddToAttributeLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToAttributeLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrib), ::il2cpp_utils::ExtractType(lookup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrib, lookup);
}
// Autogenerated method: PowerUI.Element.add_OnKeyUp
void PowerUI::Element::add_OnKeyUp(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnKeyUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnKeyUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnKeyUp
void PowerUI::Element::remove_OnKeyUp(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnKeyUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnKeyUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add_OnKeyDown
void PowerUI::Element::add_OnKeyDown(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnKeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnKeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnKeyDown
void PowerUI::Element::remove_OnKeyDown(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnKeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnKeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add_OnMouseUp
void PowerUI::Element::add_OnMouseUp(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnMouseUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnMouseUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnMouseUp
void PowerUI::Element::remove_OnMouseUp(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnMouseUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnMouseUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add_OnMouseOut
void PowerUI::Element::add_OnMouseOut(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnMouseOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnMouseOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnMouseOut
void PowerUI::Element::remove_OnMouseOut(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnMouseOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnMouseOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add_OnMouseDown
void PowerUI::Element::add_OnMouseDown(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnMouseDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnMouseDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnMouseDown
void PowerUI::Element::remove_OnMouseDown(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnMouseDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnMouseDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add_OnMouseMove
void PowerUI::Element::add_OnMouseMove(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnMouseMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnMouseMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnMouseMove
void PowerUI::Element::remove_OnMouseMove(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnMouseMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnMouseMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add_OnMouseOver
void PowerUI::Element::add_OnMouseOver(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnMouseOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnMouseOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnMouseOver
void PowerUI::Element::remove_OnMouseOver(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnMouseOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnMouseOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add_OnLoadedEvent
void PowerUI::Element::add_OnLoadedEvent(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnLoadedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnLoadedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnLoadedEvent
void PowerUI::Element::remove_OnLoadedEvent(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnLoadedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnLoadedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add_OnFocus
void PowerUI::Element::add_OnFocus(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnFocus
void PowerUI::Element::remove_OnFocus(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add_OnBlur
void PowerUI::Element::add_OnBlur(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnBlur
void PowerUI::Element::remove_OnBlur(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add_OnClick
void PowerUI::Element::add_OnClick(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add_OnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.remove_OnClick
void PowerUI::Element::remove_OnClick(::PowerUI::OnDomEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::remove_OnClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.SetDocument
void PowerUI::Element::SetDocument(::PowerUI::Document* document) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::SetDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(document)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, document);
}
// Autogenerated method: PowerUI.Element.OnLoaded
void PowerUI::Element::OnLoaded(::StringW objectLoaded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::OnLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectLoaded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, objectLoaded);
}
// Autogenerated method: PowerUI.Element.Focus
void PowerUI::Element::Focus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::Focus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Focus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.Unfocus
void PowerUI::Element::Unfocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::Unfocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unfocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.OnKeyPress
void PowerUI::Element::OnKeyPress(::PowerUI::UIEvent* pressEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::OnKeyPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnKeyPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressEvent);
}
// Autogenerated method: PowerUI.Element.get_HasBackground
bool PowerUI::Element::get_HasBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_HasBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.RefreshSelector
void PowerUI::Element::RefreshSelector(::PowerUI::Css::SelectorType type, ::StringW selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::RefreshSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(selector)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, selector);
}
// Autogenerated method: PowerUI.Element.getElementByTagName
::PowerUI::Element* PowerUI::Element::getElementByTagName(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getElementByTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementByTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method, tag);
}
// Autogenerated method: PowerUI.Element.getElementsByTagName
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Element::getElementsByTagName(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getElementsByTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsByTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Element*>*, false>(this, ___internal__method, tag);
}
// Autogenerated method: PowerUI.Element.getElementsByTagName
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Element::getElementsByTagName(::StringW tag, bool stopWithOne) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getElementsByTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsByTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(stopWithOne)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Element*>*, false>(this, ___internal__method, tag, stopWithOne);
}
// Autogenerated method: PowerUI.Element.getElementsByTagName
bool PowerUI::Element::getElementsByTagName(::StringW tag, bool stopWithOne, ::System::Collections::Generic::List_1<::PowerUI::Element*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getElementsByTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsByTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(stopWithOne), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tag, stopWithOne, results);
}
// Autogenerated method: PowerUI.Element.getElementsByClassName
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Element::getElementsByClassName(::StringW className) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getElementsByClassName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsByClassName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(className)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Element*>*, false>(this, ___internal__method, className);
}
// Autogenerated method: PowerUI.Element.getElementsByClassName
void PowerUI::Element::getElementsByClassName(::ArrayW<::StringW> classes, ::System::Collections::Generic::List_1<::PowerUI::Element*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getElementsByClassName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsByClassName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(classes), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, classes, results);
}
// Autogenerated method: PowerUI.Element.getElementsByAttribute
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Element::getElementsByAttribute(::StringW property, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getElementsByAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsByAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Element*>*, false>(this, ___internal__method, property, value);
}
// Autogenerated method: PowerUI.Element.getElementsWithProperty
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Element::getElementsWithProperty(::StringW property, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getElementsWithProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsWithProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Element*>*, false>(this, ___internal__method, property, value);
}
// Autogenerated method: PowerUI.Element.getElementsByAttribute
void PowerUI::Element::getElementsByAttribute(::StringW property, ::StringW value, ::System::Collections::Generic::List_1<::PowerUI::Element*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getElementsByAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementsByAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, value, results);
}
// Autogenerated method: PowerUI.Element.getElementByAttribute
::PowerUI::Element* PowerUI::Element::getElementByAttribute(::StringW property, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getElementByAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getElementByAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method, property, value);
}
// Autogenerated method: PowerUI.Element.SetWidthForKids
void PowerUI::Element::SetWidthForKids(::PowerUI::Css::ComputedStyle* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::SetWidthForKids");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWidthForKids", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: PowerUI.Element.SetHeightForKids
void PowerUI::Element::SetHeightForKids(::PowerUI::Css::ComputedStyle* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::SetHeightForKids");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHeightForKids", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: PowerUI.Element.SetDimensionForKids
void PowerUI::Element::SetDimensionForKids(::PowerUI::Css::ComputedStyle* parent, bool isWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::SetDimensionForKids");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDimensionForKids", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(isWidth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, isWidth);
}
// Autogenerated method: PowerUI.Element.ToTextString
::StringW PowerUI::Element::ToTextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::ToTextString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Element*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.appendTextContent
void PowerUI::Element::appendTextContent(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::appendTextContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "appendTextContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: PowerUI.Element.appendInnerHTML
void PowerUI::Element::appendInnerHTML(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::appendInnerHTML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "appendInnerHTML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: PowerUI.Element.get_textContent
::StringW PowerUI::Element::get_textContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_textContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_textContent
void PowerUI::Element::set_textContent(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_textContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_tagName
::StringW PowerUI::Element::get_tagName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_tagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_className
::StringW PowerUI::Element::get_className() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_className");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_className", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_className
void PowerUI::Element::set_className(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_className");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_className", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_id
::StringW PowerUI::Element::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_id
void PowerUI::Element::set_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_innerHTML
::StringW PowerUI::Element::get_innerHTML() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_innerHTML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_innerHTML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_innerHTML
void PowerUI::Element::set_innerHTML(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_innerHTML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_innerHTML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.RemovedFromDOM
void PowerUI::Element::RemovedFromDOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::RemovedFromDOM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovedFromDOM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.WentOffScreen
void PowerUI::Element::WentOffScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::WentOffScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WentOffScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.ClearChildNodes
void PowerUI::Element::ClearChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::ClearChildNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_childNodes
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Element::get_childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_childNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::PowerUI::Element*>*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_childNodes
void PowerUI::Element::set_childNodes(::System::Collections::Generic::List_1<::PowerUI::Element*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_childNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_childNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.appendChild
::PowerUI::Element* PowerUI::Element::appendChild(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::appendChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "appendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method, text);
}
// Autogenerated method: PowerUI.Element.appendChild
void PowerUI::Element::appendChild(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::appendChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "appendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.Element.AppendNewChild
void PowerUI::Element::AppendNewChild(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::AppendNewChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendNewChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.Element.get_isRooted
bool PowerUI::Element::get_isRooted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_isRooted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRooted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_document
::PowerUI::Document* PowerUI::Element::get_document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Document*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_contentDocument
::PowerUI::Document* PowerUI::Element::get_contentDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_contentDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Document*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.isChild
bool PowerUI::Element::isChild(::PowerUI::Element* childElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::isChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "isChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childElement)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, childElement);
}
// Autogenerated method: PowerUI.Element.removeChild
void PowerUI::Element::removeChild(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::removeChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "removeChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.Element.scrollBy
void PowerUI::Element::scrollBy(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::scrollBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "scrollBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Element.scrollTo
void PowerUI::Element::scrollTo(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::scrollTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "scrollTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Element.RequireLayout
void PowerUI::Element::RequireLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::RequireLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequireLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_offsetLeft
int PowerUI::Element::get_offsetLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_offsetLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_offsetLeft
void PowerUI::Element::set_offsetLeft(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_offsetLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offsetLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_offsetTop
int PowerUI::Element::get_offsetTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_offsetTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_offsetTop
void PowerUI::Element::set_offsetTop(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_offsetTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offsetTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_scrollLeft
int PowerUI::Element::get_scrollLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_scrollLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_scrollLeft
void PowerUI::Element::set_scrollLeft(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_scrollLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scrollLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_scrollTop
int PowerUI::Element::get_scrollTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_scrollTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_scrollTop
void PowerUI::Element::set_scrollTop(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_scrollTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scrollTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_contentHeight
int PowerUI::Element::get_contentHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_contentHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_contentWidth
int PowerUI::Element::get_contentWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_contentWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_pixelHeight
int PowerUI::Element::get_pixelHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_pixelHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_pixelWidth
int PowerUI::Element::get_pixelWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_pixelWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_scrollHeight
int PowerUI::Element::get_scrollHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_scrollHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_scrollWidth
int PowerUI::Element::get_scrollWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_scrollWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_Checked
bool PowerUI::Element::get_Checked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_Checked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Checked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_Checked
void PowerUI::Element::set_Checked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_Checked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Checked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_image
::UnityEngine::Texture2D* PowerUI::Element::get_image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_image
void PowerUI::Element::set_image(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_firstChild
::PowerUI::Element* PowerUI::Element::get_firstChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_firstChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_lastChild
::PowerUI::Element* PowerUI::Element::get_lastChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_lastChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_previousElementSibling
::PowerUI::Element* PowerUI::Element::get_previousElementSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_previousElementSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previousElementSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_nextElementSibling
::PowerUI::Element* PowerUI::Element::get_nextElementSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_nextElementSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextElementSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_previousSibling
::PowerUI::Element* PowerUI::Element::get_previousSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_previousSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previousSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_nextSibling
::PowerUI::Element* PowerUI::Element::get_nextSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_nextSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.animate
::PowerUI::UIAnimation* PowerUI::Element::animate(::StringW css, float constantSpeedTime, float timeToAccelAndDecel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::animate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "animate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(css), ::il2cpp_utils::ExtractType(constantSpeedTime), ::il2cpp_utils::ExtractType(timeToAccelAndDecel)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::UIAnimation*, false>(this, ___internal__method, css, constantSpeedTime, timeToAccelAndDecel);
}
// Autogenerated method: PowerUI.Element.animate
::PowerUI::UIAnimation* PowerUI::Element::animate(::StringW css, float constantSpeedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::animate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "animate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(css), ::il2cpp_utils::ExtractType(constantSpeedTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::UIAnimation*, false>(this, ___internal__method, css, constantSpeedTime);
}
// Autogenerated method: PowerUI.Element.animate
::PowerUI::UIAnimation* PowerUI::Element::animate(::StringW css, float constantSpeedTime, float timeToAccelerate, float timeToDecelerate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::animate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "animate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(css), ::il2cpp_utils::ExtractType(constantSpeedTime), ::il2cpp_utils::ExtractType(timeToAccelerate), ::il2cpp_utils::ExtractType(timeToDecelerate)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::UIAnimation*, false>(this, ___internal__method, css, constantSpeedTime, timeToAccelerate, timeToDecelerate);
}
// Autogenerated method: PowerUI.Element.get_focused
bool PowerUI::Element::get_focused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_focused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_focused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_focused
void PowerUI::Element::set_focused(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_focused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_focused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_childIndex
int PowerUI::Element::get_childIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_childIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_childElementCount
int PowerUI::Element::get_childElementCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_childElementCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childElementCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_parentNode
::PowerUI::Element* PowerUI::Element::get_parentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_parentNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_parentNode
void PowerUI::Element::set_parentNode(::PowerUI::Element* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_parentNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_computedStyle
::PowerUI::Css::ComputedStyle* PowerUI::Element::get_computedStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_computedStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_computedStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::ComputedStyle*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_style
::PowerUI::Css::ElementStyle* PowerUI::Element::get_style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_style");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_style", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::ElementStyle*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.OnClickEvent
bool PowerUI::Element::OnClickEvent(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::OnClickEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClickEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated method: PowerUI.Element.MouseWasDown
bool PowerUI::Element::MouseWasDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::MouseWasDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MouseWasDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.RunClick
bool PowerUI::Element::RunClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::RunClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated method: PowerUI.Element.GotClicked
bool PowerUI::Element::GotClicked(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::GotClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated method: PowerUI.Element.RunClickOnKids
bool PowerUI::Element::RunClickOnKids(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::RunClickOnKids");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunClickOnKids", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated method: PowerUI.Element.FontLoaded
void PowerUI::Element::FontLoaded(::PowerUI::DynamicFont* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::FontLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FontLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, font);
}
// Autogenerated method: PowerUI.Element.get_text3D
::PowerUI::Text3D* PowerUI::Element::get_text3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_text3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Text3D*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.PositionGlobally
void PowerUI::Element::PositionGlobally(::PowerUI::Css::ComputedStyle* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::PositionGlobally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PositionGlobally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relativeTo);
}
// Autogenerated method: PowerUI.Element.PositionLocally
void PowerUI::Element::PositionLocally() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::PositionLocally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PositionLocally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.IsMousedOver
bool PowerUI::Element::IsMousedOver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::IsMousedOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMousedOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.MouseOver
bool PowerUI::Element::MouseOver(::PowerUI::UIEvent* mouseEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::MouseOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MouseOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mouseEvent);
}
// Autogenerated method: PowerUI.Element.MouseOut
void PowerUI::Element::MouseOut(::PowerUI::UIEvent* mouseEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::MouseOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MouseOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouseEvent);
}
// Autogenerated method: PowerUI.Element.OnMouseMoveEvent
void PowerUI::Element::OnMouseMoveEvent(::PowerUI::UIEvent* moveEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::OnMouseMoveEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMouseMoveEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moveEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moveEvent);
}
// Autogenerated method: PowerUI.Element.RunMouseOverOnKids
bool PowerUI::Element::RunMouseOverOnKids(::PowerUI::UIEvent* mouseEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::RunMouseOverOnKids");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunMouseOverOnKids", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mouseEvent);
}
// Autogenerated method: PowerUI.Element.RunMouseOver
bool PowerUI::Element::RunMouseOver(::PowerUI::UIEvent* mouseEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::RunMouseOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunMouseOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mouseEvent);
}
// Autogenerated method: PowerUI.Element.RunBlocked
bool PowerUI::Element::RunBlocked(::StringW attribute, ::PowerUI::UIEvent* uiEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::RunBlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunBlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute), ::il2cpp_utils::ExtractType(uiEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attribute, uiEvent);
}
// Autogenerated method: PowerUI.Element.Run
::Il2CppObject* PowerUI::Element::Run(::StringW attribute, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, attribute, args);
}
// Autogenerated method: PowerUI.Element.RunLiteral
::Il2CppObject* PowerUI::Element::RunLiteral(::StringW attribute, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::RunLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, attribute, args);
}
// Autogenerated method: PowerUI.Element.Lettering
void PowerUI::Element::Lettering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::Lettering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Lettering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.Lettering
void PowerUI::Element::Lettering(::System::Collections::Generic::List_1<::PowerUI::Element*>* into, ::PowerUI::Element* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::Lettering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Lettering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(into), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, into, parent);
}
// Autogenerated method: PowerUI.Element.get_focusable
bool PowerUI::Element::get_focusable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_focusable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_focusable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.GetFocusableAbove
::PowerUI::Element* PowerUI::Element::GetFocusableAbove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::GetFocusableAbove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFocusableAbove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.GetFocusableBelow
::PowerUI::Element* PowerUI::Element::GetFocusableBelow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::GetFocusableBelow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFocusableBelow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.GetFocusableLeft
::PowerUI::Element* PowerUI::Element::GetFocusableLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::GetFocusableLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFocusableLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.GetFocusableRight
::PowerUI::Element* PowerUI::Element::GetFocusableRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::GetFocusableRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFocusableRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.GetFocusableOverride
::PowerUI::Element* PowerUI::Element::GetFocusableOverride(::StringW direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::GetFocusableOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFocusableOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method, direction);
}
// Autogenerated method: PowerUI.Element.GetFocusedNext
::PowerUI::Element* PowerUI::Element::GetFocusedNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::GetFocusedNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFocusedNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.AxisDistanceFrom
::UnityEngine::Vector2 PowerUI::Element::AxisDistanceFrom(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::AxisDistanceFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AxisDistanceFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Element.HorizontalDistanceRatio
float PowerUI::Element::HorizontalDistanceRatio(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::HorizontalDistanceRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HorizontalDistanceRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Element.VerticalDistanceRatio
float PowerUI::Element::VerticalDistanceRatio(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::VerticalDistanceRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerticalDistanceRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Element.DistanceFromFast
float PowerUI::Element::DistanceFromFast(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::DistanceFromFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DistanceFromFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Element.DistanceFrom
float PowerUI::Element::DistanceFrom(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::DistanceFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DistanceFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Element.IsLeftOf
bool PowerUI::Element::IsLeftOf(::PowerUI::Css::ComputedStyle* computed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::IsLeftOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLeftOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(computed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, computed);
}
// Autogenerated method: PowerUI.Element.IsRightOf
bool PowerUI::Element::IsRightOf(::PowerUI::Css::ComputedStyle* computed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::IsRightOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRightOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(computed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, computed);
}
// Autogenerated method: PowerUI.Element.IsAbove
bool PowerUI::Element::IsAbove(::PowerUI::Css::ComputedStyle* computed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::IsAbove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAbove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(computed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, computed);
}
// Autogenerated method: PowerUI.Element.IsBelow
bool PowerUI::Element::IsBelow(::PowerUI::Css::ComputedStyle* computed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::IsBelow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBelow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(computed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, computed);
}
// Autogenerated method: PowerUI.Element.getContext
::PowerUI::CanvasContext* PowerUI::Element::getContext(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::getContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::CanvasContext*, false>(this, ___internal__method, text);
}
// Autogenerated method: PowerUI.Element.GetForm
::PowerUI::Element* PowerUI::Element::GetForm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::GetForm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.submit
void PowerUI::Element::submit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::submit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "submit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_formElement
::PowerUI::Element* PowerUI::Element::get_formElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_formElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_formElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_form
::PowerUI::FormTag* PowerUI::Element::get_form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_form");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_form", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::FormTag*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.get_value
::StringW PowerUI::Element::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_value
void PowerUI::Element::set_value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_content
::StringW PowerUI::Element::get_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_content
void PowerUI::Element::set_content(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.get_selectedIndex
int PowerUI::Element::get_selectedIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::get_selectedIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.set_selectedIndex
void PowerUI::Element::set_selectedIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::set_selectedIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectedIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.Element.add
void PowerUI::Element::add(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.Element.OnChildrenLoaded
void PowerUI::Element::OnChildrenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::OnChildrenLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.SetTag
void PowerUI::Element::SetTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::SetTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag);
}
// Autogenerated method: PowerUI.Element.GetHandler
::Wrench::TagHandler* PowerUI::Element::GetHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::GetHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::TagHandler*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.GetVariableValue
::StringW PowerUI::Element::GetVariableValue(::StringW variableString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::GetVariableValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, variableString);
}
// Autogenerated method: PowerUI.Element.CreateTagElement
::Wrench::MLElement* PowerUI::Element::CreateTagElement(::Wrench::MLLexer* lexer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::CreateTagElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::MLElement*, false>(this, ___internal__method, lexer);
}
// Autogenerated method: PowerUI.Element.CreateVariableElement
::Wrench::MLVariableElement* PowerUI::Element::CreateVariableElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::CreateVariableElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::MLVariableElement*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.CreateTextElement
::Wrench::MLTextElement* PowerUI::Element::CreateTextElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::CreateTextElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Wrench::MLTextElement*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.ResetVariable
void PowerUI::Element::ResetVariable(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::ResetVariable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: PowerUI.Element.ResetAllVariables
void PowerUI::Element::ResetAllVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::ResetAllVariables");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Element.ToString
void PowerUI::Element::ToString(::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder);
}
// Autogenerated method: PowerUI.Element.ToString
::StringW PowerUI::Element::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Element::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::MLElement*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.UIBatch
#include "PowerUI/UIBatch.hpp"
// Including type: PowerUI.DynamicMesh
#include "PowerUI/DynamicMesh.hpp"
// Including type: PowerUI.Renderman
#include "PowerUI/Renderman.hpp"
// Including type: Blaze.TextureAtlas
#include "Blaze/TextureAtlas.hpp"
// Including type: PowerUI.Css.DisplayableProperty
#include "PowerUI/Css/DisplayableProperty.hpp"
// Including type: PowerUI.MeshBlock
#include "PowerUI/MeshBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Setup
[[deprecated("Use field access instead!")]] bool& PowerUI::UIBatch::dyn_Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_Setup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Setup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean PhysicsMode
[[deprecated("Use field access instead!")]] bool& PowerUI::UIBatch::dyn_PhysicsMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_PhysicsMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PhysicsMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Isolated
[[deprecated("Use field access instead!")]] bool& PowerUI::UIBatch::dyn_Isolated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_Isolated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Isolated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.DynamicMesh Mesh
[[deprecated("Use field access instead!")]] ::PowerUI::DynamicMesh*& PowerUI::UIBatch::dyn_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_Mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mesh"))->offset;
  return *reinterpret_cast<::PowerUI::DynamicMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean PrepareCalled
[[deprecated("Use field access instead!")]] bool& PowerUI::UIBatch::dyn_PrepareCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_PrepareCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrepareCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Renderman Renderer
[[deprecated("Use field access instead!")]] ::PowerUI::Renderman*& PowerUI::UIBatch::dyn_Renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_Renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Renderer"))->offset;
  return *reinterpret_cast<::PowerUI::Renderman**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UIBatch BatchAfter
[[deprecated("Use field access instead!")]] ::PowerUI::UIBatch*& PowerUI::UIBatch::dyn_BatchAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_BatchAfter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BatchAfter"))->offset;
  return *reinterpret_cast<::PowerUI::UIBatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UIBatch BatchBefore
[[deprecated("Use field access instead!")]] ::PowerUI::UIBatch*& PowerUI::UIBatch::dyn_BatchBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_BatchBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BatchBefore"))->offset;
  return *reinterpret_cast<::PowerUI::UIBatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.TextureAtlas FontAtlas
[[deprecated("Use field access instead!")]] ::Blaze::TextureAtlas*& PowerUI::UIBatch::dyn_FontAtlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_FontAtlas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FontAtlas"))->offset;
  return *reinterpret_cast<::Blaze::TextureAtlas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.TextureAtlas GraphicsAtlas
[[deprecated("Use field access instead!")]] ::Blaze::TextureAtlas*& PowerUI::UIBatch::dyn_GraphicsAtlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_GraphicsAtlas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GraphicsAtlas"))->offset;
  return *reinterpret_cast<::Blaze::TextureAtlas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.DisplayableProperty IsolatedProperty
[[deprecated("Use field access instead!")]] ::PowerUI::Css::DisplayableProperty*& PowerUI::UIBatch::dyn_IsolatedProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::dyn_IsolatedProperty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsolatedProperty"))->offset;
  return *reinterpret_cast<::PowerUI::Css::DisplayableProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.UIBatch.ChangeRenderer
void PowerUI::UIBatch::ChangeRenderer(::PowerUI::Renderman* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::ChangeRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderer);
}
// Autogenerated method: PowerUI.UIBatch.IsIsolated
void PowerUI::UIBatch::IsIsolated(::PowerUI::Css::DisplayableProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::IsIsolated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsIsolated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property);
}
// Autogenerated method: PowerUI.UIBatch.NotIsolated
void PowerUI::UIBatch::NotIsolated(::Blaze::TextureAtlas* graphics, ::Blaze::TextureAtlas* font, float aliasBottom, float aliasTop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::NotIsolated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotIsolated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphics), ::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(aliasBottom), ::il2cpp_utils::ExtractType(aliasTop)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graphics, font, aliasBottom, aliasTop);
}
// Autogenerated method: PowerUI.UIBatch.SetFontAtlas
void PowerUI::UIBatch::SetFontAtlas(::Blaze::TextureAtlas* font, float bottom, float top) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::SetFontAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFontAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(bottom), ::il2cpp_utils::ExtractType(top)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, font, bottom, top);
}
// Autogenerated method: PowerUI.UIBatch.SetGraphicsAtlas
void PowerUI::UIBatch::SetGraphicsAtlas(::Blaze::TextureAtlas* graphics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::SetGraphicsAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraphicsAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphics)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graphics);
}
// Autogenerated method: PowerUI.UIBatch.SetPhysicsMode
void PowerUI::UIBatch::SetPhysicsMode(bool isPhysics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::SetPhysicsMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPhysicsMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPhysics)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPhysics);
}
// Autogenerated method: PowerUI.UIBatch.SetRenderDepth
void PowerUI::UIBatch::SetRenderDepth(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::SetRenderDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRenderDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: PowerUI.UIBatch.Flush
void PowerUI::UIBatch::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIBatch.CompletedLayout
void PowerUI::UIBatch::CompletedLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::CompletedLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompletedLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIBatch.PrepareForLayout
void PowerUI::UIBatch::PrepareForLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::PrepareForLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareForLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIBatch.Allocate
::PowerUI::MeshBlock* PowerUI::UIBatch::Allocate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::Allocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Allocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::MeshBlock*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIBatch.RenderWithCamera
void PowerUI::UIBatch::RenderWithCamera(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::RenderWithCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderWithCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: PowerUI.UIBatch.Destroy
void PowerUI::UIBatch::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatch::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.UIBatchPool
#include "PowerUI/UIBatchPool.hpp"
// Including type: PowerUI.UIBatch
#include "PowerUI/UIBatch.hpp"
// Including type: PowerUI.Renderman
#include "PowerUI/Renderman.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.UIBatch First
::PowerUI::UIBatch* PowerUI::UIBatchPool::_get_First() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatchPool::_get_First");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::UIBatch*>("PowerUI", "UIBatchPool", "First"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.UIBatch First
void PowerUI::UIBatchPool::_set_First(::PowerUI::UIBatch* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatchPool::_set_First");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UIBatchPool", "First", value));
}
// Autogenerated method: PowerUI.UIBatchPool.get_Empty
bool PowerUI::UIBatchPool::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatchPool::get_Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UIBatchPool", "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UIBatchPool.Clear
void PowerUI::UIBatchPool::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatchPool::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UIBatchPool", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UIBatchPool.AddAll
void PowerUI::UIBatchPool::AddAll(::PowerUI::UIBatch* first, ::PowerUI::UIBatch* last) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatchPool::AddAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UIBatchPool", "AddAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(last)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, first, last);
}
// Autogenerated method: PowerUI.UIBatchPool.HideAll
void PowerUI::UIBatchPool::HideAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatchPool::HideAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UIBatchPool", "HideAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UIBatchPool.Add
void PowerUI::UIBatchPool::Add(::PowerUI::UIBatch* batch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatchPool::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UIBatchPool", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(batch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, batch);
}
// Autogenerated method: PowerUI.UIBatchPool.Get
::PowerUI::UIBatch* PowerUI::UIBatchPool::Get(::PowerUI::Renderman* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIBatchPool::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UIBatchPool", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::UIBatch*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.BoxRegion
#include "PowerUI/BoxRegion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single X
[[deprecated("Use field access instead!")]] float& PowerUI::BoxRegion::dyn_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::dyn_X");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "X"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Y
[[deprecated("Use field access instead!")]] float& PowerUI::BoxRegion::dyn_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::dyn_Y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxX
[[deprecated("Use field access instead!")]] float& PowerUI::BoxRegion::dyn_MaxX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::dyn_MaxX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxY
[[deprecated("Use field access instead!")]] float& PowerUI::BoxRegion::dyn_MaxY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::dyn_MaxY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Width
[[deprecated("Use field access instead!")]] float& PowerUI::BoxRegion::dyn_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::dyn_Width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Height
[[deprecated("Use field access instead!")]] float& PowerUI::BoxRegion::dyn_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::dyn_Height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.BoxRegion.Set
void PowerUI::BoxRegion::Set(float x, float y, float width, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, width, height);
}
// Autogenerated method: PowerUI.BoxRegion.Overlaps
bool PowerUI::BoxRegion::Overlaps(::PowerUI::BoxRegion* box) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::Overlaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Overlaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, box);
}
// Autogenerated method: PowerUI.BoxRegion.ClipByAffecting
void PowerUI::BoxRegion::ClipByAffecting(::PowerUI::BoxRegion* bound, ::PowerUI::BoxRegion* affect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::ClipByAffecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipByAffecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bound), ::il2cpp_utils::ExtractType(affect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bound, affect);
}
// Autogenerated method: PowerUI.BoxRegion.ClipBy
void PowerUI::BoxRegion::ClipBy(::PowerUI::BoxRegion* box) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::ClipBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, box);
}
// Autogenerated method: PowerUI.BoxRegion.ClipByChecked
bool PowerUI::BoxRegion::ClipByChecked(::PowerUI::BoxRegion* box) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::ClipByChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipByChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(box)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, box);
}
// Autogenerated method: PowerUI.BoxRegion.ClipLeft
float PowerUI::BoxRegion::ClipLeft(float line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::ClipLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, line);
}
// Autogenerated method: PowerUI.BoxRegion.ClipRight
float PowerUI::BoxRegion::ClipRight(float line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::ClipRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, line);
}
// Autogenerated method: PowerUI.BoxRegion.ClipTop
float PowerUI::BoxRegion::ClipTop(float line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::ClipTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, line);
}
// Autogenerated method: PowerUI.BoxRegion.ClipBottom
float PowerUI::BoxRegion::ClipBottom(float line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::ClipBottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipBottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, line);
}
// Autogenerated method: PowerUI.BoxRegion.RemoveFromLeft
void PowerUI::BoxRegion::RemoveFromLeft(float px) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::RemoveFromLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFromLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(px)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, px);
}
// Autogenerated method: PowerUI.BoxRegion.RemoveFromRight
void PowerUI::BoxRegion::RemoveFromRight(float px) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::RemoveFromRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFromRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(px)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, px);
}
// Autogenerated method: PowerUI.BoxRegion.RemoveFromTop
void PowerUI::BoxRegion::RemoveFromTop(float px) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::RemoveFromTop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFromTop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(px)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, px);
}
// Autogenerated method: PowerUI.BoxRegion.RemoveFromBottom
void PowerUI::BoxRegion::RemoveFromBottom(float px) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::RemoveFromBottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFromBottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(px)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, px);
}
// Autogenerated method: PowerUI.BoxRegion.ToString
::StringW PowerUI::BoxRegion::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::BoxRegion::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CameraMode
#include "PowerUI/CameraMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.CameraMode Perspective
::PowerUI::CameraMode PowerUI::CameraMode::_get_Perspective() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraMode::_get_Perspective");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::CameraMode>("PowerUI", "CameraMode", "Perspective"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.CameraMode Perspective
void PowerUI::CameraMode::_set_Perspective(::PowerUI::CameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraMode::_set_Perspective");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "CameraMode", "Perspective", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.CameraMode Orthographic
::PowerUI::CameraMode PowerUI::CameraMode::_get_Orthographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraMode::_get_Orthographic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::CameraMode>("PowerUI", "CameraMode", "Orthographic"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.CameraMode Orthographic
void PowerUI::CameraMode::_set_Orthographic(::PowerUI::CameraMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraMode::_set_Orthographic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "CameraMode", "Orthographic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::CameraMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CameraPool
#include "PowerUI/CameraPool.hpp"
// Including type: PowerUI.UICamera
#include "PowerUI/UICamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean DidLayout
[[deprecated("Use field access instead!")]] bool& PowerUI::CameraPool::dyn_DidLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::dyn_DidLayout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DidLayout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CameraDepth
[[deprecated("Use field access instead!")]] int& PowerUI::CameraPool::dyn_CameraDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::dyn_CameraDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UICamera LastCamera
[[deprecated("Use field access instead!")]] ::PowerUI::UICamera*& PowerUI::CameraPool::dyn_LastCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::dyn_LastCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastCamera"))->offset;
  return *reinterpret_cast<::PowerUI::UICamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UICamera FirstCamera
[[deprecated("Use field access instead!")]] ::PowerUI::UICamera*& PowerUI::CameraPool::dyn_FirstCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::dyn_FirstCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstCamera"))->offset;
  return *reinterpret_cast<::PowerUI::UICamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean CameraRequested
[[deprecated("Use field access instead!")]] bool& PowerUI::CameraPool::dyn_CameraRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::dyn_CameraRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraRequested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UICamera LastPoolCamera
[[deprecated("Use field access instead!")]] ::PowerUI::UICamera*& PowerUI::CameraPool::dyn_LastPoolCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::dyn_LastPoolCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastPoolCamera"))->offset;
  return *reinterpret_cast<::PowerUI::UICamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UICamera FirstPoolCamera
[[deprecated("Use field access instead!")]] ::PowerUI::UICamera*& PowerUI::CameraPool::dyn_FirstPoolCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::dyn_FirstPoolCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstPoolCamera"))->offset;
  return *reinterpret_cast<::PowerUI::UICamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.CameraPool.get_AllocatedDepth
int PowerUI::CameraPool::get_AllocatedDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::get_AllocatedDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllocatedDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraPool.CheckCameraRequired
bool PowerUI::CameraPool::CheckCameraRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::CheckCameraRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCameraRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraPool.Reset
void PowerUI::CameraPool::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraPool.Destroy
void PowerUI::CameraPool::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraPool.ClearPool
void PowerUI::CameraPool::ClearPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::ClearPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraPool.GetPooledCamera
::PowerUI::UICamera* PowerUI::CameraPool::GetPooledCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::GetPooledCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPooledCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::UICamera*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CameraPool.AddCamera
void PowerUI::CameraPool::AddCamera(::PowerUI::UICamera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CameraPool::AddCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CharacterProvider
#include "PowerUI/CharacterProvider.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: InfiniText.Glyph
#include "InfiniText/Glyph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 MinimumID
[[deprecated("Use field access instead!")]] int& PowerUI::CharacterProvider::dyn_MinimumID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProvider::dyn_MinimumID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinimumID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaximumID
[[deprecated("Use field access instead!")]] int& PowerUI::CharacterProvider::dyn_MaximumID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProvider::dyn_MaximumID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaximumID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Path
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::CharacterProvider::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProvider::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.CharacterProvider.Load
::PowerUI::ImagePackage* PowerUI::CharacterProvider::Load(::InfiniText::Glyph* glyph, int charcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProvider::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyph), ::il2cpp_utils::ExtractType(charcode)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::ImagePackage*, false>(this, ___internal__method, glyph, charcode);
}
// Autogenerated method: PowerUI.CharacterProvider.ImageReady
void PowerUI::CharacterProvider::ImageReady(::PowerUI::ImagePackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProvider::ImageReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImageReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.CharacterProvider.GetPath
::StringW PowerUI::CharacterProvider::GetPath(int charcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProvider::GetPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::CharacterProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, charcode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CharacterProviders
#include "PowerUI/CharacterProviders.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PowerUI.CharacterProvider
#include "PowerUI/CharacterProvider.hpp"
// Including type: InfiniText.Glyph
#include "InfiniText/Glyph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean Started
bool PowerUI::CharacterProviders::_get_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::_get_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("PowerUI", "CharacterProviders", "Started"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean Started
void PowerUI::CharacterProviders::_set_Started(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::_set_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "CharacterProviders", "Started", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean FixHeight
bool PowerUI::CharacterProviders::_get_FixHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::_get_FixHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("PowerUI", "CharacterProviders", "FixHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean FixHeight
void PowerUI::CharacterProviders::_set_FixHeight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::_set_FixHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "CharacterProviders", "FixHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.String EmojiPath
::StringW PowerUI::CharacterProviders::_get_EmojiPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::_get_EmojiPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PowerUI", "CharacterProviders", "EmojiPath"));
}
// Autogenerated static field setter
// Set static field: static public System.String EmojiPath
void PowerUI::CharacterProviders::_set_EmojiPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::_set_EmojiPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "CharacterProviders", "EmojiPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<PowerUI.CharacterProvider> Providers
::System::Collections::Generic::List_1<::PowerUI::CharacterProvider*>* PowerUI::CharacterProviders::_get_Providers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::_get_Providers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::PowerUI::CharacterProvider*>*>("PowerUI", "CharacterProviders", "Providers"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<PowerUI.CharacterProvider> Providers
void PowerUI::CharacterProviders::_set_Providers(::System::Collections::Generic::List_1<::PowerUI::CharacterProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::_set_Providers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "CharacterProviders", "Providers", value));
}
// Autogenerated method: PowerUI.CharacterProviders.Setup
void PowerUI::CharacterProviders::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "CharacterProviders", "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.CharacterProviders.Add
void PowerUI::CharacterProviders::Add(::PowerUI::CharacterProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "CharacterProviders", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider);
}
// Autogenerated method: PowerUI.CharacterProviders.InsertIndex
int PowerUI::CharacterProviders::InsertIndex(::PowerUI::CharacterProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::InsertIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "CharacterProviders", "InsertIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider);
}
// Autogenerated method: PowerUI.CharacterProviders.SearchFor
int PowerUI::CharacterProviders::SearchFor(int code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::SearchFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "CharacterProviders", "SearchFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: PowerUI.CharacterProviders.FindFor
::PowerUI::CharacterProvider* PowerUI::CharacterProviders::FindFor(int code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::FindFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "CharacterProviders", "FindFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::CharacterProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: PowerUI.CharacterProviders.FindInto
void PowerUI::CharacterProviders::FindInto(::InfiniText::Glyph* loadInto, int charcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::FindInto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "CharacterProviders", "FindInto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadInto), ::il2cpp_utils::ExtractType(charcode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, loadInto, charcode);
}
// Autogenerated method: PowerUI.CharacterProviders..cctor
void PowerUI::CharacterProviders::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CharacterProviders::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "CharacterProviders", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Clipboard
#include "PowerUI/Clipboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Clipboard.Paste
::StringW PowerUI::Clipboard::Paste() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Clipboard::Paste");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Clipboard", "Paste", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Clipboard.Copy
void PowerUI::Clipboard::Copy(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Clipboard::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Clipboard", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ContentType
#include "PowerUI/ContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ContentType.IsVideo
bool PowerUI::ContentType::IsVideo(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ContentType::IsVideo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ContentType", "IsVideo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.AnimatedProperty
#include "PowerUI/AnimatedProperty.hpp"
// Including type: PowerUI.UIAnimation
#include "PowerUI/UIAnimation.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: PowerUI.Css.CssProperty
#include "PowerUI/Css/CssProperty.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Stage
[[deprecated("Use field access instead!")]] int& PowerUI::AnimatedProperty::dyn_Stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_Stage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Stage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Speed
[[deprecated("Use field access instead!")]] float& PowerUI::AnimatedProperty::dyn_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_Speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MaxSpeed
[[deprecated("Use field access instead!")]] float& PowerUI::AnimatedProperty::dyn_MaxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_MaxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UpdateCss
[[deprecated("Use field access instead!")]] bool& PowerUI::AnimatedProperty::dyn_UpdateCss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_UpdateCss");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdateCss"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InnerIndex
[[deprecated("Use field access instead!")]] int& PowerUI::AnimatedProperty::dyn_InnerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_InnerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InnerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Decelerate
[[deprecated("Use field access instead!")]] bool& PowerUI::AnimatedProperty::dyn_Decelerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_Decelerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Decelerate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CurrentTime
[[deprecated("Use field access instead!")]] float& PowerUI::AnimatedProperty::dyn_CurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_CurrentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ActiveValue
[[deprecated("Use field access instead!")]] float& PowerUI::AnimatedProperty::dyn_ActiveValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_ActiveValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActiveValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TargetValue
[[deprecated("Use field access instead!")]] float& PowerUI::AnimatedProperty::dyn_TargetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_TargetValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Acceleration
[[deprecated("Use field access instead!")]] float& PowerUI::AnimatedProperty::dyn_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_Acceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Acceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Deceleration
[[deprecated("Use field access instead!")]] float& PowerUI::AnimatedProperty::dyn_Deceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_Deceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Deceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UIAnimation Animation
[[deprecated("Use field access instead!")]] ::PowerUI::UIAnimation*& PowerUI::AnimatedProperty::dyn_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_Animation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Animation"))->offset;
  return *reinterpret_cast<::PowerUI::UIAnimation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Value ValueObject
[[deprecated("Use field access instead!")]] ::PowerUI::Css::Value*& PowerUI::AnimatedProperty::dyn_ValueObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_ValueObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ValueObject"))->offset;
  return *reinterpret_cast<::PowerUI::Css::Value**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.CssProperty PropertyInfo
[[deprecated("Use field access instead!")]] ::PowerUI::Css::CssProperty*& PowerUI::AnimatedProperty::dyn_PropertyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_PropertyInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyInfo"))->offset;
  return *reinterpret_cast<::PowerUI::Css::CssProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.Value PropertyValueObject
[[deprecated("Use field access instead!")]] ::PowerUI::Css::Value*& PowerUI::AnimatedProperty::dyn_PropertyValueObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_PropertyValueObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyValueObject"))->offset;
  return *reinterpret_cast<::PowerUI::Css::Value**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.AnimatedProperty PropertyAfter
[[deprecated("Use field access instead!")]] ::PowerUI::AnimatedProperty*& PowerUI::AnimatedProperty::dyn_PropertyAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_PropertyAfter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyAfter"))->offset;
  return *reinterpret_cast<::PowerUI::AnimatedProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.AnimatedProperty PropertyBefore
[[deprecated("Use field access instead!")]] ::PowerUI::AnimatedProperty*& PowerUI::AnimatedProperty::dyn_PropertyBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::dyn_PropertyBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyBefore"))->offset;
  return *reinterpret_cast<::PowerUI::AnimatedProperty**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.AnimatedProperty.Animate
void PowerUI::AnimatedProperty::Animate(::PowerUI::UIAnimation* animation, ::StringW targetValue, float constantSpeedTime, float timeToAccelerateFor, float timeToDecelerateFor, bool updateCss) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::Animate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Animate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(constantSpeedTime), ::il2cpp_utils::ExtractType(timeToAccelerateFor), ::il2cpp_utils::ExtractType(timeToDecelerateFor), ::il2cpp_utils::ExtractType(updateCss)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, targetValue, constantSpeedTime, timeToAccelerateFor, timeToDecelerateFor, updateCss);
}
// Autogenerated method: PowerUI.AnimatedProperty.Animate
void PowerUI::AnimatedProperty::Animate(::PowerUI::UIAnimation* animation, ::PowerUI::Css::Value* targetValue, float constantSpeedTime, float timeToAccelerateFor, float timeToDecelerateFor, bool updateCss) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::Animate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Animate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(targetValue), ::il2cpp_utils::ExtractType(constantSpeedTime), ::il2cpp_utils::ExtractType(timeToAccelerateFor), ::il2cpp_utils::ExtractType(timeToDecelerateFor), ::il2cpp_utils::ExtractType(updateCss)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, targetValue, constantSpeedTime, timeToAccelerateFor, timeToDecelerateFor, updateCss);
}
// Autogenerated method: PowerUI.AnimatedProperty.Update
void PowerUI::AnimatedProperty::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.AnimatedProperty.AddToQueue
void PowerUI::AnimatedProperty::AddToQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::AddToQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.AnimatedProperty.Stop
void PowerUI::AnimatedProperty::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.AnimatedProperty.get_Property
::StringW PowerUI::AnimatedProperty::get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::get_Property");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Property", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.AnimatedProperty.get_Animating
::PowerUI::Element* PowerUI::AnimatedProperty::get_Animating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimatedProperty::get_Animating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Animating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.AnimationCompleted
#include "PowerUI/AnimationCompleted.hpp"
// Including type: PowerUI.UIAnimation
#include "PowerUI/UIAnimation.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.AnimationCompleted.Invoke
void PowerUI::AnimationCompleted::Invoke(::PowerUI::UIAnimation* animation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimationCompleted::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::AnimationCompleted*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation);
}
// Autogenerated method: PowerUI.AnimationCompleted.BeginInvoke
::System::IAsyncResult* PowerUI::AnimationCompleted::BeginInvoke(::PowerUI::UIAnimation* animation, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimationCompleted::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::AnimationCompleted*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, animation, callback, object);
}
// Autogenerated method: PowerUI.AnimationCompleted.EndInvoke
void PowerUI::AnimationCompleted::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AnimationCompleted::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::AnimationCompleted*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.UIAnimation
#include "PowerUI/UIAnimation.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.Css.ElementStyle
#include "PowerUI/Css/ElementStyle.hpp"
// Including type: PowerUI.AnimationCompleted
#include "PowerUI/AnimationCompleted.hpp"
// Including type: Nitro.DynamicMethod`1
#include "Nitro/DynamicMethod_1.hpp"
// Including type: PowerUI.AnimatedProperty
#include "PowerUI/AnimatedProperty.hpp"
// Including type: PowerUI.Css.CssProperty
#include "PowerUI/Css/CssProperty.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.AnimatedProperty LastProperty
::PowerUI::AnimatedProperty* PowerUI::UIAnimation::_get_LastProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::_get_LastProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::AnimatedProperty*>("PowerUI", "UIAnimation", "LastProperty"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.AnimatedProperty LastProperty
void PowerUI::UIAnimation::_set_LastProperty(::PowerUI::AnimatedProperty* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::_set_LastProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UIAnimation", "LastProperty", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.AnimatedProperty FirstProperty
::PowerUI::AnimatedProperty* PowerUI::UIAnimation::_get_FirstProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::_get_FirstProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::AnimatedProperty*>("PowerUI", "UIAnimation", "FirstProperty"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.AnimatedProperty FirstProperty
void PowerUI::UIAnimation::_set_FirstProperty(::PowerUI::AnimatedProperty* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::_set_FirstProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "UIAnimation", "FirstProperty", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Object Data
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PowerUI::UIAnimation::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Decelerate
[[deprecated("Use field access instead!")]] bool& PowerUI::UIAnimation::dyn_Decelerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_Decelerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Decelerate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TotalTime
[[deprecated("Use field access instead!")]] float& PowerUI::UIAnimation::dyn_TotalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_TotalTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element Animating
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::UIAnimation::dyn_Animating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_Animating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Animating"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single DecelerateAt
[[deprecated("Use field access instead!")]] float& PowerUI::UIAnimation::dyn_DecelerateAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_DecelerateAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DecelerateAt"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean FinishedPlaying
[[deprecated("Use field access instead!")]] bool& PowerUI::UIAnimation::dyn_FinishedPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_FinishedPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FinishedPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ConstantSpeedTime
[[deprecated("Use field access instead!")]] float& PowerUI::UIAnimation::dyn_ConstantSpeedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_ConstantSpeedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConstantSpeedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UIAnimation NextAnimation
[[deprecated("Use field access instead!")]] ::PowerUI::UIAnimation*& PowerUI::UIAnimation::dyn_NextAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_NextAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextAnimation"))->offset;
  return *reinterpret_cast<::PowerUI::UIAnimation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Css.ElementStyle ElementStyle
[[deprecated("Use field access instead!")]] ::PowerUI::Css::ElementStyle*& PowerUI::UIAnimation::dyn_ElementStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_ElementStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ElementStyle"))->offset;
  return *reinterpret_cast<::PowerUI::Css::ElementStyle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TimeToAccelerateFor
[[deprecated("Use field access instead!")]] float& PowerUI::UIAnimation::dyn_TimeToAccelerateFor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_TimeToAccelerateFor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeToAccelerateFor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TimeToDecelerateFor
[[deprecated("Use field access instead!")]] float& PowerUI::UIAnimation::dyn_TimeToDecelerateFor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_TimeToDecelerateFor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeToDecelerateFor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.AnimationCompleted OnComplete
[[deprecated("Use field access instead!")]] ::PowerUI::AnimationCompleted*& PowerUI::UIAnimation::dyn_OnComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_OnComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnComplete"))->offset;
  return *reinterpret_cast<::PowerUI::AnimationCompleted**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Nitro.DynamicMethod`1<Nitro.Void> Done
[[deprecated("Use field access instead!")]] ::Nitro::DynamicMethod_1<::Nitro::Void>*& PowerUI::UIAnimation::dyn_Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::dyn_Done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Done"))->offset;
  return *reinterpret_cast<::Nitro::DynamicMethod_1<::Nitro::Void>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.UIAnimation.Clear
void PowerUI::UIAnimation::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UIAnimation", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UIAnimation.Update
void PowerUI::UIAnimation::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UIAnimation", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.UIAnimation.GetAnimatedProperty
::PowerUI::AnimatedProperty* PowerUI::UIAnimation::GetAnimatedProperty(::PowerUI::Element* animating, ::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::GetAnimatedProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UIAnimation", "GetAnimatedProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animating), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::AnimatedProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animating, property);
}
// Autogenerated method: PowerUI.UIAnimation.GetAnimatedProperty
::PowerUI::AnimatedProperty* PowerUI::UIAnimation::GetAnimatedProperty(::PowerUI::Element* animating, ::PowerUI::Css::CssProperty* property, int innerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::GetAnimatedProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "UIAnimation", "GetAnimatedProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animating), ::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(innerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::AnimatedProperty*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animating, property, innerIndex);
}
// Autogenerated method: PowerUI.UIAnimation.AnimateComposite
void PowerUI::UIAnimation::AnimateComposite(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::AnimateComposite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateComposite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, value);
}
// Autogenerated method: PowerUI.UIAnimation.Finished
void PowerUI::UIAnimation::Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::Finished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIAnimation.Animate
void PowerUI::UIAnimation::Animate(::PowerUI::Css::CssProperty* property, int innerIndex, ::PowerUI::Css::Value* value, bool updateCss) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::Animate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Animate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(innerIndex), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(updateCss)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, innerIndex, value, updateCss);
}
// Autogenerated method: PowerUI.UIAnimation.OnDone
void PowerUI::UIAnimation::OnDone(::Nitro::DynamicMethod_1<::Nitro::Void>* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::OnDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, method);
}
// Autogenerated method: PowerUI.UIAnimation.OnDone
void PowerUI::UIAnimation::OnDone(::PowerUI::AnimationCompleted* onComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::OnDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onComplete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onComplete);
}
// Autogenerated method: PowerUI.UIAnimation.Stop
void PowerUI::UIAnimation::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIAnimation.Stop
void PowerUI::UIAnimation::Stop(bool runEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIAnimation::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ShaderSet
#include "PowerUI/ShaderSet.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private PowerUI.ShaderSet CachedStandard
::PowerUI::ShaderSet* PowerUI::ShaderSet::_get_CachedStandard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ShaderSet::_get_CachedStandard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::ShaderSet*>("PowerUI", "ShaderSet", "CachedStandard"));
}
// Autogenerated static field setter
// Set static field: static private PowerUI.ShaderSet CachedStandard
void PowerUI::ShaderSet::_set_CachedStandard(::PowerUI::ShaderSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ShaderSet::_set_CachedStandard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ShaderSet", "CachedStandard", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ShaderSet> GlobalCache
::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ShaderSet*>* PowerUI::ShaderSet::_get_GlobalCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ShaderSet::_get_GlobalCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ShaderSet*>*>("PowerUI", "ShaderSet", "GlobalCache")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ShaderSet> GlobalCache
void PowerUI::ShaderSet::_set_GlobalCache(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ShaderSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ShaderSet::_set_GlobalCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ShaderSet", "GlobalCache", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::ShaderSet::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ShaderSet::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader CachedIsolated
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& PowerUI::ShaderSet::dyn_CachedIsolated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ShaderSet::dyn_CachedIsolated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CachedIsolated"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.ShaderSet.get_Standard
::PowerUI::ShaderSet* PowerUI::ShaderSet::get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ShaderSet::get_Standard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ShaderSet", "get_Standard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::ShaderSet*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.ShaderSet.Get
::PowerUI::ShaderSet* PowerUI::ShaderSet::Get(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ShaderSet::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ShaderSet", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::ShaderSet*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: PowerUI.ShaderSet.get_Isolated
::UnityEngine::Shader* PowerUI::ShaderSet::get_Isolated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ShaderSet::get_Isolated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Isolated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ShaderSet.GetShader
::UnityEngine::Shader* PowerUI::ShaderSet::GetShader(int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ShaderSet::GetShader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method, flags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.OnDataReady
#include "PowerUI/OnDataReady.hpp"
// Including type: PowerUI.DataPackage
#include "PowerUI/DataPackage.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.OnDataReady.Invoke
void PowerUI::OnDataReady::Invoke(::PowerUI::DataPackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnDataReady::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnDataReady*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.OnDataReady.BeginInvoke
::System::IAsyncResult* PowerUI::OnDataReady::BeginInvoke(::PowerUI::DataPackage* package, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnDataReady::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnDataReady*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, package, callback, object);
}
// Autogenerated method: PowerUI.OnDataReady.EndInvoke
void PowerUI::OnDataReady::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnDataReady::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnDataReady*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.DataPackage
#include "PowerUI/DataPackage.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
// Including type: PowerUI.OnDataReady
#include "PowerUI/OnDataReady.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] Data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& PowerUI::DataPackage::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Error
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::DataPackage::dyn_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::dyn_Error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Error"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FilePath File
[[deprecated("Use field access instead!")]] ::PowerUI::FilePath*& PowerUI::DataPackage::dyn_File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::dyn_File");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "File"))->offset;
  return *reinterpret_cast<::PowerUI::FilePath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FileType
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::DataPackage::dyn_FileType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::dyn_FileType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object ExtraData
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PowerUI::DataPackage::dyn_ExtraData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::dyn_ExtraData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraData"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnDataReady Ready
[[deprecated("Use field access instead!")]] ::PowerUI::OnDataReady*& PowerUI::DataPackage::dyn_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::dyn_Ready");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ready"))->offset;
  return *reinterpret_cast<::PowerUI::OnDataReady**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.DataPackage.add_Ready
void PowerUI::DataPackage::add_Ready(::PowerUI::OnDataReady* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::add_Ready");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Ready", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.DataPackage.remove_Ready
void PowerUI::DataPackage::remove_Ready(::PowerUI::OnDataReady* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::remove_Ready");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Ready", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.DataPackage.Get
void PowerUI::DataPackage::Get(::PowerUI::OnDataReady* ready) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ready)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ready);
}
// Autogenerated method: PowerUI.DataPackage.get_Url
::StringW PowerUI::DataPackage::get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::get_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DataPackage.SetPath
void PowerUI::DataPackage::SetPath(::StringW src, ::StringW relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::SetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, relativeTo);
}
// Autogenerated method: PowerUI.DataPackage.GotData
void PowerUI::DataPackage::GotData(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::GotData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: PowerUI.DataPackage.GotData
void PowerUI::DataPackage::GotData(::ArrayW<uint8_t> data, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::GotData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, error);
}
// Autogenerated method: PowerUI.DataPackage.get_Ok
bool PowerUI::DataPackage::get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::get_Ok");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ok", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DataPackage.get_Errored
bool PowerUI::DataPackage::get_Errored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DataPackage::get_Errored");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Errored", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DesignSize
#include "PowerUI/DesignSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Dpi
[[deprecated("Use field access instead!")]] int& PowerUI::DesignSize::dyn_Dpi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DesignSize::dyn_Dpi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dpi"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Width
[[deprecated("Use field access instead!")]] float& PowerUI::DesignSize::dyn_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DesignSize::dyn_Width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Height
[[deprecated("Use field access instead!")]] float& PowerUI::DesignSize::dyn_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DesignSize::dyn_Height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.DesignSize.ToInches
float PowerUI::DesignSize::ToInches(int px) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DesignSize::ToInches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(px)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, px);
}
// Autogenerated method: PowerUI.DesignSize.get_Scale
float PowerUI::DesignSize::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DesignSize::get_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.TitleChange
#include "PowerUI/TitleChange.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.TitleChange.Invoke
void PowerUI::TitleChange::Invoke(::PowerUI::Document* document) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TitleChange::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::TitleChange*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, document);
}
// Autogenerated method: PowerUI.TitleChange.BeginInvoke
::System::IAsyncResult* PowerUI::TitleChange::BeginInvoke(::PowerUI::Document* document, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TitleChange::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::TitleChange*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, document, callback, object);
}
// Autogenerated method: PowerUI.TitleChange.EndInvoke
void PowerUI::TitleChange::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TitleChange::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::TitleChange*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.OnSizeChange
#include "PowerUI/OnSizeChange.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.OnSizeChange.Invoke
void PowerUI::OnSizeChange::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnSizeChange::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnSizeChange*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.OnSizeChange.BeginInvoke
::System::IAsyncResult* PowerUI::OnSizeChange::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnSizeChange::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnSizeChange*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: PowerUI.OnSizeChange.EndInvoke
void PowerUI::OnSizeChange::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnSizeChange::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnSizeChange*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.InputEvent
#include "PowerUI/InputEvent.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.InputEvent.Invoke
bool PowerUI::InputEvent::Invoke(::PowerUI::UIEvent* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::InputEvent*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e);
}
// Autogenerated method: PowerUI.InputEvent.BeginInvoke
::System::IAsyncResult* PowerUI::InputEvent::BeginInvoke(::PowerUI::UIEvent* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::InputEvent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, e, callback, object);
}
// Autogenerated method: PowerUI.InputEvent.EndInvoke
bool PowerUI::InputEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::InputEvent*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DocumentElements
#include "PowerUI/DocumentElements.hpp"
// Including type: PowerUI.DocumentElements/<IterateThrough>d__3
#include "PowerUI/DocumentElements_-IterateThrough-d__3.hpp"
// Including type: PowerUI.DocumentElements/<GetEnumerator>d__4
#include "PowerUI/DocumentElements_-GetEnumerator-d__4.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Document Document
[[deprecated("Use field access instead!")]] ::PowerUI::Document*& PowerUI::DocumentElements::dyn_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::dyn_Document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Document"))->offset;
  return *reinterpret_cast<::PowerUI::Document**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SkipChildren
[[deprecated("Use field access instead!")]] bool& PowerUI::DocumentElements::dyn_SkipChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::dyn_SkipChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.DocumentElements.IterateThrough
::System::Collections::Generic::IEnumerable_1<::PowerUI::Element*>* PowerUI::DocumentElements::IterateThrough(::PowerUI::Element* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::IterateThrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IterateThrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::PowerUI::Element*>*, false>(this, ___internal__method, element);
}
// Autogenerated method: PowerUI.DocumentElements.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::PowerUI::Element*>* PowerUI::DocumentElements::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::PowerUI::Element*>*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* PowerUI::DocumentElements::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.DocumentElements/<IterateThrough>d__3
#include "PowerUI/DocumentElements_-IterateThrough-d__3.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.Element <>2__current
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.Element element
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::DocumentElements::$IterateThrough$d__3::dyn_element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::dyn_element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "element"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element <>3__element
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$3__element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$3__element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__element"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.DocumentElements <>4__this
[[deprecated("Use field access instead!")]] ::PowerUI::DocumentElements*& PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::PowerUI::DocumentElements**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PowerUI.Element> <children>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PowerUI::Element*>*& PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$children$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$children$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<children>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PowerUI::Element*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <childCount>5__3
[[deprecated("Use field access instead!")]] int& PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$childCount$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$childCount$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<childCount>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__4
[[deprecated("Use field access instead!")]] int& PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$i$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$i$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<PowerUI.Element> <>7__wrap4
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::PowerUI::Element*>*& PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$7__wrap4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::dyn_$$7__wrap4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::PowerUI::Element*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.DocumentElements/<IterateThrough>d__3.System.IDisposable.Dispose
void PowerUI::DocumentElements::$IterateThrough$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$IterateThrough$d__3*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<IterateThrough>d__3.MoveNext
bool PowerUI::DocumentElements::$IterateThrough$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$IterateThrough$d__3*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<IterateThrough>d__3.<>m__Finally1
void PowerUI::DocumentElements::$IterateThrough$d__3::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<IterateThrough>d__3.System.Collections.Generic.IEnumerator<PowerUI.Element>.get_Current
::PowerUI::Element* PowerUI::DocumentElements::$IterateThrough$d__3::System_Collections_Generic_IEnumerator$PowerUI_Element$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::System.Collections.Generic.IEnumerator<PowerUI.Element>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$IterateThrough$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<IterateThrough>d__3.System.Collections.IEnumerator.Reset
void PowerUI::DocumentElements::$IterateThrough$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$IterateThrough$d__3*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<IterateThrough>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* PowerUI::DocumentElements::$IterateThrough$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$IterateThrough$d__3*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<IterateThrough>d__3.System.Collections.Generic.IEnumerable<PowerUI.Element>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::PowerUI::Element*>* PowerUI::DocumentElements::$IterateThrough$d__3::System_Collections_Generic_IEnumerable$PowerUI_Element$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::System.Collections.Generic.IEnumerable<PowerUI.Element>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$IterateThrough$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::PowerUI::Element*>*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<IterateThrough>d__3.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* PowerUI::DocumentElements::$IterateThrough$d__3::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$IterateThrough$d__3::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$IterateThrough$d__3*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.DocumentElements/<GetEnumerator>d__4
#include "PowerUI/DocumentElements_-GetEnumerator-d__4.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& PowerUI::DocumentElements::$GetEnumerator$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$GetEnumerator$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.Element <>2__current
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::DocumentElements::$GetEnumerator$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$GetEnumerator$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.DocumentElements <>4__this
[[deprecated("Use field access instead!")]] ::PowerUI::DocumentElements*& PowerUI::DocumentElements::$GetEnumerator$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$GetEnumerator$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::PowerUI::DocumentElements**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<PowerUI.Element> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::PowerUI::Element*>*& PowerUI::DocumentElements::$GetEnumerator$d__4::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$GetEnumerator$d__4::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::PowerUI::Element*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.DocumentElements/<GetEnumerator>d__4.System.IDisposable.Dispose
void PowerUI::DocumentElements::$GetEnumerator$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$GetEnumerator$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$GetEnumerator$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<GetEnumerator>d__4.MoveNext
bool PowerUI::DocumentElements::$GetEnumerator$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$GetEnumerator$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$GetEnumerator$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<GetEnumerator>d__4.<>m__Finally1
void PowerUI::DocumentElements::$GetEnumerator$d__4::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$GetEnumerator$d__4::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<GetEnumerator>d__4.System.Collections.Generic.IEnumerator<PowerUI.Element>.get_Current
::PowerUI::Element* PowerUI::DocumentElements::$GetEnumerator$d__4::System_Collections_Generic_IEnumerator$PowerUI_Element$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$GetEnumerator$d__4::System.Collections.Generic.IEnumerator<PowerUI.Element>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$GetEnumerator$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<GetEnumerator>d__4.System.Collections.IEnumerator.Reset
void PowerUI::DocumentElements::$GetEnumerator$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$GetEnumerator$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$GetEnumerator$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DocumentElements/<GetEnumerator>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* PowerUI::DocumentElements::$GetEnumerator$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DocumentElements::$GetEnumerator$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DocumentElements::$GetEnumerator$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DynamicFont
#include "PowerUI/DynamicFont.hpp"
// Including type: InfiniText.FontFamily
#include "InfiniText/FontFamily.hpp"
// Including type: InfiniText.Glyph
#include "InfiniText/Glyph.hpp"
// Including type: InfiniText.FontFaceFlags
#include "InfiniText/FontFaceFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.DynamicFont DefaultFamily
::PowerUI::DynamicFont* PowerUI::DynamicFont::_get_DefaultFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::_get_DefaultFamily");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::DynamicFont*>("PowerUI", "DynamicFont", "DefaultFamily"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.DynamicFont DefaultFamily
void PowerUI::DynamicFont::_set_DefaultFamily(::PowerUI::DynamicFont* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::_set_DefaultFamily");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "DynamicFont", "DefaultFamily", value));
}
// Autogenerated static field getter
// Get static field: static public System.String InternalFont
::StringW PowerUI::DynamicFont::_get_InternalFont() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::_get_InternalFont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PowerUI", "DynamicFont", "InternalFont"));
}
// Autogenerated static field setter
// Set static field: static public System.String InternalFont
void PowerUI::DynamicFont::_set_InternalFont(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::_set_InternalFont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "DynamicFont", "InternalFont", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::DynamicFont::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public InfiniText.FontFamily Family
[[deprecated("Use field access instead!")]] ::InfiniText::FontFamily*& PowerUI::DynamicFont::dyn_Family() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::dyn_Family");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Family"))->offset;
  return *reinterpret_cast<::InfiniText::FontFamily**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Ascender
[[deprecated("Use field access instead!")]] float& PowerUI::DynamicFont::dyn_Ascender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::dyn_Ascender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ascender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Descender
[[deprecated("Use field access instead!")]] float& PowerUI::DynamicFont::dyn_Descender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::dyn_Descender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Descender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LineSize
[[deprecated("Use field access instead!")]] float& PowerUI::DynamicFont::dyn_LineSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::dyn_LineSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single StrikeSize
[[deprecated("Use field access instead!")]] float& PowerUI::DynamicFont::dyn_StrikeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::dyn_StrikeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StrikeSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single StrikeOffset
[[deprecated("Use field access instead!")]] float& PowerUI::DynamicFont::dyn_StrikeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::dyn_StrikeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StrikeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.DynamicFont Fallback
[[deprecated("Use field access instead!")]] ::PowerUI::DynamicFont*& PowerUI::DynamicFont::dyn_Fallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::dyn_Fallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fallback"))->offset;
  return *reinterpret_cast<::PowerUI::DynamicFont**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single SpaceSize
[[deprecated("Use field access instead!")]] float& PowerUI::DynamicFont::dyn_SpaceSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::dyn_SpaceSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpaceSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.DynamicFont.Get
::PowerUI::DynamicFont* PowerUI::DynamicFont::Get(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "DynamicFont", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::DynamicFont*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: PowerUI.DynamicFont.GetDefaultFamily
::PowerUI::DynamicFont* PowerUI::DynamicFont::GetDefaultFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::GetDefaultFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "DynamicFont", "GetDefaultFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::DynamicFont*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.DynamicFont.LoadInternalFont
bool PowerUI::DynamicFont::LoadInternalFont() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::LoadInternalFont");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "DynamicFont", "LoadInternalFont", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.DynamicFont.LoadFaces
bool PowerUI::DynamicFont::LoadFaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::LoadFaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicFont.Load
void PowerUI::DynamicFont::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicFont.GetDescend
float PowerUI::DynamicFont::GetDescend(float fontSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::GetDescend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDescend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontSize)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, fontSize);
}
// Autogenerated method: PowerUI.DynamicFont.GetAscend
float PowerUI::DynamicFont::GetAscend(float fontSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::GetAscend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAscend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontSize)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, fontSize);
}
// Autogenerated method: PowerUI.DynamicFont.GetHeight
float PowerUI::DynamicFont::GetHeight(float fontSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::GetHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontSize)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, fontSize);
}
// Autogenerated method: PowerUI.DynamicFont.GetSpaceSize
float PowerUI::DynamicFont::GetSpaceSize(float fontSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::GetSpaceSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpaceSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontSize)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, fontSize);
}
// Autogenerated method: PowerUI.DynamicFont.GetCharacter
::InfiniText::Glyph* PowerUI::DynamicFont::GetCharacter(int charcode, ::InfiniText::FontFaceFlags style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::GetCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charcode), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<::InfiniText::Glyph*, false>(this, ___internal__method, charcode, style);
}
// Autogenerated method: PowerUI.DynamicFont.GetCharacterDirect
::InfiniText::Glyph* PowerUI::DynamicFont::GetCharacterDirect(int charcode, ::InfiniText::FontFaceFlags style, ByRef<bool> firstTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::GetCharacterDirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacterDirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charcode), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::InfiniText::Glyph*, false>(this, ___internal__method, charcode, style, byref(firstTime));
}
// Autogenerated method: PowerUI.DynamicFont..cctor
void PowerUI::DynamicFont::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFont::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "DynamicFont", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DynamicMesh
#include "PowerUI/DynamicMesh.hpp"
// Including type: PowerUI.UIBatch
#include "PowerUI/UIBatch.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: PowerUI.MeshBlock
#include "PowerUI/MeshBlock.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PowerUI.FixedSizeBuffer`1
#include "PowerUI/FixedSizeBuffer_1.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: Blaze.TextureAtlas
#include "Blaze/TextureAtlas.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Shader UIShader
::UnityEngine::Shader* PowerUI::DynamicMesh::_get_UIShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::_get_UIShader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Shader*>("PowerUI", "DynamicMesh", "UIShader"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Shader UIShader
void PowerUI::DynamicMesh::_set_UIShader(::UnityEngine::Shader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::_set_UIShader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "DynamicMesh", "UIShader", value));
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.UIBatch Batch
[[deprecated("Use field access instead!")]] ::PowerUI::UIBatch*& PowerUI::DynamicMesh::dyn_Batch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_Batch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Batch"))->offset;
  return *reinterpret_cast<::PowerUI::UIBatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BlockCount
[[deprecated("Use field access instead!")]] int& PowerUI::DynamicMesh::dyn_BlockCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_BlockCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlockCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh OutputMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& PowerUI::DynamicMesh::dyn_OutputMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_OutputMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutputMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material Material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& PowerUI::DynamicMesh::dyn_Material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_Material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 LastBlockCount
[[deprecated("Use field access instead!")]] int& PowerUI::DynamicMesh::dyn_LastBlockCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_LastBlockCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastBlockCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.MeshBlock LastBlock
[[deprecated("Use field access instead!")]] ::PowerUI::MeshBlock*& PowerUI::DynamicMesh::dyn_LastBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_LastBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastBlock"))->offset;
  return *reinterpret_cast<::PowerUI::MeshBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.MeshBlock FirstBlock
[[deprecated("Use field access instead!")]] ::PowerUI::MeshBlock*& PowerUI::DynamicMesh::dyn_FirstBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_FirstBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstBlock"))->offset;
  return *reinterpret_cast<::PowerUI::MeshBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer Renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& PowerUI::DynamicMesh::dyn_Renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_Renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material GlobalMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& PowerUI::DynamicMesh::dyn_GlobalMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_GlobalMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GlobalMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform OutputTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& PowerUI::DynamicMesh::dyn_OutputTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_OutputTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutputTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject OutputGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& PowerUI::DynamicMesh::dyn_OutputGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_OutputGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutputGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FixedSizeBuffer`1<UnityEngine.Vector2> UV
[[deprecated("Use field access instead!")]] ::PowerUI::FixedSizeBuffer_1<::UnityEngine::Vector2>*& PowerUI::DynamicMesh::dyn_UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_UV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UV"))->offset;
  return *reinterpret_cast<::PowerUI::FixedSizeBuffer_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FixedSizeBuffer`1<UnityEngine.Vector2> UV2
[[deprecated("Use field access instead!")]] ::PowerUI::FixedSizeBuffer_1<::UnityEngine::Vector2>*& PowerUI::DynamicMesh::dyn_UV2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_UV2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UV2"))->offset;
  return *reinterpret_cast<::PowerUI::FixedSizeBuffer_1<::UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FixedSizeBuffer`1<System.Int32> Triangles
[[deprecated("Use field access instead!")]] ::PowerUI::FixedSizeBuffer_1<int>*& PowerUI::DynamicMesh::dyn_Triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_Triangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Triangles"))->offset;
  return *reinterpret_cast<::PowerUI::FixedSizeBuffer_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FixedSizeBuffer`1<UnityEngine.Color> Colours
[[deprecated("Use field access instead!")]] ::PowerUI::FixedSizeBuffer_1<::UnityEngine::Color>*& PowerUI::DynamicMesh::dyn_Colours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_Colours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colours"))->offset;
  return *reinterpret_cast<::PowerUI::FixedSizeBuffer_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FixedSizeBuffer`1<UnityEngine.Vector3> Normals
[[deprecated("Use field access instead!")]] ::PowerUI::FixedSizeBuffer_1<::UnityEngine::Vector3>*& PowerUI::DynamicMesh::dyn_Normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_Normals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Normals"))->offset;
  return *reinterpret_cast<::PowerUI::FixedSizeBuffer_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FixedSizeBuffer`1<UnityEngine.Vector3> Vertices
[[deprecated("Use field access instead!")]] ::PowerUI::FixedSizeBuffer_1<::UnityEngine::Vector3>*& PowerUI::DynamicMesh::dyn_Vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_Vertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Vertices"))->offset;
  return *reinterpret_cast<::PowerUI::FixedSizeBuffer_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FixedSizeBuffer`1<UnityEngine.Vector4> Tangents
[[deprecated("Use field access instead!")]] ::PowerUI::FixedSizeBuffer_1<::UnityEngine::Vector4>*& PowerUI::DynamicMesh::dyn_Tangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_Tangents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tangents"))->offset;
  return *reinterpret_cast<::PowerUI::FixedSizeBuffer_1<::UnityEngine::Vector4>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshCollider FullPhysicsModeCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& PowerUI::DynamicMesh::dyn_FullPhysicsModeCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::dyn_FullPhysicsModeCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FullPhysicsModeCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.DynamicMesh.SetFontAtlas
void PowerUI::DynamicMesh::SetFontAtlas(::Blaze::TextureAtlas* atlas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::SetFontAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFontAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(atlas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, atlas);
}
// Autogenerated method: PowerUI.DynamicMesh.SetGraphicsAtlas
void PowerUI::DynamicMesh::SetGraphicsAtlas(::Blaze::TextureAtlas* atlas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::SetGraphicsAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraphicsAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(atlas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, atlas);
}
// Autogenerated method: PowerUI.DynamicMesh.SetGlobalMaterial
void PowerUI::DynamicMesh::SetGlobalMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::SetGlobalMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicMesh.SetMaterial
void PowerUI::DynamicMesh::SetMaterial(::UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::SetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, material);
}
// Autogenerated method: PowerUI.DynamicMesh.Setup
void PowerUI::DynamicMesh::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicMesh.RequireNormals
void PowerUI::DynamicMesh::RequireNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::RequireNormals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequireNormals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicMesh.RequireTangents
void PowerUI::DynamicMesh::RequireTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::RequireTangents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequireTangents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicMesh.ChangeParent
void PowerUI::DynamicMesh::ChangeParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::ChangeParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicMesh.SetPhysicsMode
void PowerUI::DynamicMesh::SetPhysicsMode(bool physics) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::SetPhysicsMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPhysicsMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physics)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, physics);
}
// Autogenerated method: PowerUI.DynamicMesh.PrepareForLayout
void PowerUI::DynamicMesh::PrepareForLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::PrepareForLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareForLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicMesh.CompletedLayout
void PowerUI::DynamicMesh::CompletedLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::CompletedLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompletedLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicMesh.Allocate
::PowerUI::MeshBlock* PowerUI::DynamicMesh::Allocate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::Allocate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Allocate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::MeshBlock*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicMesh.Flush
void PowerUI::DynamicMesh::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicMesh.Destroy
void PowerUI::DynamicMesh::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicMesh::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DynamicTexture
#include "PowerUI/DynamicTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.FilterMode
#include "UnityEngine/FilterMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean SomethingToUpdate
bool PowerUI::DynamicTexture::_get_SomethingToUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::_get_SomethingToUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("PowerUI", "DynamicTexture", "SomethingToUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean SomethingToUpdate
void PowerUI::DynamicTexture::_set_SomethingToUpdate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::_set_SomethingToUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "DynamicTexture", "SomethingToUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.DynamicTexture> Instances
::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::DynamicTexture*>* PowerUI::DynamicTexture::_get_Instances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::_get_Instances");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::DynamicTexture*>*>("PowerUI", "DynamicTexture", "Instances")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.DynamicTexture> Instances
void PowerUI::DynamicTexture::_set_Instances(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::DynamicTexture*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::_set_Instances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "DynamicTexture", "Instances", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Width
[[deprecated("Use field access instead!")]] int& PowerUI::DynamicTexture::dyn_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::dyn_Width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Height
[[deprecated("Use field access instead!")]] int& PowerUI::DynamicTexture::dyn_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::dyn_Height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::DynamicTexture::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Refreshing
[[deprecated("Use field access instead!")]] bool& PowerUI::DynamicTexture::dyn_Refreshing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::dyn_Refreshing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Refreshing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color32[] Pixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color32>& PowerUI::DynamicTexture::dyn_Pixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::dyn_Pixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ResizedWidth
[[deprecated("Use field access instead!")]] int& PowerUI::DynamicTexture::dyn_ResizedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::dyn_ResizedWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResizedWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ResizedHeight
[[deprecated("Use field access instead!")]] int& PowerUI::DynamicTexture::dyn_ResizedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::dyn_ResizedHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResizedHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D Texture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& PowerUI::DynamicTexture::dyn_Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::dyn_Texture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Texture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.DynamicTexture.Get
::PowerUI::DynamicTexture* PowerUI::DynamicTexture::Get(::StringW byName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "DynamicTexture", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byName)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::DynamicTexture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byName);
}
// Autogenerated method: PowerUI.DynamicTexture.RemoveAll
void PowerUI::DynamicTexture::RemoveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::RemoveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "DynamicTexture", "RemoveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.DynamicTexture.Update
void PowerUI::DynamicTexture::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "DynamicTexture", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.DynamicTexture.ResizeX
void PowerUI::DynamicTexture::ResizeX(int width) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::ResizeX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width);
}
// Autogenerated method: PowerUI.DynamicTexture.ResizeY
void PowerUI::DynamicTexture::ResizeY(int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::ResizeY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, height);
}
// Autogenerated method: PowerUI.DynamicTexture.Resize
void PowerUI::DynamicTexture::Resize(int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::Resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width, height);
}
// Autogenerated method: PowerUI.DynamicTexture.get_FilterMode
::UnityEngine::FilterMode PowerUI::DynamicTexture::get_FilterMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::get_FilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::FilterMode, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicTexture.set_FilterMode
void PowerUI::DynamicTexture::set_FilterMode(::UnityEngine::FilterMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::set_FilterMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FilterMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.DynamicTexture.Resize
void PowerUI::DynamicTexture::Resize(int width, int height, bool createIfZero) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::Resize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(createIfZero)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width, height, createIfZero);
}
// Autogenerated method: PowerUI.DynamicTexture.GetTexture
::UnityEngine::Texture2D* PowerUI::DynamicTexture::GetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::GetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicTexture.GetTextureHolder
::UnityEngine::Texture2D* PowerUI::DynamicTexture::GetTextureHolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::GetTextureHolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureHolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicTexture.DrawPixel
void PowerUI::DynamicTexture::DrawPixel(int x, int y, ::UnityEngine::Color32 colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::DrawPixel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawPixel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(colour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, colour);
}
// Autogenerated method: PowerUI.DynamicTexture.DrawLine
void PowerUI::DynamicTexture::DrawLine(int x, int y, int x2, int y2, ::UnityEngine::Color32 colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::DrawLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(x2), ::il2cpp_utils::ExtractType(y2), ::il2cpp_utils::ExtractType(colour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, x2, y2, colour);
}
// Autogenerated method: PowerUI.DynamicTexture.DrawCircle
void PowerUI::DynamicTexture::DrawCircle(int x0, int y0, int radius, ::UnityEngine::Color32 colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::DrawCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x0), ::il2cpp_utils::ExtractType(y0), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(colour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x0, y0, radius, colour);
}
// Autogenerated method: PowerUI.DynamicTexture.Clear
void PowerUI::DynamicTexture::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicTexture.Clear
void PowerUI::DynamicTexture::Clear(::UnityEngine::Color32 clearColour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearColour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clearColour);
}
// Autogenerated method: PowerUI.DynamicTexture.SetPixel
void PowerUI::DynamicTexture::SetPixel(int index, ::UnityEngine::Color32 colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::SetPixel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPixel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(colour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, colour);
}
// Autogenerated method: PowerUI.DynamicTexture.Refresh
void PowerUI::DynamicTexture::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicTexture.Redraw
void PowerUI::DynamicTexture::Redraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::Redraw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Redraw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicTexture.Flush
void PowerUI::DynamicTexture::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::DynamicTexture*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicTexture.FlushDirect
void PowerUI::DynamicTexture::FlushDirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicTexture::FlushDirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushDirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.OnDomEvent
#include "PowerUI/OnDomEvent.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.OnDomEvent.Invoke
void PowerUI::OnDomEvent::Invoke(::PowerUI::UIEvent* uiEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnDomEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnDomEvent*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uiEvent);
}
// Autogenerated method: PowerUI.OnDomEvent.BeginInvoke
::System::IAsyncResult* PowerUI::OnDomEvent::BeginInvoke(::PowerUI::UIEvent* uiEvent, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnDomEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnDomEvent*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, uiEvent, callback, object);
}
// Autogenerated method: PowerUI.OnDomEvent.EndInvoke
void PowerUI::OnDomEvent::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnDomEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnDomEvent*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.ErrorHandler
#include "PowerUI/ErrorHandler.hpp"
// Including type: PowerUI.ErrorInfo
#include "PowerUI/ErrorInfo.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ErrorHandler.Invoke
void PowerUI::ErrorHandler::Invoke(::PowerUI::ErrorInfo* error, ::PowerUI::Document* document) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ErrorHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ErrorHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, document);
}
// Autogenerated method: PowerUI.ErrorHandler.BeginInvoke
::System::IAsyncResult* PowerUI::ErrorHandler::BeginInvoke(::PowerUI::ErrorInfo* error, ::PowerUI::Document* document, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ErrorHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ErrorHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, error, document, callback, object);
}
// Autogenerated method: PowerUI.ErrorHandler.EndInvoke
void PowerUI::ErrorHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ErrorHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ErrorHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ErrorHandlers
#include "PowerUI/ErrorHandlers.hpp"
// Including type: PowerUI.ErrorHandler
#include "PowerUI/ErrorHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.ErrorHandler PageNotFound
::PowerUI::ErrorHandler* PowerUI::ErrorHandlers::_get_PageNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ErrorHandlers::_get_PageNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::ErrorHandler*>("PowerUI", "ErrorHandlers", "PageNotFound"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.ErrorHandler PageNotFound
void PowerUI::ErrorHandlers::_set_PageNotFound(::PowerUI::ErrorHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ErrorHandlers::_set_PageNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ErrorHandlers", "PageNotFound", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ErrorInfo
#include "PowerUI/ErrorInfo.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.FilePath Url
[[deprecated("Use field access instead!")]] ::PowerUI::FilePath*& PowerUI::ErrorInfo::dyn_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ErrorInfo::dyn_Url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Url"))->offset;
  return *reinterpret_cast<::PowerUI::FilePath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Message
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::ErrorInfo::dyn_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ErrorInfo::dyn_Message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.HttpErrorInfo
#include "PowerUI/HttpErrorInfo.hpp"
// Including type: UnityHttp.HttpRequest
#include "UnityHttp/HttpRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityHttp.HttpRequest Request
[[deprecated("Use field access instead!")]] ::UnityHttp::HttpRequest*& PowerUI::HttpErrorInfo::dyn_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpErrorInfo::dyn_Request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Request"))->offset;
  return *reinterpret_cast<::UnityHttp::HttpRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FileErrorInfo
#include "PowerUI/FileErrorInfo.hpp"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.TextPackage Package
[[deprecated("Use field access instead!")]] ::PowerUI::TextPackage*& PowerUI::FileErrorInfo::dyn_Package() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileErrorInfo::dyn_Package");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Package"))->offset;
  return *reinterpret_cast<::PowerUI::TextPackage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: UnityEngine.Event
#include "UnityEngine/Event.hpp"
// Including type: UnityEngine.KeyCode
#include "UnityEngine/KeyCode.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: PowerUI.WorldUI
#include "PowerUI/WorldUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _Type
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::UIEvent::dyn__Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn__Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 clientX
[[deprecated("Use field access instead!")]] int& PowerUI::UIEvent::dyn_clientX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_clientX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 clientY
[[deprecated("Use field access instead!")]] int& PowerUI::UIEvent::dyn_clientY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_clientY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 keyCode
[[deprecated("Use field access instead!")]] int& PowerUI::UIEvent::dyn_keyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_keyCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean heldDown
[[deprecated("Use field access instead!")]] bool& PowerUI::UIEvent::dyn_heldDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_heldDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heldDown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element target
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::UIEvent::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element SelectorTarget
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::UIEvent::dyn_SelectorTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_SelectorTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SelectorTarget"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char character
[[deprecated("Use field access instead!")]] ::Il2CppChar& PowerUI::UIEvent::dyn_character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_character");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "character"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bubbleCount
[[deprecated("Use field access instead!")]] int& PowerUI::UIEvent::dyn_bubbleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_bubbleCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bubbleCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Event unityEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Event*& PowerUI::UIEvent::dyn_unityEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_unityEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unityEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Event**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cancelBubble
[[deprecated("Use field access instead!")]] bool& PowerUI::UIEvent::dyn_cancelBubble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_cancelBubble");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelBubble"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean bubbles
[[deprecated("Use field access instead!")]] bool& PowerUI::UIEvent::dyn_bubbles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_bubbles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bubbles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cancelable
[[deprecated("Use field access instead!")]] bool& PowerUI::UIEvent::dyn_cancelable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::dyn_cancelable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.UIEvent.stopPropagation
void PowerUI::UIEvent::stopPropagation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::stopPropagation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "stopPropagation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_unityKeyCode
::UnityEngine::KeyCode PowerUI::UIEvent::get_unityKeyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_unityKeyCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unityKeyCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::KeyCode, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_type
::StringW PowerUI::UIEvent::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.set_type
void PowerUI::UIEvent::set_type(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::set_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.UIEvent.get_currentTarget
::PowerUI::Element* PowerUI::UIEvent::get_currentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_currentTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_timeStamp
::System::DateTime PowerUI::UIEvent::get_timeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_timeStamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeStamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_eventPhase
int PowerUI::UIEvent::get_eventPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_eventPhase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventPhase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_button
int PowerUI::UIEvent::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_leftMouseDown
bool PowerUI::UIEvent::get_leftMouseDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_leftMouseDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftMouseDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_rightMouseDown
bool PowerUI::UIEvent::get_rightMouseDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_rightMouseDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightMouseDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_isLeftMouse
bool PowerUI::UIEvent::get_isLeftMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_isLeftMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isLeftMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_isRightMouse
bool PowerUI::UIEvent::get_isRightMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_isRightMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRightMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_ctrlKey
bool PowerUI::UIEvent::get_ctrlKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_ctrlKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ctrlKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_shiftKey
bool PowerUI::UIEvent::get_shiftKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_shiftKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shiftKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_altKey
bool PowerUI::UIEvent::get_altKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_altKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_altKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_document
::PowerUI::Document* PowerUI::UIEvent::get_document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Document*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_worldUI
::PowerUI::WorldUI* PowerUI::UIEvent::get_worldUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_worldUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::WorldUI*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_relativeX
float PowerUI::UIEvent::get_relativeX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_relativeX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_relativeY
float PowerUI::UIEvent::get_relativeY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_relativeY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_localX
int PowerUI::UIEvent::get_localX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_localX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.UIEvent.get_localY
int PowerUI::UIEvent::get_localY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::UIEvent::get_localY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.FileProtocol
#include "PowerUI/FileProtocol.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Url
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::FilePath::dyn_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::dyn_Url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Base
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::FilePath::dyn_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::dyn_Base");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Base"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Target
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::FilePath::dyn_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::dyn_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Target"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Protocol
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::FilePath::dyn_Protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::dyn_Protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Protocol"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] Segments
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& PowerUI::FilePath::dyn_Segments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::dyn_Segments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Segments"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RelativeTo
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::FilePath::dyn_RelativeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::dyn_RelativeTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RelativeTo"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean UsedResolution
[[deprecated("Use field access instead!")]] bool& PowerUI::FilePath::dyn_UsedResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::dyn_UsedResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UsedResolution"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Hash
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::FilePath::dyn_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::dyn_Hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hash"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element Parent
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::FilePath::dyn_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::dyn_Parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parent"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Query
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::FilePath::dyn_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::dyn_Query");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Query"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.FilePath.SetPath
void PowerUI::FilePath::SetPath(::StringW url, ::StringW relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::SetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url, relativeTo);
}
// Autogenerated method: PowerUI.FilePath.SetPath
void PowerUI::FilePath::SetPath(::StringW url, ::StringW relativeTo, bool useResolution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::SetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(relativeTo), ::il2cpp_utils::ExtractType(useResolution)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url, relativeTo, useResolution);
}
// Autogenerated method: PowerUI.FilePath.reload
void PowerUI::FilePath::reload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::reload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "reload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.assign
void PowerUI::FilePath::assign(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::assign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "assign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url);
}
// Autogenerated method: PowerUI.FilePath.replace
void PowerUI::FilePath::replace(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, url);
}
// Autogenerated method: PowerUI.FilePath.get_Handler
::PowerUI::FileProtocol* PowerUI::FilePath::get_Handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_Handler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::FileProtocol*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_Filename
::StringW PowerUI::FilePath::get_Filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_Filename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Filename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_File
::StringW PowerUI::FilePath::get_File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_File");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_File", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.set_File
void PowerUI::FilePath::set_File(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::set_File");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_File", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.FilePath.get_Filetype
::StringW PowerUI::FilePath::get_Filetype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_Filetype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Filetype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_Directory
::StringW PowerUI::FilePath::get_Directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_Directory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Directory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_Path
::StringW PowerUI::FilePath::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_host
::StringW PowerUI::FilePath::get_host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_hostname
::StringW PowerUI::FilePath::get_hostname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_hostname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hostname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_port
::StringW PowerUI::FilePath::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_href
::StringW PowerUI::FilePath::get_href() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_href");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_href", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_basepath
::StringW PowerUI::FilePath::get_basepath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_basepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_basepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.set_basepath
void PowerUI::FilePath::set_basepath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::set_basepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_basepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.FilePath.get_target
::StringW PowerUI::FilePath::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.set_target
void PowerUI::FilePath::set_target(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::set_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.FilePath.get_protocol
::StringW PowerUI::FilePath::get_protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_protocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_protocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_hash
::StringW PowerUI::FilePath::get_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_pathname
::StringW PowerUI::FilePath::get_pathname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_pathname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pathname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_file
::StringW PowerUI::FilePath::get_file() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_file");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_file", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_searchParams
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* PowerUI::FilePath::get_searchParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_searchParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_searchParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.LoadUrlString
void PowerUI::FilePath::LoadUrlString(::StringW getString, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::LoadUrlString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "FilePath", "LoadUrlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getString), ::il2cpp_utils::ExtractType(set)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, getString, set);
}
// Autogenerated method: PowerUI.FilePath.get_search
::StringW PowerUI::FilePath::get_search() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_search");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_search", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_fullAccess
bool PowerUI::FilePath::get_fullAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_fullAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.get_web
bool PowerUI::FilePath::get_web() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::get_web");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_web", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.GetProtocol
::PowerUI::FileProtocol* PowerUI::FilePath::GetProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::GetProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::FileProtocol*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FilePath.ToString
::StringW PowerUI::FilePath::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FilePath::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.CacheProtocol
#include "PowerUI/CacheProtocol.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.CacheProtocol.GetNames
::ArrayW<::StringW> PowerUI::CacheProtocol::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CacheProtocol::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.CacheProtocol.OnGetGraphic
void PowerUI::CacheProtocol::OnGetGraphic(::PowerUI::ImagePackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::CacheProtocol::OnGetGraphic");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DriveProtocol
#include "PowerUI/DriveProtocol.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
// Including type: PowerUI.DataPackage
#include "PowerUI/DataPackage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DriveProtocol.GetNames
::ArrayW<::StringW> PowerUI::DriveProtocol::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DriveProtocol::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DriveProtocol.OnGetGraphic
void PowerUI::DriveProtocol::OnGetGraphic(::PowerUI::ImagePackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DriveProtocol::OnGetGraphic");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated method: PowerUI.DriveProtocol.OnGetText
void PowerUI::DriveProtocol::OnGetText(::PowerUI::TextPackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DriveProtocol::OnGetText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated method: PowerUI.DriveProtocol.OnGetData
void PowerUI::DriveProtocol::OnGetData(::PowerUI::DataPackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DriveProtocol::OnGetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DynamicProtocol
#include "PowerUI/DynamicProtocol.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.DynamicProtocol.GetNames
::ArrayW<::StringW> PowerUI::DynamicProtocol::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicProtocol::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicProtocol.OnGetGraphic
void PowerUI::DynamicProtocol::OnGetGraphic(::PowerUI::ImagePackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicProtocol::OnGetGraphic");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FileProtocol
#include "PowerUI/FileProtocol.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
// Including type: PowerUI.DataPackage
#include "PowerUI/DataPackage.hpp"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.FormData
#include "PowerUI/FormData.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean UseResolution
[[deprecated("Use field access instead!")]] bool& PowerUI::FileProtocol::dyn_UseResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocol::dyn_UseResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UseResolution"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.FileProtocol.GetNames
::ArrayW<::StringW> PowerUI::FileProtocol::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocol::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FileProtocol.FullAccess
bool PowerUI::FileProtocol::FullAccess(::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocol::FullAccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: PowerUI.FileProtocol.OnGetData
void PowerUI::FileProtocol::OnGetData(::PowerUI::DataPackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocol::OnGetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated method: PowerUI.FileProtocol.OnGetText
void PowerUI::FileProtocol::OnGetText(::PowerUI::TextPackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocol::OnGetText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated method: PowerUI.FileProtocol.OnGetGraphic
void PowerUI::FileProtocol::OnGetGraphic(::PowerUI::ImagePackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocol::OnGetGraphic");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated method: PowerUI.FileProtocol.OnPostForm
void PowerUI::FileProtocol::OnPostForm(::PowerUI::FormData* form, ::PowerUI::Element* formElement, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocol::OnPostForm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, form, formElement, path);
}
// Autogenerated method: PowerUI.FileProtocol.OnFollowLink
void PowerUI::FileProtocol::OnFollowLink(::PowerUI::Element* linkElement, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocol::OnFollowLink");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linkElement, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FileProtocols
#include "PowerUI/FileProtocols.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.FileProtocol
#include "PowerUI/FileProtocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String UnrecognisedProtocolHandler
::StringW PowerUI::FileProtocols::_get_UnrecognisedProtocolHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocols::_get_UnrecognisedProtocolHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PowerUI", "FileProtocols", "UnrecognisedProtocolHandler"));
}
// Autogenerated static field setter
// Set static field: static public System.String UnrecognisedProtocolHandler
void PowerUI::FileProtocols::_set_UnrecognisedProtocolHandler(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocols::_set_UnrecognisedProtocolHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "FileProtocols", "UnrecognisedProtocolHandler", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.FileProtocol> Protocols
::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::FileProtocol*>* PowerUI::FileProtocols::_get_Protocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocols::_get_Protocols");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::FileProtocol*>*>("PowerUI", "FileProtocols", "Protocols")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.FileProtocol> Protocols
void PowerUI::FileProtocols::_set_Protocols(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::FileProtocol*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocols::_set_Protocols");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "FileProtocols", "Protocols", value));
}
// Autogenerated method: PowerUI.FileProtocols.Setup
void PowerUI::FileProtocols::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocols::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "FileProtocols", "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.FileProtocols.Add
void PowerUI::FileProtocols::Add(::PowerUI::FileProtocol* protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocols::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "FileProtocols", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocol)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocol);
}
// Autogenerated method: PowerUI.FileProtocols.Get
::PowerUI::FileProtocol* PowerUI::FileProtocols::Get(::StringW protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocols::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "FileProtocols", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocol)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::FileProtocol*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocol);
}
// Autogenerated method: PowerUI.FileProtocols..cctor
void PowerUI::FileProtocols::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FileProtocols::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "FileProtocols", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.HttpProtocol
#include "PowerUI/HttpProtocol.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.Document
#include "PowerUI/Document.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
// Including type: UnityHttp.HttpRequest
#include "UnityHttp/HttpRequest.hpp"
// Including type: PowerUI.FormData
#include "PowerUI/FormData.hpp"
// Including type: PowerUI.DataPackage
#include "PowerUI/DataPackage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ImagePackage> Cache
::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ImagePackage*>* PowerUI::HttpProtocol::_get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::_get_Cache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ImagePackage*>*>("PowerUI", "HttpProtocol", "Cache")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ImagePackage> Cache
void PowerUI::HttpProtocol::_set_Cache(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ImagePackage*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::_set_Cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "HttpProtocol", "Cache", value));
}
// Autogenerated method: PowerUI.HttpProtocol.GetFromCache
::PowerUI::ImagePackage* PowerUI::HttpProtocol::GetFromCache(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::GetFromCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "HttpProtocol", "GetFromCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::ImagePackage*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: PowerUI.HttpProtocol.AddToCache
void PowerUI::HttpProtocol::AddToCache(::StringW url, ::PowerUI::ImagePackage* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::AddToCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "HttpProtocol", "AddToCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, result);
}
// Autogenerated method: PowerUI.HttpProtocol.ResolveTarget
::PowerUI::Document* PowerUI::HttpProtocol::ResolveTarget(::PowerUI::Element* linkElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::ResolveTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linkElement)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Document*, false>(this, ___internal__method, linkElement);
}
// Autogenerated method: PowerUI.HttpProtocol.LoadIntoDocument
void PowerUI::HttpProtocol::LoadIntoDocument(::PowerUI::FilePath* path, ::PowerUI::Document* document) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::LoadIntoDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(document)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, document);
}
// Autogenerated method: PowerUI.HttpProtocol.GotLinkText
void PowerUI::HttpProtocol::GotLinkText(::PowerUI::TextPackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::GotLinkText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotLinkText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.HttpProtocol.OnFormSent
void PowerUI::HttpProtocol::OnFormSent(::UnityHttp::HttpRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::OnFormSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFormSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: PowerUI.HttpProtocol.GotDataResult
void PowerUI::HttpProtocol::GotDataResult(::UnityHttp::HttpRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::GotDataResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotDataResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: PowerUI.HttpProtocol.GotTextResult
void PowerUI::HttpProtocol::GotTextResult(::UnityHttp::HttpRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::GotTextResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotTextResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: PowerUI.HttpProtocol.GotGraphicResult
void PowerUI::HttpProtocol::GotGraphicResult(::UnityHttp::HttpRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::GotGraphicResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotGraphicResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: PowerUI.HttpProtocol..cctor
void PowerUI::HttpProtocol::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "HttpProtocol", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.HttpProtocol.GetNames
::ArrayW<::StringW> PowerUI::HttpProtocol::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HttpProtocol.OnGetGraphic
void PowerUI::HttpProtocol::OnGetGraphic(::PowerUI::ImagePackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::OnGetGraphic");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated method: PowerUI.HttpProtocol.OnGetText
void PowerUI::HttpProtocol::OnGetText(::PowerUI::TextPackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::OnGetText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated method: PowerUI.HttpProtocol.OnFollowLink
void PowerUI::HttpProtocol::OnFollowLink(::PowerUI::Element* linkElement, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::OnFollowLink");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linkElement, path);
}
// Autogenerated method: PowerUI.HttpProtocol.OnPostForm
void PowerUI::HttpProtocol::OnPostForm(::PowerUI::FormData* form, ::PowerUI::Element* formElement, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::OnPostForm");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, form, formElement, path);
}
// Autogenerated method: PowerUI.HttpProtocol.OnGetData
void PowerUI::HttpProtocol::OnGetData(::PowerUI::DataPackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::OnGetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ResourcesProtocol
#include "PowerUI/ResourcesProtocol.hpp"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
// Including type: PowerUI.DataPackage
#include "PowerUI/DataPackage.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ResourcesProtocol.GotLinkText
void PowerUI::ResourcesProtocol::GotLinkText(::PowerUI::TextPackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocol::GotLinkText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotLinkText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.ResourcesProtocol.GetNames
::ArrayW<::StringW> PowerUI::ResourcesProtocol::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocol::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ResourcesProtocol.OnGetGraphic
void PowerUI::ResourcesProtocol::OnGetGraphic(::PowerUI::ImagePackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocol::OnGetGraphic");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated method: PowerUI.ResourcesProtocol.OnGetData
void PowerUI::ResourcesProtocol::OnGetData(::PowerUI::DataPackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocol::OnGetData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated method: PowerUI.ResourcesProtocol.OnGetText
void PowerUI::ResourcesProtocol::OnGetText(::PowerUI::TextPackage* package, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocol::OnGetText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package, path);
}
// Autogenerated method: PowerUI.ResourcesProtocol.OnFollowLink
void PowerUI::ResourcesProtocol::OnFollowLink(::PowerUI::Element* linkElement, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocol::OnFollowLink");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linkElement, path);
}
// Autogenerated method: PowerUI.ResourcesProtocol.FullAccess
bool PowerUI::ResourcesProtocol::FullAccess(::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocol::FullAccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ResourcesProtocolCallback
#include "PowerUI/ResourcesProtocolCallback.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
// Including type: PowerUI.TextPackage
#include "PowerUI/TextPackage.hpp"
// Including type: PowerUI.DataPackage
#include "PowerUI/DataPackage.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.FileProtocol
#include "PowerUI/FileProtocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.FilePath Path
[[deprecated("Use field access instead!")]] ::PowerUI::FilePath*& PowerUI::ResourcesProtocolCallback::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocolCallback::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::PowerUI::FilePath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.TextPackage Text
[[deprecated("Use field access instead!")]] ::PowerUI::TextPackage*& PowerUI::ResourcesProtocolCallback::dyn_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocolCallback::dyn_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Text"))->offset;
  return *reinterpret_cast<::PowerUI::TextPackage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.DataPackage Data
[[deprecated("Use field access instead!")]] ::PowerUI::DataPackage*& PowerUI::ResourcesProtocolCallback::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocolCallback::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::PowerUI::DataPackage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.ImagePackage Images
[[deprecated("Use field access instead!")]] ::PowerUI::ImagePackage*& PowerUI::ResourcesProtocolCallback::dyn_Images() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocolCallback::dyn_Images");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Images"))->offset;
  return *reinterpret_cast<::PowerUI::ImagePackage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FileProtocol Protocol
[[deprecated("Use field access instead!")]] ::PowerUI::FileProtocol*& PowerUI::ResourcesProtocolCallback::dyn_Protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocolCallback::dyn_Protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Protocol"))->offset;
  return *reinterpret_cast<::PowerUI::FileProtocol**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.ResourcesProtocolCallback.OnRun
void PowerUI::ResourcesProtocolCallback::OnRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResourcesProtocolCallback::OnRun");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Callback*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SceneProtocol
#include "PowerUI/SceneProtocol.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.SceneProtocol.GetNames
::ArrayW<::StringW> PowerUI::SceneProtocol::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SceneProtocol::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SceneProtocol.OnFollowLink
void PowerUI::SceneProtocol::OnFollowLink(::PowerUI::Element* linkElement, ::PowerUI::FilePath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SceneProtocol::OnFollowLink");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::FileProtocol*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, linkElement, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FlatWorldUI
#include "PowerUI/FlatWorldUI.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PowerUI.FlatWorldUIHandler
#include "PowerUI/FlatWorldUIHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single GlobalOffset
float PowerUI::FlatWorldUI::_get_GlobalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::_get_GlobalOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("PowerUI", "FlatWorldUI", "GlobalOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single GlobalOffset
void PowerUI::FlatWorldUI::_set_GlobalOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::_set_GlobalOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "FlatWorldUI", "GlobalOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 DefaultLayer
[[deprecated("Use field access instead!")]] int& PowerUI::FlatWorldUI::dyn_DefaultLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::dyn_DefaultLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DefaultLayer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture Texture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& PowerUI::FlatWorldUI::dyn_Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::dyn_Texture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Texture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera SourceCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& PowerUI::FlatWorldUI::dyn_SourceCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::dyn_SourceCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SourceCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject CameraObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& PowerUI::FlatWorldUI::dyn_CameraObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::dyn_CameraObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CameraObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.FlatWorldUIHandler Handler
[[deprecated("Use field access instead!")]] ::PowerUI::FlatWorldUIHandler*& PowerUI::FlatWorldUI::dyn_Handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::dyn_Handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handler"))->offset;
  return *reinterpret_cast<::PowerUI::FlatWorldUIHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean RequiresOffset
[[deprecated("Use field access instead!")]] bool& PowerUI::FlatWorldUI::dyn_RequiresOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::dyn_RequiresOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequiresOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.FlatWorldUI.SetCameraDistance
void PowerUI::FlatWorldUI::SetCameraDistance(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::SetCameraDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCameraDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated method: PowerUI.FlatWorldUI.SetOrthographicSize
void PowerUI::FlatWorldUI::SetOrthographicSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::SetOrthographicSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOrthographicSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FlatWorldUI.RelativeMouseMovedTo
void PowerUI::FlatWorldUI::RelativeMouseMovedTo(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::RelativeMouseMovedTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RelativeMouseMovedTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.FlatWorldUI.MouseMovedTo
void PowerUI::FlatWorldUI::MouseMovedTo(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::MouseMovedTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MouseMovedTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.FlatWorldUI.RelativeMouseDown
void PowerUI::FlatWorldUI::RelativeMouseDown(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::RelativeMouseDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RelativeMouseDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.FlatWorldUI.MouseDown
void PowerUI::FlatWorldUI::MouseDown(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::MouseDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MouseDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.FlatWorldUI.RelativeMouseUp
void PowerUI::FlatWorldUI::RelativeMouseUp(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::RelativeMouseUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RelativeMouseUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.FlatWorldUI.MouseUp
void PowerUI::FlatWorldUI::MouseUp(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::MouseUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MouseUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.FlatWorldUI..cctor
void PowerUI::FlatWorldUI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "FlatWorldUI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.FlatWorldUI.RenderWithCamera
void PowerUI::FlatWorldUI::RenderWithCamera(int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::RenderWithCamera");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUI*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layer);
}
// Autogenerated method: PowerUI.FlatWorldUI.SetOrigin
void PowerUI::FlatWorldUI::SetOrigin(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::SetOrigin");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUI*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.FlatWorldUI.SetResolution
void PowerUI::FlatWorldUI::SetResolution(float pp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::SetResolution");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUI*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pp);
}
// Autogenerated method: PowerUI.FlatWorldUI.SetResolution
void PowerUI::FlatWorldUI::SetResolution(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::SetResolution");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUI*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.FlatWorldUI.SetDimensions
void PowerUI::FlatWorldUI::SetDimensions(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUI::SetDimensions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::WorldUI*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FlatWorldUIHandler
#include "PowerUI/FlatWorldUIHandler.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single MaximumRate
float PowerUI::FlatWorldUIHandler::_get_MaximumRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUIHandler::_get_MaximumRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("PowerUI", "FlatWorldUIHandler", "MaximumRate"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MaximumRate
void PowerUI::FlatWorldUIHandler::_set_MaximumRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUIHandler::_set_MaximumRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "FlatWorldUIHandler", "MaximumRate", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera Camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& PowerUI::FlatWorldUIHandler::dyn_Camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUIHandler::dyn_Camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect Location
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& PowerUI::FlatWorldUIHandler::dyn_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUIHandler::dyn_Location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Location"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D Output
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& PowerUI::FlatWorldUIHandler::dyn_Output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUIHandler::dyn_Output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Output"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CurrentRate
[[deprecated("Use field access instead!")]] float& PowerUI::FlatWorldUIHandler::dyn_CurrentRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUIHandler::dyn_CurrentRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Redraw
[[deprecated("Use field access instead!")]] bool& PowerUI::FlatWorldUIHandler::dyn_Redraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUIHandler::dyn_Redraw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Redraw"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Aspect
[[deprecated("Use field access instead!")]] float& PowerUI::FlatWorldUIHandler::dyn_Aspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUIHandler::dyn_Aspect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Aspect"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.FlatWorldUIHandler.Update
void PowerUI::FlatWorldUIHandler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUIHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FlatWorldUIHandler.OnPostRender
void PowerUI::FlatWorldUIHandler::OnPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FlatWorldUIHandler::OnPostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Focus
#include "PowerUI/Focus.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Focus.get_Current
::PowerUI::Element* PowerUI::Focus::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Focus::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Focus", "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Element*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Focus.MoveUp
void PowerUI::Focus::MoveUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Focus::MoveUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Focus", "MoveUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Focus.MoveDown
void PowerUI::Focus::MoveDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Focus::MoveDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Focus", "MoveDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Focus.MoveLeft
void PowerUI::Focus::MoveLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Focus::MoveLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Focus", "MoveLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Focus.MoveRight
void PowerUI::Focus::MoveRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Focus::MoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Focus", "MoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Focus.Click
void PowerUI::Focus::Click() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Focus::Click");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Focus", "Click", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Focus.MouseDown
void PowerUI::Focus::MouseDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Focus::MouseDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Focus", "MouseDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Focus.MouseUp
void PowerUI::Focus::MouseUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Focus::MouseUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Focus", "MouseUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Focus.TabNext
void PowerUI::Focus::TabNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Focus::TabNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Focus", "TabNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.FormData
#include "PowerUI/FormData.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.WWWForm
#include "UnityEngine/WWWForm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element form
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::FormData::dyn_form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormData::dyn_form");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "form"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.String> RawFields
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PowerUI::FormData::dyn_RawFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormData::dyn_RawFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RawFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.FormData.get_Item
::StringW PowerUI::FormData::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormData::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: PowerUI.FormData.Checked
bool PowerUI::FormData::Checked(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormData::Checked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Checked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: PowerUI.FormData.ToUnityForm
::UnityEngine::WWWForm* PowerUI::FormData::ToUnityForm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormData::ToUnityForm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUnityForm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::WWWForm*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.FormData.ToUrlString
::StringW PowerUI::FormData::ToUrlString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::FormData::ToUrlString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUrlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.HitResult
#include "PowerUI/HitResult.hpp"
// Including type: PowerUI.WorldUI
#include "PowerUI/WorldUI.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 MouseX
[[deprecated("Use field access instead!")]] int& PowerUI::HitResult::dyn_MouseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::dyn_MouseX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MouseX"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MouseY
[[deprecated("Use field access instead!")]] int& PowerUI::HitResult::dyn_MouseY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::dyn_MouseY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MouseY"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ScreenMode
[[deprecated("Use field access instead!")]] bool& PowerUI::HitResult::dyn_ScreenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::dyn_ScreenMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScreenMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean Successful
[[deprecated("Use field access instead!")]] bool& PowerUI::HitResult::dyn_Successful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::dyn_Successful");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Successful"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.WorldUI OnWorldUI
[[deprecated("Use field access instead!")]] ::PowerUI::WorldUI*& PowerUI::HitResult::dyn_OnWorldUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::dyn_OnWorldUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnWorldUI"))->offset;
  return *reinterpret_cast<::PowerUI::WorldUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element HitElement
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::HitResult::dyn_HitElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::dyn_HitElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HitElement"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.HitResult.SetPoint
void PowerUI::HitResult::SetPoint(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::SetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.HitResult.SetRelativePoint
void PowerUI::HitResult::SetRelativePoint(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::SetRelativePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRelativePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: PowerUI.HitResult.RunClick
bool PowerUI::HitResult::RunClick(::PowerUI::UIEvent* uiEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::RunClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uiEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uiEvent);
}
// Autogenerated method: PowerUI.HitResult.RunMouseOver
void PowerUI::HitResult::RunMouseOver(::PowerUI::UIEvent* mouseEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::RunMouseOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunMouseOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouseEvent);
}
// Autogenerated method: PowerUI.HitResult.FindWorldUI
bool PowerUI::HitResult::FindWorldUI(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::FindWorldUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindWorldUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, transform);
}
// Autogenerated method: PowerUI.HitResult.SetElement
void PowerUI::HitResult::SetElement(::PowerUI::Element* hitElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::SetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hitElement);
}
// Autogenerated method: PowerUI.HitResult.FindElement
void PowerUI::HitResult::FindElement(::UnityEngine::RaycastHit hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::FindElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hit);
}
// Autogenerated method: PowerUI.HitResult.get_Success
bool PowerUI::HitResult::get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::get_Success");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Success", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HitResult.get_InWorld
bool PowerUI::HitResult::get_InWorld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HitResult::get_InWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.HtmlTagHandler
#include "PowerUI/HtmlTagHandler.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
// Including type: PowerUI.KeyboardMode
#include "PowerUI/KeyboardMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsIsolated
[[deprecated("Use field access instead!")]] bool& PowerUI::HtmlTagHandler::dyn_IsIsolated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::dyn_IsIsolated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsIsolated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Element Element
[[deprecated("Use field access instead!")]] ::PowerUI::Element*& PowerUI::HtmlTagHandler::dyn_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::dyn_Element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Element"))->offset;
  return *reinterpret_cast<::PowerUI::Element**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IgnoreClick
[[deprecated("Use field access instead!")]] bool& PowerUI::HtmlTagHandler::dyn_IgnoreClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::dyn_IgnoreClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IgnoreClick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsFocusable
[[deprecated("Use field access instead!")]] bool& PowerUI::HtmlTagHandler::dyn_IsFocusable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::dyn_IsFocusable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsFocusable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IgnoreSelfClick
[[deprecated("Use field access instead!")]] bool& PowerUI::HtmlTagHandler::dyn_IgnoreSelfClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::dyn_IgnoreSelfClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IgnoreSelfClick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.HtmlTagHandler.RequestLayout
void PowerUI::HtmlTagHandler::RequestLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::RequestLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.Junk
bool PowerUI::HtmlTagHandler::Junk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::Junk");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnResetAllVariables
void PowerUI::HtmlTagHandler::OnResetAllVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnResetAllVariables");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnResetVariable
void PowerUI::HtmlTagHandler::OnResetVariable(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnResetVariable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnRenderPass
void PowerUI::HtmlTagHandler::OnRenderPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnRenderPass");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.HeightChanged
void PowerUI::HtmlTagHandler::HeightChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::HeightChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.WidthChanged
void PowerUI::HtmlTagHandler::WidthChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::WidthChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnLayout
void PowerUI::HtmlTagHandler::OnLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnLayout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnFocus
void PowerUI::HtmlTagHandler::OnFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnFocus");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnBlur
void PowerUI::HtmlTagHandler::OnBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnBlur");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnLoaded
void PowerUI::HtmlTagHandler::OnLoaded(::StringW objectLoaded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, objectLoaded);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnKeyPress
void PowerUI::HtmlTagHandler::OnKeyPress(::PowerUI::UIEvent* pressEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnKeyPress");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressEvent);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnMouseMove
void PowerUI::HtmlTagHandler::OnMouseMove(::PowerUI::UIEvent* moveEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnMouseMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moveEvent);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnClick
bool PowerUI::HtmlTagHandler::OnClick(::PowerUI::UIEvent* clickEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnClick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clickEvent);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnShowMobileKeyboard
::PowerUI::KeyboardMode* PowerUI::HtmlTagHandler::OnShowMobileKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnShowMobileKeyboard");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::KeyboardMode*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnChildrenLoaded
void PowerUI::HtmlTagHandler::OnChildrenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnChildrenLoaded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::HtmlTagHandler*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.HtmlTagHandler.OnAttributeChange
bool PowerUI::HtmlTagHandler::OnAttributeChange(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HtmlTagHandler::OnAttributeChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Wrench::TagHandler*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ImageCache
#include "PowerUI/ImageCache.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Texture> Lookup
::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Texture*>* PowerUI::ImageCache::_get_Lookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageCache::_get_Lookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Texture*>*>("PowerUI", "ImageCache", "Lookup")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Texture> Lookup
void PowerUI::ImageCache::_set_Lookup(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Texture*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageCache::_set_Lookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ImageCache", "Lookup", value));
}
// Autogenerated method: PowerUI.ImageCache.Add
void PowerUI::ImageCache::Add(::StringW address, ::UnityEngine::Texture* image) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageCache::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageCache", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(image)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, image);
}
// Autogenerated method: PowerUI.ImageCache.Get
::UnityEngine::Texture* PowerUI::ImageCache::Get(::StringW address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageCache::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageCache", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address);
}
// Autogenerated method: PowerUI.ImageCache.Remove
void PowerUI::ImageCache::Remove(::StringW address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageCache::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageCache", "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address);
}
// Autogenerated method: PowerUI.ImageCache.Clear
void PowerUI::ImageCache::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageCache::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageCache", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.ImageCache..cctor
void PowerUI::ImageCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.DynamicFormat
#include "PowerUI/DynamicFormat.hpp"
// Including type: PowerUI.DynamicTexture
#include "PowerUI/DynamicTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.DynamicTexture DynamicImage
[[deprecated("Use field access instead!")]] ::PowerUI::DynamicTexture*& PowerUI::DynamicFormat::dyn_DynamicImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFormat::dyn_DynamicImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DynamicImage"))->offset;
  return *reinterpret_cast<::PowerUI::DynamicTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.DynamicFormat.get_Height
int PowerUI::DynamicFormat::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFormat::get_Height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicFormat.get_Width
int PowerUI::DynamicFormat::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFormat::get_Width");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.DynamicFormat.Clear
void PowerUI::DynamicFormat::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::DynamicFormat::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ImageFormat
#include "PowerUI/ImageFormat.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Blaze.TextureAtlas
#include "Blaze/TextureAtlas.hpp"
// Including type: Blaze.AtlasLocation
#include "Blaze/AtlasLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.ImageFormat.GetNames
::ArrayW<::StringW> PowerUI::ImageFormat::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormat::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImageFormat.get_Height
int PowerUI::ImageFormat::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormat::get_Height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImageFormat.get_Width
int PowerUI::ImageFormat::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormat::get_Width");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImageFormat.get_ImageMaterial
::UnityEngine::Material* PowerUI::ImageFormat::get_ImageMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormat::get_ImageMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImageFormat.Clear
void PowerUI::ImageFormat::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormat::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImageFormat.GoingOnDisplay
void PowerUI::ImageFormat::GoingOnDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormat::GoingOnDisplay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImageFormat.GoingOffDisplay
void PowerUI::ImageFormat::GoingOffDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormat::GoingOffDisplay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImageFormat.DrawToAtlas
bool PowerUI::ImageFormat::DrawToAtlas(::Blaze::TextureAtlas* atlas, ::Blaze::AtlasLocation* location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormat::DrawToAtlas");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, atlas, location);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.ImageFormats
#include "PowerUI/ImageFormats.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PowerUI.ImageFormat
#include "PowerUI/ImageFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String UnrecognisedImageHandler
::StringW PowerUI::ImageFormats::_get_UnrecognisedImageHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormats::_get_UnrecognisedImageHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PowerUI", "ImageFormats", "UnrecognisedImageHandler"));
}
// Autogenerated static field setter
// Set static field: static public System.String UnrecognisedImageHandler
void PowerUI::ImageFormats::_set_UnrecognisedImageHandler(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormats::_set_UnrecognisedImageHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ImageFormats", "UnrecognisedImageHandler", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ImageFormat> Formats
::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ImageFormat*>* PowerUI::ImageFormats::_get_Formats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormats::_get_Formats");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ImageFormat*>*>("PowerUI", "ImageFormats", "Formats")));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ImageFormat> Formats
void PowerUI::ImageFormats::_set_Formats(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ImageFormat*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormats::_set_Formats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "ImageFormats", "Formats", value));
}
// Autogenerated method: PowerUI.ImageFormats.Setup
void PowerUI::ImageFormats::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormats::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageFormats", "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.ImageFormats.Add
void PowerUI::ImageFormats::Add(::PowerUI::ImageFormat* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormats::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageFormats", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: PowerUI.ImageFormats.Get
::PowerUI::ImageFormat* PowerUI::ImageFormats::Get(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormats::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageFormats", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::ImageFormat*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: PowerUI.ImageFormats..cctor
void PowerUI::ImageFormats::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImageFormats::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "ImageFormats", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.PictureFormat
#include "PowerUI/PictureFormat.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: Blaze.TextureAtlas
#include "Blaze/TextureAtlas.hpp"
// Including type: Blaze.AtlasLocation
#include "Blaze/AtlasLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D Image
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& PowerUI::PictureFormat::dyn_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PictureFormat::dyn_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Image"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material IsolatedMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& PowerUI::PictureFormat::dyn_IsolatedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PictureFormat::dyn_IsolatedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsolatedMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.PictureFormat.GetNames
::ArrayW<::StringW> PowerUI::PictureFormat::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PictureFormat::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.PictureFormat.get_Height
int PowerUI::PictureFormat::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PictureFormat::get_Height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.PictureFormat.get_Width
int PowerUI::PictureFormat::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PictureFormat::get_Width");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.PictureFormat.get_ImageMaterial
::UnityEngine::Material* PowerUI::PictureFormat::get_ImageMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PictureFormat::get_ImageMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.PictureFormat.DrawToAtlas
bool PowerUI::PictureFormat::DrawToAtlas(::Blaze::TextureAtlas* atlas, ::Blaze::AtlasLocation* location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::PictureFormat::DrawToAtlas");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, atlas, location);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.SpaFormat
#include "PowerUI/SpaFormat.hpp"
// Including type: PowerUI.SPA
#include "PowerUI/SPA.hpp"
// Including type: PowerUI.SPAInstance
#include "PowerUI/SPAInstance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPA SPAFile
[[deprecated("Use field access instead!")]] ::PowerUI::SPA*& PowerUI::SpaFormat::dyn_SPAFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SpaFormat::dyn_SPAFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SPAFile"))->offset;
  return *reinterpret_cast<::PowerUI::SPA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPAInstance Animation
[[deprecated("Use field access instead!")]] ::PowerUI::SPAInstance*& PowerUI::SpaFormat::dyn_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SpaFormat::dyn_Animation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Animation"))->offset;
  return *reinterpret_cast<::PowerUI::SPAInstance**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.SpaFormat.GetNames
::ArrayW<::StringW> PowerUI::SpaFormat::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SpaFormat::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SpaFormat.get_Height
int PowerUI::SpaFormat::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SpaFormat::get_Height");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SpaFormat.get_Width
int PowerUI::SpaFormat::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SpaFormat::get_Width");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SpaFormat.Clear
void PowerUI::SpaFormat::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SpaFormat::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SpaFormat.GoingOnDisplay
void PowerUI::SpaFormat::GoingOnDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SpaFormat::GoingOnDisplay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.SpaFormat.GoingOffDisplay
void PowerUI::SpaFormat::GoingOffDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SpaFormat::GoingOffDisplay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImageFormat*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.OnImageReady
#include "PowerUI/OnImageReady.hpp"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.OnImageReady.Invoke
void PowerUI::OnImageReady::Invoke(::PowerUI::ImagePackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnImageReady::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnImageReady*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.OnImageReady.BeginInvoke
::System::IAsyncResult* PowerUI::OnImageReady::BeginInvoke(::PowerUI::ImagePackage* package, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnImageReady::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnImageReady*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, package, callback, object);
}
// Autogenerated method: PowerUI.OnImageReady.EndInvoke
void PowerUI::OnImageReady::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::OnImageReady::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::OnImageReady*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.ImagePackage
#include "PowerUI/ImagePackage.hpp"
// Including type: PowerUI.SPA
#include "PowerUI/SPA.hpp"
// Including type: PowerUI.FilePath
#include "PowerUI/FilePath.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: PowerUI.SPAInstance
#include "PowerUI/SPAInstance.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: PowerUI.DynamicTexture
#include "PowerUI/DynamicTexture.hpp"
// Including type: PowerUI.OnImageReady
#include "PowerUI/OnImageReady.hpp"
// Including type: Blaze.TextureAtlas
#include "Blaze/TextureAtlas.hpp"
// Including type: Blaze.AtlasLocation
#include "Blaze/AtlasLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPA SPAFile
[[deprecated("Use field access instead!")]] ::PowerUI::SPA*& PowerUI::ImagePackage::dyn_SPAFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_SPAFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SPAFile"))->offset;
  return *reinterpret_cast<::PowerUI::SPA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsVideo
[[deprecated("Use field access instead!")]] bool& PowerUI::ImagePackage::dyn_IsVideo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_IsVideo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsVideo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Error
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::ImagePackage::dyn_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_Error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Error"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.FilePath File
[[deprecated("Use field access instead!")]] ::PowerUI::FilePath*& PowerUI::ImagePackage::dyn_File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_File");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "File"))->offset;
  return *reinterpret_cast<::PowerUI::FilePath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Animated
[[deprecated("Use field access instead!")]] bool& PowerUI::ImagePackage::dyn_Animated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_Animated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Animated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsDynamic
[[deprecated("Use field access instead!")]] bool& PowerUI::ImagePackage::dyn_IsDynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_IsDynamic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsDynamic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FileType
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::ImagePackage::dyn_FileType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_FileType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture Image
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& PowerUI::ImagePackage::dyn_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Image"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object ExtraData
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PowerUI::ImagePackage::dyn_ExtraData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_ExtraData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraData"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.SPAInstance Animation
[[deprecated("Use field access instead!")]] ::PowerUI::SPAInstance*& PowerUI::ImagePackage::dyn_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_Animation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Animation"))->offset;
  return *reinterpret_cast<::PowerUI::SPAInstance**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean PixelPerfect
[[deprecated("Use field access instead!")]] bool& PowerUI::ImagePackage::dyn_PixelPerfect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_PixelPerfect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PixelPerfect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _VideoMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& PowerUI::ImagePackage::dyn__VideoMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn__VideoMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_VideoMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.DynamicTexture DynamicImage
[[deprecated("Use field access instead!")]] ::PowerUI::DynamicTexture*& PowerUI::ImagePackage::dyn_DynamicImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_DynamicImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DynamicImage"))->offset;
  return *reinterpret_cast<::PowerUI::DynamicTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PowerUI.OnImageReady ImageReady
[[deprecated("Use field access instead!")]] ::PowerUI::OnImageReady*& PowerUI::ImagePackage::dyn_ImageReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::dyn_ImageReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageReady"))->offset;
  return *reinterpret_cast<::PowerUI::OnImageReady**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.ImagePackage.add_ImageReady
void PowerUI::ImagePackage::add_ImageReady(::PowerUI::OnImageReady* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::add_ImageReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ImageReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.ImagePackage.remove_ImageReady
void PowerUI::ImagePackage::remove_ImageReady(::PowerUI::OnImageReady* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::remove_ImageReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ImageReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PowerUI.ImagePackage.get_VideoMaterial
::UnityEngine::Material* PowerUI::ImagePackage::get_VideoMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::get_VideoMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VideoMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.get_ImageMaterial
::UnityEngine::Material* PowerUI::ImagePackage::get_ImageMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::get_ImageMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ImageMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.get_Url
::StringW PowerUI::ImagePackage::get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::get_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.MultiThreadDraw
bool PowerUI::ImagePackage::MultiThreadDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::MultiThreadDraw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImagePackage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.GetDimensionsOnAtlas
void PowerUI::ImagePackage::GetDimensionsOnAtlas(ByRef<int> width, ByRef<int> height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::GetDimensionsOnAtlas");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImagePackage*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(width), byref(height));
}
// Autogenerated method: PowerUI.ImagePackage.DrawToAtlas
bool PowerUI::ImagePackage::DrawToAtlas(::Blaze::TextureAtlas* atlas, ::Blaze::AtlasLocation* location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::DrawToAtlas");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImagePackage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, atlas, location);
}
// Autogenerated method: PowerUI.ImagePackage.GetAtlasID
int PowerUI::ImagePackage::GetAtlasID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::GetAtlasID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::ImagePackage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.SetPath
void PowerUI::ImagePackage::SetPath(::StringW src, ::StringW relativeTo, bool useResolution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::SetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(relativeTo), ::il2cpp_utils::ExtractType(useResolution)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, relativeTo, useResolution);
}
// Autogenerated method: PowerUI.ImagePackage.SetPath
void PowerUI::ImagePackage::SetPath(::StringW src, ::StringW relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::SetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, relativeTo);
}
// Autogenerated method: PowerUI.ImagePackage.Get
void PowerUI::ImagePackage::Get(::PowerUI::OnImageReady* imageReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(imageReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, imageReady);
}
// Autogenerated method: PowerUI.ImagePackage.get_Ok
bool PowerUI::ImagePackage::get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::get_Ok");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ok", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.get_Errored
bool PowerUI::ImagePackage::get_Errored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::get_Errored");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Errored", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.GotCached
void PowerUI::ImagePackage::GotCached(::PowerUI::ImagePackage* package) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::GotCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(package)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, package);
}
// Autogenerated method: PowerUI.ImagePackage.GotGraphic
void PowerUI::ImagePackage::GotGraphic(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::GotGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: PowerUI.ImagePackage.GotGraphic
void PowerUI::ImagePackage::GotGraphic(::PowerUI::DynamicTexture* image) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::GotGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, image);
}
// Autogenerated method: PowerUI.ImagePackage.GotGraphic
void PowerUI::ImagePackage::GotGraphic(::PowerUI::SPA* animation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::GotGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation);
}
// Autogenerated method: PowerUI.ImagePackage.GotGraphic
void PowerUI::ImagePackage::GotGraphic(::UnityEngine::Texture* image) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::GotGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GotGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(image)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, image);
}
// Autogenerated method: PowerUI.ImagePackage.GoingOnDisplay
void PowerUI::ImagePackage::GoingOnDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::GoingOnDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoingOnDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.GoingOffDisplay
void PowerUI::ImagePackage::GoingOffDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::GoingOffDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoingOffDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.Clear
void PowerUI::ImagePackage::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.Loaded
bool PowerUI::ImagePackage::Loaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::Loaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Loaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.Width
int PowerUI::ImagePackage::Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.ImagePackage.Height
int PowerUI::ImagePackage::Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ImagePackage::Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.MousePositionResolver2D
#include "PowerUI/MousePositionResolver2D.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.MousePositionResolver2D.Invoke
void PowerUI::MousePositionResolver2D::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MousePositionResolver2D::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::MousePositionResolver2D*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MousePositionResolver2D.BeginInvoke
::System::IAsyncResult* PowerUI::MousePositionResolver2D::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MousePositionResolver2D::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::MousePositionResolver2D*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: PowerUI.MousePositionResolver2D.EndInvoke
void PowerUI::MousePositionResolver2D::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MousePositionResolver2D::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::MousePositionResolver2D*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.MousePositionResolver3D
#include "PowerUI/MousePositionResolver3D.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.MousePositionResolver3D.Invoke
bool PowerUI::MousePositionResolver3D::Invoke(ByRef<::UnityEngine::RaycastHit> hit, ::PowerUI::UIEvent* uiEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MousePositionResolver3D::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::MousePositionResolver3D*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(hit), uiEvent);
}
// Autogenerated method: PowerUI.MousePositionResolver3D.BeginInvoke
::System::IAsyncResult* PowerUI::MousePositionResolver3D::BeginInvoke(ByRef<::UnityEngine::RaycastHit> hit, ::PowerUI::UIEvent* uiEvent, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MousePositionResolver3D::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::MousePositionResolver3D*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(hit), uiEvent, callback, object);
}
// Autogenerated method: PowerUI.MousePositionResolver3D.EndInvoke
bool PowerUI::MousePositionResolver3D::EndInvoke(ByRef<::UnityEngine::RaycastHit> hit, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MousePositionResolver3D::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::MousePositionResolver3D*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(hit), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Input
#include "PowerUI/Input.hpp"
// Including type: PowerUI.Element
#include "PowerUI/Element.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: PowerUI.MousePositionResolver2D
#include "PowerUI/MousePositionResolver2D.hpp"
// Including type: PowerUI.MousePositionResolver3D
#include "PowerUI/MousePositionResolver3D.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PowerUI.UIEvent
#include "PowerUI/UIEvent.hpp"
// Including type: PowerUI.HitResult
#include "PowerUI/HitResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String EventName
::StringW PowerUI::Input::_get_EventName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_EventName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("PowerUI", "Input", "EventName"));
}
// Autogenerated static field setter
// Set static field: static public System.String EventName
void PowerUI::Input::_set_EventName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_EventName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "EventName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MouseX
int PowerUI::Input::_get_MouseX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_MouseX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "Input", "MouseX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MouseX
void PowerUI::Input::_set_MouseX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_MouseX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "MouseX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MouseY
int PowerUI::Input::_get_MouseY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_MouseY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PowerUI", "Input", "MouseY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MouseY
void PowerUI::Input::_set_MouseY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_MouseY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "MouseY", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Element Focused
::PowerUI::Element* PowerUI::Input::_get_Focused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_Focused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Element*>("PowerUI", "Input", "Focused"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Element Focused
void PowerUI::Input::_set_Focused(::PowerUI::Element* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_Focused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "Focused", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.Element Focusing
::PowerUI::Element* PowerUI::Input::_get_Focusing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_Focusing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Element*>("PowerUI", "Input", "Focusing"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Element Focusing
void PowerUI::Input::_set_Focusing(::PowerUI::Element* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_Focusing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "Focusing", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 MousePosition
::UnityEngine::Vector2 PowerUI::Input::_get_MousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_MousePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("PowerUI", "Input", "MousePosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 MousePosition
void PowerUI::Input::_set_MousePosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_MousePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "MousePosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RaycastHit LatestRayHit
::UnityEngine::RaycastHit PowerUI::Input::_get_LatestRayHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_LatestRayHit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RaycastHit>("PowerUI", "Input", "LatestRayHit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RaycastHit LatestRayHit
void PowerUI::Input::_set_LatestRayHit(::UnityEngine::RaycastHit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_LatestRayHit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "LatestRayHit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Camera CameraFor3DInput
::UnityEngine::Camera* PowerUI::Input::_get_CameraFor3DInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_CameraFor3DInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Camera*>("PowerUI", "Input", "CameraFor3DInput"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Camera CameraFor3DInput
void PowerUI::Input::_set_CameraFor3DInput(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_CameraFor3DInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "CameraFor3DInput", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputMode Mode
::PowerUI::InputMode PowerUI::Input::_get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_Mode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputMode>("PowerUI", "Input", "Mode"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputMode Mode
void PowerUI::Input::_set_Mode(::PowerUI::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_Mode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "Mode", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.MousePositionResolver2D OnResolve2D
::PowerUI::MousePositionResolver2D* PowerUI::Input::_get_OnResolve2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_OnResolve2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MousePositionResolver2D*>("PowerUI", "Input", "OnResolve2D"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MousePositionResolver2D OnResolve2D
void PowerUI::Input::_set_OnResolve2D(::PowerUI::MousePositionResolver2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_OnResolve2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "OnResolve2D", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.MousePositionResolver3D OnResolve3D
::PowerUI::MousePositionResolver3D* PowerUI::Input::_get_OnResolve3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_OnResolve3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MousePositionResolver3D*>("PowerUI", "Input", "OnResolve3D"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MousePositionResolver3D OnResolve3D
void PowerUI::Input::_set_OnResolve3D(::PowerUI::MousePositionResolver3D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_OnResolve3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "OnResolve3D", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputMode WorldInputMode
::PowerUI::InputMode PowerUI::Input::_get_WorldInputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_WorldInputMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputMode>("PowerUI", "Input", "WorldInputMode"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputMode WorldInputMode
void PowerUI::Input::_set_WorldInputMode(::PowerUI::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_WorldInputMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "WorldInputMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<PowerUI.Element> MouseOvers
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Input::_get_MouseOvers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_MouseOvers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::PowerUI::Element*>*>("PowerUI", "Input", "MouseOvers"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<PowerUI.Element> MouseOvers
void PowerUI::Input::_set_MouseOvers(::System::Collections::Generic::List_1<::PowerUI::Element*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_MouseOvers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "MouseOvers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.List`1<PowerUI.Element> LastMouseDown
::System::Collections::Generic::List_1<::PowerUI::Element*>* PowerUI::Input::_get_LastMouseDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_LastMouseDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::PowerUI::Element*>*>("PowerUI", "Input", "LastMouseDown"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.List`1<PowerUI.Element> LastMouseDown
void PowerUI::Input::_set_LastMouseDown(::System::Collections::Generic::List_1<::PowerUI::Element*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_LastMouseDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "LastMouseDown", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean mouseIsDown
bool PowerUI::Input::_get_mouseIsDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_get_mouseIsDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("PowerUI", "Input", "mouseIsDown"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean mouseIsDown
void PowerUI::Input::_set_mouseIsDown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::_set_mouseIsDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Input", "mouseIsDown", value));
}
// Autogenerated method: PowerUI.Input.get_MouseOverUI
bool PowerUI::Input::get_MouseOverUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::get_MouseOverUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "get_MouseOverUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Input.Clear
void PowerUI::Input::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Input.ClearMouseOvers
void PowerUI::Input::ClearMouseOvers(::PowerUI::UIEvent* mouseEvent, int fromIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::ClearMouseOvers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "ClearMouseOvers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseEvent), ::il2cpp_utils::ExtractType(fromIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mouseEvent, fromIndex);
}
// Autogenerated method: PowerUI.Input.SetMousePosition
void PowerUI::Input::SetMousePosition(::UnityEngine::Vector2 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::SetMousePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "SetMousePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position);
}
// Autogenerated method: PowerUI.Input.Update
void PowerUI::Input::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Input.OnKeyUp
bool PowerUI::Input::OnKeyUp(int keyCode, ::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::OnKeyUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "OnKeyUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyCode), ::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyCode, character);
}
// Autogenerated method: PowerUI.Input.OnKeyDown
bool PowerUI::Input::OnKeyDown(int keyCode, ::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::OnKeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "OnKeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyCode), ::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyCode, character);
}
// Autogenerated method: PowerUI.Input.OnKeyPress
bool PowerUI::Input::OnKeyPress(bool down, ::Il2CppChar character, int keyCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::OnKeyPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "OnKeyPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(down), ::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(keyCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, down, character, keyCode);
}
// Autogenerated method: PowerUI.Input.OnMouseDown
bool PowerUI::Input::OnMouseDown(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::OnMouseDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "OnMouseDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Input.OnMouseUp
bool PowerUI::Input::OnMouseUp(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::OnMouseUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "OnMouseUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Input.RunClick
bool PowerUI::Input::RunClick(int x, int y, bool mouseDown, ByRef<::PowerUI::UIEvent*> uiEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::RunClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "RunClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(mouseDown), ::il2cpp_utils::ExtractIndependentType<::PowerUI::UIEvent*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, mouseDown, byref(uiEvent));
}
// Autogenerated method: PowerUI.Input.ClickOn
void PowerUI::Input::ClickOn(::PowerUI::Element* element, ::PowerUI::UIEvent* uiEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::ClickOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "ClickOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(uiEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, uiEvent);
}
// Autogenerated method: PowerUI.Input.MouseOn
void PowerUI::Input::MouseOn(::PowerUI::Element* element, ::PowerUI::UIEvent* uiEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::MouseOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "MouseOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(uiEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, uiEvent);
}
// Autogenerated method: PowerUI.Input.OnMouseOver
bool PowerUI::Input::OnMouseOver(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::OnMouseOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "OnMouseOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: PowerUI.Input.HandleUIHit
::PowerUI::HitResult* PowerUI::Input::HandleUIHit(::UnityEngine::RaycastHit hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::HandleUIHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "HandleUIHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hit)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::HitResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hit);
}
// Autogenerated method: PowerUI.Input.HandleWorldUIHit
::PowerUI::HitResult* PowerUI::Input::HandleWorldUIHit(::UnityEngine::RaycastHit hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::HandleWorldUIHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", "HandleWorldUIHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hit)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::HitResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hit);
}
// Autogenerated method: PowerUI.Input..cctor
void PowerUI::Input::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Input::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Input", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.InputMode
#include "PowerUI/InputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.InputMode Physics
::PowerUI::InputMode PowerUI::InputMode::_get_Physics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputMode::_get_Physics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputMode>("PowerUI", "InputMode", "Physics"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputMode Physics
void PowerUI::InputMode::_set_Physics(::PowerUI::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputMode::_set_Physics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputMode", "Physics", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputMode Screen
::PowerUI::InputMode PowerUI::InputMode::_get_Screen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputMode::_get_Screen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputMode>("PowerUI", "InputMode", "Screen"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputMode Screen
void PowerUI::InputMode::_set_Screen(::PowerUI::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputMode::_set_Screen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputMode", "Screen", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.InputMode None
::PowerUI::InputMode PowerUI::InputMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::InputMode>("PowerUI", "InputMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.InputMode None
void PowerUI::InputMode::_set_None(::PowerUI::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "InputMode", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::InputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::InputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.KeyboardMode
#include "PowerUI/KeyboardMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Secret
[[deprecated("Use field access instead!")]] bool& PowerUI::KeyboardMode::dyn_Secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::KeyboardMode::dyn_Secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Secret"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Multiline
[[deprecated("Use field access instead!")]] bool& PowerUI::KeyboardMode::dyn_Multiline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::KeyboardMode::dyn_Multiline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Multiline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String StartText
[[deprecated("Use field access instead!")]] ::StringW& PowerUI::KeyboardMode::dyn_StartText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::KeyboardMode::dyn_StartText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.MeshBlock
#include "PowerUI/MeshBlock.hpp"
// Including type: Blaze.UVBlock
#include "Blaze/UVBlock.hpp"
// Including type: PowerUI.DynamicMesh
#include "PowerUI/DynamicMesh.hpp"
// Including type: PowerUI.Transformation
#include "PowerUI/Transformation.hpp"
// Including type: PowerUI.BoxRegion
#include "PowerUI/BoxRegion.hpp"
// Including type: PowerUI.Renderman
#include "PowerUI/Renderman.hpp"
// Including type: Blaze.AtlasLocation
#include "Blaze/AtlasLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Blaze.UVBlock BlankUV
::Blaze::UVBlock* PowerUI::MeshBlock::_get_BlankUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::_get_BlankUV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Blaze::UVBlock*>("PowerUI", "MeshBlock", "BlankUV"));
}
// Autogenerated static field setter
// Set static field: static private Blaze.UVBlock BlankUV
void PowerUI::MeshBlock::_set_BlankUV(::Blaze::UVBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::_set_BlankUV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MeshBlock", "BlankUV", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color Colour
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& PowerUI::MeshBlock::dyn_Colour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_Colour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colour"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.UVBlock TextUV
[[deprecated("Use field access instead!")]] ::Blaze::UVBlock*& PowerUI::MeshBlock::dyn_TextUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_TextUV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TextUV"))->offset;
  return *reinterpret_cast<::Blaze::UVBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Blaze.UVBlock ImageUV
[[deprecated("Use field access instead!")]] ::Blaze::UVBlock*& PowerUI::MeshBlock::dyn_ImageUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_ImageUV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageUV"))->offset;
  return *reinterpret_cast<::Blaze::UVBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 VertexTopLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& PowerUI::MeshBlock::dyn_VertexTopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_VertexTopLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexTopLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 VertexTopRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& PowerUI::MeshBlock::dyn_VertexTopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_VertexTopRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexTopRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 VertexBottomLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& PowerUI::MeshBlock::dyn_VertexBottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_VertexBottomLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexBottomLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 VertexBottomRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& PowerUI::MeshBlock::dyn_VertexBottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_VertexBottomRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexBottomRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 VertexIndex
[[deprecated("Use field access instead!")]] int& PowerUI::MeshBlock::dyn_VertexIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_VertexIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VertexIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.MeshBlock BlockAfter
[[deprecated("Use field access instead!")]] ::PowerUI::MeshBlock*& PowerUI::MeshBlock::dyn_BlockAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_BlockAfter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlockAfter"))->offset;
  return *reinterpret_cast<::PowerUI::MeshBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.DynamicMesh ParentMesh
[[deprecated("Use field access instead!")]] ::PowerUI::DynamicMesh*& PowerUI::MeshBlock::dyn_ParentMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_ParentMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParentMesh"))->offset;
  return *reinterpret_cast<::PowerUI::DynamicMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.Transformation Transform
[[deprecated("Use field access instead!")]] ::PowerUI::Transformation*& PowerUI::MeshBlock::dyn_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_Transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Transform"))->offset;
  return *reinterpret_cast<::PowerUI::Transformation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PowerUI.MeshBlock LocalBlockAfter
[[deprecated("Use field access instead!")]] ::PowerUI::MeshBlock*& PowerUI::MeshBlock::dyn_LocalBlockAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::dyn_LocalBlockAfter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalBlockAfter"))->offset;
  return *reinterpret_cast<::PowerUI::MeshBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PowerUI.MeshBlock.Overlaps
bool PowerUI::MeshBlock::Overlaps(::PowerUI::MeshBlock* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::Overlaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Overlaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, block);
}
// Autogenerated method: PowerUI.MeshBlock.AddToParent
void PowerUI::MeshBlock::AddToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::AddToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MeshBlock.SetColour
void PowerUI::MeshBlock::SetColour(::UnityEngine::Color colour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::SetColour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colour);
}
// Autogenerated method: PowerUI.MeshBlock.Layout
void PowerUI::MeshBlock::Layout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::Layout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Layout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MeshBlock.SetClipped
void PowerUI::MeshBlock::SetClipped(::PowerUI::BoxRegion* boundary, ::PowerUI::BoxRegion* block, ::PowerUI::Renderman* renderer, float zIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::SetClipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundary), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(renderer), ::il2cpp_utils::ExtractType(zIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boundary, block, renderer, zIndex);
}
// Autogenerated method: PowerUI.MeshBlock.SetClipped
::Blaze::UVBlock* PowerUI::MeshBlock::SetClipped(::PowerUI::BoxRegion* boundary, ::PowerUI::BoxRegion* block, ::PowerUI::Renderman* renderer, float zIndex, ::Blaze::AtlasLocation* imgLocation, ::Blaze::UVBlock* uvBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::SetClipped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClipped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundary), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(renderer), ::il2cpp_utils::ExtractType(zIndex), ::il2cpp_utils::ExtractType(imgLocation), ::il2cpp_utils::ExtractType(uvBlock)})));
  return ::il2cpp_utils::RunMethodRethrow<::Blaze::UVBlock*, false>(this, ___internal__method, boundary, block, renderer, zIndex, imgLocation, uvBlock);
}
// Autogenerated method: PowerUI.MeshBlock.ApplyOutline
void PowerUI::MeshBlock::ApplyOutline(float location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::ApplyOutline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyOutline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, location);
}
// Autogenerated method: PowerUI.MeshBlock.ApplyVertices
void PowerUI::MeshBlock::ApplyVertices(::PowerUI::BoxRegion* block, ::PowerUI::Renderman* renderer, float zIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::ApplyVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(renderer), ::il2cpp_utils::ExtractType(zIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, block, renderer, zIndex);
}
// Autogenerated method: PowerUI.MeshBlock.SetSolidColourUV
void PowerUI::MeshBlock::SetSolidColourUV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::SetSolidColourUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSolidColourUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MeshBlock.Paint
void PowerUI::MeshBlock::Paint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::Paint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Paint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.MeshBlock..cctor
void PowerUI::MeshBlock::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MeshBlock::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "MeshBlock", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.MouseOverState
#include "PowerUI/MouseOverState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.MouseOverState Over
::PowerUI::MouseOverState PowerUI::MouseOverState::_get_Over() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MouseOverState::_get_Over");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MouseOverState>("PowerUI", "MouseOverState", "Over"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MouseOverState Over
void PowerUI::MouseOverState::_set_Over(::PowerUI::MouseOverState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MouseOverState::_set_Over");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MouseOverState", "Over", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.MouseOverState Out
::PowerUI::MouseOverState PowerUI::MouseOverState::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MouseOverState::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MouseOverState>("PowerUI", "MouseOverState", "Out"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MouseOverState Out
void PowerUI::MouseOverState::_set_Out(::PowerUI::MouseOverState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MouseOverState::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MouseOverState", "Out", value));
}
// Autogenerated static field getter
// Get static field: static public PowerUI.MouseOverState OverConsumed
::PowerUI::MouseOverState PowerUI::MouseOverState::_get_OverConsumed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MouseOverState::_get_OverConsumed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::MouseOverState>("PowerUI", "MouseOverState", "OverConsumed"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.MouseOverState OverConsumed
void PowerUI::MouseOverState::_set_OverConsumed(::PowerUI::MouseOverState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MouseOverState::_set_OverConsumed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "MouseOverState", "OverConsumed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PowerUI::MouseOverState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::MouseOverState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.NitroCache
#include "PowerUI/NitroCache.hpp"
// Including type: PowerUI.UICode
#include "PowerUI/UICode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.NitroCache.GetCodeSeed
::StringW PowerUI::NitroCache::GetCodeSeed(::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::NitroCache::GetCodeSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "NitroCache", "GetCodeSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: PowerUI.NitroCache.TryGetScript
::PowerUI::UICode* PowerUI::NitroCache::TryGetScript(::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::NitroCache::TryGetScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "NitroCache", "TryGetScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::UICode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PowerUI.Console
#include "PowerUI/Console.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Diagnostics.Stopwatch> Watches
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Diagnostics::Stopwatch*>* PowerUI::Console::_get_Watches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::_get_Watches");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Diagnostics::Stopwatch*>*>("PowerUI", "Console", "Watches")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Diagnostics.Stopwatch> Watches
void PowerUI::Console::_set_Watches(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Diagnostics::Stopwatch*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::_set_Watches");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI", "Console", "Watches", value));
}
// Autogenerated method: PowerUI.Console.Log
void PowerUI::Console::Log(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.Console.Assert
void PowerUI::Console::Assert_(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::Assert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "Assert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition);
}
// Autogenerated method: PowerUI.Console.Clear
void PowerUI::Console::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Console.Count
void PowerUI::Console::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Console.Error
void PowerUI::Console::Error(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.Console.Info
void PowerUI::Console::Info(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.Console.Trace
void PowerUI::Console::Trace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::Trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "Trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Console.Warn
void PowerUI::Console::Warn(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::Warn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "Warn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: PowerUI.Console.Time
void PowerUI::Console::Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::Time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "Time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Console.Time
void PowerUI::Console::Time(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::Time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "Time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: PowerUI.Console.TimeEnd
void PowerUI::Console::TimeEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::TimeEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "TimeEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Console.TimeEnd
void PowerUI::Console::TimeEnd(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Console::TimeEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "Console", "TimeEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.TypeAliases
#include "PowerUI/TypeAliases.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.TypeAliases.Add
void PowerUI::TypeAliases::Add(::StringW alias, ::System::Type* forType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TypeAliases::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "TypeAliases", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alias), ::il2cpp_utils::ExtractType(forType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, alias, forType);
}
// Autogenerated method: PowerUI.TypeAliases.Setup
void PowerUI::TypeAliases::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TypeAliases::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI", "TypeAliases", "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
