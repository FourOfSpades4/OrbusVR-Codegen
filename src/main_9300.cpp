// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.VectorObject2D
#include "Vectrosity/VectorObject2D.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.VertexHelper vertexHelper
::UnityEngine::UI::VertexHelper* Vectrosity::VectorObject2D::_get_vertexHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::_get_vertexHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UI::VertexHelper*>("Vectrosity", "VectorObject2D", "vertexHelper"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.VertexHelper vertexHelper
void Vectrosity::VectorObject2D::_set_vertexHelper(::UnityEngine::UI::VertexHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::_set_vertexHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Vectrosity", "VectorObject2D", "vertexHelper", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateVerts
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject2D::dyn_m_updateVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::dyn_m_updateVerts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateVerts"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateUVs
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject2D::dyn_m_updateUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::dyn_m_updateUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateColors
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject2D::dyn_m_updateColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::dyn_m_updateColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateNormals
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject2D::dyn_m_updateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::dyn_m_updateNormals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateNormals"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateTangents
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject2D::dyn_m_updateTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::dyn_m_updateTangents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateTangents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateTris
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject2D::dyn_m_updateTris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::dyn_m_updateTris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateTris"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh m_mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Vectrosity::VectorObject2D::dyn_m_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::dyn_m_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vectrosity.VectorLine vectorLine
[[deprecated("Use field access instead!")]] ::Vectrosity::VectorLine*& Vectrosity::VectorObject2D::dyn_vectorLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::dyn_vectorLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vectorLine"))->offset;
  return *reinterpret_cast<::Vectrosity::VectorLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vectrosity.VectorObject2D..cctor
void Vectrosity::VectorObject2D::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Vectrosity", "VectorObject2D", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.SetVectorLine
void Vectrosity::VectorObject2D::SetVectorLine(::Vectrosity::VectorLine* vectorLine, ::UnityEngine::Texture* tex, ::UnityEngine::Material* mat, bool useCustomMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::SetVectorLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 73));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectorLine, tex, mat, useCustomMaterial);
}
// Autogenerated method: Vectrosity.VectorObject2D.Destroy
void Vectrosity::VectorObject2D::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 74));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.Enable
void Vectrosity::VectorObject2D::Enable(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 72));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: Vectrosity.VectorObject2D.SetTexture
void Vectrosity::VectorObject2D::SetTexture(::UnityEngine::Texture* tex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::SetTexture");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 76));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tex);
}
// Autogenerated method: Vectrosity.VectorObject2D.SetMaterial
void Vectrosity::VectorObject2D::SetMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::SetMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 77));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: Vectrosity.VectorObject2D.SetupMesh
void Vectrosity::VectorObject2D::SetupMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::SetupMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.SetMeshBounds
void Vectrosity::VectorObject2D::SetMeshBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::SetMeshBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.SetName
void Vectrosity::VectorObject2D::SetName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::SetName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 63));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Vectrosity.VectorObject2D.UpdateVerts
void Vectrosity::VectorObject2D::UpdateVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::UpdateVerts");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 64));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.UpdateUVs
void Vectrosity::VectorObject2D::UpdateUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::UpdateUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 65));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.UpdateColors
void Vectrosity::VectorObject2D::UpdateColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::UpdateColors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 66));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.UpdateNormals
void Vectrosity::VectorObject2D::UpdateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::UpdateNormals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 68));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.UpdateTangents
void Vectrosity::VectorObject2D::UpdateTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::UpdateTangents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 69));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.UpdateTris
void Vectrosity::VectorObject2D::UpdateTris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::UpdateTris");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 67));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.UpdateMeshAttributes
void Vectrosity::VectorObject2D::UpdateMeshAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::UpdateMeshAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 70));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.ClearMesh
void Vectrosity::VectorObject2D::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::ClearMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 71));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.VertexCount
int Vectrosity::VectorObject2D::VertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::VertexCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject2D*), 75));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.UpdateGeometry
void Vectrosity::VectorObject2D::UpdateGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::Graphic*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject2D.OnPopulateMesh
void Vectrosity::VectorObject2D::OnPopulateMesh(::UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject2D::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UI::RawImage*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vh);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.VectorObject3D
#include "Vectrosity/VectorObject3D.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateVerts
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject3D::dyn_m_updateVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::dyn_m_updateVerts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateVerts"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateUVs
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject3D::dyn_m_updateUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::dyn_m_updateUVs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateUVs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateColors
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject3D::dyn_m_updateColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::dyn_m_updateColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateNormals
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject3D::dyn_m_updateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::dyn_m_updateNormals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateNormals"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateTangents
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject3D::dyn_m_updateTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::dyn_m_updateTangents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateTangents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateTris
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject3D::dyn_m_updateTris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::dyn_m_updateTris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateTris"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh m_mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Vectrosity::VectorObject3D::dyn_m_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::dyn_m_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vectrosity.VectorLine m_vectorLine
[[deprecated("Use field access instead!")]] ::Vectrosity::VectorLine*& Vectrosity::VectorObject3D::dyn_m_vectorLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::dyn_m_vectorLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_vectorLine"))->offset;
  return *reinterpret_cast<::Vectrosity::VectorLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_material
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& Vectrosity::VectorObject3D::dyn_m_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::dyn_m_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useCustomMaterial
[[deprecated("Use field access instead!")]] bool& Vectrosity::VectorObject3D::dyn_m_useCustomMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::dyn_m_useCustomMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useCustomMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vectrosity.VectorObject3D.SetVectorLine
void Vectrosity::VectorObject3D::SetVectorLine(::Vectrosity::VectorLine* vectorLine, ::UnityEngine::Texture* tex, ::UnityEngine::Material* mat, bool useCustomMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::SetVectorLine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectorLine, tex, mat, useCustomMaterial);
}
// Autogenerated method: Vectrosity.VectorObject3D.Destroy
void Vectrosity::VectorObject3D::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::Destroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.Enable
void Vectrosity::VectorObject3D::Enable(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: Vectrosity.VectorObject3D.SetTexture
void Vectrosity::VectorObject3D::SetTexture(::UnityEngine::Texture* tex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::SetTexture");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tex);
}
// Autogenerated method: Vectrosity.VectorObject3D.SetMaterial
void Vectrosity::VectorObject3D::SetMaterial(::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::SetMaterial");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: Vectrosity.VectorObject3D.SetupMesh
void Vectrosity::VectorObject3D::SetupMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::SetupMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.LateUpdate
void Vectrosity::VectorObject3D::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.SetVerts
void Vectrosity::VectorObject3D::SetVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::SetVerts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.SetName
void Vectrosity::VectorObject3D::SetName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::SetName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Vectrosity.VectorObject3D.UpdateVerts
void Vectrosity::VectorObject3D::UpdateVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::UpdateVerts");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.UpdateUVs
void Vectrosity::VectorObject3D::UpdateUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::UpdateUVs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.UpdateColors
void Vectrosity::VectorObject3D::UpdateColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::UpdateColors");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.UpdateNormals
void Vectrosity::VectorObject3D::UpdateNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::UpdateNormals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.UpdateTangents
void Vectrosity::VectorObject3D::UpdateTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::UpdateTangents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.UpdateTris
void Vectrosity::VectorObject3D::UpdateTris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::UpdateTris");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.UpdateMeshAttributes
void Vectrosity::VectorObject3D::UpdateMeshAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::UpdateMeshAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.ClearMesh
void Vectrosity::VectorObject3D::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::ClearMesh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VectorObject3D.VertexCount
int Vectrosity::VectorObject3D::VertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VectorObject3D::VertexCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VectorObject3D*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.VisibilityControl
#include "Vectrosity/VisibilityControl.hpp"
// Including type: Vectrosity.RefInt
#include "Vectrosity/RefInt.hpp"
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vectrosity.RefInt m_objectNumber
[[deprecated("Use field access instead!")]] ::Vectrosity::RefInt*& Vectrosity::VisibilityControl::dyn_m_objectNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControl::dyn_m_objectNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectNumber"))->offset;
  return *reinterpret_cast<::Vectrosity::RefInt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vectrosity.VectorLine m_vectorLine
[[deprecated("Use field access instead!")]] ::Vectrosity::VectorLine*& Vectrosity::VisibilityControl::dyn_m_vectorLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControl::dyn_m_vectorLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_vectorLine"))->offset;
  return *reinterpret_cast<::Vectrosity::VectorLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_destroyed
[[deprecated("Use field access instead!")]] bool& Vectrosity::VisibilityControl::dyn_m_destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControl::dyn_m_destroyed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_destroyed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_dontDestroyLine
[[deprecated("Use field access instead!")]] bool& Vectrosity::VisibilityControl::dyn_m_dontDestroyLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControl::dyn_m_dontDestroyLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dontDestroyLine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vectrosity.VisibilityControl.get_objectNumber
::Vectrosity::RefInt* Vectrosity::VisibilityControl::get_objectNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControl::get_objectNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Vectrosity::RefInt*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControl.Setup
void Vectrosity::VisibilityControl::Setup(::Vectrosity::VectorLine* line, bool makeBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControl::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(makeBounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, line, makeBounds);
}
// Autogenerated method: Vectrosity.VisibilityControl.OnBecameVisible
void Vectrosity::VisibilityControl::OnBecameVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControl::OnBecameVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControl.OnBecameInvisible
void Vectrosity::VisibilityControl::OnBecameInvisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControl::OnBecameInvisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameInvisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControl.OnDestroy
void Vectrosity::VisibilityControl::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControl::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControl.DontDestroyLine
void Vectrosity::VisibilityControl::DontDestroyLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControl::DontDestroyLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DontDestroyLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.VisibilityControlAlways
#include "Vectrosity/VisibilityControlAlways.hpp"
// Including type: Vectrosity.RefInt
#include "Vectrosity/RefInt.hpp"
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vectrosity.RefInt m_objectNumber
[[deprecated("Use field access instead!")]] ::Vectrosity::RefInt*& Vectrosity::VisibilityControlAlways::dyn_m_objectNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlAlways::dyn_m_objectNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectNumber"))->offset;
  return *reinterpret_cast<::Vectrosity::RefInt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vectrosity.VectorLine m_vectorLine
[[deprecated("Use field access instead!")]] ::Vectrosity::VectorLine*& Vectrosity::VisibilityControlAlways::dyn_m_vectorLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlAlways::dyn_m_vectorLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_vectorLine"))->offset;
  return *reinterpret_cast<::Vectrosity::VectorLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_destroyed
[[deprecated("Use field access instead!")]] bool& Vectrosity::VisibilityControlAlways::dyn_m_destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlAlways::dyn_m_destroyed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_destroyed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_dontDestroyLine
[[deprecated("Use field access instead!")]] bool& Vectrosity::VisibilityControlAlways::dyn_m_dontDestroyLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlAlways::dyn_m_dontDestroyLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dontDestroyLine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vectrosity.VisibilityControlAlways.get_objectNumber
::Vectrosity::RefInt* Vectrosity::VisibilityControlAlways::get_objectNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlAlways::get_objectNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Vectrosity::RefInt*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlAlways.Setup
void Vectrosity::VisibilityControlAlways::Setup(::Vectrosity::VectorLine* line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlAlways::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, line);
}
// Autogenerated method: Vectrosity.VisibilityControlAlways.OnDestroy
void Vectrosity::VisibilityControlAlways::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlAlways::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlAlways.DontDestroyLine
void Vectrosity::VisibilityControlAlways::DontDestroyLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlAlways::DontDestroyLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DontDestroyLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vectrosity.VisibilityControlStatic
#include "Vectrosity/VisibilityControlStatic.hpp"
// Including type: Vectrosity.VisibilityControlStatic/<WaitCheck>c__Iterator1
#include "Vectrosity/VisibilityControlStatic_-WaitCheck-c__Iterator1.hpp"
// Including type: Vectrosity.RefInt
#include "Vectrosity/RefInt.hpp"
// Including type: Vectrosity.VectorLine
#include "Vectrosity/VectorLine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vectrosity.RefInt m_objectNumber
[[deprecated("Use field access instead!")]] ::Vectrosity::RefInt*& Vectrosity::VisibilityControlStatic::dyn_m_objectNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::dyn_m_objectNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectNumber"))->offset;
  return *reinterpret_cast<::Vectrosity::RefInt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vectrosity.VectorLine m_vectorLine
[[deprecated("Use field access instead!")]] ::Vectrosity::VectorLine*& Vectrosity::VisibilityControlStatic::dyn_m_vectorLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::dyn_m_vectorLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_vectorLine"))->offset;
  return *reinterpret_cast<::Vectrosity::VectorLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_destroyed
[[deprecated("Use field access instead!")]] bool& Vectrosity::VisibilityControlStatic::dyn_m_destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::dyn_m_destroyed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_destroyed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_dontDestroyLine
[[deprecated("Use field access instead!")]] bool& Vectrosity::VisibilityControlStatic::dyn_m_dontDestroyLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::dyn_m_dontDestroyLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dontDestroyLine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 m_originalMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Vectrosity::VisibilityControlStatic::dyn_m_originalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::dyn_m_originalMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_originalMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic.get_objectNumber
::Vectrosity::RefInt* Vectrosity::VisibilityControlStatic::get_objectNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::get_objectNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Vectrosity::RefInt*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic.Setup
void Vectrosity::VisibilityControlStatic::Setup(::Vectrosity::VectorLine* line, bool makeBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(makeBounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, line, makeBounds);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic.WaitCheck
::System::Collections::IEnumerator* Vectrosity::VisibilityControlStatic::WaitCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::WaitCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic.OnBecameVisible
void Vectrosity::VisibilityControlStatic::OnBecameVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::OnBecameVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic.OnBecameInvisible
void Vectrosity::VisibilityControlStatic::OnBecameInvisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::OnBecameInvisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameInvisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic.OnDestroy
void Vectrosity::VisibilityControlStatic::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic.DontDestroyLine
void Vectrosity::VisibilityControlStatic::DontDestroyLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::DontDestroyLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DontDestroyLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic.GetMatrix
::UnityEngine::Matrix4x4 Vectrosity::VisibilityControlStatic::GetMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::GetMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Vectrosity.VisibilityControlStatic/<WaitCheck>c__Iterator1
#include "Vectrosity/VisibilityControlStatic_-WaitCheck-c__Iterator1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
[[deprecated("Use field access instead!")]] int& Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object $current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Vectrosity.VisibilityControlStatic <>f__this
[[deprecated("Use field access instead!")]] ::Vectrosity::VisibilityControlStatic*& Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::dyn_$$f__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::dyn_$$f__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>f__this"))->offset;
  return *reinterpret_cast<::Vectrosity::VisibilityControlStatic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic/<WaitCheck>c__Iterator1.System.Collections.Generic.IEnumerator<object>.get_Current
::Il2CppObject* Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::System_Collections_Generic_IEnumerator$object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::System.Collections.Generic.IEnumerator<object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic/<WaitCheck>c__Iterator1.System.Collections.IEnumerator.get_Current
::Il2CppObject* Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic/<WaitCheck>c__Iterator1.MoveNext
bool Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic/<WaitCheck>c__Iterator1.Dispose
void Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Vectrosity.VisibilityControlStatic/<WaitCheck>c__Iterator1.Reset
void Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Vectrosity::VisibilityControlStatic::$WaitCheck$c__Iterator1*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ND_ERROR
#include "GlobalNamespace/ND_ERROR.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_NO_ERROR
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_NO_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_NO_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_NO_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_NO_ERROR
void GlobalNamespace::ND_ERROR::_set_ND_E_NO_ERROR(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_NO_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_NO_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_TEST_NOT_RUN
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_TEST_NOT_RUN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_TEST_NOT_RUN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_TEST_NOT_RUN"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_TEST_NOT_RUN
void GlobalNamespace::ND_ERROR::_set_ND_E_TEST_NOT_RUN(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_TEST_NOT_RUN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_TEST_NOT_RUN", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_NO_INTERFACE
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_NO_INTERFACE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_NO_INTERFACE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_NO_INTERFACE"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_NO_INTERFACE
void GlobalNamespace::ND_ERROR::_set_ND_E_NO_INTERFACE(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_NO_INTERFACE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_NO_INTERFACE", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_NO_INTERFACE_WITH_GATEWAY
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_NO_INTERFACE_WITH_GATEWAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_NO_INTERFACE_WITH_GATEWAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_NO_INTERFACE_WITH_GATEWAY"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_NO_INTERFACE_WITH_GATEWAY
void GlobalNamespace::ND_ERROR::_set_ND_E_NO_INTERFACE_WITH_GATEWAY(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_NO_INTERFACE_WITH_GATEWAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_NO_INTERFACE_WITH_GATEWAY", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_NO_INTERFACE_WITH_ROUTE
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_NO_INTERFACE_WITH_ROUTE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_NO_INTERFACE_WITH_ROUTE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_NO_INTERFACE_WITH_ROUTE"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_NO_INTERFACE_WITH_ROUTE
void GlobalNamespace::ND_ERROR::_set_ND_E_NO_INTERFACE_WITH_ROUTE(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_NO_INTERFACE_WITH_ROUTE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_NO_INTERFACE_WITH_ROUTE", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_TIMEOUT
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_TIMEOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_TIMEOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_TIMEOUT"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_TIMEOUT
void GlobalNamespace::ND_ERROR::_set_ND_E_TIMEOUT(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_TIMEOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_TIMEOUT", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_CANT_ICMP
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_CANT_ICMP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_CANT_ICMP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_CANT_ICMP"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_CANT_ICMP
void GlobalNamespace::ND_ERROR::_set_ND_E_CANT_ICMP(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_CANT_ICMP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_CANT_ICMP", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER
void GlobalNamespace::ND_ERROR::_set_ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_CANT_RESOLVE_ROOT_DNS_SERVER
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_CANT_RESOLVE_ROOT_DNS_SERVER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_CANT_RESOLVE_ROOT_DNS_SERVER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_CANT_RESOLVE_ROOT_DNS_SERVER"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_CANT_RESOLVE_ROOT_DNS_SERVER
void GlobalNamespace::ND_ERROR::_set_ND_E_CANT_RESOLVE_ROOT_DNS_SERVER(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_CANT_RESOLVE_ROOT_DNS_SERVER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_CANT_RESOLVE_ROOT_DNS_SERVER", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS
void GlobalNamespace::ND_ERROR::_set_ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478
void GlobalNamespace::ND_ERROR::_set_ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_CANT_CREATE_TCP_SOCKET
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_CANT_CREATE_TCP_SOCKET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_CANT_CREATE_TCP_SOCKET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_CANT_CREATE_TCP_SOCKET"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_CANT_CREATE_TCP_SOCKET
void GlobalNamespace::ND_ERROR::_set_ND_E_CANT_CREATE_TCP_SOCKET(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_CANT_CREATE_TCP_SOCKET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_CANT_CREATE_TCP_SOCKET", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_CANT_LOAD_ICMP_LIBRARY
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_CANT_LOAD_ICMP_LIBRARY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_CANT_LOAD_ICMP_LIBRARY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_CANT_LOAD_ICMP_LIBRARY"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_CANT_LOAD_ICMP_LIBRARY
void GlobalNamespace::ND_ERROR::_set_ND_E_CANT_LOAD_ICMP_LIBRARY(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_CANT_LOAD_ICMP_LIBRARY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_CANT_LOAD_ICMP_LIBRARY", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_CANT_FIND_SENDECHO2_PROCADDR
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_CANT_FIND_SENDECHO2_PROCADDR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_CANT_FIND_SENDECHO2_PROCADDR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_CANT_FIND_SENDECHO2_PROCADDR"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_CANT_FIND_SENDECHO2_PROCADDR
void GlobalNamespace::ND_ERROR::_set_ND_E_CANT_FIND_SENDECHO2_PROCADDR(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_CANT_FIND_SENDECHO2_PROCADDR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_CANT_FIND_SENDECHO2_PROCADDR", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_CANT_CONNECT_TO_ECHO_SERVER
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_CANT_CONNECT_TO_ECHO_SERVER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_CANT_CONNECT_TO_ECHO_SERVER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_CANT_CONNECT_TO_ECHO_SERVER"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_CANT_CONNECT_TO_ECHO_SERVER
void GlobalNamespace::ND_ERROR::_set_ND_E_CANT_CONNECT_TO_ECHO_SERVER(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_CANT_CONNECT_TO_ECHO_SERVER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_CANT_CONNECT_TO_ECHO_SERVER", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_SEND_FAILED
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_SEND_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_SEND_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_SEND_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_SEND_FAILED
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_SEND_FAILED(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_SEND_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_SEND_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RECV_FAILED
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RECV_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RECV_FAILED
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RECV_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_UDP
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_NO_UDP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_NO_UDP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_NO_UDP"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_UDP
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_NO_UDP(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_NO_UDP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_NO_UDP", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_TCP
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_NO_TCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_NO_TCP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_NO_TCP"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_TCP
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_NO_TCP(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_NO_TCP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_NO_TCP", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_RESOLVE_NAME
::GlobalNamespace::ND_ERROR GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_CANT_RESOLVE_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_get_ND_E_ECHO_SERVER_CANT_RESOLVE_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_ERROR>("", "ND_ERROR", "ND_E_ECHO_SERVER_CANT_RESOLVE_NAME"));
}
// Autogenerated static field setter
// Set static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_RESOLVE_NAME
void GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_CANT_RESOLVE_NAME(::GlobalNamespace::ND_ERROR value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::_set_ND_E_ECHO_SERVER_CANT_RESOLVE_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_ERROR", "ND_E_ECHO_SERVER_CANT_RESOLVE_NAME", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ND_ERROR::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_ERROR::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ND_TEST_TYPE
#include "GlobalNamespace/ND_TEST_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_LOCATE_INTERFACE
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_LOCATE_INTERFACE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_LOCATE_INTERFACE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_LOCATE_INTERFACE"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_LOCATE_INTERFACE
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_LOCATE_INTERFACE(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_LOCATE_INTERFACE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_LOCATE_INTERFACE", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_PING_GATEWAY
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_PING_GATEWAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_PING_GATEWAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_PING_GATEWAY"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_PING_GATEWAY
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_PING_GATEWAY(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_PING_GATEWAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_PING_GATEWAY", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_DNS
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_DNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_DNS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_DNS"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_DNS
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_DNS(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_DNS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_DNS", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_STUN
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_STUN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_STUN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_STUN"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_STUN
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_STUN(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_STUN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_STUN", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_FIRST_PORT
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_FIRST_PORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_FIRST_PORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_FIRST_PORT"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_FIRST_PORT
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_FIRST_PORT(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_FIRST_PORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_FIRST_PORT", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_REQUEST
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_REQUEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_REQUEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_REQUEST"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_REQUEST
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_REQUEST(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_REQUEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_REQUEST", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_RESPONSE
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_RESPONSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_RESPONSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_RESPONSE"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_RESPONSE
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_RESPONSE(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_RESPONSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_FIRST_PORT_INVITE_RESPONSE", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_REQUEST
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_REQUEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_REQUEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_REQUEST"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_REQUEST
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_REQUEST(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_REQUEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_REQUEST", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_RESPONSE
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_RESPONSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_RESPONSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_RESPONSE"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_RESPONSE
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_RESPONSE(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_RESPONSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_FIRST_PORT_REGISTER_RESPONSE", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_SECOND_PORT
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_SECOND_PORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_SECOND_PORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_SECOND_PORT"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_SECOND_PORT
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_SECOND_PORT(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_SECOND_PORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_SECOND_PORT", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_REQUEST
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_REQUEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_REQUEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_REQUEST"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_REQUEST
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_REQUEST(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_REQUEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_REQUEST", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_RESPONSE
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_RESPONSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_RESPONSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_RESPONSE"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_RESPONSE
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_RESPONSE(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_RESPONSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_SECOND_PORT_INVITE_RESPONSE", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_REQUEST
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_REQUEST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_REQUEST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_REQUEST"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_REQUEST
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_REQUEST(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_REQUEST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_REQUEST", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_RESPONSE
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_RESPONSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_RESPONSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_RESPONSE"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_RESPONSE
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_RESPONSE(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_RESPONSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_SIP_SECOND_PORT_REGISTER_RESPONSE", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_MEDIA
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_MEDIA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_MEDIA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_MEDIA"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_MEDIA
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_MEDIA(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_MEDIA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_MEDIA", value));
}
// Autogenerated static field getter
// Get static field: static public ND_TEST_TYPE ND_TEST_ECHO_MEDIA_LARGE_PACKET
::GlobalNamespace::ND_TEST_TYPE GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_MEDIA_LARGE_PACKET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_get_ND_TEST_ECHO_MEDIA_LARGE_PACKET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ND_TEST_TYPE>("", "ND_TEST_TYPE", "ND_TEST_ECHO_MEDIA_LARGE_PACKET"));
}
// Autogenerated static field setter
// Set static field: static public ND_TEST_TYPE ND_TEST_ECHO_MEDIA_LARGE_PACKET
void GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_MEDIA_LARGE_PACKET(::GlobalNamespace::ND_TEST_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::_set_ND_TEST_ECHO_MEDIA_LARGE_PACKET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ND_TEST_TYPE", "ND_TEST_ECHO_MEDIA_LARGE_PACKET", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ND_TEST_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ND_TEST_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: orientation_type
#include "GlobalNamespace/orientation_type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public orientation_type orientation_default
::GlobalNamespace::orientation_type GlobalNamespace::orientation_type::_get_orientation_default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::orientation_type::_get_orientation_default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::orientation_type>("", "orientation_type", "orientation_default"));
}
// Autogenerated static field setter
// Set static field: static public orientation_type orientation_default
void GlobalNamespace::orientation_type::_set_orientation_default(::GlobalNamespace::orientation_type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::orientation_type::_set_orientation_default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "orientation_type", "orientation_default", value));
}
// Autogenerated static field getter
// Get static field: static public orientation_type orientation_legacy
::GlobalNamespace::orientation_type GlobalNamespace::orientation_type::_get_orientation_legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::orientation_type::_get_orientation_legacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::orientation_type>("", "orientation_type", "orientation_legacy"));
}
// Autogenerated static field setter
// Set static field: static public orientation_type orientation_legacy
void GlobalNamespace::orientation_type::_set_orientation_legacy(::GlobalNamespace::orientation_type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::orientation_type::_set_orientation_legacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "orientation_type", "orientation_legacy", value));
}
// Autogenerated static field getter
// Get static field: static public orientation_type orientation_vivox
::GlobalNamespace::orientation_type GlobalNamespace::orientation_type::_get_orientation_vivox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::orientation_type::_get_orientation_vivox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::orientation_type>("", "orientation_type", "orientation_vivox"));
}
// Autogenerated static field setter
// Set static field: static public orientation_type orientation_vivox
void GlobalNamespace::orientation_type::_set_orientation_vivox(::GlobalNamespace::orientation_type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::orientation_type::_set_orientation_vivox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "orientation_type", "orientation_vivox", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::orientation_type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::orientation_type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: req_disposition_type_t
#include "GlobalNamespace/req_disposition_type_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public req_disposition_type_t req_disposition_reply_required
::GlobalNamespace::req_disposition_type_t GlobalNamespace::req_disposition_type_t::_get_req_disposition_reply_required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::req_disposition_type_t::_get_req_disposition_reply_required");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::req_disposition_type_t>("", "req_disposition_type_t", "req_disposition_reply_required"));
}
// Autogenerated static field setter
// Set static field: static public req_disposition_type_t req_disposition_reply_required
void GlobalNamespace::req_disposition_type_t::_set_req_disposition_reply_required(::GlobalNamespace::req_disposition_type_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::req_disposition_type_t::_set_req_disposition_reply_required");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "req_disposition_type_t", "req_disposition_reply_required", value));
}
// Autogenerated static field getter
// Get static field: static public req_disposition_type_t req_disposition_no_reply_required
::GlobalNamespace::req_disposition_type_t GlobalNamespace::req_disposition_type_t::_get_req_disposition_no_reply_required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::req_disposition_type_t::_get_req_disposition_no_reply_required");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::req_disposition_type_t>("", "req_disposition_type_t", "req_disposition_no_reply_required"));
}
// Autogenerated static field setter
// Set static field: static public req_disposition_type_t req_disposition_no_reply_required
void GlobalNamespace::req_disposition_type_t::_set_req_disposition_no_reply_required(::GlobalNamespace::req_disposition_type_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::req_disposition_type_t::_set_req_disposition_no_reply_required");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "req_disposition_type_t", "req_disposition_no_reply_required", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::req_disposition_type_t::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::req_disposition_type_t::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_double
#include "GlobalNamespace/SWIGTYPE_p_double.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_double::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_double::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_double.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_double::getCPtr(::GlobalNamespace::SWIGTYPE_p_double* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_double::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_double", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_int__void
#include "GlobalNamespace/SWIGTYPE_p_f_int__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_int__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_int__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_int__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_int__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_int__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_int__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_int__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__void
#include "GlobalNamespace/SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_q_const__char_p_q_const__char_p_q_const__char__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void__void
#include "GlobalNamespace/SWIGTYPE_p_f_p_void__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void
#include "GlobalNamespace/SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void
#include "GlobalNamespace/SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void
#include "GlobalNamespace/SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void_p_q_const__char__void
#include "GlobalNamespace/SWIGTYPE_p_f_p_void_p_q_const__char__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void_p_q_const__char__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void_p_q_const__char__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void
#include "GlobalNamespace/SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void
#include "GlobalNamespace/SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void
#include "GlobalNamespace/SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void
#include "GlobalNamespace/SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void_p_void_size_t__int
#include "GlobalNamespace/SWIGTYPE_p_f_p_void_p_void_size_t__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void_p_void_size_t__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void_p_void_size_t__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_void_size_t__p_void
#include "GlobalNamespace/SWIGTYPE_p_f_p_void_size_t__p_void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_void_size_t__p_void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_size_t__p_void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_void_size_t__p_void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_void_size_t__p_void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_void_size_t__p_void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_void_size_t__p_void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_void_size_t__p_void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_apcd__int
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_apcd__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_apcd__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_apcd__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_apcd__p_char
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_apcd__p_char.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd__p_char::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd__p_char::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_apcd__p_char.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd__p_char::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd__p_char* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd__p_char::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_apcd__p_char", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_apcd_int_int__int
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_apcd_int_int__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_int_int__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_int_int__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_apcd_int_int__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_int_int__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_int_int__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_int_int__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_apcd_int_int__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_apcd_p_void_int__int
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_apcd_p_void_int__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_p_void_int__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_p_void_int__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_apcd_p_void_int__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_p_void_int__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_p_void_int__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_p_void_int__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_apcd_p_void_int__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_apcd_p_vxa_capture_device_stats_t__int
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_apcd_p_vxa_capture_device_stats_t__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_p_vxa_capture_device_stats_t__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_p_vxa_capture_device_stats_t__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_apcd_p_vxa_capture_device_stats_t__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_p_vxa_capture_device_stats_t__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_p_vxa_capture_device_stats_t__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_apcd_p_vxa_capture_device_stats_t__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_apcd_p_vxa_capture_device_stats_t__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_aprd__int
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_aprd__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_aprd__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_aprd__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_aprd__p_char
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_aprd__p_char.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd__p_char::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd__p_char::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_aprd__p_char.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd__p_char::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd__p_char* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd__p_char::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_aprd__p_char", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_aprd_int__int
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_aprd_int__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_aprd_int__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_aprd_int__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_aprd_int_p_p_void__int
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_aprd_int_p_p_void__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int_p_p_void__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int_p_p_void__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_aprd_int_p_p_void__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int_p_p_void__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int_p_p_void__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int_p_p_void__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_aprd_int_p_p_void__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_aprd_int_p_void_p_void__int
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_aprd_int_p_void_p_void__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int_p_void_p_void__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int_p_void_p_void__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_aprd_int_p_void_p_void__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int_p_void_p_void__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int_p_void_p_void__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_int_p_void_p_void__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_aprd_int_p_void_p_void__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_p_vxa_aprd_p_vxa_render_device_stats_t__int
#include "GlobalNamespace/SWIGTYPE_p_f_p_vxa_aprd_p_vxa_render_device_stats_t__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_p_vxa_render_device_stats_t__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_p_vxa_render_device_stats_t__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_p_vxa_aprd_p_vxa_render_device_stats_t__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_p_vxa_render_device_stats_t__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_p_vxa_render_device_stats_t__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_p_vxa_aprd_p_vxa_render_device_stats_t__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_p_vxa_aprd_p_vxa_render_device_stats_t__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_size_t__p_void
#include "GlobalNamespace/SWIGTYPE_p_f_size_t__p_void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_size_t__p_void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_size_t__p_void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_size_t__p_void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_size_t__p_void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_size_t__p_void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_size_t__p_void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_size_t__p_void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_size_t_size_t__p_void
#include "GlobalNamespace/SWIGTYPE_p_f_size_t_size_t__p_void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_size_t_size_t__p_void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_size_t_size_t__p_void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_f_void__int
#include "GlobalNamespace/SWIGTYPE_p_f_void__int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_f_void__int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_void__int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_f_void__int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_f_void__int::getCPtr(::GlobalNamespace::SWIGTYPE_p_f_void__int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_f_void__int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_f_void__int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_int
#include "GlobalNamespace/SWIGTYPE_p_int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_int::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_int::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_int.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_int::getCPtr(::GlobalNamespace::SWIGTYPE_p_int* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_int::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_int", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_char
#include "GlobalNamespace/SWIGTYPE_p_p_char.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_char::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_char::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_char.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_char::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_char* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_char::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_char", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_char
#include "GlobalNamespace/SWIGTYPE_p_p_p_char.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_char::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_char::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_char.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_char::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_char* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_char::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_char", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_auto_accept_rule
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_auto_accept_rule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_auto_accept_rule::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_auto_accept_rule::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_auto_accept_rule.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_auto_accept_rule::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_auto_accept_rule* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_auto_accept_rule::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_auto_accept_rule", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_block_rule
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_block_rule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_block_rule::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_block_rule::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_block_rule.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_block_rule::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_block_rule* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_block_rule::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_block_rule", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_buddy
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_buddy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_buddy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_buddy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_buddy.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_buddy::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_buddy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_buddy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_buddy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_channel
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_channel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_channel::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_channel::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_channel.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_channel::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_channel* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_channel::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_channel", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_channel_favorite
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_channel_favorite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_channel_favorite::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_channel_favorite::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_channel_favorite.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_channel_favorite::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_channel_favorite* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_channel_favorite::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_channel_favorite", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_channel_favorite_group
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_channel_favorite_group.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_channel_favorite_group::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_channel_favorite_group::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_channel_favorite_group.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_channel_favorite_group::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_channel_favorite_group* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_channel_favorite_group::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_channel_favorite_group", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_connectivity_test_result
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_connectivity_test_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_connectivity_test_result::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_connectivity_test_result::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_connectivity_test_result.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_connectivity_test_result::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_connectivity_test_result* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_connectivity_test_result::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_connectivity_test_result", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_device
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_device.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_device::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_device::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_device.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_device::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_device* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_device::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_device", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_group
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_group.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_group::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_group::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_group.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_group::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_group* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_group::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_group", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_name_value_pair
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_name_value_pair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_name_value_pair::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_name_value_pair::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_name_value_pair.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_name_value_pair::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_name_value_pair* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_name_value_pair::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_name_value_pair", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_participant
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_participant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_participant::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_participant::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_participant.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_participant::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_participant* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_participant::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_participant", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_state_account
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_state_account.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_state_account::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_account::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_state_account.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_state_account::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_account* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_account::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_state_account", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_state_buddy
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_state_buddy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_state_buddy.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_state_buddy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_state_buddy_contact
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_state_buddy_contact.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy_contact::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy_contact::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_state_buddy_contact.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy_contact::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy_contact* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy_contact::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_state_buddy_contact", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_state_buddy_group
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_state_buddy_group.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy_group::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy_group::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_state_buddy_group.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy_group::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy_group* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_buddy_group::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_state_buddy_group", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_state_connector
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_state_connector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_state_connector::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_connector::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_state_connector.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_state_connector::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_connector* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_connector::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_state_connector", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_state_participant
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_state_participant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_state_participant::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_participant::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_state_participant.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_state_participant::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_participant* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_participant::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_state_participant", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_state_session
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_state_session.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_state_session::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_session::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_state_session.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_state_session::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_session* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_session::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_state_session", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_state_sessiongroup
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_state_sessiongroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_state_sessiongroup::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_sessiongroup::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_state_sessiongroup.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_state_sessiongroup::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_sessiongroup* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_state_sessiongroup::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_state_sessiongroup", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_user_channel
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_user_channel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_user_channel::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_user_channel::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_user_channel.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_user_channel::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_user_channel* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_user_channel::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_user_channel", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_p_vx_voice_font
#include "GlobalNamespace/SWIGTYPE_p_p_p_vx_voice_font.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_p_vx_voice_font::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_voice_font::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_p_vx_voice_font.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_p_vx_voice_font::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_p_vx_voice_font* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_p_vx_voice_font::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_p_vx_voice_font", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_short
#include "GlobalNamespace/SWIGTYPE_p_p_short.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_short::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_short::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_short.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_short::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_short* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_short::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_short", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_void
#include "GlobalNamespace/SWIGTYPE_p_p_void.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_void::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_void::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_void.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_void::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_void* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_void::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_void", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_account
#include "GlobalNamespace/SWIGTYPE_p_p_vx_account.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_account::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_account::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_account.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_account::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_account* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_account::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_account", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_auto_accept_rule
#include "GlobalNamespace/SWIGTYPE_p_p_vx_auto_accept_rule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_auto_accept_rule::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_auto_accept_rule::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_auto_accept_rule.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_auto_accept_rule::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_auto_accept_rule* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_auto_accept_rule::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_auto_accept_rule", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_block_rule
#include "GlobalNamespace/SWIGTYPE_p_p_vx_block_rule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_block_rule::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_block_rule::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_block_rule.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_block_rule::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_block_rule* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_block_rule::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_block_rule", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_buddy
#include "GlobalNamespace/SWIGTYPE_p_p_vx_buddy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_buddy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_buddy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_buddy.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_buddy::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_buddy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_buddy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_buddy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_channel
#include "GlobalNamespace/SWIGTYPE_p_p_vx_channel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_channel::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_channel::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_channel.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_channel::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_channel* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_channel::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_channel", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_channel_favorite
#include "GlobalNamespace/SWIGTYPE_p_p_vx_channel_favorite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_channel_favorite::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_channel_favorite::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_channel_favorite.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_channel_favorite::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_channel_favorite* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_channel_favorite::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_channel_favorite", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_channel_favorite_group
#include "GlobalNamespace/SWIGTYPE_p_p_vx_channel_favorite_group.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_channel_favorite_group::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_channel_favorite_group::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_channel_favorite_group.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_channel_favorite_group::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_channel_favorite_group* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_channel_favorite_group::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_channel_favorite_group", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_connectivity_test_result
#include "GlobalNamespace/SWIGTYPE_p_p_vx_connectivity_test_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_connectivity_test_result::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_connectivity_test_result::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_connectivity_test_result.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_connectivity_test_result::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_connectivity_test_result* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_connectivity_test_result::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_connectivity_test_result", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_device
#include "GlobalNamespace/SWIGTYPE_p_p_vx_device.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_device::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_device::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_device.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_device::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_device* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_device::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_device", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_group
#include "GlobalNamespace/SWIGTYPE_p_p_vx_group.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_group::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_group::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_group.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_group::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_group* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_group::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_group", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_message_base
#include "GlobalNamespace/SWIGTYPE_p_p_vx_message_base.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_message_base::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_message_base::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_message_base.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_message_base::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_message_base* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_message_base::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_message_base", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_name_value_pair
#include "GlobalNamespace/SWIGTYPE_p_p_vx_name_value_pair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_name_value_pair::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_name_value_pair::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_name_value_pair.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_name_value_pair::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_name_value_pair* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_name_value_pair::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_name_value_pair", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_participant
#include "GlobalNamespace/SWIGTYPE_p_p_vx_participant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_participant::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_participant::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_participant.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_participant::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_participant* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_participant::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_participant", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_anonymous_login
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_anonymous_login.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_anonymous_login::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_anonymous_login::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_anonymous_login.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_anonymous_login::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_anonymous_login* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_anonymous_login::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_anonymous_login", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_archive_query
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_archive_query.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_archive_query::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_archive_query::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_archive_query.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_archive_query::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_archive_query* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_archive_query::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_archive_query", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_authtoken_login
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_authtoken_login.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_authtoken_login::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_authtoken_login::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_authtoken_login.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_authtoken_login::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_authtoken_login* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_authtoken_login::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_authtoken_login", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_buddy_delete
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_buddy_delete.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_delete::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_delete::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_buddy_delete.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_delete::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_delete* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_delete::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_buddy_delete", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_buddy_search
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_buddy_search.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_search::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_search::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_buddy_search.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_search::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_search* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_search::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_buddy_search", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_buddy_set
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_buddy_set.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_set::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_set::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_buddy_set.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_set::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_set* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddy_set::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_buddy_set", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_buddygroup_delete
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_buddygroup_delete.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddygroup_delete::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddygroup_delete::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_buddygroup_delete.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddygroup_delete::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddygroup_delete* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddygroup_delete::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_buddygroup_delete", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_buddygroup_set
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_buddygroup_set.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddygroup_set::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddygroup_set::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_buddygroup_set.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddygroup_set::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddygroup_set* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_buddygroup_set::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_buddygroup_set", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_add_acl
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_add_acl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_add_acl::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_add_acl::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_add_acl.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_add_acl::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_add_acl* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_add_acl::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_add_acl", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_add_moderator
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_add_moderator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_add_moderator::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_add_moderator::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_add_moderator.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_add_moderator::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_add_moderator* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_add_moderator::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_add_moderator", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_change_owner
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_change_owner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_change_owner::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_change_owner::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_change_owner.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_change_owner::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_change_owner* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_change_owner::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_change_owner", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_create
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_create.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_create::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_create::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_create.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_create::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_create* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_create::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_create", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_delete
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_delete.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_delete::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_delete::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_delete.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_delete::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_delete* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_delete::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_delete", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_favorite_delete
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_favorite_delete.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_delete::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_delete::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_favorite_delete.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_delete::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_delete* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_delete::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_favorite_delete", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_favorite_group_delete
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_favorite_group_delete.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_group_delete::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_group_delete::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_favorite_group_delete.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_group_delete::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_group_delete* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_group_delete::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_favorite_group_delete", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_favorite_group_set
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_favorite_group_set.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_group_set::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_group_set::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_favorite_group_set.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_group_set::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_group_set* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_group_set::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_favorite_group_set", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_favorite_set
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_favorite_set.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_set::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_set::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_favorite_set.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_set::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_set* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorite_set::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_favorite_set", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_favorites_get_list
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_favorites_get_list.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorites_get_list::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorites_get_list::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_favorites_get_list.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorites_get_list::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorites_get_list* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_favorites_get_list::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_favorites_get_list", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_get_acl
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_get_acl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_acl::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_acl::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_get_acl.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_acl::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_acl* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_acl::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_get_acl", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_get_info
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_get_info.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_info::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_info::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_get_info.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_info::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_info* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_info::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_get_info", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_get_moderators
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_get_moderators.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_moderators::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_moderators::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_get_moderators.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_moderators::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_moderators* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_moderators::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_get_moderators", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_get_participants
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_get_participants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_participants::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_participants::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_get_participants.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_participants::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_participants* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_get_participants::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_get_participants", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SWIGTYPE_p_p_vx_req_account_channel_remove_acl
#include "GlobalNamespace/SWIGTYPE_p_p_vx_req_account_channel_remove_acl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_remove_acl::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_remove_acl::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SWIGTYPE_p_p_vx_req_account_channel_remove_acl.getCPtr
::System::Runtime::InteropServices::HandleRef GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_remove_acl::getCPtr(::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_remove_acl* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SWIGTYPE_p_p_vx_req_account_channel_remove_acl::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SWIGTYPE_p_p_vx_req_account_channel_remove_acl", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
