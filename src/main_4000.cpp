// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphNode/<>c__DisplayClass39_0
#include "Pathfinding/GraphNode_--c__DisplayClass39_0.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathHandler handler
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& Pathfinding::GraphNode::$$c__DisplayClass39_0::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass39_0::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathNode pathNode
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::GraphNode::$$c__DisplayClass39_0::dyn_pathNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass39_0::dyn_pathNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathNode"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Path path
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::GraphNode::$$c__DisplayClass39_0::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass39_0::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphNode/<>c__DisplayClass39_0.<UpdateRecursiveG>b__0
void Pathfinding::GraphNode::$$c__DisplayClass39_0::$UpdateRecursiveG$b__0(::Pathfinding::GraphNode* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass39_0::<UpdateRecursiveG>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateRecursiveG>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphNode/<>c__DisplayClass40_0
#include "Pathfinding/GraphNode_--c__DisplayClass40_0.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 region
[[deprecated("Use field access instead!")]] uint& Pathfinding::GraphNode::$$c__DisplayClass40_0::dyn_region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass40_0::dyn_region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "region"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Stack`1<Pathfinding.GraphNode> stack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>*& Pathfinding::GraphNode::$$c__DisplayClass40_0::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass40_0::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphNode/<>c__DisplayClass40_0.<FloodFill>b__0
void Pathfinding::GraphNode::$$c__DisplayClass40_0::$FloodFill$b__0(::Pathfinding::GraphNode* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass40_0::<FloodFill>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FloodFill>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphNode/<>c__DisplayClass45_0
#include "Pathfinding/GraphNode_--c__DisplayClass45_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean contains
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphNode::$$c__DisplayClass45_0::dyn_contains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass45_0::dyn_contains");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contains"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::GraphNode::$$c__DisplayClass45_0::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass45_0::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphNode/<>c__DisplayClass45_0.<ContainsConnection>b__0
void Pathfinding::GraphNode::$$c__DisplayClass45_0::$ContainsConnection$b__0(::Pathfinding::GraphNode* neighbour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphNode::$$c__DisplayClass45_0::<ContainsConnection>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ContainsConnection>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(neighbour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, neighbour);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.MeshNode
#include "Pathfinding/MeshNode.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.GraphNodeDelegate
#include "Pathfinding/GraphNodeDelegate.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode[] connections
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::MeshNode::dyn_connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::dyn_connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connections"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32[] connectionCosts
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Pathfinding::MeshNode::dyn_connectionCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::dyn_connectionCosts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionCosts"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.MeshNode.GetVertex
::Pathfinding::Int3 Pathfinding::MeshNode::GetVertex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::GetVertex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.MeshNode.GetVertexCount
int Pathfinding::MeshNode::GetVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::GetVertexCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MeshNode.ClosestPointOnNode
::UnityEngine::Vector3 Pathfinding::MeshNode::ClosestPointOnNode(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ClosestPointOnNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.MeshNode.ClosestPointOnNodeXZ
::UnityEngine::Vector3 Pathfinding::MeshNode::ClosestPointOnNodeXZ(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ClosestPointOnNodeXZ");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.MeshNode.ContainsPoint
bool Pathfinding::MeshNode::ContainsPoint(::Pathfinding::Int3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ContainsPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.MeshNode.ClearConnections
void Pathfinding::MeshNode::ClearConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ClearConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.MeshNode.GetConnections
void Pathfinding::MeshNode::GetConnections(::Pathfinding::GraphNodeDelegate* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::GetConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, del);
}
// Autogenerated method: Pathfinding.MeshNode.FloodFill
void Pathfinding::MeshNode::FloodFill(::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>* stack, uint region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::FloodFill");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stack, region);
}
// Autogenerated method: Pathfinding.MeshNode.ContainsConnection
bool Pathfinding::MeshNode::ContainsConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::ContainsConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.MeshNode.UpdateRecursiveG
void Pathfinding::MeshNode::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.MeshNode.AddConnection
void Pathfinding::MeshNode::AddConnection(::Pathfinding::GraphNode* node, uint cost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::AddConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, cost);
}
// Autogenerated method: Pathfinding.MeshNode.RemoveConnection
void Pathfinding::MeshNode::RemoveConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::RemoveConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.MeshNode.SerializeReferences
void Pathfinding::MeshNode::SerializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::SerializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.MeshNode.DeserializeReferences
void Pathfinding::MeshNode::DeserializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MeshNode::DeserializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.Path/<WaitForPath>d__53
#include "Pathfinding/Path_-WaitForPath-d__53.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Pathfinding.PathLog
#include "Pathfinding/PathLog.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] ZeroTagPenalties
::ArrayW<int> Pathfinding::Path::_get_ZeroTagPenalties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::_get_ZeroTagPenalties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding", "Path", "ZeroTagPenalties"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] ZeroTagPenalties
void Pathfinding::Path::_set_ZeroTagPenalties(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::_set_ZeroTagPenalties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Path", "ZeroTagPenalties", value));
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathHandler <pathHandler>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& Pathfinding::Path::dyn_$pathHandler$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_$pathHandler$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pathHandler>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate callback
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::Path::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.OnPathDelegate immediateCallback
[[deprecated("Use field access instead!")]] ::Pathfinding::OnPathDelegate*& Pathfinding::Path::dyn_immediateCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_immediateCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediateCallback"))->offset;
  return *reinterpret_cast<::Pathfinding::OnPathDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathState state
[[deprecated("Use field access instead!")]] ::Pathfinding::PathState& Pathfinding::Path::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Pathfinding::PathState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object stateLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Path::dyn_stateLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_stateLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.PathCompleteState pathCompleteState
[[deprecated("Use field access instead!")]] ::Pathfinding::PathCompleteState& Pathfinding::Path::dyn_pathCompleteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_pathCompleteState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathCompleteState"))->offset;
  return *reinterpret_cast<::Pathfinding::PathCompleteState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _errorLog
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Path::dyn__errorLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn__errorLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_errorLog"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> path
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::Path::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Vector3> vectorPath
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pathfinding::Path::dyn_vectorPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_vectorPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vectorPath"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single maxFrameTime
[[deprecated("Use field access instead!")]] float& Pathfinding::Path::dyn_maxFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_maxFrameTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFrameTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.PathNode currentR
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::Path::dyn_currentR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_currentR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentR"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
[[deprecated("Use field access instead!")]] float& Pathfinding::Path::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 searchIterations
[[deprecated("Use field access instead!")]] int& Pathfinding::Path::dyn_searchIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_searchIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 searchedNodes
[[deprecated("Use field access instead!")]] int& Pathfinding::Path::dyn_searchedNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_searchedNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchedNodes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime <callTime>k__BackingField
[[deprecated("Use field access instead!")]] ::System::DateTime& Pathfinding::Path::dyn_$callTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_$callTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<callTime>k__BackingField"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean pooled
[[deprecated("Use field access instead!")]] bool& Pathfinding::Path::dyn_pooled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_pooled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pooled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean hasBeenReset
[[deprecated("Use field access instead!")]] bool& Pathfinding::Path::dyn_hasBeenReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_hasBeenReset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasBeenReset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NNConstraint nnConstraint
[[deprecated("Use field access instead!")]] ::Pathfinding::NNConstraint*& Pathfinding::Path::dyn_nnConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_nnConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nnConstraint"))->offset;
  return *reinterpret_cast<::Pathfinding::NNConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Path next
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::Path::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Heuristic heuristic
[[deprecated("Use field access instead!")]] ::Pathfinding::Heuristic& Pathfinding::Path::dyn_heuristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_heuristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heuristic"))->offset;
  return *reinterpret_cast<::Pathfinding::Heuristic*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single heuristicScale
[[deprecated("Use field access instead!")]] float& Pathfinding::Path::dyn_heuristicScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_heuristicScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heuristicScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 <pathID>k__BackingField
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::Path::dyn_$pathID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_$pathID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pathID>k__BackingField"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.GraphNode hTargetNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::Path::dyn_hTargetNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_hTargetNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hTargetNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.Int3 hTarget
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::Path::dyn_hTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_hTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hTarget"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 enabledTags
[[deprecated("Use field access instead!")]] int& Pathfinding::Path::dyn_enabledTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_enabledTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledTags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32[] internalTagPenalties
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Path::dyn_internalTagPenalties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_internalTagPenalties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalTagPenalties"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32[] manualTagPenalties
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Path::dyn_manualTagPenalties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_manualTagPenalties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "manualTagPenalties"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Object> claimed
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Il2CppObject*>*& Pathfinding::Path::dyn_claimed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_claimed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "claimed"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean releasedNotSilent
[[deprecated("Use field access instead!")]] bool& Pathfinding::Path::dyn_releasedNotSilent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::dyn_releasedNotSilent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "releasedNotSilent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Path.get_pathHandler
::Pathfinding::PathHandler* Pathfinding::Path::get_pathHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_pathHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pathHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathHandler*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_pathHandler
void Pathfinding::Path::set_pathHandler(::Pathfinding::PathHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_pathHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pathHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_CompleteState
::Pathfinding::PathCompleteState Pathfinding::Path::get_CompleteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_CompleteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompleteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathCompleteState, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_CompleteState
void Pathfinding::Path::set_CompleteState(::Pathfinding::PathCompleteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_CompleteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompleteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_error
bool Pathfinding::Path::get_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.get_errorLog
::StringW Pathfinding::Path::get_errorLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_errorLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_errorLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.get_callTime
::System::DateTime Pathfinding::Path::get_callTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_callTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_callTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_callTime
void Pathfinding::Path::set_callTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_callTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_callTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_recycled
bool Pathfinding::Path::get_recycled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_recycled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recycled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_recycled
void Pathfinding::Path::set_recycled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_recycled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recycled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_pathID
uint16_t Pathfinding::Path::get_pathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_pathID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pathID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_pathID
void Pathfinding::Path::set_pathID(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_pathID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pathID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_tagPenalties
::ArrayW<int> Pathfinding::Path::get_tagPenalties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_tagPenalties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tagPenalties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.set_tagPenalties
void Pathfinding::Path::set_tagPenalties(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::set_tagPenalties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tagPenalties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Path.get_FloodingPath
bool Pathfinding::Path::get_FloodingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::get_FloodingPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.GetTotalLength
float Pathfinding::Path::GetTotalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetTotalLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.WaitForPath
::System::Collections::IEnumerator* Pathfinding::Path::WaitForPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::WaitForPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.CalculateHScore
uint Pathfinding::Path::CalculateHScore(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::CalculateHScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateHScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Path.GetTagPenalty
uint Pathfinding::Path::GetTagPenalty(int tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetTagPenalty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagPenalty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, tag);
}
// Autogenerated method: Pathfinding.Path.GetHTarget
::Pathfinding::Int3 Pathfinding::Path::GetHTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetHTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.CanTraverse
bool Pathfinding::Path::CanTraverse(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::CanTraverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanTraverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Path.GetTraversalCost
uint Pathfinding::Path::GetTraversalCost(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetTraversalCost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTraversalCost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Path.GetConnectionSpecialCost
uint Pathfinding::Path::GetConnectionSpecialCost(::Pathfinding::GraphNode* a, ::Pathfinding::GraphNode* b, uint currentCost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetConnectionSpecialCost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 5));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, a, b, currentCost);
}
// Autogenerated method: Pathfinding.Path.IsDone
bool Pathfinding::Path::IsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::IsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.AdvanceState
void Pathfinding::Path::AdvanceState(::Pathfinding::PathState s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::AdvanceState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdvanceState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Pathfinding.Path.GetState
::Pathfinding::PathState Pathfinding::Path::GetState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathState, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.LogError
void Pathfinding::Path::LogError(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Pathfinding.Path.ForceLogError
void Pathfinding::Path::ForceLogError(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::ForceLogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceLogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Pathfinding.Path.Log
void Pathfinding::Path::Log(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Pathfinding.Path.Error
void Pathfinding::Path::Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.ErrorCheck
void Pathfinding::Path::ErrorCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::ErrorCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ErrorCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.OnEnterPool
void Pathfinding::Path::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Reset
void Pathfinding::Path::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.HasExceededTime
bool Pathfinding::Path::HasExceededTime(int searchedNodes, int64_t targetTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::HasExceededTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasExceededTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchedNodes), ::il2cpp_utils::ExtractType(targetTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, searchedNodes, targetTime);
}
// Autogenerated method: Pathfinding.Path.Claim
void Pathfinding::Path::Claim(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Claim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Claim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.Path.ReleaseSilent
void Pathfinding::Path::ReleaseSilent(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::ReleaseSilent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseSilent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.Path.Release
void Pathfinding::Path::Release(::Il2CppObject* o, bool silent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(silent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, silent);
}
// Autogenerated method: Pathfinding.Path.Trace
void Pathfinding::Path::Trace(::Pathfinding::PathNode* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Trace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from);
}
// Autogenerated method: Pathfinding.Path.DebugStringPrefix
void Pathfinding::Path::DebugStringPrefix(::Pathfinding::PathLog logMode, ::System::Text::StringBuilder* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::DebugStringPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugStringPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMode), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logMode, text);
}
// Autogenerated method: Pathfinding.Path.DebugStringSuffix
void Pathfinding::Path::DebugStringSuffix(::Pathfinding::PathLog logMode, ::System::Text::StringBuilder* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::DebugStringSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugStringSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMode), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logMode, text);
}
// Autogenerated method: Pathfinding.Path.DebugString
::StringW Pathfinding::Path::DebugString(::Pathfinding::PathLog logMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, logMode);
}
// Autogenerated method: Pathfinding.Path.ReturnPath
void Pathfinding::Path::ReturnPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::ReturnPath");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.PrepareBase
void Pathfinding::Path::PrepareBase(::Pathfinding::PathHandler* pathHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::PrepareBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pathHandler);
}
// Autogenerated method: Pathfinding.Path.Prepare
void Pathfinding::Path::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Cleanup
void Pathfinding::Path::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.Initialize
void Pathfinding::Path::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path.CalculateStep
void Pathfinding::Path::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated method: Pathfinding.Path..cctor
void Pathfinding::Path::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "Path", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Path/<WaitForPath>d__53
#include "Pathfinding/Path_-WaitForPath-d__53.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Pathfinding::Path::$WaitForPath$d__53::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__53::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Path::$WaitForPath$d__53::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__53::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Path <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::Path::$WaitForPath$d__53::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__53::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Path/<WaitForPath>d__53.System.IDisposable.Dispose
void Pathfinding::Path::$WaitForPath$d__53::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__53::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path::$WaitForPath$d__53*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path/<WaitForPath>d__53.MoveNext
bool Pathfinding::Path::$WaitForPath$d__53::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__53::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path::$WaitForPath$d__53*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path/<WaitForPath>d__53.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Pathfinding::Path::$WaitForPath$d__53::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__53::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path::$WaitForPath$d__53*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path/<WaitForPath>d__53.System.Collections.IEnumerator.Reset
void Pathfinding::Path::$WaitForPath$d__53::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__53::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path::$WaitForPath$d__53*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Path/<WaitForPath>d__53.System.Collections.IEnumerator.get_Current
::Il2CppObject* Pathfinding::Path::$WaitForPath$d__53::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Path::$WaitForPath$d__53::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path::$WaitForPath$d__53*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 CostMask
uint Pathfinding::PathNode::_get_CostMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_get_CostMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "PathNode", "CostMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 CostMask
void Pathfinding::PathNode::_set_CostMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_set_CostMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathNode", "CostMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Flag1Offset
int Pathfinding::PathNode::_get_Flag1Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_get_Flag1Offset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "PathNode", "Flag1Offset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Flag1Offset
void Pathfinding::PathNode::_set_Flag1Offset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_set_Flag1Offset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathNode", "Flag1Offset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 Flag1Mask
uint Pathfinding::PathNode::_get_Flag1Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_get_Flag1Mask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "PathNode", "Flag1Mask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 Flag1Mask
void Pathfinding::PathNode::_set_Flag1Mask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_set_Flag1Mask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathNode", "Flag1Mask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 Flag2Offset
int Pathfinding::PathNode::_get_Flag2Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_get_Flag2Offset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "PathNode", "Flag2Offset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 Flag2Offset
void Pathfinding::PathNode::_set_Flag2Offset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_set_Flag2Offset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathNode", "Flag2Offset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 Flag2Mask
uint Pathfinding::PathNode::_get_Flag2Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_get_Flag2Mask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding", "PathNode", "Flag2Mask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 Flag2Mask
void Pathfinding::PathNode::_set_Flag2Mask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::_set_Flag2Mask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathNode", "Flag2Mask", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::PathNode::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathNode parent
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::PathNode::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 pathID
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::PathNode::dyn_pathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_pathID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathID"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 flags
[[deprecated("Use field access instead!")]] uint& Pathfinding::PathNode::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 g
[[deprecated("Use field access instead!")]] uint& Pathfinding::PathNode::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_g");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 h
[[deprecated("Use field access instead!")]] uint& Pathfinding::PathNode::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::dyn_h");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathNode.get_cost
uint Pathfinding::PathNode::get_cost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_cost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.set_cost
void Pathfinding::PathNode::set_cost(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::set_cost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathNode.get_flag1
bool Pathfinding::PathNode::get_flag1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_flag1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flag1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.set_flag1
void Pathfinding::PathNode::set_flag1(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::set_flag1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flag1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathNode.get_flag2
bool Pathfinding::PathNode::get_flag2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_flag2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flag2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.set_flag2
void Pathfinding::PathNode::set_flag2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::set_flag2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flag2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathNode.get_G
uint Pathfinding::PathNode::get_G() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.set_G
void Pathfinding::PathNode::set_G(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::set_G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathNode.get_H
uint Pathfinding::PathNode::get_H() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathNode.set_H
void Pathfinding::PathNode::set_H(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::set_H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PathNode.get_F
uint Pathfinding::PathNode::get_F() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNode::get_F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.BinaryHeapM
#include "Pathfinding/BinaryHeapM.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BucketSizeLog2
int Pathfinding::PathHandler::_get_BucketSizeLog2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::_get_BucketSizeLog2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "PathHandler", "BucketSizeLog2"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BucketSizeLog2
void Pathfinding::PathHandler::_set_BucketSizeLog2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::_set_BucketSizeLog2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathHandler", "BucketSizeLog2", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 BucketSize
int Pathfinding::PathHandler::_get_BucketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::_get_BucketSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "PathHandler", "BucketSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BucketSize
void Pathfinding::PathHandler::_set_BucketSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::_set_BucketSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathHandler", "BucketSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 BucketIndexMask
int Pathfinding::PathHandler::_get_BucketIndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::_get_BucketIndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "PathHandler", "BucketIndexMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BucketIndexMask
void Pathfinding::PathHandler::_set_BucketIndexMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::_set_BucketIndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathHandler", "BucketIndexMask", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 pathID
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::PathHandler::dyn_pathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_pathID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pathID"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 threadID
[[deprecated("Use field access instead!")]] int& Pathfinding::PathHandler::dyn_threadID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_threadID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threadID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 totalThreadCount
[[deprecated("Use field access instead!")]] int& Pathfinding::PathHandler::dyn_totalThreadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_totalThreadCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalThreadCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.BinaryHeapM heap
[[deprecated("Use field access instead!")]] ::Pathfinding::BinaryHeapM*& Pathfinding::PathHandler::dyn_heap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_heap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heap"))->offset;
  return *reinterpret_cast<::Pathfinding::BinaryHeapM**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathNode[][] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<::Pathfinding::PathNode*>>& Pathfinding::PathHandler::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<::Pathfinding::PathNode*>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] bucketNew
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Pathfinding::PathHandler::dyn_bucketNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_bucketNew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bucketNew"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] bucketCreated
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& Pathfinding::PathHandler::dyn_bucketCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_bucketCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bucketCreated"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<Pathfinding.PathNode[]> bucketCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::ArrayW<::Pathfinding::PathNode*>>*& Pathfinding::PathHandler::dyn_bucketCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_bucketCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bucketCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::ArrayW<::Pathfinding::PathNode*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 filledBuckets
[[deprecated("Use field access instead!")]] int& Pathfinding::PathHandler::dyn_filledBuckets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_filledBuckets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filledBuckets"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Text.StringBuilder DebugStringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Pathfinding::PathHandler::dyn_DebugStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::dyn_DebugStringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DebugStringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathHandler.get_PathID
uint16_t Pathfinding::PathHandler::get_PathID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::get_PathID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PathID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathHandler.PushNode
void Pathfinding::PathHandler::PushNode(::Pathfinding::PathNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::PushNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathHandler.PopNode
::Pathfinding::PathNode* Pathfinding::PathHandler::PopNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::PopNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathHandler.GetHeap
::Pathfinding::BinaryHeapM* Pathfinding::PathHandler::GetHeap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::GetHeap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::BinaryHeapM*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathHandler.RebuildHeap
void Pathfinding::PathHandler::RebuildHeap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::RebuildHeap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildHeap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathHandler.HeapEmpty
bool Pathfinding::PathHandler::HeapEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::HeapEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeapEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathHandler.InitializeForPath
void Pathfinding::PathHandler::InitializeForPath(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::InitializeForPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeForPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.PathHandler.DestroyNode
void Pathfinding::PathHandler::DestroyNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::DestroyNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathHandler.InitializeNode
void Pathfinding::PathHandler::InitializeNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::InitializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathHandler.GetPathNode
::Pathfinding::PathNode* Pathfinding::PathHandler::GetPathNode(int nodeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::GetPathNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPathNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathNode*, false>(this, ___internal__method, nodeIndex);
}
// Autogenerated method: Pathfinding.PathHandler.GetPathNode
::Pathfinding::PathNode* Pathfinding::PathHandler::GetPathNode(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::GetPathNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPathNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PathNode*, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathHandler.ClearPathIDs
void Pathfinding::PathHandler::ClearPathIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathHandler::ClearPathIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPathIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.MineBotAI
#include "Pathfinding/MineBotAI.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animation anim
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& Pathfinding::MineBotAI::dyn_anim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MineBotAI::dyn_anim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anim"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sleepVelocity
[[deprecated("Use field access instead!")]] float& Pathfinding::MineBotAI::dyn_sleepVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MineBotAI::dyn_sleepVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sleepVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single animationSpeed
[[deprecated("Use field access instead!")]] float& Pathfinding::MineBotAI::dyn_animationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MineBotAI::dyn_animationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject endOfPathEffect
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::MineBotAI::dyn_endOfPathEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MineBotAI::dyn_endOfPathEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endOfPathEffect"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 lastTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::MineBotAI::dyn_lastTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MineBotAI::dyn_lastTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.MineBotAI.Start
void Pathfinding::MineBotAI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MineBotAI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MineBotAI.OnTargetReached
void Pathfinding::MineBotAI::OnTargetReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MineBotAI::OnTargetReached");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MineBotAI.GetFeetPosition
::UnityEngine::Vector3 Pathfinding::MineBotAI::GetFeetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MineBotAI::GetFeetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::AIPath*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MineBotAI.Update
void Pathfinding::MineBotAI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MineBotAI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.TargetMover
#include "Pathfinding/TargetMover.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: AIPath
#include "GlobalNamespace/AIPath.hpp"
// Including type: AILerp
#include "GlobalNamespace/AILerp.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::TargetMover::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::TargetMover::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AIPath[] ais2
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AIPath*>& Pathfinding::TargetMover::dyn_ais2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_ais2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ais2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AIPath*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AILerp[] ais3
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AILerp*>& Pathfinding::TargetMover::dyn_ais3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_ais3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ais3"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AILerp*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean onlyOnDoubleClick
[[deprecated("Use field access instead!")]] bool& Pathfinding::TargetMover::dyn_onlyOnDoubleClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_onlyOnDoubleClick");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlyOnDoubleClick"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean use2D
[[deprecated("Use field access instead!")]] bool& Pathfinding::TargetMover::dyn_use2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_use2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "use2D"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera cam
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& Pathfinding::TargetMover::dyn_cam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::dyn_cam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cam"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.TargetMover.Start
void Pathfinding::TargetMover::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TargetMover.OnGUI
void Pathfinding::TargetMover::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TargetMover.Update
void Pathfinding::TargetMover::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TargetMover.UpdateTargetPosition
void Pathfinding::TargetMover::UpdateTargetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TargetMover::UpdateTargetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTargetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: Pathfinding.NavGraph/<>c__DisplayClass8_0
#include "Pathfinding/NavGraph_--c__DisplayClass8_0.hpp"
// Including type: Pathfinding.NavGraph/<>c__DisplayClass13_0
#include "Pathfinding/NavGraph_--c__DisplayClass13_0.hpp"
// Including type: Pathfinding.NavGraph/<>c__DisplayClass16_0
#include "Pathfinding/NavGraph_--c__DisplayClass16_0.hpp"
// Including type: Pathfinding.NavGraph/<>c
#include "Pathfinding/NavGraph_--c.hpp"
// Including type: Pathfinding.NavGraph/<>c__DisplayClass30_0
#include "Pathfinding/NavGraph_--c__DisplayClass30_0.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
// Including type: Pathfinding.NNInfo
#include "Pathfinding/NNInfo.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.OnScanStatus
#include "Pathfinding/OnScanStatus.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AstarPath active
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AstarPath*& Pathfinding::NavGraph::dyn_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "active"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AstarPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Util.Guid guid
[[deprecated("Use field access instead!")]] ::Pathfinding::Util::Guid& Pathfinding::NavGraph::dyn_guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_guid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "guid"))->offset;
  return *reinterpret_cast<::Pathfinding::Util::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 initialPenalty
[[deprecated("Use field access instead!")]] uint& Pathfinding::NavGraph::dyn_initialPenalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_initialPenalty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialPenalty"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean open
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavGraph::dyn_open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_open");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "open"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 graphIndex
[[deprecated("Use field access instead!")]] uint& Pathfinding::NavGraph::dyn_graphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_graphIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::NavGraph::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean drawGizmos
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavGraph::dyn_drawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_drawGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean infoScreenOpen
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavGraph::dyn_infoScreenOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_infoScreenOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infoScreenOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Matrix4x4 matrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::NavGraph::dyn_matrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_matrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Matrix4x4 inverseMatrix
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::NavGraph::dyn_inverseMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::dyn_inverseMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inverseMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph.CountNodes
int Pathfinding::NavGraph::CountNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::CountNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.GetNodes
void Pathfinding::NavGraph::GetNodes(::Pathfinding::GraphNodeDelegateCancelable* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, del);
}
// Autogenerated method: Pathfinding.NavGraph.SetMatrix
void Pathfinding::NavGraph::SetMatrix(::UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::SetMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, m);
}
// Autogenerated method: Pathfinding.NavGraph.RelocateNodes
void Pathfinding::NavGraph::RelocateNodes(::UnityEngine::Matrix4x4 oldMatrix, ::UnityEngine::Matrix4x4 newMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::RelocateNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldMatrix, newMatrix);
}
// Autogenerated method: Pathfinding.NavGraph.GetNearest
::Pathfinding::NNInfo Pathfinding::NavGraph::GetNearest(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.NavGraph.GetNearest
::Pathfinding::NNInfo Pathfinding::NavGraph::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.NavGraph.GetNearest
::Pathfinding::NNInfo Pathfinding::NavGraph::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNearest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: Pathfinding.NavGraph.GetNearestForce
::Pathfinding::NNInfo Pathfinding::NavGraph::GetNearestForce(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::GetNearestForce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.NavGraph.Awake
void Pathfinding::NavGraph::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.OnDestroy
void Pathfinding::NavGraph::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.ScanGraph
void Pathfinding::NavGraph::ScanGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::ScanGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.Scan
void Pathfinding::NavGraph::Scan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.ScanInternal
void Pathfinding::NavGraph::ScanInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::ScanInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.ScanInternal
void Pathfinding::NavGraph::ScanInternal(::Pathfinding::OnScanStatus* statusCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statusCallback);
}
// Autogenerated method: Pathfinding.NavGraph.NodeColor
::UnityEngine::Color Pathfinding::NavGraph::NodeColor(::Pathfinding::GraphNode* node, ::Pathfinding::PathHandler* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::NodeColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, node, data);
}
// Autogenerated method: Pathfinding.NavGraph.SerializeExtraInfo
void Pathfinding::NavGraph::SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavGraph.DeserializeExtraInfo
void Pathfinding::NavGraph::DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavGraph.PostDeserialization
void Pathfinding::NavGraph::PostDeserialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::PostDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph.DeserializeSettingsCompatibility
void Pathfinding::NavGraph::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavGraph.InSearchTree
bool Pathfinding::NavGraph::InSearchTree(::Pathfinding::GraphNode* node, ::Pathfinding::Path* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::InSearchTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavGraph", "InSearchTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, path);
}
// Autogenerated method: Pathfinding.NavGraph.OnDrawGizmos
void Pathfinding::NavGraph::OnDrawGizmos(bool drawNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::OnDrawGizmos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, drawNodes);
}
// Autogenerated method: Pathfinding.NavGraph.UnloadGizmoMeshes
void Pathfinding::NavGraph::UnloadGizmoMeshes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::UnloadGizmoMeshes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c__DisplayClass8_0
#include "Pathfinding/NavGraph_--c__DisplayClass8_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& Pathfinding::NavGraph::$$c__DisplayClass8_0::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass8_0::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass8_0.<CountNodes>b__0
bool Pathfinding::NavGraph::$$c__DisplayClass8_0::$CountNodes$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass8_0::<CountNodes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CountNodes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c__DisplayClass13_0
#include "Pathfinding/NavGraph_--c__DisplayClass13_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Matrix4x4 m
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::NavGraph::$$c__DisplayClass13_0::dyn_m() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass13_0::dyn_m");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass13_0.<RelocateNodes>b__0
bool Pathfinding::NavGraph::$$c__DisplayClass13_0::$RelocateNodes$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass13_0::<RelocateNodes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RelocateNodes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c__DisplayClass16_0
#include "Pathfinding/NavGraph_--c__DisplayClass16_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDist
[[deprecated("Use field access instead!")]] float& Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_minDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_minDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode minNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_minNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_minNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minConstDist
[[deprecated("Use field access instead!")]] float& Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_minConstDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_minConstDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minConstDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDistSqr
[[deprecated("Use field access instead!")]] float& Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_maxDistSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_maxDistSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NNConstraint constraint
[[deprecated("Use field access instead!")]] ::Pathfinding::NNConstraint*& Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_constraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_constraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constraint"))->offset;
  return *reinterpret_cast<::Pathfinding::NNConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode minConstNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_minConstNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass16_0::dyn_minConstNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minConstNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass16_0.<GetNearest>b__0
bool Pathfinding::NavGraph::$$c__DisplayClass16_0::$GetNearest$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass16_0::<GetNearest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetNearest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c
#include "Pathfinding/NavGraph_--c.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.NavGraph/<>c <>9
::Pathfinding::NavGraph::$$c* Pathfinding::NavGraph::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Pathfinding::NavGraph::$$c*>("Pathfinding", "NavGraph/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.NavGraph/<>c <>9
void Pathfinding::NavGraph::$$c::_set_$$9(::Pathfinding::NavGraph::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "NavGraph/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.GraphNodeDelegateCancelable <>9__19_0
::Pathfinding::GraphNodeDelegateCancelable* Pathfinding::NavGraph::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Pathfinding::GraphNodeDelegateCancelable*>("Pathfinding", "NavGraph/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.GraphNodeDelegateCancelable <>9__19_0
void Pathfinding::NavGraph::$$c::_set_$$9__19_0(::Pathfinding::GraphNodeDelegateCancelable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Pathfinding", "NavGraph/<>c", "<>9__19_0", value)));
}
// Autogenerated method: Pathfinding.NavGraph/<>c..cctor
void Pathfinding::NavGraph::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavGraph/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.NavGraph/<>c.<OnDestroy>b__19_0
bool Pathfinding::NavGraph::$$c::$OnDestroy$b__19_0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c::<OnDestroy>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnDestroy>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavGraph/<>c__DisplayClass30_0
#include "Pathfinding/NavGraph_--c__DisplayClass30_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.GraphNodeDelegate
#include "Pathfinding/GraphNodeDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode node
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NavGraph::$$c__DisplayClass30_0::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass30_0::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NavGraph <>4__this
[[deprecated("Use field access instead!")]] ::Pathfinding::NavGraph*& Pathfinding::NavGraph::$$c__DisplayClass30_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass30_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Pathfinding::NavGraph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PathHandler data
[[deprecated("Use field access instead!")]] ::Pathfinding::PathHandler*& Pathfinding::NavGraph::$$c__DisplayClass30_0::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass30_0::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::Pathfinding::PathHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNodeDelegate drawConnection
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNodeDelegate*& Pathfinding::NavGraph::$$c__DisplayClass30_0::dyn_drawConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass30_0::dyn_drawConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drawConnection"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNodeDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass30_0.<OnDrawGizmos>b__0
void Pathfinding::NavGraph::$$c__DisplayClass30_0::$OnDrawGizmos$b__0(::Pathfinding::GraphNode* otherNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass30_0::<OnDrawGizmos>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnDrawGizmos>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherNode);
}
// Autogenerated method: Pathfinding.NavGraph/<>c__DisplayClass30_0.<OnDrawGizmos>b__1
bool Pathfinding::NavGraph::$$c__DisplayClass30_0::$OnDrawGizmos$b__1(::Pathfinding::GraphNode* _node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavGraph::$$c__DisplayClass30_0::<OnDrawGizmos>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnDrawGizmos>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphCollision
#include "Pathfinding/GraphCollision.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single RaycastErrorMargin
float Pathfinding::GraphCollision::_get_RaycastErrorMargin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::_get_RaycastErrorMargin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pathfinding", "GraphCollision", "RaycastErrorMargin"));
}
// Autogenerated static field setter
// Set static field: static public System.Single RaycastErrorMargin
void Pathfinding::GraphCollision::_set_RaycastErrorMargin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::_set_RaycastErrorMargin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GraphCollision", "RaycastErrorMargin", value));
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.ColliderType type
[[deprecated("Use field access instead!")]] ::Pathfinding::ColliderType& Pathfinding::GraphCollision::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Pathfinding::ColliderType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single diameter
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_diameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_diameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diameter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single collisionOffset
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_collisionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_collisionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collisionOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.RayDirection rayDirection
[[deprecated("Use field access instead!")]] ::Pathfinding::RayDirection& Pathfinding::GraphCollision::dyn_rayDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_rayDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayDirection"))->offset;
  return *reinterpret_cast<::Pathfinding::RayDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::GraphCollision::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask heightMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::GraphCollision::dyn_heightMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_heightMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fromHeight
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_fromHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_fromHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean thickRaycast
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphCollision::dyn_thickRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_thickRaycast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single thickRaycastDiameter
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_thickRaycastDiameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_thickRaycastDiameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycastDiameter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean unwalkableWhenNoGround
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphCollision::dyn_unwalkableWhenNoGround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_unwalkableWhenNoGround");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unwalkableWhenNoGround"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean use2D
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphCollision::dyn_use2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_use2D");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "use2D"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean collisionCheck
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphCollision::dyn_collisionCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_collisionCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collisionCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean heightCheck
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphCollision::dyn_heightCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_heightCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 up
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphCollision::dyn_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_up");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "up"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 upheight
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GraphCollision::dyn_upheight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_upheight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upheight"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single finalRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_finalRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_finalRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single finalRaycastRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::GraphCollision::dyn_finalRaycastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::dyn_finalRaycastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalRaycastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphCollision.Initialize
void Pathfinding::GraphCollision::Initialize(::UnityEngine::Matrix4x4 matrix, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, matrix, scale);
}
// Autogenerated method: Pathfinding.GraphCollision.Check
bool Pathfinding::GraphCollision::Check(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.GraphCollision.CheckHeight
::UnityEngine::Vector3 Pathfinding::GraphCollision::CheckHeight(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::CheckHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.GraphCollision.CheckHeight
::UnityEngine::Vector3 Pathfinding::GraphCollision::CheckHeight(::UnityEngine::Vector3 position, ByRef<::UnityEngine::RaycastHit> hit, ByRef<bool> walkable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::CheckHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position, byref(hit), byref(walkable));
}
// Autogenerated method: Pathfinding.GraphCollision.Raycast
::UnityEngine::Vector3 Pathfinding::GraphCollision::Raycast(::UnityEngine::Vector3 origin, ByRef<::UnityEngine::RaycastHit> hit, ByRef<bool> walkable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, origin, byref(hit), byref(walkable));
}
// Autogenerated method: Pathfinding.GraphCollision.CheckHeightAll
::ArrayW<::UnityEngine::RaycastHit> Pathfinding::GraphCollision::CheckHeightAll(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::CheckHeightAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHeightAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.GraphCollision.DeserializeSettingsCompatibility
void Pathfinding::GraphCollision::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphCollision::DeserializeSettingsCompatibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSettingsCompatibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.ColliderType
#include "Pathfinding/ColliderType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.ColliderType Sphere
::Pathfinding::ColliderType Pathfinding::ColliderType::_get_Sphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_get_Sphere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ColliderType>("Pathfinding", "ColliderType", "Sphere"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ColliderType Sphere
void Pathfinding::ColliderType::_set_Sphere(::Pathfinding::ColliderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_set_Sphere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ColliderType", "Sphere", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ColliderType Capsule
::Pathfinding::ColliderType Pathfinding::ColliderType::_get_Capsule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_get_Capsule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ColliderType>("Pathfinding", "ColliderType", "Capsule"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ColliderType Capsule
void Pathfinding::ColliderType::_set_Capsule(::Pathfinding::ColliderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_set_Capsule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ColliderType", "Capsule", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.ColliderType Ray
::Pathfinding::ColliderType Pathfinding::ColliderType::_get_Ray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_get_Ray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::ColliderType>("Pathfinding", "ColliderType", "Ray"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.ColliderType Ray
void Pathfinding::ColliderType::_set_Ray(::Pathfinding::ColliderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::_set_Ray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "ColliderType", "Ray", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::ColliderType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ColliderType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.RayDirection
#include "Pathfinding/RayDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.RayDirection Up
::Pathfinding::RayDirection Pathfinding::RayDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RayDirection>("Pathfinding", "RayDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RayDirection Up
void Pathfinding::RayDirection::_set_Up(::Pathfinding::RayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RayDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RayDirection Down
::Pathfinding::RayDirection Pathfinding::RayDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RayDirection>("Pathfinding", "RayDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RayDirection Down
void Pathfinding::RayDirection::_set_Down(::Pathfinding::RayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RayDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.RayDirection Both
::Pathfinding::RayDirection Pathfinding::RayDirection::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RayDirection>("Pathfinding", "RayDirection", "Both"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.RayDirection Both
void Pathfinding::RayDirection::_set_Both(::Pathfinding::RayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RayDirection", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::RayDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RayDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.GridGraph
#include "Pathfinding/GridGraph.hpp"
// Including type: Pathfinding.GraphCollision
#include "Pathfinding/GraphCollision.hpp"
// Including type: Pathfinding.GridNode
#include "Pathfinding/GridNode.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.GraphUpdateShape
#include "Pathfinding/GraphUpdateShape.hpp"
// Including type: Pathfinding.GraphUpdateThreading
#include "Pathfinding/GraphUpdateThreading.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
// Including type: Pathfinding.NNInfo
#include "Pathfinding/NNInfo.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: Pathfinding.OnScanStatus
#include "Pathfinding/OnScanStatus.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] hexagonNeighbourIndices
::ArrayW<int> Pathfinding::GridGraph::_get_hexagonNeighbourIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_get_hexagonNeighbourIndices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding", "GridGraph", "hexagonNeighbourIndices"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] hexagonNeighbourIndices
void Pathfinding::GridGraph::_set_hexagonNeighbourIndices(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_set_hexagonNeighbourIndices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph", "hexagonNeighbourIndices", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 getNearestForceOverlap
int Pathfinding::GridGraph::_get_getNearestForceOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_get_getNearestForceOverlap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridGraph", "getNearestForceOverlap"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 getNearestForceOverlap
void Pathfinding::GridGraph::_set_getNearestForceOverlap(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::_set_getNearestForceOverlap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridGraph", "getNearestForceOverlap", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 depth
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single aspectRatio
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_aspectRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_aspectRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aspectRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single isometricAngle
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_isometricAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_isometricAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isometricAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean uniformEdgeCosts
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_uniformEdgeCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_uniformEdgeCosts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uniformEdgeCosts"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GridGraph::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 center
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::GridGraph::dyn_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "center"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 unclampedSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::GridGraph::dyn_unclampedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_unclampedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unclampedSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nodeSize
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_nodeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_nodeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphCollision collision
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphCollision*& Pathfinding::GridGraph::dyn_collision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_collision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collision"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphCollision**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxClimb
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_maxClimb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_maxClimb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxClimb"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxClimbAxis
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::dyn_maxClimbAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_maxClimbAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxClimbAxis"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSlope
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_maxSlope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_maxSlope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSlope"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 erodeIterations
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::dyn_erodeIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_erodeIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "erodeIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean erosionUseTags
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_erosionUseTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_erosionUseTags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "erosionUseTags"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 erosionFirstTag
[[deprecated("Use field access instead!")]] int& Pathfinding::GridGraph::dyn_erosionFirstTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_erosionFirstTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "erosionFirstTag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoLinkGrids
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_autoLinkGrids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_autoLinkGrids");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoLinkGrids"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single autoLinkDistLimit
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_autoLinkDistLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_autoLinkDistLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoLinkDistLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NumNeighbours neighbours
[[deprecated("Use field access instead!")]] ::Pathfinding::NumNeighbours& Pathfinding::GridGraph::dyn_neighbours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_neighbours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbours"))->offset;
  return *reinterpret_cast<::Pathfinding::NumNeighbours*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cutCorners
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_cutCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_cutCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutCorners"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single penaltyPositionOffset
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_penaltyPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyPositionOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean penaltyPosition
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_penaltyPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single penaltyPositionFactor
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_penaltyPositionFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyPositionFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyPositionFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean penaltyAngle
[[deprecated("Use field access instead!")]] bool& Pathfinding::GridGraph::dyn_penaltyAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyAngle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single penaltyAngleFactor
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_penaltyAngleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyAngleFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyAngleFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single penaltyAnglePower
[[deprecated("Use field access instead!")]] float& Pathfinding::GridGraph::dyn_penaltyAnglePower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_penaltyAnglePower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penaltyAnglePower"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <size>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& Pathfinding::GridGraph::dyn_$size$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_$size$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<size>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] neighbourOffsets
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::GridGraph::dyn_neighbourOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_neighbourOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbourOffsets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32[] neighbourCosts
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Pathfinding::GridGraph::dyn_neighbourCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_neighbourCosts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbourCosts"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] neighbourXOffsets
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::GridGraph::dyn_neighbourXOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_neighbourXOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbourXOffsets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] neighbourZOffsets
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::GridGraph::dyn_neighbourZOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_neighbourZOffsets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neighbourZOffsets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4 <boundsMatrix>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& Pathfinding::GridGraph::dyn_$boundsMatrix$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_$boundsMatrix$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<boundsMatrix>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GridNode[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GridNode*>& Pathfinding::GridGraph::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GridNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GridGraph.RemoveGridGraphFromStatic
void Pathfinding::GridGraph::RemoveGridGraphFromStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::RemoveGridGraphFromStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveGridGraphFromStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.get_uniformWidthDepthGrid
bool Pathfinding::GridGraph::get_uniformWidthDepthGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_uniformWidthDepthGrid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.get_useRaycastNormal
bool Pathfinding::GridGraph::get_useRaycastNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_useRaycastNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useRaycastNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.get_size
::UnityEngine::Vector2 Pathfinding::GridGraph::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.set_size
void Pathfinding::GridGraph::set_size(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridGraph.get_boundsMatrix
::UnityEngine::Matrix4x4 Pathfinding::GridGraph::get_boundsMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_boundsMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_boundsMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.set_boundsMatrix
void Pathfinding::GridGraph::set_boundsMatrix(::UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::set_boundsMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_boundsMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridGraph.RelocateNodes
void Pathfinding::GridGraph::RelocateNodes(::UnityEngine::Vector3 center, ::UnityEngine::Quaternion rotation, float nodeSize, float aspectRatio, float isometricAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::RelocateNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RelocateNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(nodeSize), ::il2cpp_utils::ExtractType(aspectRatio), ::il2cpp_utils::ExtractType(isometricAngle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, center, rotation, nodeSize, aspectRatio, isometricAngle);
}
// Autogenerated method: Pathfinding.GridGraph.GraphPointToWorld
::Pathfinding::Int3 Pathfinding::GridGraph::GraphPointToWorld(int x, int z, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GraphPointToWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphPointToWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, x, z, height);
}
// Autogenerated method: Pathfinding.GridGraph.get_Width
int Pathfinding::GridGraph::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.set_Width
void Pathfinding::GridGraph::set_Width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::set_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridGraph.get_Depth
int Pathfinding::GridGraph::get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::get_Depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.set_Depth
void Pathfinding::GridGraph::set_Depth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::set_Depth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridGraph.GetConnectionCost
uint Pathfinding::GridGraph::GetConnectionCost(int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetConnectionCost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionCost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, dir);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodeConnection
::Pathfinding::GridNode* Pathfinding::GridGraph::GetNodeConnection(::Pathfinding::GridNode* node, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNode*, false>(this, ___internal__method, node, dir);
}
// Autogenerated method: Pathfinding.GridGraph.HasNodeConnection
bool Pathfinding::GridGraph::HasNodeConnection(::Pathfinding::GridNode* node, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::HasNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, dir);
}
// Autogenerated method: Pathfinding.GridGraph.SetNodeConnection
void Pathfinding::GridGraph::SetNodeConnection(::Pathfinding::GridNode* node, int dir, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SetNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, dir, value);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodeConnection
::Pathfinding::GridNode* Pathfinding::GridGraph::GetNodeConnection(int index, int x, int z, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridNode*, false>(this, ___internal__method, index, x, z, dir);
}
// Autogenerated method: Pathfinding.GridGraph.SetNodeConnection
void Pathfinding::GridGraph::SetNodeConnection(int index, int x, int z, int dir, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SetNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, x, z, dir, value);
}
// Autogenerated method: Pathfinding.GridGraph.HasNodeConnection
bool Pathfinding::GridGraph::HasNodeConnection(int index, int x, int z, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::HasNodeConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNodeConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, x, z, dir);
}
// Autogenerated method: Pathfinding.GridGraph.UpdateSizeFromWidthDepth
void Pathfinding::GridGraph::UpdateSizeFromWidthDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::UpdateSizeFromWidthDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSizeFromWidthDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.GenerateMatrix
void Pathfinding::GridGraph::GenerateMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GenerateMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.SetUpOffsetsAndCosts
void Pathfinding::GridGraph::SetUpOffsetsAndCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SetUpOffsetsAndCosts");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.UpdateNodePositionCollision
void Pathfinding::GridGraph::UpdateNodePositionCollision(::Pathfinding::GridNode* node, int x, int z, bool resetPenalty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::UpdateNodePositionCollision");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, x, z, resetPenalty);
}
// Autogenerated method: Pathfinding.GridGraph.ErodeWalkableArea
void Pathfinding::GridGraph::ErodeWalkableArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ErodeWalkableArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.ErosionAnyFalseConnections
bool Pathfinding::GridGraph::ErosionAnyFalseConnections(::Pathfinding::GridNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ErosionAnyFalseConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ErosionAnyFalseConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridGraph.ErodeWalkableArea
void Pathfinding::GridGraph::ErodeWalkableArea(int xmin, int zmin, int xmax, int zmax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ErodeWalkableArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmin, zmin, xmax, zmax);
}
// Autogenerated method: Pathfinding.GridGraph.IsValidConnection
bool Pathfinding::GridGraph::IsValidConnection(::Pathfinding::GridNode* n1, ::Pathfinding::GridNode* n2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::IsValidConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n1, n2);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateConnections
void Pathfinding::GridGraph::CalculateConnections(::Pathfinding::GridNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridGraph", "CalculateConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateConnections
void Pathfinding::GridGraph::CalculateConnections(::ArrayW<::Pathfinding::GridNode*> nodes, int x, int z, ::Pathfinding::GridNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodes, x, z, node);
}
// Autogenerated method: Pathfinding.GridGraph.CalculateConnections
void Pathfinding::GridGraph::CalculateConnections(int x, int z, ::Pathfinding::GridNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CalculateConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, z, node);
}
// Autogenerated method: Pathfinding.GridGraph.OnPostScan
void Pathfinding::GridGraph::OnPostScan(::GlobalNamespace::AstarPath* script) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::OnPostScan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostScan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(script)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, script);
}
// Autogenerated method: Pathfinding.GridGraph.GetBoundsMinMax
void Pathfinding::GridGraph::GetBoundsMinMax(::UnityEngine::Bounds b, ::UnityEngine::Matrix4x4 matrix, ByRef<::UnityEngine::Vector3> min, ByRef<::UnityEngine::Vector3> max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetBoundsMinMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridGraph", "GetBoundsMinMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b, matrix, byref(min), byref(max));
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInArea
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::GetNodesInArea(::UnityEngine::Bounds b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodesInArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, b);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInArea
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::GetNodesInArea(::Pathfinding::GraphUpdateShape* shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodesInArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shape)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, shape);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodesInArea
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::GridGraph::GetNodesInArea(::UnityEngine::Bounds b, ::Pathfinding::GraphUpdateShape* shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodesInArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodesInArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(shape)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(this, ___internal__method, b, shape);
}
// Autogenerated method: Pathfinding.GridGraph.CanUpdateAsync
::Pathfinding::GraphUpdateThreading Pathfinding::GridGraph::CanUpdateAsync(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CanUpdateAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphUpdateThreading, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.GridGraph.UpdateAreaInit
void Pathfinding::GridGraph::UpdateAreaInit(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::UpdateAreaInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.GridGraph.UpdateArea
void Pathfinding::GridGraph::UpdateArea(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::UpdateArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridGraph*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.GridGraph.CheckConnection
bool Pathfinding::GridGraph::CheckConnection(::Pathfinding::GridNode* node, int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CheckConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, dir);
}
// Autogenerated method: Pathfinding.GridGraph..cctor
void Pathfinding::GridGraph::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridGraph", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.OnDestroy
void Pathfinding::GridGraph::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.CountNodes
int Pathfinding::GridGraph::CountNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::CountNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridGraph.GetNodes
void Pathfinding::GridGraph::GetNodes(::Pathfinding::GraphNodeDelegateCancelable* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, del);
}
// Autogenerated method: Pathfinding.GridGraph.GetNearest
::Pathfinding::NNInfo Pathfinding::GridGraph::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNearest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: Pathfinding.GridGraph.GetNearestForce
::Pathfinding::NNInfo Pathfinding::GridGraph::GetNearestForce(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::GetNearestForce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.GridGraph.ScanInternal
void Pathfinding::GridGraph::ScanInternal(::Pathfinding::OnScanStatus* statusCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statusCallback);
}
// Autogenerated method: Pathfinding.GridGraph.OnDrawGizmos
void Pathfinding::GridGraph::OnDrawGizmos(bool drawNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::OnDrawGizmos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, drawNodes);
}
// Autogenerated method: Pathfinding.GridGraph.SerializeExtraInfo
void Pathfinding::GridGraph::SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridGraph.DeserializeExtraInfo
void Pathfinding::GridGraph::DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridGraph.DeserializeSettingsCompatibility
void Pathfinding::GridGraph::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridGraph.PostDeserialization
void Pathfinding::GridGraph::PostDeserialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridGraph::PostDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.NumNeighbours
#include "Pathfinding/NumNeighbours.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.NumNeighbours Four
::Pathfinding::NumNeighbours Pathfinding::NumNeighbours::_get_Four() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_get_Four");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NumNeighbours>("Pathfinding", "NumNeighbours", "Four"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NumNeighbours Four
void Pathfinding::NumNeighbours::_set_Four(::Pathfinding::NumNeighbours value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_set_Four");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NumNeighbours", "Four", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.NumNeighbours Eight
::Pathfinding::NumNeighbours Pathfinding::NumNeighbours::_get_Eight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_get_Eight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NumNeighbours>("Pathfinding", "NumNeighbours", "Eight"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NumNeighbours Eight
void Pathfinding::NumNeighbours::_set_Eight(::Pathfinding::NumNeighbours value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_set_Eight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NumNeighbours", "Eight", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.NumNeighbours Six
::Pathfinding::NumNeighbours Pathfinding::NumNeighbours::_get_Six() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_get_Six");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::NumNeighbours>("Pathfinding", "NumNeighbours", "Six"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.NumNeighbours Six
void Pathfinding::NumNeighbours::_set_Six(::Pathfinding::NumNeighbours value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::_set_Six");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "NumNeighbours", "Six", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::NumNeighbours::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NumNeighbours::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.INavmesh
#include "Pathfinding/INavmesh.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.INavmesh.GetNodes
void Pathfinding::INavmesh::GetNodes(::Pathfinding::GraphNodeDelegateCancelable* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::INavmesh::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::INavmesh*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, del);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavMeshGraph
#include "Pathfinding/NavMeshGraph.hpp"
// Including type: Pathfinding.NavMeshGraph/<>c__DisplayClass29_0
#include "Pathfinding/NavMeshGraph_--c__DisplayClass29_0.hpp"
// Including type: Pathfinding.NavMeshGraph/<>c__DisplayClass33_0
#include "Pathfinding/NavMeshGraph_--c__DisplayClass33_0.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
// Including type: Pathfinding.BBTree
#include "Pathfinding/BBTree.hpp"
// Including type: Pathfinding.NNInfo
#include "Pathfinding/NNInfo.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: Pathfinding.GraphUpdateThreading
#include "Pathfinding/GraphUpdateThreading.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: Pathfinding.OnScanStatus
#include "Pathfinding/OnScanStatus.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh sourceMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& Pathfinding::NavMeshGraph::dyn_sourceMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_sourceMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavMeshGraph::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavMeshGraph::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single scale
[[deprecated("Use field access instead!")]] float& Pathfinding::NavMeshGraph::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean accurateNearestNode
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavMeshGraph::dyn_accurateNearestNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_accurateNearestNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accurateNearestNode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.TriangleMeshNode[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::TriangleMeshNode*>& Pathfinding::NavMeshGraph::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::TriangleMeshNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.BBTree _bbTree
[[deprecated("Use field access instead!")]] ::Pathfinding::BBTree*& Pathfinding::NavMeshGraph::dyn__bbTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn__bbTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bbTree"))->offset;
  return *reinterpret_cast<::Pathfinding::BBTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Int3[] _vertices
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::Int3>& Pathfinding::NavMeshGraph::dyn__vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn__vertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertices"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::Int3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] originalVertices
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& Pathfinding::NavMeshGraph::dyn_originalVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_originalVertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalVertices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] triangles
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::NavMeshGraph::dyn_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::dyn_triangles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triangles"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavMeshGraph.get_TriNodes
::ArrayW<::Pathfinding::TriangleMeshNode*> Pathfinding::NavMeshGraph::get_TriNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::get_TriNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TriNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::TriangleMeshNode*>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GetVertex
::Pathfinding::Int3 Pathfinding::NavMeshGraph::GetVertex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GetVertex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GetVertexArrayIndex
int Pathfinding::NavMeshGraph::GetVertexArrayIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GetVertexArrayIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GetTileCoordinates
void Pathfinding::NavMeshGraph::GetTileCoordinates(int tileIndex, ByRef<int> x, ByRef<int> z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GetTileCoordinates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tileIndex, byref(x), byref(z));
}
// Autogenerated method: Pathfinding.NavMeshGraph.get_bbTree
::Pathfinding::BBTree* Pathfinding::NavMeshGraph::get_bbTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::get_bbTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bbTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::BBTree*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.set_bbTree
void Pathfinding::NavMeshGraph::set_bbTree(::Pathfinding::BBTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::set_bbTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bbTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.NavMeshGraph.get_vertices
::ArrayW<::Pathfinding::Int3> Pathfinding::NavMeshGraph::get_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::get_vertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::Int3>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.set_vertices
void Pathfinding::NavMeshGraph::set_vertices(::ArrayW<::Pathfinding::Int3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::set_vertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GenerateMatrix
void Pathfinding::NavMeshGraph::GenerateMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GenerateMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GetNearest
::Pathfinding::NNInfo Pathfinding::NavMeshGraph::GetNearest(::Pathfinding::NavMeshGraph* graph, ::ArrayW<::Pathfinding::GraphNode*> nodes, ::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, bool accurateNearestNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GetNearest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavMeshGraph", "GetNearest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(accurateNearestNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, nodes, position, constraint, accurateNearestNode);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GetNearestForce
::Pathfinding::NNInfo Pathfinding::NavMeshGraph::GetNearestForce(::Pathfinding::NavGraph* graph, ::Pathfinding::INavmeshHolder* navmesh, ::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, bool accurateNearestNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GetNearestForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavMeshGraph", "GetNearestForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(navmesh), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(accurateNearestNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, navmesh, position, constraint, accurateNearestNode);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GetNearestForceBoth
::Pathfinding::NNInfo Pathfinding::NavMeshGraph::GetNearestForceBoth(::Pathfinding::NavGraph* graph, ::Pathfinding::INavmeshHolder* navmesh, ::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, bool accurateNearestNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GetNearestForceBoth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavMeshGraph", "GetNearestForceBoth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(navmesh), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(accurateNearestNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, navmesh, position, constraint, accurateNearestNode);
}
// Autogenerated method: Pathfinding.NavMeshGraph.CanUpdateAsync
::Pathfinding::GraphUpdateThreading Pathfinding::NavMeshGraph::CanUpdateAsync(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::CanUpdateAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphUpdateThreading, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.NavMeshGraph.UpdateAreaInit
void Pathfinding::NavMeshGraph::UpdateAreaInit(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::UpdateAreaInit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.NavMeshGraph.UpdateArea
void Pathfinding::NavMeshGraph::UpdateArea(::Pathfinding::GraphUpdateObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::UpdateArea");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavMeshGraph*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: Pathfinding.NavMeshGraph.UpdateArea
void Pathfinding::NavMeshGraph::UpdateArea(::Pathfinding::GraphUpdateObject* o, ::Pathfinding::INavmesh* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::UpdateArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavMeshGraph", "UpdateArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o, graph);
}
// Autogenerated method: Pathfinding.NavMeshGraph.ClosestPointOnNode
::UnityEngine::Vector3 Pathfinding::NavMeshGraph::ClosestPointOnNode(::Pathfinding::TriangleMeshNode* node, ::ArrayW<::Pathfinding::Int3> vertices, ::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::ClosestPointOnNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavMeshGraph", "ClosestPointOnNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, vertices, pos);
}
// Autogenerated method: Pathfinding.NavMeshGraph.ContainsPoint
bool Pathfinding::NavMeshGraph::ContainsPoint(::Pathfinding::TriangleMeshNode* node, ::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::ContainsPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, pos);
}
// Autogenerated method: Pathfinding.NavMeshGraph.ContainsPoint
bool Pathfinding::NavMeshGraph::ContainsPoint(::Pathfinding::TriangleMeshNode* node, ::UnityEngine::Vector3 pos, ::ArrayW<::Pathfinding::Int3> vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::ContainsPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavMeshGraph", "ContainsPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(vertices)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, pos, vertices);
}
// Autogenerated method: Pathfinding.NavMeshGraph.ScanInternal
void Pathfinding::NavMeshGraph::ScanInternal(::StringW objMeshPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::ScanInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objMeshPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, objMeshPath);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GenerateNodes
void Pathfinding::NavMeshGraph::GenerateNodes(::ArrayW<::UnityEngine::Vector3> vectorVertices, ::ArrayW<int> triangles, ByRef<::ArrayW<::UnityEngine::Vector3>> originalVertices, ByRef<::ArrayW<::Pathfinding::Int3>> vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GenerateNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vectorVertices), ::il2cpp_utils::ExtractType(triangles), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::Vector3>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::Pathfinding::Int3>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vectorVertices, triangles, byref(originalVertices), byref(vertices));
}
// Autogenerated method: Pathfinding.NavMeshGraph.RebuildBBTree
void Pathfinding::NavMeshGraph::RebuildBBTree(::Pathfinding::NavMeshGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::RebuildBBTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "NavMeshGraph", "RebuildBBTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: Pathfinding.NavMeshGraph.PostProcess
void Pathfinding::NavMeshGraph::PostProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::PostProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GetNodes
void Pathfinding::NavMeshGraph::GetNodes(::Pathfinding::GraphNodeDelegateCancelable* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, del);
}
// Autogenerated method: Pathfinding.NavMeshGraph.OnDestroy
void Pathfinding::NavMeshGraph::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.NavMeshGraph.RelocateNodes
void Pathfinding::NavMeshGraph::RelocateNodes(::UnityEngine::Matrix4x4 oldMatrix, ::UnityEngine::Matrix4x4 newMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::RelocateNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldMatrix, newMatrix);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GetNearest
::Pathfinding::NNInfo Pathfinding::NavMeshGraph::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GetNearest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: Pathfinding.NavMeshGraph.GetNearestForce
::Pathfinding::NNInfo Pathfinding::NavMeshGraph::GetNearestForce(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::GetNearestForce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.NavMeshGraph.ScanInternal
void Pathfinding::NavMeshGraph::ScanInternal(::Pathfinding::OnScanStatus* statusCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statusCallback);
}
// Autogenerated method: Pathfinding.NavMeshGraph.OnDrawGizmos
void Pathfinding::NavMeshGraph::OnDrawGizmos(bool drawNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::OnDrawGizmos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, drawNodes);
}
// Autogenerated method: Pathfinding.NavMeshGraph.DeserializeExtraInfo
void Pathfinding::NavMeshGraph::DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavMeshGraph.SerializeExtraInfo
void Pathfinding::NavMeshGraph::SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.NavMeshGraph.DeserializeSettingsCompatibility
void Pathfinding::NavMeshGraph::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavMeshGraph/<>c__DisplayClass29_0
#include "Pathfinding/NavMeshGraph_--c__DisplayClass29_0.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean accurateNearestNode
[[deprecated("Use field access instead!")]] bool& Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_accurateNearestNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_accurateNearestNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accurateNearestNode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 pos
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode minNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_minNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_minNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDist
[[deprecated("Use field access instead!")]] float& Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_minDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_minDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDistSqr
[[deprecated("Use field access instead!")]] float& Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_maxDistSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_maxDistSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.NNConstraint constraint
[[deprecated("Use field access instead!")]] ::Pathfinding::NNConstraint*& Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_constraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_constraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constraint"))->offset;
  return *reinterpret_cast<::Pathfinding::NNConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode minConstNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_minConstNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_minConstNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minConstNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minConstDist
[[deprecated("Use field access instead!")]] float& Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_minConstDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::dyn_minConstDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minConstDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavMeshGraph/<>c__DisplayClass29_0.<GetNearestForceBoth>b__0
bool Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::$GetNearestForceBoth$b__0(::Pathfinding::GraphNode* _node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass29_0::<GetNearestForceBoth>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetNearestForceBoth>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.NavMeshGraph/<>c__DisplayClass33_0
#include "Pathfinding/NavMeshGraph_--c__DisplayClass33_0.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.IntRect r2
[[deprecated("Use field access instead!")]] ::Pathfinding::IntRect& Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_r2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_r2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r2"))->offset;
  return *reinterpret_cast<::Pathfinding::IntRect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rect r
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 a
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_a");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 b
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 c
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 d
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ymin
[[deprecated("Use field access instead!")]] int& Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_ymin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_ymin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ymin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ymax
[[deprecated("Use field access instead!")]] int& Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_ymax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_ymax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ymax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphUpdateObject o
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphUpdateObject*& Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_o() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::dyn_o");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "o"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphUpdateObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.NavMeshGraph/<>c__DisplayClass33_0.<UpdateArea>b__0
bool Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::$UpdateArea$b__0(::Pathfinding::GraphNode* _node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::<UpdateArea>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateArea>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.GridNode
#include "Pathfinding/GridNode.hpp"
// Including type: Pathfinding.GridGraph
#include "Pathfinding/GridGraph.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.GraphNodeDelegate
#include "Pathfinding/GraphNodeDelegate.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Pathfinding.GridGraph[] _gridGraphs
::ArrayW<::Pathfinding::GridGraph*> Pathfinding::GridNode::_get__gridGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get__gridGraphs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::GridGraph*>>("Pathfinding", "GridNode", "_gridGraphs"));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.GridGraph[] _gridGraphs
void Pathfinding::GridNode::_set__gridGraphs(::ArrayW<::Pathfinding::GridGraph*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set__gridGraphs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "_gridGraphs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsConnectionOffset
int Pathfinding::GridNode::_get_GridFlagsConnectionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get_GridFlagsConnectionOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNode", "GridFlagsConnectionOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsConnectionOffset
void Pathfinding::GridNode::_set_GridFlagsConnectionOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set_GridFlagsConnectionOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "GridFlagsConnectionOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsConnectionBit0
int Pathfinding::GridNode::_get_GridFlagsConnectionBit0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get_GridFlagsConnectionBit0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNode", "GridFlagsConnectionBit0"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsConnectionBit0
void Pathfinding::GridNode::_set_GridFlagsConnectionBit0(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set_GridFlagsConnectionBit0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "GridFlagsConnectionBit0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsConnectionMask
int Pathfinding::GridNode::_get_GridFlagsConnectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get_GridFlagsConnectionMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNode", "GridFlagsConnectionMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsConnectionMask
void Pathfinding::GridNode::_set_GridFlagsConnectionMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set_GridFlagsConnectionMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "GridFlagsConnectionMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsEdgeNodeOffset
int Pathfinding::GridNode::_get_GridFlagsEdgeNodeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get_GridFlagsEdgeNodeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNode", "GridFlagsEdgeNodeOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsEdgeNodeOffset
void Pathfinding::GridNode::_set_GridFlagsEdgeNodeOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set_GridFlagsEdgeNodeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "GridFlagsEdgeNodeOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsEdgeNodeMask
int Pathfinding::GridNode::_get_GridFlagsEdgeNodeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_get_GridFlagsEdgeNodeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNode", "GridFlagsEdgeNodeMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsEdgeNodeMask
void Pathfinding::GridNode::_set_GridFlagsEdgeNodeMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::_set_GridFlagsEdgeNodeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNode", "GridFlagsEdgeNodeMask", value));
}
// Autogenerated method: Pathfinding.GridNode.GetGridGraph
::Pathfinding::GridGraph* Pathfinding::GridNode::GetGridGraph(uint graphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::GetGridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridNode", "GetGridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GridGraph*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex);
}
// Autogenerated method: Pathfinding.GridNode.SetGridGraph
void Pathfinding::GridNode::SetGridGraph(int graphIndex, ::Pathfinding::GridGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::SetGridGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridNode", "SetGridGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex), ::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex, graph);
}
// Autogenerated method: Pathfinding.GridNode.get_InternalGridFlags
uint16_t Pathfinding::GridNode::get_InternalGridFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::get_InternalGridFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalGridFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNode.set_InternalGridFlags
void Pathfinding::GridNode::set_InternalGridFlags(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::set_InternalGridFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InternalGridFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridNode.GetConnectionInternal
bool Pathfinding::GridNode::GetConnectionInternal(int dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::GetConnectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dir);
}
// Autogenerated method: Pathfinding.GridNode.SetConnectionInternal
void Pathfinding::GridNode::SetConnectionInternal(int dir, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::SetConnectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dir, value);
}
// Autogenerated method: Pathfinding.GridNode.SetAllConnectionInternal
void Pathfinding::GridNode::SetAllConnectionInternal(int connections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::SetAllConnectionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllConnectionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connections);
}
// Autogenerated method: Pathfinding.GridNode.ResetConnectionsInternal
void Pathfinding::GridNode::ResetConnectionsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::ResetConnectionsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetConnectionsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNode.get_EdgeNode
bool Pathfinding::GridNode::get_EdgeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::get_EdgeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EdgeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNode.set_EdgeNode
void Pathfinding::GridNode::set_EdgeNode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::set_EdgeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EdgeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridNode.get_XCoordinateInGrid
int Pathfinding::GridNode::get_XCoordinateInGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::get_XCoordinateInGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XCoordinateInGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNode.get_ZCoordinateInGrid
int Pathfinding::GridNode::get_ZCoordinateInGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::get_ZCoordinateInGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ZCoordinateInGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNode.ClosestPointOnNode
::UnityEngine::Vector3 Pathfinding::GridNode::ClosestPointOnNode(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::ClosestPointOnNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPointOnNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.GridNode.ClearConnections
void Pathfinding::GridNode::ClearConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::ClearConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.GridNode.GetConnections
void Pathfinding::GridNode::GetConnections(::Pathfinding::GraphNodeDelegate* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::GetConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, del);
}
// Autogenerated method: Pathfinding.GridNode.GetPortal
bool Pathfinding::GridNode::GetPortal(::Pathfinding::GraphNode* other, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, bool backwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::GetPortal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, left, right, backwards);
}
// Autogenerated method: Pathfinding.GridNode.FloodFill
void Pathfinding::GridNode::FloodFill(::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>* stack, uint region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::FloodFill");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stack, region);
}
// Autogenerated method: Pathfinding.GridNode.UpdateRecursiveG
void Pathfinding::GridNode::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.GridNode.Open
void Pathfinding::GridNode::Open(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GridNodeBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.GridNode.SerializeNode
void Pathfinding::GridNode::SerializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::SerializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridNode.DeserializeNode
void Pathfinding::GridNode::DeserializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::DeserializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridNode..cctor
void Pathfinding::GridNode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridNode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.GridNodeBase
#include "Pathfinding/GridNodeBase.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: Pathfinding.GraphNodeDelegate
#include "Pathfinding/GraphNodeDelegate.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsWalkableErosionOffset
int Pathfinding::GridNodeBase::_get_GridFlagsWalkableErosionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_GridFlagsWalkableErosionOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNodeBase", "GridFlagsWalkableErosionOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsWalkableErosionOffset
void Pathfinding::GridNodeBase::_set_GridFlagsWalkableErosionOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_GridFlagsWalkableErosionOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "GridFlagsWalkableErosionOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsWalkableErosionMask
int Pathfinding::GridNodeBase::_get_GridFlagsWalkableErosionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_GridFlagsWalkableErosionMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNodeBase", "GridFlagsWalkableErosionMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsWalkableErosionMask
void Pathfinding::GridNodeBase::_set_GridFlagsWalkableErosionMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_GridFlagsWalkableErosionMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "GridFlagsWalkableErosionMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsWalkableTmpOffset
int Pathfinding::GridNodeBase::_get_GridFlagsWalkableTmpOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_GridFlagsWalkableTmpOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNodeBase", "GridFlagsWalkableTmpOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsWalkableTmpOffset
void Pathfinding::GridNodeBase::_set_GridFlagsWalkableTmpOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_GridFlagsWalkableTmpOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "GridFlagsWalkableTmpOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 GridFlagsWalkableTmpMask
int Pathfinding::GridNodeBase::_get_GridFlagsWalkableTmpMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_GridFlagsWalkableTmpMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding", "GridNodeBase", "GridFlagsWalkableTmpMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 GridFlagsWalkableTmpMask
void Pathfinding::GridNodeBase::_set_GridFlagsWalkableTmpMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_GridFlagsWalkableTmpMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "GridFlagsWalkableTmpMask", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Version VERSION_3_8_3
::System::Version* Pathfinding::GridNodeBase::_get_VERSION_3_8_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_get_VERSION_3_8_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Pathfinding", "GridNodeBase", "VERSION_3_8_3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Version VERSION_3_8_3
void Pathfinding::GridNodeBase::_set_VERSION_3_8_3(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::_set_VERSION_3_8_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "GridNodeBase", "VERSION_3_8_3", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 nodeInGridIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::GridNodeBase::dyn_nodeInGridIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::dyn_nodeInGridIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeInGridIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.UInt16 gridFlags
[[deprecated("Use field access instead!")]] uint16_t& Pathfinding::GridNodeBase::dyn_gridFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::dyn_gridFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gridFlags"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode[] connections
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::GridNodeBase::dyn_connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::dyn_connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connections"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32[] connectionCosts
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Pathfinding::GridNodeBase::dyn_connectionCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::dyn_connectionCosts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionCosts"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GridNodeBase.get_NodeInGridIndex
int Pathfinding::GridNodeBase::get_NodeInGridIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::get_NodeInGridIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeInGridIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.set_NodeInGridIndex
void Pathfinding::GridNodeBase::set_NodeInGridIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::set_NodeInGridIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NodeInGridIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridNodeBase.get_WalkableErosion
bool Pathfinding::GridNodeBase::get_WalkableErosion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::get_WalkableErosion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WalkableErosion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.set_WalkableErosion
void Pathfinding::GridNodeBase::set_WalkableErosion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::set_WalkableErosion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WalkableErosion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridNodeBase.get_TmpWalkable
bool Pathfinding::GridNodeBase::get_TmpWalkable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::get_TmpWalkable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TmpWalkable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.set_TmpWalkable
void Pathfinding::GridNodeBase::set_TmpWalkable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::set_TmpWalkable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TmpWalkable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.GridNodeBase..cctor
void Pathfinding::GridNodeBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GridNodeBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.GridNodeBase.FloodFill
void Pathfinding::GridNodeBase::FloodFill(::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>* stack, uint region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::FloodFill");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stack, region);
}
// Autogenerated method: Pathfinding.GridNodeBase.ClearConnections
void Pathfinding::GridNodeBase::ClearConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::ClearConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.GridNodeBase.ContainsConnection
bool Pathfinding::GridNodeBase::ContainsConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::ContainsConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridNodeBase.GetConnections
void Pathfinding::GridNodeBase::GetConnections(::Pathfinding::GraphNodeDelegate* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::GetConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, del);
}
// Autogenerated method: Pathfinding.GridNodeBase.UpdateRecursiveG
void Pathfinding::GridNodeBase::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.GridNodeBase.Open
void Pathfinding::GridNodeBase::Open(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.GridNodeBase.AddConnection
void Pathfinding::GridNodeBase::AddConnection(::Pathfinding::GraphNode* node, uint cost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::AddConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, cost);
}
// Autogenerated method: Pathfinding.GridNodeBase.RemoveConnection
void Pathfinding::GridNodeBase::RemoveConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::RemoveConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.GridNodeBase.SerializeReferences
void Pathfinding::GridNodeBase::SerializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::SerializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.GridNodeBase.DeserializeReferences
void Pathfinding::GridNodeBase::DeserializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GridNodeBase::DeserializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.PointNode
#include "Pathfinding/PointNode.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.GraphNodeDelegate
#include "Pathfinding/GraphNodeDelegate.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode[] connections
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::PointNode::dyn_connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::dyn_connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connections"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32[] connectionCosts
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Pathfinding::PointNode::dyn_connectionCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::dyn_connectionCosts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionCosts"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pathfinding::PointNode::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PointNode next
[[deprecated("Use field access instead!")]] ::Pathfinding::PointNode*& Pathfinding::PointNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::Pathfinding::PointNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PointNode.SetPosition
void Pathfinding::PointNode::SetPosition(::Pathfinding::Int3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PointNode.GetConnections
void Pathfinding::PointNode::GetConnections(::Pathfinding::GraphNodeDelegate* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::GetConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, del);
}
// Autogenerated method: Pathfinding.PointNode.ClearConnections
void Pathfinding::PointNode::ClearConnections(bool alsoReverse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::ClearConnections");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alsoReverse);
}
// Autogenerated method: Pathfinding.PointNode.UpdateRecursiveG
void Pathfinding::PointNode::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.PointNode.ContainsConnection
bool Pathfinding::PointNode::ContainsConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::ContainsConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PointNode.AddConnection
void Pathfinding::PointNode::AddConnection(::Pathfinding::GraphNode* node, uint cost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::AddConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, cost);
}
// Autogenerated method: Pathfinding.PointNode.RemoveConnection
void Pathfinding::PointNode::RemoveConnection(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::RemoveConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PointNode.Open
void Pathfinding::PointNode::Open(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.PointNode.SerializeNode
void Pathfinding::PointNode::SerializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::SerializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointNode.DeserializeNode
void Pathfinding::PointNode::DeserializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::DeserializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointNode.SerializeReferences
void Pathfinding::PointNode::SerializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::SerializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointNode.DeserializeReferences
void Pathfinding::PointNode::DeserializeReferences(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointNode::DeserializeReferences");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.INavmeshHolder
#include "Pathfinding/INavmeshHolder.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.INavmeshHolder.GetVertex
::Pathfinding::Int3 Pathfinding::INavmeshHolder::GetVertex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::INavmeshHolder::GetVertex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::INavmeshHolder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.INavmeshHolder.GetVertexArrayIndex
int Pathfinding::INavmeshHolder::GetVertexArrayIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::INavmeshHolder::GetVertexArrayIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::INavmeshHolder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.INavmeshHolder.GetTileCoordinates
void Pathfinding::INavmeshHolder::GetTileCoordinates(int tileIndex, ByRef<int> x, ByRef<int> z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::INavmeshHolder::GetTileCoordinates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::INavmeshHolder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tileIndex, byref(x), byref(z));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.TriangleMeshNode
#include "Pathfinding/TriangleMeshNode.hpp"
// Including type: Pathfinding.INavmeshHolder
#include "Pathfinding/INavmeshHolder.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AstarPath
#include "GlobalNamespace/AstarPath.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.PathHandler
#include "Pathfinding/PathHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected Pathfinding.INavmeshHolder[] _navmeshHolders
::ArrayW<::Pathfinding::INavmeshHolder*> Pathfinding::TriangleMeshNode::_get__navmeshHolders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::_get__navmeshHolders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::INavmeshHolder*>>("Pathfinding", "TriangleMeshNode", "_navmeshHolders"));
}
// Autogenerated static field setter
// Set static field: static protected Pathfinding.INavmeshHolder[] _navmeshHolders
void Pathfinding::TriangleMeshNode::_set__navmeshHolders(::ArrayW<::Pathfinding::INavmeshHolder*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::_set__navmeshHolders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "TriangleMeshNode", "_navmeshHolders", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 v0
[[deprecated("Use field access instead!")]] int& Pathfinding::TriangleMeshNode::dyn_v0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::dyn_v0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v0"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 v1
[[deprecated("Use field access instead!")]] int& Pathfinding::TriangleMeshNode::dyn_v1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::dyn_v1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 v2
[[deprecated("Use field access instead!")]] int& Pathfinding::TriangleMeshNode::dyn_v2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::dyn_v2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetNavmeshHolder
::Pathfinding::INavmeshHolder* Pathfinding::TriangleMeshNode::GetNavmeshHolder(uint graphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetNavmeshHolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "TriangleMeshNode", "GetNavmeshHolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::INavmeshHolder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.SetNavmeshHolder
void Pathfinding::TriangleMeshNode::SetNavmeshHolder(int graphIndex, ::Pathfinding::INavmeshHolder* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::SetNavmeshHolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "TriangleMeshNode", "SetNavmeshHolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphIndex), ::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphIndex, graph);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.UpdatePositionFromVertices
void Pathfinding::TriangleMeshNode::UpdatePositionFromVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::UpdatePositionFromVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePositionFromVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVertexIndex
int Pathfinding::TriangleMeshNode::GetVertexIndex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVertexIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVertexArrayIndex
int Pathfinding::TriangleMeshNode::GetVertexArrayIndex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVertexArrayIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertexArrayIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.SharedEdge
int Pathfinding::TriangleMeshNode::SharedEdge(::Pathfinding::GraphNode* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::SharedEdge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SharedEdge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetPortal
bool Pathfinding::TriangleMeshNode::GetPortal(::Pathfinding::GraphNode* _other, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, bool backwards, ByRef<int> aIndex, ByRef<int> bIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetPortal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPortal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_other), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(backwards), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _other, left, right, backwards, byref(aIndex), byref(bIndex));
}
// Autogenerated method: Pathfinding.TriangleMeshNode..cctor
void Pathfinding::TriangleMeshNode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "TriangleMeshNode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVertex
::Pathfinding::Int3 Pathfinding::TriangleMeshNode::GetVertex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVertex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method, i);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetVertexCount
int Pathfinding::TriangleMeshNode::GetVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetVertexCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.ClosestPointOnNode
::UnityEngine::Vector3 Pathfinding::TriangleMeshNode::ClosestPointOnNode(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::ClosestPointOnNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.ClosestPointOnNodeXZ
::UnityEngine::Vector3 Pathfinding::TriangleMeshNode::ClosestPointOnNodeXZ(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::ClosestPointOnNodeXZ");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.ContainsPoint
bool Pathfinding::TriangleMeshNode::ContainsPoint(::Pathfinding::Int3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::ContainsPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.UpdateRecursiveG
void Pathfinding::TriangleMeshNode::UpdateRecursiveG(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::UpdateRecursiveG");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MeshNode*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.Open
void Pathfinding::TriangleMeshNode::Open(::Pathfinding::Path* path, ::Pathfinding::PathNode* pathNode, ::Pathfinding::PathHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, pathNode, handler);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.GetPortal
bool Pathfinding::TriangleMeshNode::GetPortal(::Pathfinding::GraphNode* _other, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, bool backwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::GetPortal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _other, left, right, backwards);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.SerializeNode
void Pathfinding::TriangleMeshNode::SerializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::SerializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.TriangleMeshNode.DeserializeNode
void Pathfinding::TriangleMeshNode::DeserializeNode(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::TriangleMeshNode::DeserializeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::GraphNode*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.PointGraph
#include "Pathfinding/PointGraph.hpp"
// Including type: Pathfinding.PointGraph/GetNearestHelper
#include "Pathfinding/PointGraph_GetNearestHelper.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Pathfinding.PointNode
#include "Pathfinding/PointNode.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
// Including type: Pathfinding.NNInfo
#include "Pathfinding/NNInfo.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: Pathfinding.OnScanStatus
#include "Pathfinding/OnScanStatus.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::PointGraph::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String searchTag
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::PointGraph::dyn_searchTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_searchTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchTag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDistance
[[deprecated("Use field access instead!")]] float& Pathfinding::PointGraph::dyn_maxDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_maxDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 limits
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::PointGraph::dyn_limits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_limits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "limits"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean raycast
[[deprecated("Use field access instead!")]] bool& Pathfinding::PointGraph::dyn_raycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_raycast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean use2DPhysics
[[deprecated("Use field access instead!")]] bool& Pathfinding::PointGraph::dyn_use2DPhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_use2DPhysics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "use2DPhysics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean thickRaycast
[[deprecated("Use field access instead!")]] bool& Pathfinding::PointGraph::dyn_thickRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_thickRaycast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single thickRaycastRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::PointGraph::dyn_thickRaycastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_thickRaycastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean recursive
[[deprecated("Use field access instead!")]] bool& Pathfinding::PointGraph::dyn_recursive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_recursive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recursive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::PointGraph::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PointNode[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::PointNode*>& Pathfinding::PointGraph::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::PointNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <nodeCount>k__BackingField
[[deprecated("Use field access instead!")]] int& Pathfinding::PointGraph::dyn_$nodeCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::dyn_$nodeCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<nodeCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PointGraph.get_nodeCount
int Pathfinding::PointGraph::get_nodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::get_nodeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nodeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.set_nodeCount
void Pathfinding::PointGraph::set_nodeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::set_nodeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nodeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.PointGraph.AddNode
::Pathfinding::PointNode* Pathfinding::PointGraph::AddNode(::Pathfinding::Int3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::AddNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::PointNode*, false>(this, ___internal__method, position);
}
// Autogenerated method: Pathfinding.PointGraph.CountChildren
int Pathfinding::PointGraph::CountChildren(::UnityEngine::Transform* tr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::CountChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PointGraph", "CountChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tr);
}
// Autogenerated method: Pathfinding.PointGraph.AddChildren
void Pathfinding::PointGraph::AddChildren(ByRef<int> c, ::UnityEngine::Transform* tr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::AddChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(tr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(c), tr);
}
// Autogenerated method: Pathfinding.PointGraph.RebuildNodeLookup
void Pathfinding::PointGraph::RebuildNodeLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::RebuildNodeLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildNodeLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.AddToLookup
void Pathfinding::PointGraph::AddToLookup(::Pathfinding::PointNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::AddToLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PointGraph.IsValidConnection
bool Pathfinding::PointGraph::IsValidConnection(::Pathfinding::GraphNode* a, ::Pathfinding::GraphNode* b, ByRef<float> dist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::IsValidConnection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PointGraph*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, b, byref(dist));
}
// Autogenerated method: Pathfinding.PointGraph.CountNodes
int Pathfinding::PointGraph::CountNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::CountNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.GetNodes
void Pathfinding::PointGraph::GetNodes(::Pathfinding::GraphNodeDelegateCancelable* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, del);
}
// Autogenerated method: Pathfinding.PointGraph.GetNearest
::Pathfinding::NNInfo Pathfinding::PointGraph::GetNearest(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearest");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint, hint);
}
// Autogenerated method: Pathfinding.PointGraph.GetNearestForce
::Pathfinding::NNInfo Pathfinding::PointGraph::GetNearestForce(::UnityEngine::Vector3 position, ::Pathfinding::NNConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestForce");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NNInfo, false>(this, ___internal__method, position, constraint);
}
// Autogenerated method: Pathfinding.PointGraph.ScanInternal
void Pathfinding::PointGraph::ScanInternal(::Pathfinding::OnScanStatus* statusCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::ScanInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statusCallback);
}
// Autogenerated method: Pathfinding.PointGraph.PostDeserialization
void Pathfinding::PointGraph::PostDeserialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::PostDeserialization");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PointGraph.RelocateNodes
void Pathfinding::PointGraph::RelocateNodes(::UnityEngine::Matrix4x4 oldMatrix, ::UnityEngine::Matrix4x4 newMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::RelocateNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldMatrix, newMatrix);
}
// Autogenerated method: Pathfinding.PointGraph.DeserializeSettingsCompatibility
void Pathfinding::PointGraph::DeserializeSettingsCompatibility(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::DeserializeSettingsCompatibility");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointGraph.SerializeExtraInfo
void Pathfinding::PointGraph::SerializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::SerializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Pathfinding.PointGraph.DeserializeExtraInfo
void Pathfinding::PointGraph::DeserializeExtraInfo(::Pathfinding::Serialization::GraphSerializationContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::DeserializeExtraInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::NavGraph*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.PointGraph/GetNearestHelper
#include "Pathfinding/PointGraph_GetNearestHelper.hpp"
// Including type: Pathfinding.PointNode
#include "Pathfinding/PointNode.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::PointGraph::GetNearestHelper::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestHelper::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDist
[[deprecated("Use field access instead!")]] float& Pathfinding::PointGraph::GetNearestHelper::dyn_minDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestHelper::dyn_minDist");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minConstDist
[[deprecated("Use field access instead!")]] float& Pathfinding::PointGraph::GetNearestHelper::dyn_minConstDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestHelper::dyn_minConstDist");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minConstDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDistSqr
[[deprecated("Use field access instead!")]] float& Pathfinding::PointGraph::GetNearestHelper::dyn_maxDistSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestHelper::dyn_maxDistSqr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDistSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PointNode minNode
[[deprecated("Use field access instead!")]] ::Pathfinding::PointNode*& Pathfinding::PointGraph::GetNearestHelper::dyn_minNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestHelper::dyn_minNode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minNode"))->offset;
  return *reinterpret_cast<::Pathfinding::PointNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.PointNode minConstNode
[[deprecated("Use field access instead!")]] ::Pathfinding::PointNode*& Pathfinding::PointGraph::GetNearestHelper::dyn_minConstNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestHelper::dyn_minConstNode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minConstNode"))->offset;
  return *reinterpret_cast<::Pathfinding::PointNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.NNConstraint constraint
[[deprecated("Use field access instead!")]] ::Pathfinding::NNConstraint*& Pathfinding::PointGraph::GetNearestHelper::dyn_constraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestHelper::dyn_constraint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constraint"))->offset;
  return *reinterpret_cast<::Pathfinding::NNConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Pathfinding.Int3,Pathfinding.PointNode> nodeLookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::Int3, ::Pathfinding::PointNode*>*& Pathfinding::PointGraph::GetNearestHelper::dyn_nodeLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestHelper::dyn_nodeLookup");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::Int3, ::Pathfinding::PointNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PointGraph/GetNearestHelper..ctor
Pathfinding::PointGraph::GetNearestHelper::GetNearestHelper(::UnityEngine::Vector3 position, float maxDistSqr, ::Pathfinding::NNConstraint* constraint, ::System::Collections::Generic::Dictionary_2<::Pathfinding::Int3, ::Pathfinding::PointNode*>* nodeLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestHelper::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(maxDistSqr), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(nodeLookup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, maxDistSqr, constraint, nodeLookup);
}
// Autogenerated method: Pathfinding.PointGraph/GetNearestHelper.Search
void Pathfinding::PointGraph::GetNearestHelper::Search(::Pathfinding::Int3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PointGraph::GetNearestHelper::Search");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Search", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.BBTree
#include "Pathfinding/BBTree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.BBTree.OnDrawGizmos
void Pathfinding::BBTree::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.BBTree.OnEnterPool
void Pathfinding::BBTree::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::BBTree::OnEnterPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnterPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.HeuristicOptimizationMode
#include "Pathfinding/HeuristicOptimizationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.HeuristicOptimizationMode None
::Pathfinding::HeuristicOptimizationMode Pathfinding::HeuristicOptimizationMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::HeuristicOptimizationMode>("Pathfinding", "HeuristicOptimizationMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.HeuristicOptimizationMode None
void Pathfinding::HeuristicOptimizationMode::_set_None(::Pathfinding::HeuristicOptimizationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HeuristicOptimizationMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.HeuristicOptimizationMode Random
::Pathfinding::HeuristicOptimizationMode Pathfinding::HeuristicOptimizationMode::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::HeuristicOptimizationMode>("Pathfinding", "HeuristicOptimizationMode", "Random"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.HeuristicOptimizationMode Random
void Pathfinding::HeuristicOptimizationMode::_set_Random(::Pathfinding::HeuristicOptimizationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HeuristicOptimizationMode", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.HeuristicOptimizationMode RandomSpreadOut
::Pathfinding::HeuristicOptimizationMode Pathfinding::HeuristicOptimizationMode::_get_RandomSpreadOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_get_RandomSpreadOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::HeuristicOptimizationMode>("Pathfinding", "HeuristicOptimizationMode", "RandomSpreadOut"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.HeuristicOptimizationMode RandomSpreadOut
void Pathfinding::HeuristicOptimizationMode::_set_RandomSpreadOut(::Pathfinding::HeuristicOptimizationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_set_RandomSpreadOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HeuristicOptimizationMode", "RandomSpreadOut", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.HeuristicOptimizationMode Custom
::Pathfinding::HeuristicOptimizationMode Pathfinding::HeuristicOptimizationMode::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::HeuristicOptimizationMode>("Pathfinding", "HeuristicOptimizationMode", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.HeuristicOptimizationMode Custom
void Pathfinding::HeuristicOptimizationMode::_set_Custom(::Pathfinding::HeuristicOptimizationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "HeuristicOptimizationMode", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::HeuristicOptimizationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::HeuristicOptimizationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.EuclideanEmbedding
#include "Pathfinding/EuclideanEmbedding.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.HeuristicOptimizationMode mode
[[deprecated("Use field access instead!")]] ::Pathfinding::HeuristicOptimizationMode& Pathfinding::EuclideanEmbedding::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::Pathfinding::HeuristicOptimizationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 seed
[[deprecated("Use field access instead!")]] int& Pathfinding::EuclideanEmbedding::dyn_seed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_seed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform pivotPointRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pathfinding::EuclideanEmbedding::dyn_pivotPointRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_pivotPointRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pivotPointRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 spreadOutCount
[[deprecated("Use field access instead!")]] int& Pathfinding::EuclideanEmbedding::dyn_spreadOutCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_spreadOutCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spreadOutCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dirty
[[deprecated("Use field access instead!")]] bool& Pathfinding::EuclideanEmbedding::dyn_dirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::dyn_dirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.EnsureCapacity
void Pathfinding::EuclideanEmbedding::EnsureCapacity(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.GetHeuristic
uint Pathfinding::EuclideanEmbedding::GetHeuristic(int nodeIndex1, int nodeIndex2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::GetHeuristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeuristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeIndex1), ::il2cpp_utils::ExtractType(nodeIndex2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, nodeIndex1, nodeIndex2);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.RecalculatePivots
void Pathfinding::EuclideanEmbedding::RecalculatePivots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::RecalculatePivots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculatePivots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.RecalculateCosts
void Pathfinding::EuclideanEmbedding::RecalculateCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::RecalculateCosts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateCosts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.EuclideanEmbedding.OnDrawGizmos
void Pathfinding::EuclideanEmbedding::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::EuclideanEmbedding::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.ObjImporter
#include "Pathfinding/ObjImporter.hpp"
// Including type: Pathfinding.ObjImporter/meshStruct
#include "Pathfinding/ObjImporter_meshStruct.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.ObjImporter.ImportFile
::UnityEngine::Mesh* Pathfinding::ObjImporter::ImportFile(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ObjImporter::ImportFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ObjImporter", "ImportFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: Pathfinding.ObjImporter.createMeshStruct
::Pathfinding::ObjImporter::meshStruct Pathfinding::ObjImporter::createMeshStruct(::StringW filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ObjImporter::createMeshStruct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ObjImporter", "createMeshStruct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ObjImporter::meshStruct, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename);
}
// Autogenerated method: Pathfinding.ObjImporter.populateMeshStruct
void Pathfinding::ObjImporter::populateMeshStruct(ByRef<::Pathfinding::ObjImporter::meshStruct> mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ObjImporter::populateMeshStruct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ObjImporter", "populateMeshStruct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(mesh));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.AlternativePath
#include "Pathfinding/AlternativePath.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 penalty
[[deprecated("Use field access instead!")]] int& Pathfinding::AlternativePath::dyn_penalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_penalty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "penalty"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 randomStep
[[deprecated("Use field access instead!")]] int& Pathfinding::AlternativePath::dyn_randomStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_randomStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomStep"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphNode[] prevNodes
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::AlternativePath::dyn_prevNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_prevNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevNodes"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 prevSeed
[[deprecated("Use field access instead!")]] int& Pathfinding::AlternativePath::dyn_prevSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_prevSeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevSeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 prevPenalty
[[deprecated("Use field access instead!")]] int& Pathfinding::AlternativePath::dyn_prevPenalty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_prevPenalty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevPenalty"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean waitingForApply
[[deprecated("Use field access instead!")]] bool& Pathfinding::AlternativePath::dyn_waitingForApply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_waitingForApply");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitingForApply"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object lockObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::AlternativePath::dyn_lockObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_lockObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Random rnd
[[deprecated("Use field access instead!")]] ::System::Random*& Pathfinding::AlternativePath::dyn_rnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_rnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rnd"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Random seedGenerator
[[deprecated("Use field access instead!")]] ::System::Random*& Pathfinding::AlternativePath::dyn_seedGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_seedGenerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seedGenerator"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean destroyed
[[deprecated("Use field access instead!")]] bool& Pathfinding::AlternativePath::dyn_destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_destroyed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphNode[] toBeApplied
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::AlternativePath::dyn_toBeApplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::dyn_toBeApplied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toBeApplied"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.AlternativePath.ClearOnDestroy
void Pathfinding::AlternativePath::ClearOnDestroy(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::ClearOnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.AlternativePath.InversePrevious
void Pathfinding::AlternativePath::InversePrevious() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::InversePrevious");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InversePrevious", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AlternativePath.ApplyNow
void Pathfinding::AlternativePath::ApplyNow(::Pathfinding::Path* somePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::ApplyNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(somePath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, somePath);
}
// Autogenerated method: Pathfinding.AlternativePath.get_Order
int Pathfinding::AlternativePath::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.AlternativePath.Apply
void Pathfinding::AlternativePath::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.AlternativePath.OnDestroy
void Pathfinding::AlternativePath::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AlternativePath::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.FunnelModifier
#include "Pathfinding/FunnelModifier.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.FunnelModifier.RunFunnel
bool Pathfinding::FunnelModifier::RunFunnel(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* funnelPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FunnelModifier::RunFunnel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "FunnelModifier", "RunFunnel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(funnelPath)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, funnelPath);
}
// Autogenerated method: Pathfinding.FunnelModifier.get_Order
int Pathfinding::FunnelModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FunnelModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.FunnelModifier.Apply
void Pathfinding::FunnelModifier::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FunnelModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.IPathModifier
#include "Pathfinding/IPathModifier.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.IPathModifier.get_Order
int Pathfinding::IPathModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathModifier*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.IPathModifier.Apply
void Pathfinding::IPathModifier::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.IPathModifier.PreProcess
void Pathfinding::IPathModifier::PreProcess(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::IPathModifier::PreProcess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::IPathModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathModifier
#include "Pathfinding/PathModifier.hpp"
// Including type: Seeker
#include "GlobalNamespace/Seeker.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Seeker seeker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Seeker*& Pathfinding::PathModifier::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathModifier.get_Order
int Pathfinding::PathModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathModifier*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.PathModifier.Awake
void Pathfinding::PathModifier::Awake(::GlobalNamespace::Seeker* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Pathfinding.PathModifier.OnDestroy
void Pathfinding::PathModifier::OnDestroy(::GlobalNamespace::Seeker* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Pathfinding.PathModifier.PreProcess
void Pathfinding::PathModifier::PreProcess(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::PreProcess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathModifier*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.PathModifier.Apply
void Pathfinding::PathModifier::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.MonoModifier
#include "Pathfinding/MonoModifier.hpp"
// Including type: Seeker
#include "GlobalNamespace/Seeker.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Seeker seeker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Seeker*& Pathfinding::MonoModifier::dyn_seeker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::dyn_seeker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seeker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Seeker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.MonoModifier.OnEnable
void Pathfinding::MonoModifier::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MonoModifier.OnDisable
void Pathfinding::MonoModifier::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MonoModifier.get_Order
int Pathfinding::MonoModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MonoModifier.Awake
void Pathfinding::MonoModifier::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MonoModifier.OnDestroy
void Pathfinding::MonoModifier::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.MonoModifier.PreProcess
void Pathfinding::MonoModifier::PreProcess(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::PreProcess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.MonoModifier.Apply
void Pathfinding::MonoModifier::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::MonoModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.RaycastModifier
#include "Pathfinding/RaycastModifier.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> nodes
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::RaycastModifier::_get_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::_get_nodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*>("Pathfinding", "RaycastModifier", "nodes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Vector3> nodes
void Pathfinding::RaycastModifier::_set_nodes(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::_set_nodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RaycastModifier", "nodes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRaycasting
[[deprecated("Use field access instead!")]] bool& Pathfinding::RaycastModifier::dyn_useRaycasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_useRaycasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRaycasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::RaycastModifier::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean thickRaycast
[[deprecated("Use field access instead!")]] bool& Pathfinding::RaycastModifier::dyn_thickRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_thickRaycast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single thickRaycastRadius
[[deprecated("Use field access instead!")]] float& Pathfinding::RaycastModifier::dyn_thickRaycastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_thickRaycastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thickRaycastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 raycastOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RaycastModifier::dyn_raycastOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_raycastOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean subdivideEveryIter
[[deprecated("Use field access instead!")]] bool& Pathfinding::RaycastModifier::dyn_subdivideEveryIter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_subdivideEveryIter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subdivideEveryIter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 iterations
[[deprecated("Use field access instead!")]] int& Pathfinding::RaycastModifier::dyn_iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useGraphRaycasting
[[deprecated("Use field access instead!")]] bool& Pathfinding::RaycastModifier::dyn_useGraphRaycasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::dyn_useGraphRaycasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useGraphRaycasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RaycastModifier.ValidateLine
bool Pathfinding::RaycastModifier::ValidateLine(::Pathfinding::GraphNode* n1, ::Pathfinding::GraphNode* n2, ::UnityEngine::Vector3 v1, ::UnityEngine::Vector3 v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::ValidateLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n1), ::il2cpp_utils::ExtractType(n2), ::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n1, n2, v1, v2);
}
// Autogenerated method: Pathfinding.RaycastModifier.get_Order
int Pathfinding::RaycastModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RaycastModifier.Apply
void Pathfinding::RaycastModifier::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RaycastModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.SimpleSmoothModifier
#include "Pathfinding/SimpleSmoothModifier.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.SimpleSmoothModifier/SmoothType smoothType
[[deprecated("Use field access instead!")]] ::Pathfinding::SimpleSmoothModifier::SmoothType& Pathfinding::SimpleSmoothModifier::dyn_smoothType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_smoothType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothType"))->offset;
  return *reinterpret_cast<::Pathfinding::SimpleSmoothModifier::SmoothType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 subdivisions
[[deprecated("Use field access instead!")]] int& Pathfinding::SimpleSmoothModifier::dyn_subdivisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_subdivisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subdivisions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 iterations
[[deprecated("Use field access instead!")]] int& Pathfinding::SimpleSmoothModifier::dyn_iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strength
[[deprecated("Use field access instead!")]] float& Pathfinding::SimpleSmoothModifier::dyn_strength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_strength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean uniformLength
[[deprecated("Use field access instead!")]] bool& Pathfinding::SimpleSmoothModifier::dyn_uniformLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_uniformLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uniformLength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSegmentLength
[[deprecated("Use field access instead!")]] float& Pathfinding::SimpleSmoothModifier::dyn_maxSegmentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_maxSegmentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSegmentLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bezierTangentLength
[[deprecated("Use field access instead!")]] float& Pathfinding::SimpleSmoothModifier::dyn_bezierTangentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_bezierTangentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bezierTangentLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single offset
[[deprecated("Use field access instead!")]] float& Pathfinding::SimpleSmoothModifier::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single factor
[[deprecated("Use field access instead!")]] float& Pathfinding::SimpleSmoothModifier::dyn_factor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::dyn_factor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "factor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.CurvedNonuniform
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::SimpleSmoothModifier::CurvedNonuniform(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::CurvedNonuniform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurvedNonuniform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.GetPointOnCubic
::UnityEngine::Vector3 Pathfinding::SimpleSmoothModifier::GetPointOnCubic(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 tan1, ::UnityEngine::Vector3 tan2, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::GetPointOnCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "SimpleSmoothModifier", "GetPointOnCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(tan1), ::il2cpp_utils::ExtractType(tan2), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, tan1, tan2, t);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.SmoothOffsetSimple
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::SimpleSmoothModifier::SmoothOffsetSimple(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothOffsetSimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothOffsetSimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.SmoothSimple
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::SimpleSmoothModifier::SmoothSimple(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothSimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothSimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.SmoothBezier
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::SimpleSmoothModifier::SmoothBezier(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothBezier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmoothBezier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(this, ___internal__method, path);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.get_Order
int Pathfinding::SimpleSmoothModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.SimpleSmoothModifier.Apply
void Pathfinding::SimpleSmoothModifier::Apply(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::MonoModifier*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.SimpleSmoothModifier/SmoothType
#include "Pathfinding/SimpleSmoothModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.SimpleSmoothModifier/SmoothType Simple
::Pathfinding::SimpleSmoothModifier::SmoothType Pathfinding::SimpleSmoothModifier::SmoothType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::SimpleSmoothModifier::SmoothType>("Pathfinding", "SimpleSmoothModifier/SmoothType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.SimpleSmoothModifier/SmoothType Simple
void Pathfinding::SimpleSmoothModifier::SmoothType::_set_Simple(::Pathfinding::SimpleSmoothModifier::SmoothType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "SimpleSmoothModifier/SmoothType", "Simple", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.SimpleSmoothModifier/SmoothType Bezier
::Pathfinding::SimpleSmoothModifier::SmoothType Pathfinding::SimpleSmoothModifier::SmoothType::_get_Bezier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_get_Bezier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::SimpleSmoothModifier::SmoothType>("Pathfinding", "SimpleSmoothModifier/SmoothType", "Bezier"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.SimpleSmoothModifier/SmoothType Bezier
void Pathfinding::SimpleSmoothModifier::SmoothType::_set_Bezier(::Pathfinding::SimpleSmoothModifier::SmoothType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_set_Bezier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "SimpleSmoothModifier/SmoothType", "Bezier", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.SimpleSmoothModifier/SmoothType OffsetSimple
::Pathfinding::SimpleSmoothModifier::SmoothType Pathfinding::SimpleSmoothModifier::SmoothType::_get_OffsetSimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_get_OffsetSimple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::SimpleSmoothModifier::SmoothType>("Pathfinding", "SimpleSmoothModifier/SmoothType", "OffsetSimple"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.SimpleSmoothModifier/SmoothType OffsetSimple
void Pathfinding::SimpleSmoothModifier::SmoothType::_set_OffsetSimple(::Pathfinding::SimpleSmoothModifier::SmoothType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_set_OffsetSimple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "SimpleSmoothModifier/SmoothType", "OffsetSimple", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.SimpleSmoothModifier/SmoothType CurvedNonuniform
::Pathfinding::SimpleSmoothModifier::SmoothType Pathfinding::SimpleSmoothModifier::SmoothType::_get_CurvedNonuniform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_get_CurvedNonuniform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::SimpleSmoothModifier::SmoothType>("Pathfinding", "SimpleSmoothModifier/SmoothType", "CurvedNonuniform"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.SimpleSmoothModifier/SmoothType CurvedNonuniform
void Pathfinding::SimpleSmoothModifier::SmoothType::_set_CurvedNonuniform(::Pathfinding::SimpleSmoothModifier::SmoothType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::_set_CurvedNonuniform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "SimpleSmoothModifier/SmoothType", "CurvedNonuniform", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::SimpleSmoothModifier::SmoothType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::SimpleSmoothModifier::SmoothType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.StartEndModifier
#include "Pathfinding/StartEndModifier.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.GraphNodeDelegate
#include "Pathfinding/GraphNodeDelegate.hpp"
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean addPoints
[[deprecated("Use field access instead!")]] bool& Pathfinding::StartEndModifier::dyn_addPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_addPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addPoints"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.StartEndModifier/Exactness exactStartPoint
[[deprecated("Use field access instead!")]] ::Pathfinding::StartEndModifier::Exactness& Pathfinding::StartEndModifier::dyn_exactStartPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_exactStartPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exactStartPoint"))->offset;
  return *reinterpret_cast<::Pathfinding::StartEndModifier::Exactness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.StartEndModifier/Exactness exactEndPoint
[[deprecated("Use field access instead!")]] ::Pathfinding::StartEndModifier::Exactness& Pathfinding::StartEndModifier::dyn_exactEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_exactEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exactEndPoint"))->offset;
  return *reinterpret_cast<::Pathfinding::StartEndModifier::Exactness*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<UnityEngine.Vector3> adjustStartPoint
[[deprecated("Use field access instead!")]] ::System::Func_1<::UnityEngine::Vector3>*& Pathfinding::StartEndModifier::dyn_adjustStartPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_adjustStartPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adjustStartPoint"))->offset;
  return *reinterpret_cast<::System::Func_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRaycasting
[[deprecated("Use field access instead!")]] bool& Pathfinding::StartEndModifier::dyn_useRaycasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_useRaycasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRaycasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask mask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pathfinding::StartEndModifier::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useGraphRaycasting
[[deprecated("Use field access instead!")]] bool& Pathfinding::StartEndModifier::dyn_useGraphRaycasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_useGraphRaycasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useGraphRaycasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.GraphNode> connectionBuffer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::StartEndModifier::dyn_connectionBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_connectionBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionBuffer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.GraphNodeDelegate connectionBufferAddDelegate
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNodeDelegate*& Pathfinding::StartEndModifier::dyn_connectionBufferAddDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::dyn_connectionBufferAddDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionBufferAddDelegate"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNodeDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.StartEndModifier.Snap
::UnityEngine::Vector3 Pathfinding::StartEndModifier::Snap(::Pathfinding::ABPath* path, ::Pathfinding::StartEndModifier::Exactness mode, bool start, ByRef<bool> forceAddPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Snap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Snap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, path, mode, start, byref(forceAddPoint));
}
// Autogenerated method: Pathfinding.StartEndModifier.GetClampedPoint
::UnityEngine::Vector3 Pathfinding::StartEndModifier::GetClampedPoint(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ::Pathfinding::GraphNode* hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::GetClampedPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClampedPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, from, to, hint);
}
// Autogenerated method: Pathfinding.StartEndModifier.get_Order
int Pathfinding::StartEndModifier::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::get_Order");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathModifier*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.StartEndModifier.Apply
void Pathfinding::StartEndModifier::Apply(::Pathfinding::Path* _p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::PathModifier*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.StartEndModifier/Exactness
#include "Pathfinding/StartEndModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.StartEndModifier/Exactness SnapToNode
::Pathfinding::StartEndModifier::Exactness Pathfinding::StartEndModifier::Exactness::_get_SnapToNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_get_SnapToNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::StartEndModifier::Exactness>("Pathfinding", "StartEndModifier/Exactness", "SnapToNode"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.StartEndModifier/Exactness SnapToNode
void Pathfinding::StartEndModifier::Exactness::_set_SnapToNode(::Pathfinding::StartEndModifier::Exactness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_set_SnapToNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "StartEndModifier/Exactness", "SnapToNode", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.StartEndModifier/Exactness Original
::Pathfinding::StartEndModifier::Exactness Pathfinding::StartEndModifier::Exactness::_get_Original() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_get_Original");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::StartEndModifier::Exactness>("Pathfinding", "StartEndModifier/Exactness", "Original"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.StartEndModifier/Exactness Original
void Pathfinding::StartEndModifier::Exactness::_set_Original(::Pathfinding::StartEndModifier::Exactness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_set_Original");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "StartEndModifier/Exactness", "Original", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.StartEndModifier/Exactness Interpolate
::Pathfinding::StartEndModifier::Exactness Pathfinding::StartEndModifier::Exactness::_get_Interpolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_get_Interpolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::StartEndModifier::Exactness>("Pathfinding", "StartEndModifier/Exactness", "Interpolate"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.StartEndModifier/Exactness Interpolate
void Pathfinding::StartEndModifier::Exactness::_set_Interpolate(::Pathfinding::StartEndModifier::Exactness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_set_Interpolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "StartEndModifier/Exactness", "Interpolate", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.StartEndModifier/Exactness ClosestOnNode
::Pathfinding::StartEndModifier::Exactness Pathfinding::StartEndModifier::Exactness::_get_ClosestOnNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_get_ClosestOnNode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::StartEndModifier::Exactness>("Pathfinding", "StartEndModifier/Exactness", "ClosestOnNode"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.StartEndModifier/Exactness ClosestOnNode
void Pathfinding::StartEndModifier::Exactness::_set_ClosestOnNode(::Pathfinding::StartEndModifier::Exactness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_set_ClosestOnNode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "StartEndModifier/Exactness", "ClosestOnNode", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.StartEndModifier/Exactness NodeConnection
::Pathfinding::StartEndModifier::Exactness Pathfinding::StartEndModifier::Exactness::_get_NodeConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_get_NodeConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::StartEndModifier::Exactness>("Pathfinding", "StartEndModifier/Exactness", "NodeConnection"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.StartEndModifier/Exactness NodeConnection
void Pathfinding::StartEndModifier::Exactness::_set_NodeConnection(::Pathfinding::StartEndModifier::Exactness value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::_set_NodeConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "StartEndModifier/Exactness", "NodeConnection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::StartEndModifier::Exactness::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::StartEndModifier::Exactness::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.RelevantGraphSurface
#include "Pathfinding/RelevantGraphSurface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Pathfinding.RelevantGraphSurface root
::Pathfinding::RelevantGraphSurface* Pathfinding::RelevantGraphSurface::_get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::_get_root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::RelevantGraphSurface*>("Pathfinding", "RelevantGraphSurface", "root"));
}
// Autogenerated static field setter
// Set static field: static private Pathfinding.RelevantGraphSurface root
void Pathfinding::RelevantGraphSurface::_set_root(::Pathfinding::RelevantGraphSurface* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::_set_root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "RelevantGraphSurface", "root", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxRange
[[deprecated("Use field access instead!")]] float& Pathfinding::RelevantGraphSurface::dyn_maxRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::dyn_maxRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RelevantGraphSurface prev
[[deprecated("Use field access instead!")]] ::Pathfinding::RelevantGraphSurface*& Pathfinding::RelevantGraphSurface::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::dyn_prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<::Pathfinding::RelevantGraphSurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.RelevantGraphSurface next
[[deprecated("Use field access instead!")]] ::Pathfinding::RelevantGraphSurface*& Pathfinding::RelevantGraphSurface::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::Pathfinding::RelevantGraphSurface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::RelevantGraphSurface::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.get_Position
::UnityEngine::Vector3 Pathfinding::RelevantGraphSurface::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.get_Next
::Pathfinding::RelevantGraphSurface* Pathfinding::RelevantGraphSurface::get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::get_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RelevantGraphSurface*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.get_Prev
::Pathfinding::RelevantGraphSurface* Pathfinding::RelevantGraphSurface::get_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::get_Prev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RelevantGraphSurface*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.get_Root
::Pathfinding::RelevantGraphSurface* Pathfinding::RelevantGraphSurface::get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::get_Root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RelevantGraphSurface", "get_Root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::RelevantGraphSurface*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.UpdatePosition
void Pathfinding::RelevantGraphSurface::UpdatePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::UpdatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.OnEnable
void Pathfinding::RelevantGraphSurface::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.OnDisable
void Pathfinding::RelevantGraphSurface::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.UpdateAllPositions
void Pathfinding::RelevantGraphSurface::UpdateAllPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::UpdateAllPositions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RelevantGraphSurface", "UpdateAllPositions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.FindAllGraphSurfaces
void Pathfinding::RelevantGraphSurface::FindAllGraphSurfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::FindAllGraphSurfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "RelevantGraphSurface", "FindAllGraphSurfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.OnDrawGizmos
void Pathfinding::RelevantGraphSurface::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.RelevantGraphSurface.OnDrawGizmosSelected
void Pathfinding::RelevantGraphSurface::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::RelevantGraphSurface::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.ABPath
#include "Pathfinding/ABPath.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.PathNode
#include "Pathfinding/PathNode.hpp"
// Including type: Pathfinding.OnPathDelegate
#include "Pathfinding/OnPathDelegate.hpp"
// Including type: Pathfinding.PathLog
#include "Pathfinding/PathLog.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean recalcStartEndCosts
[[deprecated("Use field access instead!")]] bool& Pathfinding::ABPath::dyn_recalcStartEndCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_recalcStartEndCosts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recalcStartEndCosts"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode startNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::ABPath::dyn_startNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_startNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode endNode
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::ABPath::dyn_endNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_endNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endNode"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode startHint
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::ABPath::dyn_startHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_startHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startHint"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode endHint
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNode*& Pathfinding::ABPath::dyn_endHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_endHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endHint"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 originalStartPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::ABPath::dyn_originalStartPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_originalStartPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalStartPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 originalEndPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::ABPath::dyn_originalEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_originalEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalEndPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::ABPath::dyn_startPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_startPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 endPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pathfinding::ABPath::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Int3 startIntPoint
[[deprecated("Use field access instead!")]] ::Pathfinding::Int3& Pathfinding::ABPath::dyn_startIntPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_startIntPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startIntPoint"))->offset;
  return *reinterpret_cast<::Pathfinding::Int3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean calculatePartial
[[deprecated("Use field access instead!")]] bool& Pathfinding::ABPath::dyn_calculatePartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_calculatePartial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calculatePartial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Pathfinding.PathNode partialBestTarget
[[deprecated("Use field access instead!")]] ::Pathfinding::PathNode*& Pathfinding::ABPath::dyn_partialBestTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_partialBestTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partialBestTarget"))->offset;
  return *reinterpret_cast<::Pathfinding::PathNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32[] endNodeCosts
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::ABPath::dyn_endNodeCosts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::dyn_endNodeCosts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endNodeCosts"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.ABPath.get_hasEndPoint
bool Pathfinding::ABPath::get_hasEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::get_hasEndPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.Construct
::Pathfinding::ABPath* Pathfinding::ABPath::Construct(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::OnPathDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "ABPath", "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::ABPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, callback);
}
// Autogenerated method: Pathfinding.ABPath.Setup
void Pathfinding::ABPath::Setup(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, ::Pathfinding::OnPathDelegate* callbackDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(callbackDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, callbackDelegate);
}
// Autogenerated method: Pathfinding.ABPath.UpdateStartEnd
void Pathfinding::ABPath::UpdateStartEnd(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::UpdateStartEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStartEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end);
}
// Autogenerated method: Pathfinding.ABPath.CompletePathIfStartIsValidTarget
void Pathfinding::ABPath::CompletePathIfStartIsValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::CompletePathIfStartIsValidTarget");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::ABPath*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.ResetCosts
void Pathfinding::ABPath::ResetCosts(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::ResetCosts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetCosts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.ABPath.GetMovementVector
::UnityEngine::Vector3 Pathfinding::ABPath::GetMovementVector(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::GetMovementVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMovementVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: Pathfinding.ABPath.GetConnectionSpecialCost
uint Pathfinding::ABPath::GetConnectionSpecialCost(::Pathfinding::GraphNode* a, ::Pathfinding::GraphNode* b, uint currentCost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::GetConnectionSpecialCost");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 5));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, a, b, currentCost);
}
// Autogenerated method: Pathfinding.ABPath.Reset
void Pathfinding::ABPath::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.Prepare
void Pathfinding::ABPath::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Prepare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.Initialize
void Pathfinding::ABPath::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.Cleanup
void Pathfinding::ABPath::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::Cleanup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.ABPath.CalculateStep
void Pathfinding::ABPath::CalculateStep(int64_t targetTick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::CalculateStep");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetTick);
}
// Autogenerated method: Pathfinding.ABPath.DebugString
::StringW Pathfinding::ABPath::DebugString(::Pathfinding::PathLog logMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::ABPath::DebugString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Path*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, logMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarProfiler
#include "Pathfinding/AstarProfiler.hpp"
// Including type: Pathfinding.AstarProfiler/ProfilePoint
#include "Pathfinding/AstarProfiler_ProfilePoint.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,Pathfinding.AstarProfiler/ProfilePoint> profiles
::System::Collections::Generic::Dictionary_2<::StringW, ::Pathfinding::AstarProfiler::ProfilePoint*>* Pathfinding::AstarProfiler::_get_profiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_get_profiles");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::Pathfinding::AstarProfiler::ProfilePoint*>*>("Pathfinding", "AstarProfiler", "profiles")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,Pathfinding.AstarProfiler/ProfilePoint> profiles
void Pathfinding::AstarProfiler::_set_profiles(::System::Collections::Generic::Dictionary_2<::StringW, ::Pathfinding::AstarProfiler::ProfilePoint*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_set_profiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarProfiler", "profiles", value));
}
// Autogenerated static field getter
// Get static field: static private System.DateTime startTime
::System::DateTime Pathfinding::AstarProfiler::_get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_get_startTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("Pathfinding", "AstarProfiler", "startTime"));
}
// Autogenerated static field setter
// Set static field: static private System.DateTime startTime
void Pathfinding::AstarProfiler::_set_startTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_set_startTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarProfiler", "startTime", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.AstarProfiler/ProfilePoint[] fastProfiles
::ArrayW<::Pathfinding::AstarProfiler::ProfilePoint*> Pathfinding::AstarProfiler::_get_fastProfiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_get_fastProfiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::AstarProfiler::ProfilePoint*>>("Pathfinding", "AstarProfiler", "fastProfiles"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.AstarProfiler/ProfilePoint[] fastProfiles
void Pathfinding::AstarProfiler::_set_fastProfiles(::ArrayW<::Pathfinding::AstarProfiler::ProfilePoint*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_set_fastProfiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarProfiler", "fastProfiles", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] fastProfileNames
::ArrayW<::StringW> Pathfinding::AstarProfiler::_get_fastProfileNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_get_fastProfileNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Pathfinding", "AstarProfiler", "fastProfileNames"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] fastProfileNames
void Pathfinding::AstarProfiler::_set_fastProfileNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::_set_fastProfileNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "AstarProfiler", "fastProfileNames", value));
}
// Autogenerated method: Pathfinding.AstarProfiler.InitializeFastProfile
void Pathfinding::AstarProfiler::InitializeFastProfile(::ArrayW<::StringW> profileNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::InitializeFastProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "InitializeFastProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(profileNames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, profileNames);
}
// Autogenerated method: Pathfinding.AstarProfiler.StartFastProfile
void Pathfinding::AstarProfiler::StartFastProfile(int tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::StartFastProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "StartFastProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Pathfinding.AstarProfiler.EndFastProfile
void Pathfinding::AstarProfiler::EndFastProfile(int tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::EndFastProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "EndFastProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Pathfinding.AstarProfiler.EndProfile
void Pathfinding::AstarProfiler::EndProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::EndProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "EndProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarProfiler.StartProfile
void Pathfinding::AstarProfiler::StartProfile(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::StartProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "StartProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Pathfinding.AstarProfiler.EndProfile
void Pathfinding::AstarProfiler::EndProfile(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::EndProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "EndProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Pathfinding.AstarProfiler.Reset
void Pathfinding::AstarProfiler::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarProfiler.PrintFastResults
void Pathfinding::AstarProfiler::PrintFastResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::PrintFastResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "PrintFastResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarProfiler.PrintResults
void Pathfinding::AstarProfiler::PrintResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::PrintResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", "PrintResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.AstarProfiler..cctor
void Pathfinding::AstarProfiler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "AstarProfiler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.AstarProfiler/ProfilePoint
#include "Pathfinding/AstarProfiler_ProfilePoint.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Diagnostics.Stopwatch watch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Pathfinding::AstarProfiler::ProfilePoint::dyn_watch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::ProfilePoint::dyn_watch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 totalCalls
[[deprecated("Use field access instead!")]] int& Pathfinding::AstarProfiler::ProfilePoint::dyn_totalCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::ProfilePoint::dyn_totalCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalCalls"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 tmpBytes
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::AstarProfiler::ProfilePoint::dyn_tmpBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::ProfilePoint::dyn_tmpBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmpBytes"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 totalBytes
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::AstarProfiler::ProfilePoint::dyn_totalBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AstarProfiler::ProfilePoint::dyn_totalBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalBytes"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUpdateUtilities
#include "Pathfinding/GraphUpdateUtilities.hpp"
// Including type: Pathfinding.GraphUpdateUtilities/<>c__DisplayClass1_0
#include "Pathfinding/GraphUpdateUtilities_--c__DisplayClass1_0.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.GraphUpdateUtilities.UpdateGraphsNoBlock
bool Pathfinding::GraphUpdateUtilities::UpdateGraphsNoBlock(::Pathfinding::GraphUpdateObject* guo, ::Pathfinding::GraphNode* node1, ::Pathfinding::GraphNode* node2, bool alwaysRevert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateUtilities::UpdateGraphsNoBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphUpdateUtilities", "UpdateGraphsNoBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guo), ::il2cpp_utils::ExtractType(node1), ::il2cpp_utils::ExtractType(node2), ::il2cpp_utils::ExtractType(alwaysRevert)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guo, node1, node2, alwaysRevert);
}
// Autogenerated method: Pathfinding.GraphUpdateUtilities.UpdateGraphsNoBlock
bool Pathfinding::GraphUpdateUtilities::UpdateGraphsNoBlock(::Pathfinding::GraphUpdateObject* guo, ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes, bool alwaysRevert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateUtilities::UpdateGraphsNoBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "GraphUpdateUtilities", "UpdateGraphsNoBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guo), ::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(alwaysRevert)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, guo, nodes, alwaysRevert);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.GraphUpdateUtilities/<>c__DisplayClass1_0
#include "Pathfinding/GraphUpdateUtilities_--c__DisplayClass1_0.hpp"
// Including type: Pathfinding.GraphUpdateObject
#include "Pathfinding/GraphUpdateObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphUpdateObject guo
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphUpdateObject*& Pathfinding::GraphUpdateUtilities::$$c__DisplayClass1_0::dyn_guo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateUtilities::$$c__DisplayClass1_0::dyn_guo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "guo"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphUpdateObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean worked
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateUtilities::$$c__DisplayClass1_0::dyn_worked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateUtilities::$$c__DisplayClass1_0::dyn_worked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> nodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::GraphUpdateUtilities::$$c__DisplayClass1_0::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateUtilities::$$c__DisplayClass1_0::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean alwaysRevert
[[deprecated("Use field access instead!")]] bool& Pathfinding::GraphUpdateUtilities::$$c__DisplayClass1_0::dyn_alwaysRevert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateUtilities::$$c__DisplayClass1_0::dyn_alwaysRevert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alwaysRevert"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.GraphUpdateUtilities/<>c__DisplayClass1_0.<UpdateGraphsNoBlock>b__0
void Pathfinding::GraphUpdateUtilities::$$c__DisplayClass1_0::$UpdateGraphsNoBlock$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::GraphUpdateUtilities::$$c__DisplayClass1_0::<UpdateGraphsNoBlock>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateGraphsNoBlock>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathUtilities
#include "Pathfinding/PathUtilities.hpp"
// Including type: Pathfinding.PathUtilities/<>c__DisplayClass3_0
#include "Pathfinding/PathUtilities_--c__DisplayClass3_0.hpp"
// Including type: Pathfinding.PathUtilities/<>c__DisplayClass6_0
#include "Pathfinding/PathUtilities_--c__DisplayClass6_0.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.IRaycastableGraph
#include "Pathfinding/IRaycastableGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Queue`1<Pathfinding.GraphNode> BFSQueue
::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>* Pathfinding::PathUtilities::_get_BFSQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::_get_BFSQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>*>("Pathfinding", "PathUtilities", "BFSQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Queue`1<Pathfinding.GraphNode> BFSQueue
void Pathfinding::PathUtilities::_set_BFSQueue(::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::_set_BFSQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathUtilities", "BFSQueue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,System.Int32> BFSMap
::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, int>* Pathfinding::PathUtilities::_get_BFSMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::_get_BFSMap");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, int>*>("Pathfinding", "PathUtilities", "BFSMap")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,System.Int32> BFSMap
void Pathfinding::PathUtilities::_set_BFSMap(::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::_set_BFSMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "PathUtilities", "BFSMap", value));
}
// Autogenerated method: Pathfinding.PathUtilities.IsPathPossible
bool Pathfinding::PathUtilities::IsPathPossible(::Pathfinding::GraphNode* n1, ::Pathfinding::GraphNode* n2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::IsPathPossible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "IsPathPossible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n1), ::il2cpp_utils::ExtractType(n2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n1, n2);
}
// Autogenerated method: Pathfinding.PathUtilities.IsPathPossible
bool Pathfinding::PathUtilities::IsPathPossible(::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::IsPathPossible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "IsPathPossible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodes);
}
// Autogenerated method: Pathfinding.PathUtilities.IsPathPossible
bool Pathfinding::PathUtilities::IsPathPossible(::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes, int tagMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::IsPathPossible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "IsPathPossible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(tagMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodes, tagMask);
}
// Autogenerated method: Pathfinding.PathUtilities.GetReachableNodes
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::PathUtilities::GetReachableNodes(::Pathfinding::GraphNode* seed, int tagMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::GetReachableNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "GetReachableNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(tagMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seed, tagMask);
}
// Autogenerated method: Pathfinding.PathUtilities.BFS
::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* Pathfinding::PathUtilities::BFS(::Pathfinding::GraphNode* seed, int depth, int tagMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::BFS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "BFS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(tagMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seed, depth, tagMask);
}
// Autogenerated method: Pathfinding.PathUtilities.GetSpiralPoints
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::PathUtilities::GetSpiralPoints(int count, float clearance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::GetSpiralPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "GetSpiralPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(clearance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count, clearance);
}
// Autogenerated method: Pathfinding.PathUtilities.InvoluteOfCircle
::UnityEngine::Vector3 Pathfinding::PathUtilities::InvoluteOfCircle(float a, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::InvoluteOfCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "InvoluteOfCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, t);
}
// Autogenerated method: Pathfinding.PathUtilities.GetPointsAroundPointWorld
void Pathfinding::PathUtilities::GetPointsAroundPointWorld(::UnityEngine::Vector3 p, ::Pathfinding::IRaycastableGraph* g, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* previousPoints, float radius, float clearanceRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::GetPointsAroundPointWorld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "GetPointsAroundPointWorld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(previousPoints), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(clearanceRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, g, previousPoints, radius, clearanceRadius);
}
// Autogenerated method: Pathfinding.PathUtilities.GetPointsAroundPoint
void Pathfinding::PathUtilities::GetPointsAroundPoint(::UnityEngine::Vector3 p, ::Pathfinding::IRaycastableGraph* g, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* previousPoints, float radius, float clearanceRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::GetPointsAroundPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "GetPointsAroundPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(previousPoints), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(clearanceRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, g, previousPoints, radius, clearanceRadius);
}
// Autogenerated method: Pathfinding.PathUtilities.GetPointsOnNodes
::System::Collections::Generic::List_1<::UnityEngine::Vector3>* Pathfinding::PathUtilities::GetPointsOnNodes(::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>* nodes, int count, float clearanceRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::GetPointsOnNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding", "PathUtilities", "GetPointsOnNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(clearanceRadius)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodes, count, clearanceRadius);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathUtilities/<>c__DisplayClass3_0
#include "Pathfinding/PathUtilities_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.HashSet`1<Pathfinding.GraphNode> map
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Pathfinding::GraphNode*>*& Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_map");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "map"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> list
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Stack`1<Pathfinding.GraphNode> stack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>*& Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tagMask
[[deprecated("Use field access instead!")]] int& Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_tagMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::dyn_tagMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathUtilities/<>c__DisplayClass3_0.<GetReachableNodes>b__0
void Pathfinding::PathUtilities::$$c__DisplayClass3_0::$GetReachableNodes$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::<GetReachableNodes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetReachableNodes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathUtilities/<>c__DisplayClass3_0.<GetReachableNodes>b__1
void Pathfinding::PathUtilities::$$c__DisplayClass3_0::$GetReachableNodes$b__1(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass3_0::<GetReachableNodes>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetReachableNodes>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.PathUtilities/<>c__DisplayClass6_0
#include "Pathfinding/PathUtilities_--c__DisplayClass6_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<Pathfinding.GraphNode,System.Int32> map
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, int>*& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_map");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "map"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::GraphNode*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentDist
[[deprecated("Use field access instead!")]] int& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_currentDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_currentDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDist"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pathfinding.GraphNode> result
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>*& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Queue`1<Pathfinding.GraphNode> que
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>*& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_que() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_que");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "que"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::Pathfinding::GraphNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tagMask
[[deprecated("Use field access instead!")]] int& Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_tagMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::dyn_tagMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.PathUtilities/<>c__DisplayClass6_0.<BFS>b__0
void Pathfinding::PathUtilities::$$c__DisplayClass6_0::$BFS$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::<BFS>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BFS>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.PathUtilities/<>c__DisplayClass6_0.<BFS>b__1
void Pathfinding::PathUtilities::$$c__DisplayClass6_0::$BFS$b__1(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathUtilities::$$c__DisplayClass6_0::<BFS>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BFS>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Profile
#include "Pathfinding/Profile.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean PROFILE_MEM
bool Pathfinding::Profile::_get_PROFILE_MEM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::_get_PROFILE_MEM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Pathfinding", "Profile", "PROFILE_MEM"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean PROFILE_MEM
void Pathfinding::Profile::_set_PROFILE_MEM(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::_set_PROFILE_MEM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Profile", "PROFILE_MEM", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean dontCountFirst
bool Pathfinding::Profile::_get_dontCountFirst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::_get_dontCountFirst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Pathfinding", "Profile", "dontCountFirst"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean dontCountFirst
void Pathfinding::Profile::_set_dontCountFirst(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::_set_dontCountFirst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding", "Profile", "dontCountFirst", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Profile::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Stopwatch watch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& Pathfinding::Profile::dyn_watch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_watch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 counter
[[deprecated("Use field access instead!")]] int& Pathfinding::Profile::dyn_counter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_counter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 mem
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Profile::dyn_mem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_mem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mem"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 smem
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Profile::dyn_smem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_smem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smem"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 control
[[deprecated("Use field access instead!")]] int& Pathfinding::Profile::dyn_control() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::dyn_control");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "control"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Profile.ControlValue
int Pathfinding::Profile::ControlValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::ControlValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ControlValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Profile.Start
void Pathfinding::Profile::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Profile.Stop
void Pathfinding::Profile::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Profile.Log
void Pathfinding::Profile::Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Profile.ConsoleLog
void Pathfinding::Profile::ConsoleLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::ConsoleLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsoleLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Profile.Stop
void Pathfinding::Profile::Stop(int control) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(control)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, control);
}
// Autogenerated method: Pathfinding.Profile.Control
void Pathfinding::Profile::Control(::Pathfinding::Profile* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::Control");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Control", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: Pathfinding.Profile.ToString
::StringW Pathfinding::Profile::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Profile::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.UnityReferenceHelper
#include "Pathfinding/UnityReferenceHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String guid
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::UnityReferenceHelper::dyn_guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::UnityReferenceHelper::dyn_guid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "guid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.UnityReferenceHelper.GetGUID
::StringW Pathfinding::UnityReferenceHelper::GetGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::UnityReferenceHelper::GetGUID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.UnityReferenceHelper.Awake
void Pathfinding::UnityReferenceHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::UnityReferenceHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.UnityReferenceHelper.Reset
void Pathfinding::UnityReferenceHelper::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::UnityReferenceHelper::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: Pathfinding.Serialization.GraphMeta
#include "Pathfinding/Serialization/GraphMeta.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Pathfinding.GraphNode[] id2NodeMapping
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::Serialization::GraphSerializationContext::dyn_id2NodeMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::dyn_id2NodeMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id2NodeMapping"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.IO.BinaryReader reader
[[deprecated("Use field access instead!")]] ::System::IO::BinaryReader*& Pathfinding::Serialization::GraphSerializationContext::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::BinaryReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.IO.BinaryWriter writer
[[deprecated("Use field access instead!")]] ::System::IO::BinaryWriter*& Pathfinding::Serialization::GraphSerializationContext::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::IO::BinaryWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 graphIndex
[[deprecated("Use field access instead!")]] uint& Pathfinding::Serialization::GraphSerializationContext::dyn_graphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::dyn_graphIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Pathfinding.Serialization.GraphMeta meta
[[deprecated("Use field access instead!")]] ::Pathfinding::Serialization::GraphMeta*& Pathfinding::Serialization::GraphSerializationContext::dyn_meta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::dyn_meta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meta"))->offset;
  return *reinterpret_cast<::Pathfinding::Serialization::GraphMeta**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.SerializeNodeReference
void Pathfinding::Serialization::GraphSerializationContext::SerializeNodeReference(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::SerializeNodeReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNodeReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeNodeReference
::Pathfinding::GraphNode* Pathfinding::Serialization::GraphSerializationContext::DeserializeNodeReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeNodeReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNodeReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::GraphNode*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.SerializeVector3
void Pathfinding::Serialization::GraphSerializationContext::SerializeVector3(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::SerializeVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeVector3
::UnityEngine::Vector3 Pathfinding::Serialization::GraphSerializationContext::DeserializeVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.SerializeInt3
void Pathfinding::Serialization::GraphSerializationContext::SerializeInt3(::Pathfinding::Int3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::SerializeInt3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeInt3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeInt3
::Pathfinding::Int3 Pathfinding::Serialization::GraphSerializationContext::DeserializeInt3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeInt3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInt3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Int3, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeInt
int Pathfinding::Serialization::GraphSerializationContext::DeserializeInt(int defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, defaultValue);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeFloat
float Pathfinding::Serialization::GraphSerializationContext::DeserializeFloat(float defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, defaultValue);
}
// Autogenerated method: Pathfinding.Serialization.GraphSerializationContext.DeserializeUnityObject
::UnityEngine::Object* Pathfinding::Serialization::GraphSerializationContext::DeserializeUnityObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphSerializationContext::DeserializeUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer
#include "Pathfinding/Serialization/AstarSerializer.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass26_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass26_0.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass27_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass27_0.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass29_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass29_0.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass39_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass39_0.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass40_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass40_0.hpp"
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass41_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass41_0.hpp"
// Including type: Pathfinding.AstarData
#include "Pathfinding/AstarData.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipFile
#include "Pathfinding/Ionic/Zip/ZipFile.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: Pathfinding.Serialization.GraphMeta
#include "Pathfinding/Serialization/GraphMeta.hpp"
// Including type: Pathfinding.Serialization.SerializeSettings
#include "Pathfinding/Serialization/SerializeSettings.hpp"
// Including type: Pathfinding.NavGraph
#include "Pathfinding/NavGraph.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Text.UTF8Encoding
#include "System/Text/UTF8Encoding.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: Pathfinding.GraphEditorBase
#include "Pathfinding/GraphEditorBase.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipEntry
#include "Pathfinding/Ionic/Zip/ZipEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String binaryExt
::StringW Pathfinding::Serialization::AstarSerializer::_get_binaryExt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_get_binaryExt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Pathfinding.Serialization", "AstarSerializer", "binaryExt"));
}
// Autogenerated static field setter
// Set static field: static private System.String binaryExt
void Pathfinding::Serialization::AstarSerializer::_set_binaryExt(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_set_binaryExt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "AstarSerializer", "binaryExt", value));
}
// Autogenerated static field getter
// Get static field: static private System.String jsonExt
::StringW Pathfinding::Serialization::AstarSerializer::_get_jsonExt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_get_jsonExt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Pathfinding.Serialization", "AstarSerializer", "jsonExt"));
}
// Autogenerated static field setter
// Set static field: static private System.String jsonExt
void Pathfinding::Serialization::AstarSerializer::_set_jsonExt(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_set_jsonExt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "AstarSerializer", "jsonExt", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder _stringBuilder
::System::Text::StringBuilder* Pathfinding::Serialization::AstarSerializer::_get__stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_get__stringBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("Pathfinding.Serialization", "AstarSerializer", "_stringBuilder"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder _stringBuilder
void Pathfinding::Serialization::AstarSerializer::_set__stringBuilder(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::_set__stringBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "AstarSerializer", "_stringBuilder", value));
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.AstarData data
[[deprecated("Use field access instead!")]] ::Pathfinding::AstarData*& Pathfinding::Serialization::AstarSerializer::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::Pathfinding::AstarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zip.ZipFile zip
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zip::ZipFile*& Pathfinding::Serialization::AstarSerializer::dyn_zip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_zip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zip"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zip::ZipFile**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MemoryStream zipStream
[[deprecated("Use field access instead!")]] ::System::IO::MemoryStream*& Pathfinding::Serialization::AstarSerializer::dyn_zipStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_zipStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zipStream"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Serialization.GraphMeta meta
[[deprecated("Use field access instead!")]] ::Pathfinding::Serialization::GraphMeta*& Pathfinding::Serialization::AstarSerializer::dyn_meta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_meta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meta"))->offset;
  return *reinterpret_cast<::Pathfinding::Serialization::GraphMeta**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Serialization.SerializeSettings settings
[[deprecated("Use field access instead!")]] ::Pathfinding::Serialization::SerializeSettings*& Pathfinding::Serialization::AstarSerializer::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Pathfinding::Serialization::SerializeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.NavGraph[] graphs
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::NavGraph*>& Pathfinding::Serialization::AstarSerializer::dyn_graphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_graphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphs"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::NavGraph*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<Pathfinding.NavGraph,System.Int32> graphIndexInZip
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Pathfinding::NavGraph*, int>*& Pathfinding::Serialization::AstarSerializer::dyn_graphIndexInZip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_graphIndexInZip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphIndexInZip"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Pathfinding::NavGraph*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 graphIndexOffset
[[deprecated("Use field access instead!")]] int& Pathfinding::Serialization::AstarSerializer::dyn_graphIndexOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_graphIndexOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphIndexOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 checksum
[[deprecated("Use field access instead!")]] uint& Pathfinding::Serialization::AstarSerializer::dyn_checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_checksum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checksum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.UTF8Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::UTF8Encoding*& Pathfinding::Serialization::AstarSerializer::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::UTF8Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetStringBuilder
::System::Text::StringBuilder* Pathfinding::Serialization::AstarSerializer::GetStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetStringBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "GetStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.CloseOrDispose
void Pathfinding::Serialization::AstarSerializer::CloseOrDispose(::System::IO::BinaryWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::CloseOrDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "CloseOrDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SetGraphIndexOffset
void Pathfinding::Serialization::AstarSerializer::SetGraphIndexOffset(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SetGraphIndexOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraphIndexOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.AddChecksum
void Pathfinding::Serialization::AstarSerializer::AddChecksum(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::AddChecksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChecksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetChecksum
uint Pathfinding::Serialization::AstarSerializer::GetChecksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetChecksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChecksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.OpenSerialize
void Pathfinding::Serialization::AstarSerializer::OpenSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::OpenSerialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.CloseSerialize
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::CloseSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::CloseSerialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeGraphs
void Pathfinding::Serialization::AstarSerializer::SerializeGraphs(::ArrayW<::Pathfinding::NavGraph*> _graphs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_graphs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _graphs);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeMeta
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::SerializeMeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeMeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeMeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.Serialize
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::Serialize(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, graph);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeNodes
void Pathfinding::Serialization::AstarSerializer::SerializeNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetMaxNodeIndexInAllGraphs
int Pathfinding::Serialization::AstarSerializer::GetMaxNodeIndexInAllGraphs(::ArrayW<::Pathfinding::NavGraph*> graphs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetMaxNodeIndexInAllGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "GetMaxNodeIndexInAllGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphs);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeNodeIndices
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::SerializeNodeIndices(::ArrayW<::Pathfinding::NavGraph*> graphs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeNodeIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "SerializeNodeIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphs)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graphs);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeGraphExtraInfo
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::SerializeGraphExtraInfo(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeGraphExtraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "SerializeGraphExtraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeGraphNodeReferences
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::SerializeGraphNodeReferences(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeGraphNodeReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "SerializeGraphNodeReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeExtraInfo
void Pathfinding::Serialization::AstarSerializer::SerializeExtraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeExtraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeExtraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeNodeLinks
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::SerializeNodeLinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeNodeLinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNodeLinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SerializeEditorSettings
void Pathfinding::Serialization::AstarSerializer::SerializeEditorSettings(::ArrayW<::Pathfinding::GraphEditorBase*> editors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SerializeEditorSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeEditorSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editors);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.OpenDeserialize
bool Pathfinding::Serialization::AstarSerializer::OpenDeserialize(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::OpenDeserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.FullyDefinedVersion
::System::Version* Pathfinding::Serialization::AstarSerializer::FullyDefinedVersion(::System::Version* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::FullyDefinedVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "FullyDefinedVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.CloseDeserialize
void Pathfinding::Serialization::AstarSerializer::CloseDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::CloseDeserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeGraph
::Pathfinding::NavGraph* Pathfinding::Serialization::AstarSerializer::DeserializeGraph(int zipIndex, int graphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(zipIndex), ::il2cpp_utils::ExtractType(graphIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::NavGraph*, false>(this, ___internal__method, zipIndex, graphIndex);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeGraphs
::ArrayW<::Pathfinding::NavGraph*> Pathfinding::Serialization::AstarSerializer::DeserializeGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::NavGraph*>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeExtraInfo
bool Pathfinding::Serialization::AstarSerializer::DeserializeExtraInfo(::Pathfinding::NavGraph* graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeExtraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeExtraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, graph);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.AnyDestroyedNodesInGraphs
bool Pathfinding::Serialization::AstarSerializer::AnyDestroyedNodesInGraphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::AnyDestroyedNodesInGraphs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyDestroyedNodesInGraphs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeNodeReferenceMap
::ArrayW<::Pathfinding::GraphNode*> Pathfinding::Serialization::AstarSerializer::DeserializeNodeReferenceMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeNodeReferenceMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNodeReferenceMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Pathfinding::GraphNode*>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeNodeReferences
void Pathfinding::Serialization::AstarSerializer::DeserializeNodeReferences(::Pathfinding::NavGraph* graph, ::ArrayW<::Pathfinding::GraphNode*> int2Node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeNodeReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNodeReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(int2Node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, int2Node);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeExtraInfo
void Pathfinding::Serialization::AstarSerializer::DeserializeExtraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeExtraInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeExtraInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeNodeLinks
void Pathfinding::Serialization::AstarSerializer::DeserializeNodeLinks(::ArrayW<::Pathfinding::GraphNode*> int2Node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeNodeLinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNodeLinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(int2Node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, int2Node);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.PostDeserialization
void Pathfinding::Serialization::AstarSerializer::PostDeserialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::PostDeserialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeEditorSettings
void Pathfinding::Serialization::AstarSerializer::DeserializeEditorSettings(::ArrayW<::Pathfinding::GraphEditorBase*> graphEditors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeEditorSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeEditorSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphEditors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graphEditors);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetBinaryReader
::System::IO::BinaryReader* Pathfinding::Serialization::AstarSerializer::GetBinaryReader(::Pathfinding::Ionic::Zip::ZipEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetBinaryReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "GetBinaryReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::BinaryReader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.GetString
::StringW Pathfinding::Serialization::AstarSerializer::GetString(::Pathfinding::Ionic::Zip::ZipEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeMeta
::Pathfinding::Serialization::GraphMeta* Pathfinding::Serialization::AstarSerializer::DeserializeMeta(::Pathfinding::Ionic::Zip::ZipEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeMeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeMeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Serialization::GraphMeta*, false>(this, ___internal__method, entry);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.DeserializeBinaryMeta
::Pathfinding::Serialization::GraphMeta* Pathfinding::Serialization::AstarSerializer::DeserializeBinaryMeta(::Pathfinding::Ionic::Zip::ZipEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::DeserializeBinaryMeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeBinaryMeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Serialization::GraphMeta*, false>(this, ___internal__method, entry);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.SaveToFile
void Pathfinding::Serialization::AstarSerializer::SaveToFile(::StringW path, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::SaveToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "SaveToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, data);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer.LoadFromFile
::ArrayW<uint8_t> Pathfinding::Serialization::AstarSerializer::LoadFromFile(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", "LoadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer..cctor
void Pathfinding::Serialization::AstarSerializer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "AstarSerializer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass26_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass26_0.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxIndex
[[deprecated("Use field access instead!")]] int& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass26_0::dyn_maxIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass26_0::dyn_maxIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNodeDelegateCancelable <>9__0
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNodeDelegateCancelable*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass26_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass26_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNodeDelegateCancelable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass26_0.<GetMaxNodeIndexInAllGraphs>b__0
bool Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass26_0::$GetMaxNodeIndexInAllGraphs$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass26_0::<GetMaxNodeIndexInAllGraphs>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMaxNodeIndexInAllGraphs>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass27_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass27_0.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxNodeIndex2
[[deprecated("Use field access instead!")]] int& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass27_0::dyn_maxNodeIndex2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass27_0::dyn_maxNodeIndex2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNodeIndex2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.BinaryWriter wr
[[deprecated("Use field access instead!")]] ::System::IO::BinaryWriter*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass27_0::dyn_wr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass27_0::dyn_wr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wr"))->offset;
  return *reinterpret_cast<::System::IO::BinaryWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNodeDelegateCancelable <>9__0
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNodeDelegateCancelable*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass27_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass27_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNodeDelegateCancelable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass27_0.<SerializeNodeIndices>b__0
bool Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass27_0::$SerializeNodeIndices$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass27_0::<SerializeNodeIndices>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SerializeNodeIndices>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass29_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass29_0.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Serialization.GraphSerializationContext ctx
[[deprecated("Use field access instead!")]] ::Pathfinding::Serialization::GraphSerializationContext*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass29_0::dyn_ctx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass29_0::dyn_ctx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx"))->offset;
  return *reinterpret_cast<::Pathfinding::Serialization::GraphSerializationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass29_0.<SerializeGraphNodeReferences>b__0
bool Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass29_0::$SerializeGraphNodeReferences$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass29_0::<SerializeGraphNodeReferences>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SerializeGraphNodeReferences>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass39_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass39_0.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean result
[[deprecated("Use field access instead!")]] bool& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass39_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass39_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNodeDelegateCancelable <>9__0
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNodeDelegateCancelable*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass39_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass39_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNodeDelegateCancelable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass39_0.<AnyDestroyedNodesInGraphs>b__0
bool Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass39_0::$AnyDestroyedNodesInGraphs$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass39_0::<AnyDestroyedNodesInGraphs>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnyDestroyedNodesInGraphs>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass40_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass40_0.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
// Including type: Pathfinding.GraphNodeDelegateCancelable
#include "Pathfinding/GraphNodeDelegateCancelable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IO.BinaryReader reader
[[deprecated("Use field access instead!")]] ::System::IO::BinaryReader*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass40_0::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass40_0::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::BinaryReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNode[] int2Node
[[deprecated("Use field access instead!")]] ::ArrayW<::Pathfinding::GraphNode*>& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass40_0::dyn_int2Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass40_0::dyn_int2Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "int2Node"))->offset;
  return *reinterpret_cast<::ArrayW<::Pathfinding::GraphNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.GraphNodeDelegateCancelable <>9__0
[[deprecated("Use field access instead!")]] ::Pathfinding::GraphNodeDelegateCancelable*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass40_0::dyn_$$9__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass40_0::dyn_$$9__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__0"))->offset;
  return *reinterpret_cast<::Pathfinding::GraphNodeDelegateCancelable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass40_0.<DeserializeNodeReferenceMap>b__0
bool Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass40_0::$DeserializeNodeReferenceMap$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass40_0::<DeserializeNodeReferenceMap>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DeserializeNodeReferenceMap>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass41_0
#include "Pathfinding/Serialization/AstarSerializer_--c__DisplayClass41_0.hpp"
// Including type: Pathfinding.Serialization.GraphSerializationContext
#include "Pathfinding/Serialization/GraphSerializationContext.hpp"
// Including type: Pathfinding.GraphNode
#include "Pathfinding/GraphNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Serialization.GraphSerializationContext ctx
[[deprecated("Use field access instead!")]] ::Pathfinding::Serialization::GraphSerializationContext*& Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass41_0::dyn_ctx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass41_0::dyn_ctx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx"))->offset;
  return *reinterpret_cast<::Pathfinding::Serialization::GraphSerializationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.AstarSerializer/<>c__DisplayClass41_0.<DeserializeNodeReferences>b__0
bool Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass41_0::$DeserializeNodeReferences$b__0(::Pathfinding::GraphNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::AstarSerializer::$$c__DisplayClass41_0::<DeserializeNodeReferences>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DeserializeNodeReferences>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.GraphMeta
#include "Pathfinding/Serialization/GraphMeta.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& Pathfinding::Serialization::GraphMeta::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphMeta::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 graphs
[[deprecated("Use field access instead!")]] int& Pathfinding::Serialization::GraphMeta::dyn_graphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphMeta::dyn_graphs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> guids
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Pathfinding::Serialization::GraphMeta::dyn_guids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphMeta::dyn_guids");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "guids"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> typeNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Pathfinding::Serialization::GraphMeta::dyn_typeNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphMeta::dyn_typeNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.GraphMeta.GetGraphType
::System::Type* Pathfinding::Serialization::GraphMeta::GetGraphType(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::GraphMeta::GetGraphType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGraphType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.SerializeSettings
#include "Pathfinding/Serialization/SerializeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean nodes
[[deprecated("Use field access instead!")]] bool& Pathfinding::Serialization::SerializeSettings::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::SerializeSettings::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean prettyPrint
[[deprecated("Use field access instead!")]] bool& Pathfinding::Serialization::SerializeSettings::dyn_prettyPrint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::SerializeSettings::dyn_prettyPrint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prettyPrint"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean editorSettings
[[deprecated("Use field access instead!")]] bool& Pathfinding::Serialization::SerializeSettings::dyn_editorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::SerializeSettings::dyn_editorSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorSettings"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.SerializeSettings.get_Settings
::Pathfinding::Serialization::SerializeSettings* Pathfinding::Serialization::SerializeSettings::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::SerializeSettings::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "SerializeSettings", "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Serialization::SerializeSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.JsonMemberAttribute
#include "Pathfinding/Serialization/JsonMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Serialization.JsonOptInAttribute
#include "Pathfinding/Serialization/JsonOptInAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Serialization.TinyJsonSerializer
#include "Pathfinding/Serialization/TinyJsonSerializer.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.CultureInfo invariantCulture
::System::Globalization::CultureInfo* Pathfinding::Serialization::TinyJsonSerializer::_get_invariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::_get_invariantCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CultureInfo*>("Pathfinding.Serialization", "TinyJsonSerializer", "invariantCulture"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.CultureInfo invariantCulture
void Pathfinding::Serialization::TinyJsonSerializer::_set_invariantCulture(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::_set_invariantCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "TinyJsonSerializer", "invariantCulture", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder output
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Pathfinding::Serialization::TinyJsonSerializer::dyn_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::dyn_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "output"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Type,System.Action`1<System.Object>> serializers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Action_1<::Il2CppObject*>*>*& Pathfinding::Serialization::TinyJsonSerializer::dyn_serializers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::dyn_serializers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Action_1<::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.Serialize
void Pathfinding::Serialization::TinyJsonSerializer::Serialize(::Il2CppObject* obj, ::System::Text::StringBuilder* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "TinyJsonSerializer", "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, output);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.Serialize
void Pathfinding::Serialization::TinyJsonSerializer::Serialize(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.QuotedField
void Pathfinding::Serialization::TinyJsonSerializer::QuotedField(::StringW name, ::StringW contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::QuotedField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuotedField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(contents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, contents);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.SerializeUnityObject
void Pathfinding::Serialization::TinyJsonSerializer::SerializeUnityObject(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::SerializeUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer..cctor
void Pathfinding::Serialization::TinyJsonSerializer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "TinyJsonSerializer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_0
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_0(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_6
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_6(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_1
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_1(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_2
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_2(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_3
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_3(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_4
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_4(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonSerializer.<.ctor>b__4_5
void Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_5(::Il2CppObject* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::<.ctor>b__4_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Serialization.TinyJsonDeserializer
#include "Pathfinding/Serialization/TinyJsonDeserializer.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.NumberFormatInfo numberFormat
::System::Globalization::NumberFormatInfo* Pathfinding::Serialization::TinyJsonDeserializer::_get_numberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::_get_numberFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberFormatInfo*>("Pathfinding.Serialization", "TinyJsonDeserializer", "numberFormat"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.NumberFormatInfo numberFormat
void Pathfinding::Serialization::TinyJsonDeserializer::_set_numberFormat(::System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::_set_numberFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Serialization", "TinyJsonDeserializer", "numberFormat", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextReader reader
[[deprecated("Use field access instead!")]] ::System::IO::TextReader*& Pathfinding::Serialization::TinyJsonDeserializer::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder builder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Pathfinding::Serialization::TinyJsonDeserializer::dyn_builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::dyn_builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.Deserialize
::Il2CppObject* Pathfinding::Serialization::TinyJsonDeserializer::Deserialize(::StringW text, ::System::Type* type, ::Il2CppObject* populate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "TinyJsonDeserializer", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(populate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, type, populate);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.Deserialize
::Il2CppObject* Pathfinding::Serialization::TinyJsonDeserializer::Deserialize(::System::Type* tp, ::Il2CppObject* populate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tp), ::il2cpp_utils::ExtractType(populate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, tp, populate);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.DeserializeUnityObject
::UnityEngine::Object* Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.DeserializeUnityObjectInner
::UnityEngine::Object* Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObjectInner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObjectInner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeUnityObjectInner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.EatWhitespace
void Pathfinding::Serialization::TinyJsonDeserializer::EatWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::EatWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.Eat
void Pathfinding::Serialization::TinyJsonDeserializer::Eat(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::Eat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Eat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.EatUntil
::StringW Pathfinding::Serialization::TinyJsonDeserializer::EatUntil(::StringW c, bool inString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::EatUntil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(inString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, c, inString);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.TryEat
bool Pathfinding::Serialization::TinyJsonDeserializer::TryEat(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::TryEat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.EatField
::StringW Pathfinding::Serialization::TinyJsonDeserializer::EatField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::EatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer.SkipFieldData
void Pathfinding::Serialization::TinyJsonDeserializer::SkipFieldData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::SkipFieldData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipFieldData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Serialization.TinyJsonDeserializer..cctor
void Pathfinding::Serialization::TinyJsonDeserializer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Serialization", "TinyJsonDeserializer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.WindowsStore.WindowsStoreCompatibility
#include "Pathfinding/WindowsStore/WindowsStoreCompatibility.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.WindowsStore.WindowsStoreCompatibility.GetTypeFromInfo
::System::Type* Pathfinding::WindowsStore::WindowsStoreCompatibility::GetTypeFromInfo(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WindowsStore::WindowsStoreCompatibility::GetTypeFromInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.WindowsStore", "WindowsStoreCompatibility", "GetTypeFromInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Pathfinding.WindowsStore.WindowsStoreCompatibility.GetTypeInfo
::System::Type* Pathfinding::WindowsStore::WindowsStoreCompatibility::GetTypeInfo(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::WindowsStore::WindowsStoreCompatibility::GetTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.WindowsStore", "WindowsStoreCompatibility", "GetTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.IAstarPooledObject
#include "Pathfinding/Util/IAstarPooledObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Util.IAstarPooledObject.OnEnterPool
void Pathfinding::Util::IAstarPooledObject::OnEnterPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::IAstarPooledObject::OnEnterPool");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Util::IAstarPooledObject*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.Checksum
#include "Pathfinding/Util/Checksum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] CRCTable
::ArrayW<uint> Pathfinding::Util::Checksum::_get_CRCTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Checksum::_get_CRCTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("Pathfinding.Util", "Checksum", "CRCTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] CRCTable
void Pathfinding::Util::Checksum::_set_CRCTable(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Checksum::_set_CRCTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Checksum", "CRCTable", value));
}
// Autogenerated method: Pathfinding.Util.Checksum.GetChecksum
uint Pathfinding::Util::Checksum::GetChecksum(::ArrayW<uint8_t> Value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Checksum::GetChecksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Checksum", "GetChecksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Value);
}
// Autogenerated method: Pathfinding.Util.Checksum.GetChecksum
uint Pathfinding::Util::Checksum::GetChecksum(::ArrayW<uint8_t> Value, uint CRCVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Checksum::GetChecksum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Checksum", "GetChecksum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Value), ::il2cpp_utils::ExtractType(CRCVal)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Value, CRCVal);
}
// Autogenerated method: Pathfinding.Util.Checksum..cctor
void Pathfinding::Util::Checksum::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Checksum::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Checksum", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.Memory
#include "Pathfinding/Util/Memory.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Util.Memory.MemSet
void Pathfinding::Util::Memory::MemSet(::ArrayW<uint8_t> array, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Memory::MemSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Memory", "MemSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Util.Guid
#include "Pathfinding/Util/Guid.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String hex
::StringW Pathfinding::Util::Guid::_get_hex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_get_hex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Pathfinding.Util", "Guid", "hex"));
}
// Autogenerated static field setter
// Set static field: static private System.String hex
void Pathfinding::Util::Guid::_set_hex(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_set_hex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Guid", "hex", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Pathfinding.Util.Guid zero
::Pathfinding::Util::Guid Pathfinding::Util::Guid::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Util::Guid>("Pathfinding.Util", "Guid", "zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly Pathfinding.Util.Guid zero
void Pathfinding::Util::Guid::_set_zero(::Pathfinding::Util::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Guid", "zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String zeroString
::StringW Pathfinding::Util::Guid::_get_zeroString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_get_zeroString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Pathfinding.Util", "Guid", "zeroString"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String zeroString
void Pathfinding::Util::Guid::_set_zeroString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_set_zeroString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Guid", "zeroString", value));
}
// Autogenerated static field getter
// Get static field: static private System.Random random
::System::Random* Pathfinding::Util::Guid::_get_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_get_random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("Pathfinding.Util", "Guid", "random"));
}
// Autogenerated static field setter
// Set static field: static private System.Random random
void Pathfinding::Util::Guid::_set_random(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_set_random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Guid", "random", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder text
::System::Text::StringBuilder* Pathfinding::Util::Guid::_get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_get_text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("Pathfinding.Util", "Guid", "text"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder text
void Pathfinding::Util::Guid::_set_text(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::_set_text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Util", "Guid", "text", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 _a
[[deprecated("Use field access instead!")]] uint64_t& Pathfinding::Util::Guid::dyn__a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::dyn__a");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_a"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 _b
[[deprecated("Use field access instead!")]] uint64_t& Pathfinding::Util::Guid::dyn__b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::dyn__b");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.Guid..ctor
Pathfinding::Util::Guid::Guid(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Pathfinding.Util.Guid..ctor
Pathfinding::Util::Guid::Guid(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: Pathfinding.Util.Guid.Parse
::Pathfinding::Util::Guid Pathfinding::Util::Guid::Parse(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: Pathfinding.Util.Guid.SwapEndianness
uint64_t Pathfinding::Util::Guid::SwapEndianness(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::SwapEndianness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", "SwapEndianness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Pathfinding.Util.Guid.ToByteArray
::ArrayW<uint8_t> Pathfinding::Util::Guid::ToByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.Guid.NewGuid
::Pathfinding::Util::Guid Pathfinding::Util::Guid::NewGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::NewGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", "NewGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Util::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Util.Guid..cctor
void Pathfinding::Util::Guid::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Util.Guid.Equals
bool Pathfinding::Util::Guid::Equals(::Il2CppObject* _rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _rhs);
}
// Autogenerated method: Pathfinding.Util.Guid.GetHashCode
int Pathfinding::Util::Guid::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.Guid.ToString
::StringW Pathfinding::Util::Guid::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Util.Guid.op_Equality
bool Pathfinding::Util::operator ==(const ::Pathfinding::Util::Guid& lhs, const ::Pathfinding::Util::Guid& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Pathfinding.Util.Guid.op_Inequality
bool Pathfinding::Util::operator !=(const ::Pathfinding::Util::Guid& lhs, const ::Pathfinding::Util::Guid& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::Guid::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Util", "Guid", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Util.LockFreeStack
#include "Pathfinding/Util/LockFreeStack.hpp"
// Including type: Pathfinding.Path
#include "Pathfinding/Path.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Path head
[[deprecated("Use field access instead!")]] ::Pathfinding::Path*& Pathfinding::Util::LockFreeStack::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::LockFreeStack::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::Pathfinding::Path**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Util.LockFreeStack.Push
void Pathfinding::Util::LockFreeStack::Push(::Pathfinding::Path* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::LockFreeStack::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Pathfinding.Util.LockFreeStack.PopAll
::Pathfinding::Path* Pathfinding::Util::LockFreeStack::PopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Util::LockFreeStack::PopAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Path*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.Quality
#include "AmplifyColor/Quality.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyColor.Quality Mobile
::AmplifyColor::Quality AmplifyColor::Quality::_get_Mobile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Quality::_get_Mobile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyColor::Quality>("AmplifyColor", "Quality", "Mobile"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyColor.Quality Mobile
void AmplifyColor::Quality::_set_Mobile(::AmplifyColor::Quality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Quality::_set_Mobile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "Quality", "Mobile", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyColor.Quality Standard
::AmplifyColor::Quality AmplifyColor::Quality::_get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Quality::_get_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyColor::Quality>("AmplifyColor", "Quality", "Standard"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyColor.Quality Standard
void AmplifyColor::Quality::_set_Standard(::AmplifyColor::Quality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Quality::_set_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "Quality", "Standard", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyColor::Quality::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Quality::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.Tonemapping
#include "AmplifyColor/Tonemapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AmplifyColor.Tonemapping Disabled
::AmplifyColor::Tonemapping AmplifyColor::Tonemapping::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Tonemapping::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyColor::Tonemapping>("AmplifyColor", "Tonemapping", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyColor.Tonemapping Disabled
void AmplifyColor::Tonemapping::_set_Disabled(::AmplifyColor::Tonemapping value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Tonemapping::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "Tonemapping", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyColor.Tonemapping Photographic
::AmplifyColor::Tonemapping AmplifyColor::Tonemapping::_get_Photographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Tonemapping::_get_Photographic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyColor::Tonemapping>("AmplifyColor", "Tonemapping", "Photographic"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyColor.Tonemapping Photographic
void AmplifyColor::Tonemapping::_set_Photographic(::AmplifyColor::Tonemapping value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Tonemapping::_set_Photographic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "Tonemapping", "Photographic", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyColor.Tonemapping FilmicHable
::AmplifyColor::Tonemapping AmplifyColor::Tonemapping::_get_FilmicHable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Tonemapping::_get_FilmicHable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyColor::Tonemapping>("AmplifyColor", "Tonemapping", "FilmicHable"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyColor.Tonemapping FilmicHable
void AmplifyColor::Tonemapping::_set_FilmicHable(::AmplifyColor::Tonemapping value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Tonemapping::_set_FilmicHable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "Tonemapping", "FilmicHable", value));
}
// Autogenerated static field getter
// Get static field: static public AmplifyColor.Tonemapping FilmicACES
::AmplifyColor::Tonemapping AmplifyColor::Tonemapping::_get_FilmicACES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Tonemapping::_get_FilmicACES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::AmplifyColor::Tonemapping>("AmplifyColor", "Tonemapping", "FilmicACES"));
}
// Autogenerated static field setter
// Set static field: static public AmplifyColor.Tonemapping FilmicACES
void AmplifyColor::Tonemapping::_set_FilmicACES(::AmplifyColor::Tonemapping value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Tonemapping::_set_FilmicACES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "Tonemapping", "FilmicACES", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& AmplifyColor::Tonemapping::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::Tonemapping::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AmplifyColor.VersionInfo
#include "AmplifyColor/VersionInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte Major
uint8_t AmplifyColor::VersionInfo::_get_Major() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::_get_Major");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("AmplifyColor", "VersionInfo", "Major"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Major
void AmplifyColor::VersionInfo::_set_Major(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::_set_Major");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "VersionInfo", "Major", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Minor
uint8_t AmplifyColor::VersionInfo::_get_Minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::_get_Minor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("AmplifyColor", "VersionInfo", "Minor"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Minor
void AmplifyColor::VersionInfo::_set_Minor(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::_set_Minor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "VersionInfo", "Minor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte Release
uint8_t AmplifyColor::VersionInfo::_get_Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::_get_Release");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("AmplifyColor", "VersionInfo", "Release"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Release
void AmplifyColor::VersionInfo::_set_Release(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::_set_Release");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "VersionInfo", "Release", value));
}
// Autogenerated static field getter
// Get static field: static private System.String StageSuffix
::StringW AmplifyColor::VersionInfo::_get_StageSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::_get_StageSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("AmplifyColor", "VersionInfo", "StageSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String StageSuffix
void AmplifyColor::VersionInfo::_set_StageSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::_set_StageSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "VersionInfo", "StageSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TrialSuffix
::StringW AmplifyColor::VersionInfo::_get_TrialSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::_get_TrialSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("AmplifyColor", "VersionInfo", "TrialSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String TrialSuffix
void AmplifyColor::VersionInfo::_set_TrialSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::_set_TrialSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("AmplifyColor", "VersionInfo", "TrialSuffix", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_major
[[deprecated("Use field access instead!")]] int& AmplifyColor::VersionInfo::dyn_m_major() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::dyn_m_major");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_major"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_minor
[[deprecated("Use field access instead!")]] int& AmplifyColor::VersionInfo::dyn_m_minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::dyn_m_minor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_release
[[deprecated("Use field access instead!")]] int& AmplifyColor::VersionInfo::dyn_m_release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::dyn_m_release");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_release"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VersionInfo.StaticToString
::StringW AmplifyColor::VersionInfo::StaticToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::StaticToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VersionInfo", "StaticToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyColor.VersionInfo.get_Number
int AmplifyColor::VersionInfo::get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::get_Number");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Number", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColor.VersionInfo.Current
::AmplifyColor::VersionInfo* AmplifyColor::VersionInfo::Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VersionInfo", "Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VersionInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyColor.VersionInfo.Matches
bool AmplifyColor::VersionInfo::Matches(::AmplifyColor::VersionInfo* version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::Matches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VersionInfo", "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, version);
}
// Autogenerated method: AmplifyColor.VersionInfo..cctor
void AmplifyColor::VersionInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VersionInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyColor.VersionInfo.ToString
::StringW AmplifyColor::VersionInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VersionInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AmplifyColor.VolumeEffectField
#include "AmplifyColor/VolumeEffectField.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String fieldName
[[deprecated("Use field access instead!")]] ::StringW& AmplifyColor::VolumeEffectField::dyn_fieldName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectField::dyn_fieldName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String fieldType
[[deprecated("Use field access instead!")]] ::StringW& AmplifyColor::VolumeEffectField::dyn_fieldType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectField::dyn_fieldType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single valueSingle
[[deprecated("Use field access instead!")]] float& AmplifyColor::VolumeEffectField::dyn_valueSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectField::dyn_valueSingle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueSingle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color valueColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& AmplifyColor::VolumeEffectField::dyn_valueColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectField::dyn_valueColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean valueBoolean
[[deprecated("Use field access instead!")]] bool& AmplifyColor::VolumeEffectField::dyn_valueBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectField::dyn_valueBoolean");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueBoolean"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 valueVector2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& AmplifyColor::VolumeEffectField::dyn_valueVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectField::dyn_valueVector2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueVector2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 valueVector3
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& AmplifyColor::VolumeEffectField::dyn_valueVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectField::dyn_valueVector3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueVector3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4 valueVector4
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& AmplifyColor::VolumeEffectField::dyn_valueVector4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectField::dyn_valueVector4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueVector4"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffectField.IsValidType
bool AmplifyColor::VolumeEffectField::IsValidType(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectField::IsValidType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VolumeEffectField", "IsValidType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: AmplifyColor.VolumeEffectField.UpdateValue
void AmplifyColor::VolumeEffectField::UpdateValue(::Il2CppObject* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectField::UpdateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectComponent
#include "AmplifyColor/VolumeEffectComponent.hpp"
// Including type: AmplifyColor.VolumeEffectComponent/<>c__DisplayClass7_0
#include "AmplifyColor/VolumeEffectComponent_--c__DisplayClass7_0.hpp"
// Including type: AmplifyColor.VolumeEffectComponent/<>c
#include "AmplifyColor/VolumeEffectComponent_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AmplifyColor.VolumeEffectField
#include "AmplifyColor/VolumeEffectField.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags
#include "AmplifyColor/VolumeEffectComponentFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String componentName
[[deprecated("Use field access instead!")]] ::StringW& AmplifyColor::VolumeEffectComponent::dyn_componentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::dyn_componentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<AmplifyColor.VolumeEffectField> fields
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectField*>*& AmplifyColor::VolumeEffectComponent::dyn_fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::dyn_fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectField*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent.AddField
::AmplifyColor::VolumeEffectField* AmplifyColor::VolumeEffectComponent::AddField(::System::Reflection::FieldInfo* pi, ::UnityEngine::Component* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pi), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VolumeEffectField*, false>(this, ___internal__method, pi, c);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent.AddField
::AmplifyColor::VolumeEffectField* AmplifyColor::VolumeEffectComponent::AddField(::System::Reflection::FieldInfo* pi, ::UnityEngine::Component* c, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::AddField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pi), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VolumeEffectField*, false>(this, ___internal__method, pi, c, position);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent.RemoveEffectField
void AmplifyColor::VolumeEffectComponent::RemoveEffectField(::AmplifyColor::VolumeEffectField* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::RemoveEffectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEffectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(field)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent.UpdateComponent
void AmplifyColor::VolumeEffectComponent::UpdateComponent(::UnityEngine::Component* c, ::AmplifyColor::VolumeEffectComponentFlags* compFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::UpdateComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(compFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c, compFlags);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent.FindEffectField
::AmplifyColor::VolumeEffectField* AmplifyColor::VolumeEffectComponent::FindEffectField(::StringW fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::FindEffectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEffectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldName)})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VolumeEffectField*, false>(this, ___internal__method, fieldName);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent.ListAcceptableFields
::ArrayW<::System::Reflection::FieldInfo*> AmplifyColor::VolumeEffectComponent::ListAcceptableFields(::UnityEngine::Component* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::ListAcceptableFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VolumeEffectComponent", "ListAcceptableFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::FieldInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent.GetFieldNames
::ArrayW<::StringW> AmplifyColor::VolumeEffectComponent::GetFieldNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::GetFieldNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFieldNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectComponent/<>c__DisplayClass7_0
#include "AmplifyColor/VolumeEffectComponent_--c__DisplayClass7_0.hpp"
// Including type: AmplifyColor.VolumeEffectFieldFlags
#include "AmplifyColor/VolumeEffectFieldFlags.hpp"
// Including type: AmplifyColor.VolumeEffectField
#include "AmplifyColor/VolumeEffectField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AmplifyColor.VolumeEffectFieldFlags fieldFlags
[[deprecated("Use field access instead!")]] ::AmplifyColor::VolumeEffectFieldFlags*& AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0::dyn_fieldFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0::dyn_fieldFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldFlags"))->offset;
  return *reinterpret_cast<::AmplifyColor::VolumeEffectFieldFlags**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent/<>c__DisplayClass7_0.<UpdateComponent>b__0
bool AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0::$UpdateComponent$b__0(::AmplifyColor::VolumeEffectField* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0::<UpdateComponent>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateComponent>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectComponent/<>c
#include "AmplifyColor/VolumeEffectComponent_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: AmplifyColor.VolumeEffectField
#include "AmplifyColor/VolumeEffectField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AmplifyColor.VolumeEffectComponent/<>c <>9
::AmplifyColor::VolumeEffectComponent::$$c* AmplifyColor::VolumeEffectComponent::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::AmplifyColor::VolumeEffectComponent::$$c*>("AmplifyColor", "VolumeEffectComponent/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AmplifyColor.VolumeEffectComponent/<>c <>9
void AmplifyColor::VolumeEffectComponent::$$c::_set_$$9(::AmplifyColor::VolumeEffectComponent::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectComponent/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__9_0
::System::Func_2<::System::Reflection::FieldInfo*, bool>* AmplifyColor::VolumeEffectComponent::$$c::_get_$$9__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c::_get_$$9__9_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::FieldInfo*, bool>*>("AmplifyColor", "VolumeEffectComponent/<>c", "<>9__9_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.FieldInfo,System.Boolean> <>9__9_0
void AmplifyColor::VolumeEffectComponent::$$c::_set_$$9__9_0(::System::Func_2<::System::Reflection::FieldInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c::_set_$$9__9_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectComponent/<>c", "<>9__9_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<AmplifyColor.VolumeEffectField,System.String> <>9__10_0
::System::Func_2<::AmplifyColor::VolumeEffectField*, ::StringW>* AmplifyColor::VolumeEffectComponent::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::AmplifyColor::VolumeEffectField*, ::StringW>*>("AmplifyColor", "VolumeEffectComponent/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<AmplifyColor.VolumeEffectField,System.String> <>9__10_0
void AmplifyColor::VolumeEffectComponent::$$c::_set_$$9__10_0(::System::Func_2<::AmplifyColor::VolumeEffectField*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectComponent/<>c", "<>9__10_0", value)));
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent/<>c..cctor
void AmplifyColor::VolumeEffectComponent::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VolumeEffectComponent/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent/<>c.<ListAcceptableFields>b__9_0
bool AmplifyColor::VolumeEffectComponent::$$c::$ListAcceptableFields$b__9_0(::System::Reflection::FieldInfo* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c::<ListAcceptableFields>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ListAcceptableFields>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, f);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponent/<>c.<GetFieldNames>b__10_0
::StringW AmplifyColor::VolumeEffectComponent::$$c::$GetFieldNames$b__10_0(::AmplifyColor::VolumeEffectField* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c::<GetFieldNames>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFieldNames>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffect
#include "AmplifyColor/VolumeEffect.hpp"
// Including type: AmplifyColor.VolumeEffect/<>c
#include "AmplifyColor/VolumeEffect_--c.hpp"
// Including type: AmplifyColorBase
#include "GlobalNamespace/AmplifyColorBase.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AmplifyColor.VolumeEffectComponent
#include "AmplifyColor/VolumeEffectComponent.hpp"
// Including type: AmplifyColor.VolumeEffectFlags
#include "AmplifyColor/VolumeEffectFlags.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags
#include "AmplifyColor/VolumeEffectComponentFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AmplifyColorBase gameObject
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AmplifyColorBase*& AmplifyColor::VolumeEffect::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AmplifyColorBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<AmplifyColor.VolumeEffectComponent> components
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectComponent*>*& AmplifyColor::VolumeEffect::dyn_components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::dyn_components");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "components"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectComponent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffect.BlendValuesToVolumeEffect
::AmplifyColor::VolumeEffect* AmplifyColor::VolumeEffect::BlendValuesToVolumeEffect(::AmplifyColor::VolumeEffectFlags* flags, ::AmplifyColor::VolumeEffect* volume1, ::AmplifyColor::VolumeEffect* volume2, float blend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::BlendValuesToVolumeEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VolumeEffect", "BlendValuesToVolumeEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(volume1), ::il2cpp_utils::ExtractType(volume2), ::il2cpp_utils::ExtractType(blend)})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VolumeEffect*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, volume1, volume2, blend);
}
// Autogenerated method: AmplifyColor.VolumeEffect.AddComponent
::AmplifyColor::VolumeEffectComponent* AmplifyColor::VolumeEffect::AddComponent(::UnityEngine::Component* c, ::AmplifyColor::VolumeEffectComponentFlags* compFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::AddComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(compFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VolumeEffectComponent*, false>(this, ___internal__method, c, compFlags);
}
// Autogenerated method: AmplifyColor.VolumeEffect.RemoveEffectComponent
void AmplifyColor::VolumeEffect::RemoveEffectComponent(::AmplifyColor::VolumeEffectComponent* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::RemoveEffectComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEffectComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, comp);
}
// Autogenerated method: AmplifyColor.VolumeEffect.UpdateVolume
void AmplifyColor::VolumeEffect::UpdateVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::UpdateVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AmplifyColor.VolumeEffect.SetValues
void AmplifyColor::VolumeEffect::SetValues(::GlobalNamespace::AmplifyColorBase* targetColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::SetValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetColor);
}
// Autogenerated method: AmplifyColor.VolumeEffect.BlendValues
void AmplifyColor::VolumeEffect::BlendValues(::GlobalNamespace::AmplifyColorBase* targetColor, ::AmplifyColor::VolumeEffect* other, float blendAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::BlendValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlendValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(blendAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetColor, other, blendAmount);
}
// Autogenerated method: AmplifyColor.VolumeEffect.FindEffectComponent
::AmplifyColor::VolumeEffectComponent* AmplifyColor::VolumeEffect::FindEffectComponent(::StringW compName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::FindEffectComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEffectComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compName)})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VolumeEffectComponent*, false>(this, ___internal__method, compName);
}
// Autogenerated method: AmplifyColor.VolumeEffect.ListAcceptableComponents
::ArrayW<::UnityEngine::Component*> AmplifyColor::VolumeEffect::ListAcceptableComponents(::GlobalNamespace::AmplifyColorBase* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::ListAcceptableComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VolumeEffect", "ListAcceptableComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Component*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go);
}
// Autogenerated method: AmplifyColor.VolumeEffect.GetComponentNames
::ArrayW<::StringW> AmplifyColor::VolumeEffect::GetComponentNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::GetComponentNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffect/<>c
#include "AmplifyColor/VolumeEffect_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: AmplifyColor.VolumeEffectComponent
#include "AmplifyColor/VolumeEffectComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AmplifyColor.VolumeEffect/<>c <>9
::AmplifyColor::VolumeEffect::$$c* AmplifyColor::VolumeEffect::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::AmplifyColor::VolumeEffect::$$c*>("AmplifyColor", "VolumeEffect/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AmplifyColor.VolumeEffect/<>c <>9
void AmplifyColor::VolumeEffect::$$c::_set_$$9(::AmplifyColor::VolumeEffect::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffect/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Component,System.Boolean> <>9__10_0
::System::Func_2<::UnityEngine::Component*, bool>* AmplifyColor::VolumeEffect::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Component*, bool>*>("AmplifyColor", "VolumeEffect/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Component,System.Boolean> <>9__10_0
void AmplifyColor::VolumeEffect::$$c::_set_$$9__10_0(::System::Func_2<::UnityEngine::Component*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffect/<>c", "<>9__10_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<AmplifyColor.VolumeEffectComponent,System.String> <>9__11_0
::System::Func_2<::AmplifyColor::VolumeEffectComponent*, ::StringW>* AmplifyColor::VolumeEffect::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::AmplifyColor::VolumeEffectComponent*, ::StringW>*>("AmplifyColor", "VolumeEffect/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<AmplifyColor.VolumeEffectComponent,System.String> <>9__11_0
void AmplifyColor::VolumeEffect::$$c::_set_$$9__11_0(::System::Func_2<::AmplifyColor::VolumeEffectComponent*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffect/<>c", "<>9__11_0", value)));
}
// Autogenerated method: AmplifyColor.VolumeEffect/<>c..cctor
void AmplifyColor::VolumeEffect::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VolumeEffect/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyColor.VolumeEffect/<>c.<ListAcceptableComponents>b__10_0
bool AmplifyColor::VolumeEffect::$$c::$ListAcceptableComponents$b__10_0(::UnityEngine::Component* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::$$c::<ListAcceptableComponents>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ListAcceptableComponents>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comp)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comp);
}
// Autogenerated method: AmplifyColor.VolumeEffect/<>c.<GetComponentNames>b__11_0
::StringW AmplifyColor::VolumeEffect::$$c::$GetComponentNames$b__11_0(::AmplifyColor::VolumeEffectComponent* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::$$c::<GetComponentNames>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetComponentNames>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectContainer
#include "AmplifyColor/VolumeEffectContainer.hpp"
// Including type: AmplifyColor.VolumeEffectContainer/<>c
#include "AmplifyColor/VolumeEffectContainer_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AmplifyColor.VolumeEffect
#include "AmplifyColor/VolumeEffect.hpp"
// Including type: AmplifyColorBase
#include "GlobalNamespace/AmplifyColorBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<AmplifyColor.VolumeEffect> volumes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffect*>*& AmplifyColor::VolumeEffectContainer::dyn_volumes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::dyn_volumes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffectContainer.AddColorEffect
void AmplifyColor::VolumeEffectContainer::AddColorEffect(::GlobalNamespace::AmplifyColorBase* colorEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::AddColorEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddColorEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorEffect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorEffect);
}
// Autogenerated method: AmplifyColor.VolumeEffectContainer.AddJustColorEffect
::AmplifyColor::VolumeEffect* AmplifyColor::VolumeEffectContainer::AddJustColorEffect(::GlobalNamespace::AmplifyColorBase* colorEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::AddJustColorEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddJustColorEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorEffect)})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VolumeEffect*, false>(this, ___internal__method, colorEffect);
}
// Autogenerated method: AmplifyColor.VolumeEffectContainer.FindVolumeEffect
::AmplifyColor::VolumeEffect* AmplifyColor::VolumeEffectContainer::FindVolumeEffect(::GlobalNamespace::AmplifyColorBase* colorEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::FindVolumeEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindVolumeEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorEffect)})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VolumeEffect*, false>(this, ___internal__method, colorEffect);
}
// Autogenerated method: AmplifyColor.VolumeEffectContainer.RemoveVolumeEffect
void AmplifyColor::VolumeEffectContainer::RemoveVolumeEffect(::AmplifyColor::VolumeEffect* volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::RemoveVolumeEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveVolumeEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: AmplifyColor.VolumeEffectContainer.GetStoredEffects
::ArrayW<::GlobalNamespace::AmplifyColorBase*> AmplifyColor::VolumeEffectContainer::GetStoredEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::GetStoredEffects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStoredEffects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AmplifyColorBase*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectContainer/<>c
#include "AmplifyColor/VolumeEffectContainer_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: AmplifyColor.VolumeEffect
#include "AmplifyColor/VolumeEffect.hpp"
// Including type: AmplifyColorBase
#include "GlobalNamespace/AmplifyColorBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AmplifyColor.VolumeEffectContainer/<>c <>9
::AmplifyColor::VolumeEffectContainer::$$c* AmplifyColor::VolumeEffectContainer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::AmplifyColor::VolumeEffectContainer::$$c*>("AmplifyColor", "VolumeEffectContainer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AmplifyColor.VolumeEffectContainer/<>c <>9
void AmplifyColor::VolumeEffectContainer::$$c::_set_$$9(::AmplifyColor::VolumeEffectContainer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectContainer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<AmplifyColor.VolumeEffect,AmplifyColorBase> <>9__6_0
::System::Func_2<::AmplifyColor::VolumeEffect*, ::GlobalNamespace::AmplifyColorBase*>* AmplifyColor::VolumeEffectContainer::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::AmplifyColor::VolumeEffect*, ::GlobalNamespace::AmplifyColorBase*>*>("AmplifyColor", "VolumeEffectContainer/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<AmplifyColor.VolumeEffect,AmplifyColorBase> <>9__6_0
void AmplifyColor::VolumeEffectContainer::$$c::_set_$$9__6_0(::System::Func_2<::AmplifyColor::VolumeEffect*, ::GlobalNamespace::AmplifyColorBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectContainer/<>c", "<>9__6_0", value)));
}
// Autogenerated method: AmplifyColor.VolumeEffectContainer/<>c..cctor
void AmplifyColor::VolumeEffectContainer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VolumeEffectContainer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyColor.VolumeEffectContainer/<>c.<GetStoredEffects>b__6_0
::GlobalNamespace::AmplifyColorBase* AmplifyColor::VolumeEffectContainer::$$c::$GetStoredEffects$b__6_0(::AmplifyColor::VolumeEffect* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectContainer::$$c::<GetStoredEffects>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetStoredEffects>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AmplifyColorBase*, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectFieldFlags
#include "AmplifyColor/VolumeEffectFieldFlags.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: AmplifyColor.VolumeEffectField
#include "AmplifyColor/VolumeEffectField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String fieldName
[[deprecated("Use field access instead!")]] ::StringW& AmplifyColor::VolumeEffectFieldFlags::dyn_fieldName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFieldFlags::dyn_fieldName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String fieldType
[[deprecated("Use field access instead!")]] ::StringW& AmplifyColor::VolumeEffectFieldFlags::dyn_fieldType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFieldFlags::dyn_fieldType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean blendFlag
[[deprecated("Use field access instead!")]] bool& AmplifyColor::VolumeEffectFieldFlags::dyn_blendFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFieldFlags::dyn_blendFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendFlag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectComponentFlags
#include "AmplifyColor/VolumeEffectComponentFlags.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags/<>c__DisplayClass6_0
#include "AmplifyColor/VolumeEffectComponentFlags_--c__DisplayClass6_0.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags/<>c__DisplayClass7_0
#include "AmplifyColor/VolumeEffectComponentFlags_--c__DisplayClass7_0.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags/<>c
#include "AmplifyColor/VolumeEffectComponentFlags_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AmplifyColor.VolumeEffectFieldFlags
#include "AmplifyColor/VolumeEffectFieldFlags.hpp"
// Including type: AmplifyColor.VolumeEffectComponent
#include "AmplifyColor/VolumeEffectComponent.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String componentName
[[deprecated("Use field access instead!")]] ::StringW& AmplifyColor::VolumeEffectComponentFlags::dyn_componentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::dyn_componentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<AmplifyColor.VolumeEffectFieldFlags> componentFields
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectFieldFlags*>*& AmplifyColor::VolumeEffectComponentFlags::dyn_componentFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::dyn_componentFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectFieldFlags*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean blendFlag
[[deprecated("Use field access instead!")]] bool& AmplifyColor::VolumeEffectComponentFlags::dyn_blendFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::dyn_blendFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blendFlag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponentFlags.UpdateComponentFlags
void AmplifyColor::VolumeEffectComponentFlags::UpdateComponentFlags(::AmplifyColor::VolumeEffectComponent* comp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::UpdateComponentFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateComponentFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, comp);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponentFlags.UpdateComponentFlags
void AmplifyColor::VolumeEffectComponentFlags::UpdateComponentFlags(::UnityEngine::Component* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::UpdateComponentFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateComponentFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponentFlags.GetFieldNames
::ArrayW<::StringW> AmplifyColor::VolumeEffectComponentFlags::GetFieldNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::GetFieldNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFieldNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectComponentFlags/<>c__DisplayClass6_0
#include "AmplifyColor/VolumeEffectComponentFlags_--c__DisplayClass6_0.hpp"
// Including type: AmplifyColor.VolumeEffectField
#include "AmplifyColor/VolumeEffectField.hpp"
// Including type: AmplifyColor.VolumeEffectFieldFlags
#include "AmplifyColor/VolumeEffectFieldFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AmplifyColor.VolumeEffectField field
[[deprecated("Use field access instead!")]] ::AmplifyColor::VolumeEffectField*& AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0::dyn_field() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0::dyn_field");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "field"))->offset;
  return *reinterpret_cast<::AmplifyColor::VolumeEffectField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponentFlags/<>c__DisplayClass6_0.<UpdateComponentFlags>b__0
bool AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0::$UpdateComponentFlags$b__0(::AmplifyColor::VolumeEffectFieldFlags* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0::<UpdateComponentFlags>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateComponentFlags>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectComponentFlags/<>c__DisplayClass7_0
#include "AmplifyColor/VolumeEffectComponentFlags_--c__DisplayClass7_0.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: AmplifyColor.VolumeEffectFieldFlags
#include "AmplifyColor/VolumeEffectFieldFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.FieldInfo pi
[[deprecated("Use field access instead!")]] ::System::Reflection::FieldInfo*& AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass7_0::dyn_pi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass7_0::dyn_pi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pi"))->offset;
  return *reinterpret_cast<::System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponentFlags/<>c__DisplayClass7_0.<UpdateComponentFlags>b__0
bool AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass7_0::$UpdateComponentFlags$b__0(::AmplifyColor::VolumeEffectFieldFlags* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass7_0::<UpdateComponentFlags>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateComponentFlags>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectComponentFlags/<>c
#include "AmplifyColor/VolumeEffectComponentFlags_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: AmplifyColor.VolumeEffectFieldFlags
#include "AmplifyColor/VolumeEffectFieldFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AmplifyColor.VolumeEffectComponentFlags/<>c <>9
::AmplifyColor::VolumeEffectComponentFlags::$$c* AmplifyColor::VolumeEffectComponentFlags::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::AmplifyColor::VolumeEffectComponentFlags::$$c*>("AmplifyColor", "VolumeEffectComponentFlags/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AmplifyColor.VolumeEffectComponentFlags/<>c <>9
void AmplifyColor::VolumeEffectComponentFlags::$$c::_set_$$9(::AmplifyColor::VolumeEffectComponentFlags::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectComponentFlags/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<AmplifyColor.VolumeEffectFieldFlags,System.Boolean> <>9__8_0
::System::Func_2<::AmplifyColor::VolumeEffectFieldFlags*, bool>* AmplifyColor::VolumeEffectComponentFlags::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::AmplifyColor::VolumeEffectFieldFlags*, bool>*>("AmplifyColor", "VolumeEffectComponentFlags/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<AmplifyColor.VolumeEffectFieldFlags,System.Boolean> <>9__8_0
void AmplifyColor::VolumeEffectComponentFlags::$$c::_set_$$9__8_0(::System::Func_2<::AmplifyColor::VolumeEffectFieldFlags*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectComponentFlags/<>c", "<>9__8_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<AmplifyColor.VolumeEffectFieldFlags,System.String> <>9__8_1
::System::Func_2<::AmplifyColor::VolumeEffectFieldFlags*, ::StringW>* AmplifyColor::VolumeEffectComponentFlags::$$c::_get_$$9__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c::_get_$$9__8_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::AmplifyColor::VolumeEffectFieldFlags*, ::StringW>*>("AmplifyColor", "VolumeEffectComponentFlags/<>c", "<>9__8_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<AmplifyColor.VolumeEffectFieldFlags,System.String> <>9__8_1
void AmplifyColor::VolumeEffectComponentFlags::$$c::_set_$$9__8_1(::System::Func_2<::AmplifyColor::VolumeEffectFieldFlags*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c::_set_$$9__8_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("AmplifyColor", "VolumeEffectComponentFlags/<>c", "<>9__8_1", value)));
}
// Autogenerated method: AmplifyColor.VolumeEffectComponentFlags/<>c..cctor
void AmplifyColor::VolumeEffectComponentFlags::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VolumeEffectComponentFlags/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponentFlags/<>c.<GetFieldNames>b__8_0
bool AmplifyColor::VolumeEffectComponentFlags::$$c::$GetFieldNames$b__8_0(::AmplifyColor::VolumeEffectFieldFlags* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c::<GetFieldNames>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFieldNames>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, r);
}
// Autogenerated method: AmplifyColor.VolumeEffectComponentFlags/<>c.<GetFieldNames>b__8_1
::StringW AmplifyColor::VolumeEffectComponentFlags::$$c::$GetFieldNames$b__8_1(::AmplifyColor::VolumeEffectFieldFlags* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c::<GetFieldNames>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFieldNames>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectFlags
#include "AmplifyColor/VolumeEffectFlags.hpp"
// Including type: AmplifyColor.VolumeEffectFlags/<>c__DisplayClass2_0
#include "AmplifyColor/VolumeEffectFlags_--c__DisplayClass2_0.hpp"
// Including type: AmplifyColor.VolumeEffectFlags/<>c__DisplayClass3_0
#include "AmplifyColor/VolumeEffectFlags_--c__DisplayClass3_0.hpp"
// Including type: AmplifyColor.VolumeEffectFlags/<>c
#include "AmplifyColor/VolumeEffectFlags_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags
#include "AmplifyColor/VolumeEffectComponentFlags.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: AmplifyColor.VolumeEffect
#include "AmplifyColor/VolumeEffect.hpp"
// Including type: AmplifyColorBase
#include "GlobalNamespace/AmplifyColorBase.hpp"
// Including type: AmplifyColorVolumeBase
#include "GlobalNamespace/AmplifyColorVolumeBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<AmplifyColor.VolumeEffectComponentFlags> components
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectComponentFlags*>*& AmplifyColor::VolumeEffectFlags::dyn_components() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::dyn_components");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "components"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectComponentFlags*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags.AddComponent
void AmplifyColor::VolumeEffectFlags::AddComponent(::UnityEngine::Component* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::AddComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags.UpdateFlags
void AmplifyColor::VolumeEffectFlags::UpdateFlags(::AmplifyColor::VolumeEffect* effectVol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::UpdateFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effectVol)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, effectVol);
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags.UpdateCamFlags
void AmplifyColor::VolumeEffectFlags::UpdateCamFlags(::ArrayW<::GlobalNamespace::AmplifyColorBase*> effects, ::ArrayW<::GlobalNamespace::AmplifyColorVolumeBase*> volumes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::UpdateCamFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("AmplifyColor", "VolumeEffectFlags", "UpdateCamFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effects), ::il2cpp_utils::ExtractType(volumes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, effects, volumes);
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags.GenerateEffectData
::AmplifyColor::VolumeEffect* AmplifyColor::VolumeEffectFlags::GenerateEffectData(::GlobalNamespace::AmplifyColorBase* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::GenerateEffectData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateEffectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VolumeEffect*, false>(this, ___internal__method, go);
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags.FindComponentFlags
::AmplifyColor::VolumeEffectComponentFlags* AmplifyColor::VolumeEffectFlags::FindComponentFlags(::StringW compName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::FindComponentFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindComponentFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compName)})));
  return ::il2cpp_utils::RunMethodRethrow<::AmplifyColor::VolumeEffectComponentFlags*, false>(this, ___internal__method, compName);
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags.GetComponentNames
::ArrayW<::StringW> AmplifyColor::VolumeEffectFlags::GetComponentNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::GetComponentNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AmplifyColor.VolumeEffectFlags/<>c__DisplayClass2_0
#include "AmplifyColor/VolumeEffectFlags_--c__DisplayClass2_0.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags
#include "AmplifyColor/VolumeEffectComponentFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Component c
[[deprecated("Use field access instead!")]] ::UnityEngine::Component*& AmplifyColor::VolumeEffectFlags::$$c__DisplayClass2_0::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c__DisplayClass2_0::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::UnityEngine::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AmplifyColor.VolumeEffectFlags/<>c__DisplayClass2_0.<AddComponent>b__0
bool AmplifyColor::VolumeEffectFlags::$$c__DisplayClass2_0::$AddComponent$b__0(::AmplifyColor::VolumeEffectComponentFlags* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::$$c__DisplayClass2_0::<AddComponent>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddComponent>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
