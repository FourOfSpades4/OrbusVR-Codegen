// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BorderImageSlice
#include "PowerUI/Css/Properties/BorderImageSlice.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BorderImageSlice.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BorderImageSlice::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BorderImageSlice::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BorderImageSlice.Apply
void PowerUI::Css::Properties::BorderImageSlice::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BorderImageSlice::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BorderRadius
#include "PowerUI/Css/Properties/BorderRadius.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BorderRadius.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BorderRadius::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BorderRadius::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BorderRadius.Apply
void PowerUI::Css::Properties::BorderRadius::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BorderRadius::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BorderStyleProperty
#include "PowerUI/Css/Properties/BorderStyleProperty.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BorderStyleProperty.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BorderStyleProperty::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BorderStyleProperty::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BorderStyleProperty.Apply
void PowerUI::Css::Properties::BorderStyleProperty::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BorderStyleProperty::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.BorderWidth
#include "PowerUI/Css/Properties/BorderWidth.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.BorderWidth.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::BorderWidth::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BorderWidth::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.BorderWidth.Apply
void PowerUI::Css::Properties::BorderWidth::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::BorderWidth::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Bottom
#include "PowerUI/Css/Properties/Bottom.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Bottom.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Bottom::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Bottom::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Bottom.Apply
void PowerUI::Css::Properties::Bottom::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Bottom::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Clip
#include "PowerUI/Css/Properties/Clip.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Clip.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Clip::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Clip::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Clip.Apply
void PowerUI::Css::Properties::Clip::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Clip::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.ColorProperty
#include "PowerUI/Css/Properties/ColorProperty.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.ColorProperty.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::ColorProperty::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ColorProperty::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.ColorProperty.Apply
void PowerUI::Css::Properties::ColorProperty::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ColorProperty::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.ColorOverlay
#include "PowerUI/Css/Properties/ColorOverlay.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.ColorOverlay.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::ColorOverlay::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ColorOverlay::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.ColorOverlay.SetDefault
void PowerUI::Css::Properties::ColorOverlay::SetDefault(::PowerUI::Css::Value* value, ::PowerUI::Css::ValueType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ColorOverlay::SetDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, type);
}
// Autogenerated method: PowerUI.Css.Properties.ColorOverlay.Apply
void PowerUI::Css::Properties::ColorOverlay::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ColorOverlay::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Content
#include "PowerUI/Css/Properties/Content.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Content.SetValue
void PowerUI::Css::Properties::Content::SetValue(::PowerUI::Css::CssProperty* property, ::PowerUI::Css::ComputedStyle* style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Content::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property), ::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property, style);
}
// Autogenerated method: PowerUI.Css.Properties.Content.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Content::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Content::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Content.Apply
void PowerUI::Css::Properties::Content::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Content::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Direction
#include "PowerUI/Css/Properties/Direction.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Direction.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Direction::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Direction::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Direction.Apply
void PowerUI::Css::Properties::Direction::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Direction::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Display
#include "PowerUI/Css/Properties/Display.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Display.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Display::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Display::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Display.Apply
void PowerUI::Css::Properties::Display::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Display::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.FilteringMode
#include "PowerUI/Css/Properties/FilteringMode.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.FilteringMode.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::FilteringMode::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FilteringMode::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.FilteringMode.Apply
void PowerUI::Css::Properties::FilteringMode::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FilteringMode::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Float
#include "PowerUI/Css/Properties/Float.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Float.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Float::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Float::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Float.Apply
void PowerUI::Css::Properties::Float::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Float::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.FontFamily
#include "PowerUI/Css/Properties/FontFamily.hpp"
// Including type: PowerUI.Css.TextRenderingProperty
#include "PowerUI/Css/TextRenderingProperty.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.FontFamily.Find
void PowerUI::Css::Properties::FontFamily::Find(::StringW fontName, ::PowerUI::Css::TextRenderingProperty* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontFamily::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontName), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fontName, text);
}
// Autogenerated method: PowerUI.Css.Properties.FontFamily.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::FontFamily::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontFamily::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.FontFamily.Apply
void PowerUI::Css::Properties::FontFamily::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontFamily::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.FontSize
#include "PowerUI/Css/Properties/FontSize.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.Properties.FontSize GlobalProperty
::PowerUI::Css::Properties::FontSize* PowerUI::Css::Properties::FontSize::_get_GlobalProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontSize::_get_GlobalProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::Properties::FontSize*>("PowerUI.Css.Properties", "FontSize", "GlobalProperty"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.Properties.FontSize GlobalProperty
void PowerUI::Css::Properties::FontSize::_set_GlobalProperty(::PowerUI::Css::Properties::FontSize* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontSize::_set_GlobalProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css.Properties", "FontSize", "GlobalProperty", value));
}
// Autogenerated method: PowerUI.Css.Properties.FontSize.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::FontSize::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontSize::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.FontSize.Apply
void PowerUI::Css::Properties::FontSize::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontSize::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.FontSmoothing
#include "PowerUI/Css/Properties/FontSmoothing.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.FontSmoothing.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::FontSmoothing::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontSmoothing::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.FontSmoothing.Apply
void PowerUI::Css::Properties::FontSmoothing::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontSmoothing::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.FontStyle
#include "PowerUI/Css/Properties/FontStyle.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.FontStyle.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::FontStyle::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontStyle::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.FontStyle.Apply
void PowerUI::Css::Properties::FontStyle::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontStyle::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.FontWeight
#include "PowerUI/Css/Properties/FontWeight.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.FontWeight.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::FontWeight::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontWeight::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.FontWeight.Apply
void PowerUI::Css::Properties::FontWeight::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::FontWeight::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Height
#include "PowerUI/Css/Properties/Height.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.Properties.Height GlobalProperty
::PowerUI::Css::Properties::Height* PowerUI::Css::Properties::Height::_get_GlobalProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Height::_get_GlobalProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::Properties::Height*>("PowerUI.Css.Properties", "Height", "GlobalProperty"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.Properties.Height GlobalProperty
void PowerUI::Css::Properties::Height::_set_GlobalProperty(::PowerUI::Css::Properties::Height* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Height::_set_GlobalProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css.Properties", "Height", "GlobalProperty", value));
}
// Autogenerated method: PowerUI.Css.Properties.Height.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Height::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Height::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Height.Apply
void PowerUI::Css::Properties::Height::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Height::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Left
#include "PowerUI/Css/Properties/Left.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Left.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Left::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Left::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Left.Apply
void PowerUI::Css::Properties::Left::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Left::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.LetterSpacing
#include "PowerUI/Css/Properties/LetterSpacing.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.LetterSpacing.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::LetterSpacing::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::LetterSpacing::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.LetterSpacing.Apply
void PowerUI::Css::Properties::LetterSpacing::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::LetterSpacing::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.LineHeight
#include "PowerUI/Css/Properties/LineHeight.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.LineHeight.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::LineHeight::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::LineHeight::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.LineHeight.Apply
void PowerUI::Css::Properties::LineHeight::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::LineHeight::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Margin
#include "PowerUI/Css/Properties/Margin.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Margin.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Margin::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Margin::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Margin.Apply
void PowerUI::Css::Properties::Margin::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Margin::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.MaxHeight
#include "PowerUI/Css/Properties/MaxHeight.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.MaxHeight.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::MaxHeight::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::MaxHeight::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.MaxHeight.Apply
void PowerUI::Css::Properties::MaxHeight::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::MaxHeight::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.MaxWidth
#include "PowerUI/Css/Properties/MaxWidth.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.MaxWidth.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::MaxWidth::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::MaxWidth::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.MaxWidth.Apply
void PowerUI::Css::Properties::MaxWidth::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::MaxWidth::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.MinHeight
#include "PowerUI/Css/Properties/MinHeight.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.MinHeight.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::MinHeight::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::MinHeight::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.MinHeight.Apply
void PowerUI::Css::Properties::MinHeight::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::MinHeight::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.MinWidth
#include "PowerUI/Css/Properties/MinWidth.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.MinWidth.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::MinWidth::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::MinWidth::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.MinWidth.Apply
void PowerUI::Css::Properties::MinWidth::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::MinWidth::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.OnAtlas
#include "PowerUI/Css/Properties/OnAtlas.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.OnAtlas.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::OnAtlas::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::OnAtlas::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.OnAtlas.Apply
void PowerUI::Css::Properties::OnAtlas::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::OnAtlas::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Overflow
#include "PowerUI/Css/Properties/Overflow.hpp"
// Including type: PowerUI.Css.OverflowType
#include "PowerUI/Css/OverflowType.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Overflow.GetOverflowType
::PowerUI::Css::OverflowType PowerUI::Css::Properties::Overflow::GetOverflowType(::StringW overflow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Overflow::GetOverflowType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverflowType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overflow)})));
  return ::il2cpp_utils::RunMethodRethrow<::PowerUI::Css::OverflowType, false>(this, ___internal__method, overflow);
}
// Autogenerated method: PowerUI.Css.Properties.Overflow.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Overflow::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Overflow::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Overflow.Apply
void PowerUI::Css::Properties::Overflow::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Overflow::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Padding
#include "PowerUI/Css/Properties/Padding.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Padding.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Padding::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Padding::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Padding.Apply
void PowerUI::Css::Properties::Padding::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Padding::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.ParticleSystem
#include "PowerUI/Css/Properties/ParticleSystem.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.ParticleSystem.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::ParticleSystem::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ParticleSystem::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.ParticleSystem.Apply
void PowerUI::Css::Properties::ParticleSystem::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ParticleSystem::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Position
#include "PowerUI/Css/Properties/Position.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Position.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Position::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Position::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Position.Apply
void PowerUI::Css::Properties::Position::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Position::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Right
#include "PowerUI/Css/Properties/Right.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Right.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Right::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Right::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Right.Apply
void PowerUI::Css::Properties::Right::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Right::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Rotate
#include "PowerUI/Css/Properties/Rotate.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Rotate.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Rotate::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Rotate::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Rotate.Apply
void PowerUI::Css::Properties::Rotate::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Rotate::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Scale
#include "PowerUI/Css/Properties/Scale.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Scale.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Scale::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Scale::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Scale.SetDefault
void PowerUI::Css::Properties::Scale::SetDefault(::PowerUI::Css::Value* value, ::PowerUI::Css::ValueType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Scale::SetDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, type);
}
// Autogenerated method: PowerUI.Css.Properties.Scale.Apply
void PowerUI::Css::Properties::Scale::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Scale::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Scroll
#include "PowerUI/Css/Properties/Scroll.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Scroll.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Scroll::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Scroll::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Scroll.SetDefault
void PowerUI::Css::Properties::Scroll::SetDefault(::PowerUI::Css::Value* value, ::PowerUI::Css::ValueType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Scroll::SetDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, type);
}
// Autogenerated method: PowerUI.Css.Properties.Scroll.Apply
void PowerUI::Css::Properties::Scroll::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Scroll::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Lighting
#include "PowerUI/Css/Properties/Lighting.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Lighting.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Lighting::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Lighting::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Lighting.Apply
void PowerUI::Css::Properties::Lighting::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Lighting::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.ShaderFamily
#include "PowerUI/Css/Properties/ShaderFamily.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.ShaderFamily.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::ShaderFamily::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ShaderFamily::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.ShaderFamily.Apply
void PowerUI::Css::Properties::ShaderFamily::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ShaderFamily::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.TextShadow
#include "PowerUI/Css/Properties/TextShadow.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.TextShadow.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::TextShadow::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextShadow::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.TextShadow.Apply
void PowerUI::Css::Properties::TextShadow::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextShadow::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.TextStroke
#include "PowerUI/Css/Properties/TextStroke.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.TextStroke.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::TextStroke::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextStroke::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.TextStroke.Apply
void PowerUI::Css::Properties::TextStroke::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextStroke::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Skew
#include "PowerUI/Css/Properties/Skew.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Skew.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Skew::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Skew::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Skew.Apply
void PowerUI::Css::Properties::Skew::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Skew::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.UrlSrc
#include "PowerUI/Css/Properties/UrlSrc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.UrlSrc.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::UrlSrc::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::UrlSrc::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.TextAlign
#include "PowerUI/Css/Properties/TextAlign.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.TextAlign.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::TextAlign::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextAlign::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.TextAlign.Apply
void PowerUI::Css::Properties::TextAlign::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextAlign::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.TextAlignLast
#include "PowerUI/Css/Properties/TextAlignLast.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.TextAlignLast.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::TextAlignLast::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextAlignLast::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.TextAlignLast.Apply
void PowerUI::Css::Properties::TextAlignLast::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextAlignLast::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.TextDecorationColor
#include "PowerUI/Css/Properties/TextDecorationColor.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.TextDecorationColor.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::TextDecorationColor::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextDecorationColor::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.TextDecorationColor.Apply
void PowerUI::Css::Properties::TextDecorationColor::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextDecorationColor::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.TextDecorationLine
#include "PowerUI/Css/Properties/TextDecorationLine.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.TextDecorationLine.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::TextDecorationLine::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextDecorationLine::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.TextDecorationLine.Apply
void PowerUI::Css::Properties::TextDecorationLine::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextDecorationLine::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.TextExtrude
#include "PowerUI/Css/Properties/TextExtrude.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean Inverse
bool PowerUI::Css::Properties::TextExtrude::_get_Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextExtrude::_get_Inverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("PowerUI.Css.Properties", "TextExtrude", "Inverse"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean Inverse
void PowerUI::Css::Properties::TextExtrude::_set_Inverse(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextExtrude::_set_Inverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css.Properties", "TextExtrude", "Inverse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single CurveAccuracy
float PowerUI::Css::Properties::TextExtrude::_get_CurveAccuracy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextExtrude::_get_CurveAccuracy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("PowerUI.Css.Properties", "TextExtrude", "CurveAccuracy"));
}
// Autogenerated static field setter
// Set static field: static public System.Single CurveAccuracy
void PowerUI::Css::Properties::TextExtrude::_set_CurveAccuracy(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextExtrude::_set_CurveAccuracy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css.Properties", "TextExtrude", "CurveAccuracy", value));
}
// Autogenerated method: PowerUI.Css.Properties.TextExtrude..cctor
void PowerUI::Css::Properties::TextExtrude::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextExtrude::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PowerUI.Css.Properties", "TextExtrude", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.TextExtrude.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::TextExtrude::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextExtrude::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.TextExtrude.Apply
void PowerUI::Css::Properties::TextExtrude::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TextExtrude::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Top
#include "PowerUI/Css/Properties/Top.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Top.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Top::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Top::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Top.Apply
void PowerUI::Css::Properties::Top::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Top::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.TransformOrigin
#include "PowerUI/Css/Properties/TransformOrigin.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.TransformOrigin.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::TransformOrigin::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TransformOrigin::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.TransformOrigin.Apply
void PowerUI::Css::Properties::TransformOrigin::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TransformOrigin::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.TransformOriginPosition
#include "PowerUI/Css/Properties/TransformOriginPosition.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.TransformOriginPosition.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::TransformOriginPosition::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TransformOriginPosition::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.TransformOriginPosition.Apply
void PowerUI::Css::Properties::TransformOriginPosition::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::TransformOriginPosition::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Translate
#include "PowerUI/Css/Properties/Translate.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Translate.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Translate::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Translate::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Translate.Apply
void PowerUI::Css::Properties::Translate::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Translate::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.VerticalAlign
#include "PowerUI/Css/Properties/VerticalAlign.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.VerticalAlign.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::VerticalAlign::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::VerticalAlign::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.VerticalAlign.Apply
void PowerUI::Css::Properties::VerticalAlign::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::VerticalAlign::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Visibility
#include "PowerUI/Css/Properties/Visibility.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.Visibility.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Visibility::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Visibility::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Visibility.Apply
void PowerUI::Css::Properties::Visibility::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Visibility::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.WhiteSpace
#include "PowerUI/Css/Properties/WhiteSpace.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.WhiteSpace.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::WhiteSpace::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::WhiteSpace::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.WhiteSpace.Apply
void PowerUI::Css::Properties::WhiteSpace::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::WhiteSpace::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.Width
#include "PowerUI/Css/Properties/Width.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PowerUI.Css.Properties.Width GlobalProperty
::PowerUI::Css::Properties::Width* PowerUI::Css::Properties::Width::_get_GlobalProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Width::_get_GlobalProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PowerUI::Css::Properties::Width*>("PowerUI.Css.Properties", "Width", "GlobalProperty"));
}
// Autogenerated static field setter
// Set static field: static public PowerUI.Css.Properties.Width GlobalProperty
void PowerUI::Css::Properties::Width::_set_GlobalProperty(::PowerUI::Css::Properties::Width* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Width::_set_GlobalProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PowerUI.Css.Properties", "Width", "GlobalProperty", value));
}
// Autogenerated method: PowerUI.Css.Properties.Width.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::Width::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Width::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.Width.Apply
void PowerUI::Css::Properties::Width::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::Width::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.WordSpacing
#include "PowerUI/Css/Properties/WordSpacing.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.WordSpacing.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::WordSpacing::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::WordSpacing::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.WordSpacing.Apply
void PowerUI::Css::Properties::WordSpacing::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::WordSpacing::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Properties.ZIndex
#include "PowerUI/Css/Properties/ZIndex.hpp"
// Including type: PowerUI.Css.ComputedStyle
#include "PowerUI/Css/ComputedStyle.hpp"
// Including type: PowerUI.Css.Value
#include "PowerUI/Css/Value.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Properties.ZIndex.GetProperties
::ArrayW<::StringW> PowerUI::Css::Properties::ZIndex::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ZIndex::GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PowerUI.Css.Properties.ZIndex.Apply
void PowerUI::Css::Properties::ZIndex::Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Properties::ZIndex::Apply");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssProperty*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, style, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Functions.Rgba
#include "PowerUI/Css/Functions/Rgba.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Functions.Rgba.GetNames
::ArrayW<::StringW> PowerUI::Css::Functions::Rgba::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Functions::Rgba::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssFunction*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PowerUI.Css.Functions.Url
#include "PowerUI/Css/Functions/Url.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PowerUI.Css.Functions.Url.GetNames
::ArrayW<::StringW> PowerUI::Css::Functions::Url::GetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Functions::Url::GetNames");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PowerUI::Css::CssFunction*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusAnimator
#include "Pegasus/PegasusAnimator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform m_character
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pegasus::PegasusAnimator::dyn_m_character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_character");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_character"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animator m_animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& Pegasus::PegasusAnimator::dyn_m_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/PegasusAnimationState m_animationState
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::PegasusAnimationState& Pegasus::PegasusAnimator::dyn_m_animationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_animationState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animationState"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::PegasusAnimationState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pegasus.PegasusConstants/PegasusAnimationState m_lastAnimationState
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::PegasusAnimationState& Pegasus::PegasusAnimator::dyn_m_lastAnimationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_lastAnimationState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastAnimationState"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::PegasusAnimationState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationClip m_idleAnimation
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& Pegasus::PegasusAnimator::dyn_m_idleAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_idleAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_idleAnimation"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationClip m_walkAnimation
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& Pegasus::PegasusAnimator::dyn_m_walkAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_walkAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_walkAnimation"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationClip m_runAnimation
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& Pegasus::PegasusAnimator::dyn_m_runAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_runAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_runAnimation"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_walkSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusAnimator::dyn_m_walkSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_walkSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_walkSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_maxWalkSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusAnimator::dyn_m_maxWalkSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_maxWalkSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxWalkSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_runSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusAnimator::dyn_m_runSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_runSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_runSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_speedDamping
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusAnimator::dyn_m_speedDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_speedDamping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_speedDamping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_speed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusAnimator::dyn_m_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lastSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusAnimator::dyn_m_lastSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_lastSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pegasus::PegasusAnimator::dyn_m_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_animationMultiplier
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusAnimator::dyn_m_animationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_animationMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animationMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_animationStateHash
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusAnimator::dyn_m_animationStateHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_animationStateHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animationStateHash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_animationMultiplierHash
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusAnimator::dyn_m_animationMultiplierHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::dyn_m_animationMultiplierHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animationMultiplierHash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.PegasusAnimator.Start
void Pegasus::PegasusAnimator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusAnimator.Update
void Pegasus::PegasusAnimator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusAnimator.PlayState
void Pegasus::PegasusAnimator::PlayState(::Pegasus::PegasusConstants::PegasusAnimationState newState, bool forceStateNow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::PlayState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newState), ::il2cpp_utils::ExtractType(forceStateNow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newState, forceStateNow);
}
// Autogenerated method: Pegasus.PegasusAnimator.ReplaceClip
void Pegasus::PegasusAnimator::ReplaceClip(::UnityEngine::Animator* animator, ::StringW clipName, ::UnityEngine::AnimationClip* overrideClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusAnimator::ReplaceClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(clipName), ::il2cpp_utils::ExtractType(overrideClip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, clipName, overrideClip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusBehaviour
#include "Pegasus/PegasusBehaviour.hpp"
// Including type: Pegasus.PegasusManager
#include "Pegasus/PegasusManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusManager pegasusManager
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusManager*& Pegasus::PegasusBehaviour::dyn_pegasusManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusBehaviour::dyn_pegasusManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pegasusManager"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pegasusProgress
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusBehaviour::dyn_pegasusProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusBehaviour::dyn_pegasusProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pegasusProgress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusCapture
#include "Pegasus/PegasusCapture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: Pegasus.PegasusPath
#include "Pegasus/PegasusPath.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode m_keyCodeCapture
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Pegasus::PegasusCapture::dyn_m_keyCodeCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::dyn_m_keyCodeCapture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyCodeCapture"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera m_mainCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& Pegasus::PegasusCapture::dyn_m_mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::dyn_m_mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mainCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusPath m_path
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusPath*& Pegasus::PegasusCapture::dyn_m_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::dyn_m_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_path"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_enableOnStart
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusCapture::dyn_m_enableOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::dyn_m_enableOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_clearOnStart
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusCapture::dyn_m_clearOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::dyn_m_clearOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_clearOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_showReticule
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusCapture::dyn_m_showReticule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::dyn_m_showReticule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_showReticule"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_reticuleGO
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pegasus::PegasusCapture::dyn_m_reticuleGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::dyn_m_reticuleGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_reticuleGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.PegasusCapture.Start
void Pegasus::PegasusCapture::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusCapture.Update
void Pegasus::PegasusCapture::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusCapture.ProcessCaptureEvent
void Pegasus::PegasusCapture::ProcessCaptureEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::ProcessCaptureEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessCaptureEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusCapture.UpdateReticuleVisibility
void Pegasus::PegasusCapture::UpdateReticuleVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::UpdateReticuleVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateReticuleVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusCapture.UpdateReticuleText
void Pegasus::PegasusCapture::UpdateReticuleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusCapture::UpdateReticuleText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateReticuleText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusClip
#include "Pegasus/PegasusClip.hpp"
// Including type: Pegasus.PegasusManager
#include "Pegasus/PegasusManager.hpp"
// Including type: Pegasus.PegasusBehaviour
#include "Pegasus/PegasusBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<Pegasus.PegasusManager> PegasusManager
[[deprecated("Use field access instead!")]] ::UnityEngine::ExposedReference_1<::Pegasus::PegasusManager*>& Pegasus::PegasusClip::dyn_PegasusManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusClip::dyn_PegasusManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PegasusManager"))->offset;
  return *reinterpret_cast<::UnityEngine::ExposedReference_1<::Pegasus::PegasusManager*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PegasusProgress
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusClip::dyn_PegasusProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusClip::dyn_PegasusProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PegasusProgress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusBehaviour template
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusBehaviour*& Pegasus::PegasusClip::dyn_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusClip::dyn_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.PegasusClip.get_clipCaps
::UnityEngine::Timeline::ClipCaps Pegasus::PegasusClip::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusClip::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::PegasusClip*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusClip.CreatePlayable
::UnityEngine::Playables::Playable Pegasus::PegasusClip::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusClip::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, owner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants
#include "Pegasus/PegasusConstants.hpp"
// Including type: Pegasus.PegasusConstants/FlythroughType
#include "Pegasus/PegasusConstants_FlythroughType.hpp"
// Including type: Pegasus.PegasusConstants/FlythroughEndAction
#include "Pegasus/PegasusConstants_FlythroughEndAction.hpp"
// Including type: Pegasus.PegasusConstants/FlythroughState
#include "Pegasus/PegasusConstants_FlythroughState.hpp"
// Including type: Pegasus.PegasusConstants/HeightCheckType
#include "Pegasus/PegasusConstants_HeightCheckType.hpp"
// Including type: Pegasus.PegasusConstants/PoiHeightCheckType
#include "Pegasus/PegasusConstants_PoiHeightCheckType.hpp"
// Including type: Pegasus.PegasusConstants/PoiType
#include "Pegasus/PegasusConstants_PoiType.hpp"
// Including type: Pegasus.PegasusConstants/LookatType
#include "Pegasus/PegasusConstants_LookatType.hpp"
// Including type: Pegasus.PegasusConstants/SpeedType
#include "Pegasus/PegasusConstants_SpeedType.hpp"
// Including type: Pegasus.PegasusConstants/EasingType
#include "Pegasus/PegasusConstants_EasingType.hpp"
// Including type: Pegasus.PegasusConstants/TargetFrameRate
#include "Pegasus/PegasusConstants_TargetFrameRate.hpp"
// Including type: Pegasus.PegasusConstants/PegasusAnimationState
#include "Pegasus/PegasusConstants_PegasusAnimationState.hpp"
// Including type: Pegasus.PegasusConstants/PoiPegasusTriggerAction
#include "Pegasus/PegasusConstants_PoiPegasusTriggerAction.hpp"
// Including type: Pegasus.PegasusConstants/PoiHeliosTriggerAction
#include "Pegasus/PegasusConstants_PoiHeliosTriggerAction.hpp"
// Including type: Pegasus.PegasusConstants/PoiRotateTowardsTriggerAction
#include "Pegasus/PegasusConstants_PoiRotateTowardsTriggerAction.hpp"
// Including type: Pegasus.PegasusConstants/PoiAnimationTriggerAction
#include "Pegasus/PegasusConstants_PoiAnimationTriggerAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String MajorVersion
::StringW Pegasus::PegasusConstants::_get_MajorVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_MajorVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Pegasus", "PegasusConstants", "MajorVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String MajorVersion
void Pegasus::PegasusConstants::_set_MajorVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_MajorVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "MajorVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.String MinorVersion
::StringW Pegasus::PegasusConstants::_get_MinorVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_MinorVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Pegasus", "PegasusConstants", "MinorVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String MinorVersion
void Pegasus::PegasusConstants::_set_MinorVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_MinorVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "MinorVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FlybyOffsetDefaultHeight
float Pegasus::PegasusConstants::_get_FlybyOffsetDefaultHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_FlybyOffsetDefaultHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pegasus", "PegasusConstants", "FlybyOffsetDefaultHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FlybyOffsetDefaultHeight
void Pegasus::PegasusConstants::_set_FlybyOffsetDefaultHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_FlybyOffsetDefaultHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "FlybyOffsetDefaultHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FlybyOffsetLow
float Pegasus::PegasusConstants::_get_FlybyOffsetLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_FlybyOffsetLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pegasus", "PegasusConstants", "FlybyOffsetLow"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FlybyOffsetLow
void Pegasus::PegasusConstants::_set_FlybyOffsetLow(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_FlybyOffsetLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "FlybyOffsetLow", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FlybyOffsetHigh
float Pegasus::PegasusConstants::_get_FlybyOffsetHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_FlybyOffsetHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pegasus", "PegasusConstants", "FlybyOffsetHigh"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FlybyOffsetHigh
void Pegasus::PegasusConstants::_set_FlybyOffsetHigh(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_FlybyOffsetHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "FlybyOffsetHigh", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single SpeedReallySlow
float Pegasus::PegasusConstants::_get_SpeedReallySlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_SpeedReallySlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pegasus", "PegasusConstants", "SpeedReallySlow"));
}
// Autogenerated static field setter
// Set static field: static public System.Single SpeedReallySlow
void Pegasus::PegasusConstants::_set_SpeedReallySlow(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_SpeedReallySlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "SpeedReallySlow", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single SpeedSlow
float Pegasus::PegasusConstants::_get_SpeedSlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_SpeedSlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pegasus", "PegasusConstants", "SpeedSlow"));
}
// Autogenerated static field setter
// Set static field: static public System.Single SpeedSlow
void Pegasus::PegasusConstants::_set_SpeedSlow(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_SpeedSlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "SpeedSlow", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single SpeedMedium
float Pegasus::PegasusConstants::_get_SpeedMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_SpeedMedium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pegasus", "PegasusConstants", "SpeedMedium"));
}
// Autogenerated static field setter
// Set static field: static public System.Single SpeedMedium
void Pegasus::PegasusConstants::_set_SpeedMedium(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_SpeedMedium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "SpeedMedium", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single SpeedFast
float Pegasus::PegasusConstants::_get_SpeedFast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_SpeedFast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pegasus", "PegasusConstants", "SpeedFast"));
}
// Autogenerated static field setter
// Set static field: static public System.Single SpeedFast
void Pegasus::PegasusConstants::_set_SpeedFast(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_SpeedFast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "SpeedFast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single SpeedReallyFast
float Pegasus::PegasusConstants::_get_SpeedReallyFast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_SpeedReallyFast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pegasus", "PegasusConstants", "SpeedReallyFast"));
}
// Autogenerated static field setter
// Set static field: static public System.Single SpeedReallyFast
void Pegasus::PegasusConstants::_set_SpeedReallyFast(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_SpeedReallyFast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "SpeedReallyFast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single SpeedStratospheric
float Pegasus::PegasusConstants::_get_SpeedStratospheric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_get_SpeedStratospheric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Pegasus", "PegasusConstants", "SpeedStratospheric"));
}
// Autogenerated static field setter
// Set static field: static public System.Single SpeedStratospheric
void Pegasus::PegasusConstants::_set_SpeedStratospheric(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::_set_SpeedStratospheric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants", "SpeedStratospheric", value));
}
// Autogenerated method: Pegasus.PegasusConstants..cctor
void Pegasus::PegasusConstants::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusConstants", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/FlythroughType
#include "Pegasus/PegasusConstants_FlythroughType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/FlythroughType SingleShot
::Pegasus::PegasusConstants::FlythroughType Pegasus::PegasusConstants::FlythroughType::_get_SingleShot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughType::_get_SingleShot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::FlythroughType>("Pegasus", "PegasusConstants/FlythroughType", "SingleShot"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/FlythroughType SingleShot
void Pegasus::PegasusConstants::FlythroughType::_set_SingleShot(::Pegasus::PegasusConstants::FlythroughType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughType::_set_SingleShot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/FlythroughType", "SingleShot", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/FlythroughType Looped
::Pegasus::PegasusConstants::FlythroughType Pegasus::PegasusConstants::FlythroughType::_get_Looped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughType::_get_Looped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::FlythroughType>("Pegasus", "PegasusConstants/FlythroughType", "Looped"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/FlythroughType Looped
void Pegasus::PegasusConstants::FlythroughType::_set_Looped(::Pegasus::PegasusConstants::FlythroughType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughType::_set_Looped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/FlythroughType", "Looped", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::FlythroughType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/FlythroughEndAction
#include "Pegasus/PegasusConstants_FlythroughEndAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/FlythroughEndAction StopFlythrough
::Pegasus::PegasusConstants::FlythroughEndAction Pegasus::PegasusConstants::FlythroughEndAction::_get_StopFlythrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughEndAction::_get_StopFlythrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::FlythroughEndAction>("Pegasus", "PegasusConstants/FlythroughEndAction", "StopFlythrough"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/FlythroughEndAction StopFlythrough
void Pegasus::PegasusConstants::FlythroughEndAction::_set_StopFlythrough(::Pegasus::PegasusConstants::FlythroughEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughEndAction::_set_StopFlythrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/FlythroughEndAction", "StopFlythrough", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/FlythroughEndAction QuitApplication
::Pegasus::PegasusConstants::FlythroughEndAction Pegasus::PegasusConstants::FlythroughEndAction::_get_QuitApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughEndAction::_get_QuitApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::FlythroughEndAction>("Pegasus", "PegasusConstants/FlythroughEndAction", "QuitApplication"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/FlythroughEndAction QuitApplication
void Pegasus::PegasusConstants::FlythroughEndAction::_set_QuitApplication(::Pegasus::PegasusConstants::FlythroughEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughEndAction::_set_QuitApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/FlythroughEndAction", "QuitApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/FlythroughEndAction PlayNextPegasus
::Pegasus::PegasusConstants::FlythroughEndAction Pegasus::PegasusConstants::FlythroughEndAction::_get_PlayNextPegasus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughEndAction::_get_PlayNextPegasus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::FlythroughEndAction>("Pegasus", "PegasusConstants/FlythroughEndAction", "PlayNextPegasus"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/FlythroughEndAction PlayNextPegasus
void Pegasus::PegasusConstants::FlythroughEndAction::_set_PlayNextPegasus(::Pegasus::PegasusConstants::FlythroughEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughEndAction::_set_PlayNextPegasus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/FlythroughEndAction", "PlayNextPegasus", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::FlythroughEndAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughEndAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/FlythroughState
#include "Pegasus/PegasusConstants_FlythroughState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/FlythroughState Stopped
::Pegasus::PegasusConstants::FlythroughState Pegasus::PegasusConstants::FlythroughState::_get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughState::_get_Stopped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::FlythroughState>("Pegasus", "PegasusConstants/FlythroughState", "Stopped"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/FlythroughState Stopped
void Pegasus::PegasusConstants::FlythroughState::_set_Stopped(::Pegasus::PegasusConstants::FlythroughState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughState::_set_Stopped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/FlythroughState", "Stopped", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/FlythroughState Initialising
::Pegasus::PegasusConstants::FlythroughState Pegasus::PegasusConstants::FlythroughState::_get_Initialising() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughState::_get_Initialising");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::FlythroughState>("Pegasus", "PegasusConstants/FlythroughState", "Initialising"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/FlythroughState Initialising
void Pegasus::PegasusConstants::FlythroughState::_set_Initialising(::Pegasus::PegasusConstants::FlythroughState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughState::_set_Initialising");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/FlythroughState", "Initialising", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/FlythroughState Started
::Pegasus::PegasusConstants::FlythroughState Pegasus::PegasusConstants::FlythroughState::_get_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughState::_get_Started");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::FlythroughState>("Pegasus", "PegasusConstants/FlythroughState", "Started"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/FlythroughState Started
void Pegasus::PegasusConstants::FlythroughState::_set_Started(::Pegasus::PegasusConstants::FlythroughState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughState::_set_Started");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/FlythroughState", "Started", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/FlythroughState Paused
::Pegasus::PegasusConstants::FlythroughState Pegasus::PegasusConstants::FlythroughState::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughState::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::FlythroughState>("Pegasus", "PegasusConstants/FlythroughState", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/FlythroughState Paused
void Pegasus::PegasusConstants::FlythroughState::_set_Paused(::Pegasus::PegasusConstants::FlythroughState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughState::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/FlythroughState", "Paused", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::FlythroughState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::FlythroughState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/HeightCheckType
#include "Pegasus/PegasusConstants_HeightCheckType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/HeightCheckType Collision
::Pegasus::PegasusConstants::HeightCheckType Pegasus::PegasusConstants::HeightCheckType::_get_Collision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::HeightCheckType::_get_Collision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::HeightCheckType>("Pegasus", "PegasusConstants/HeightCheckType", "Collision"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/HeightCheckType Collision
void Pegasus::PegasusConstants::HeightCheckType::_set_Collision(::Pegasus::PegasusConstants::HeightCheckType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::HeightCheckType::_set_Collision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/HeightCheckType", "Collision", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/HeightCheckType Terrain
::Pegasus::PegasusConstants::HeightCheckType Pegasus::PegasusConstants::HeightCheckType::_get_Terrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::HeightCheckType::_get_Terrain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::HeightCheckType>("Pegasus", "PegasusConstants/HeightCheckType", "Terrain"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/HeightCheckType Terrain
void Pegasus::PegasusConstants::HeightCheckType::_set_Terrain(::Pegasus::PegasusConstants::HeightCheckType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::HeightCheckType::_set_Terrain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/HeightCheckType", "Terrain", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/HeightCheckType None
::Pegasus::PegasusConstants::HeightCheckType Pegasus::PegasusConstants::HeightCheckType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::HeightCheckType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::HeightCheckType>("Pegasus", "PegasusConstants/HeightCheckType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/HeightCheckType None
void Pegasus::PegasusConstants::HeightCheckType::_set_None(::Pegasus::PegasusConstants::HeightCheckType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::HeightCheckType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/HeightCheckType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::HeightCheckType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::HeightCheckType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/PoiHeightCheckType
#include "Pegasus/PegasusConstants_PoiHeightCheckType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiHeightCheckType ManagerSettings
::Pegasus::PegasusConstants::PoiHeightCheckType Pegasus::PegasusConstants::PoiHeightCheckType::_get_ManagerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeightCheckType::_get_ManagerSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiHeightCheckType>("Pegasus", "PegasusConstants/PoiHeightCheckType", "ManagerSettings"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiHeightCheckType ManagerSettings
void Pegasus::PegasusConstants::PoiHeightCheckType::_set_ManagerSettings(::Pegasus::PegasusConstants::PoiHeightCheckType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeightCheckType::_set_ManagerSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiHeightCheckType", "ManagerSettings", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiHeightCheckType Collision
::Pegasus::PegasusConstants::PoiHeightCheckType Pegasus::PegasusConstants::PoiHeightCheckType::_get_Collision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeightCheckType::_get_Collision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiHeightCheckType>("Pegasus", "PegasusConstants/PoiHeightCheckType", "Collision"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiHeightCheckType Collision
void Pegasus::PegasusConstants::PoiHeightCheckType::_set_Collision(::Pegasus::PegasusConstants::PoiHeightCheckType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeightCheckType::_set_Collision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiHeightCheckType", "Collision", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiHeightCheckType Terrain
::Pegasus::PegasusConstants::PoiHeightCheckType Pegasus::PegasusConstants::PoiHeightCheckType::_get_Terrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeightCheckType::_get_Terrain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiHeightCheckType>("Pegasus", "PegasusConstants/PoiHeightCheckType", "Terrain"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiHeightCheckType Terrain
void Pegasus::PegasusConstants::PoiHeightCheckType::_set_Terrain(::Pegasus::PegasusConstants::PoiHeightCheckType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeightCheckType::_set_Terrain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiHeightCheckType", "Terrain", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiHeightCheckType None
::Pegasus::PegasusConstants::PoiHeightCheckType Pegasus::PegasusConstants::PoiHeightCheckType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeightCheckType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiHeightCheckType>("Pegasus", "PegasusConstants/PoiHeightCheckType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiHeightCheckType None
void Pegasus::PegasusConstants::PoiHeightCheckType::_set_None(::Pegasus::PegasusConstants::PoiHeightCheckType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeightCheckType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiHeightCheckType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::PoiHeightCheckType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeightCheckType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/PoiType
#include "Pegasus/PegasusConstants_PoiType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiType Manual
::Pegasus::PegasusConstants::PoiType Pegasus::PegasusConstants::PoiType::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiType::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiType>("Pegasus", "PegasusConstants/PoiType", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiType Manual
void Pegasus::PegasusConstants::PoiType::_set_Manual(::Pegasus::PegasusConstants::PoiType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiType::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiType", "Manual", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiType AutoGenerated
::Pegasus::PegasusConstants::PoiType Pegasus::PegasusConstants::PoiType::_get_AutoGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiType::_get_AutoGenerated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiType>("Pegasus", "PegasusConstants/PoiType", "AutoGenerated"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiType AutoGenerated
void Pegasus::PegasusConstants::PoiType::_set_AutoGenerated(::Pegasus::PegasusConstants::PoiType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiType::_set_AutoGenerated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiType", "AutoGenerated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::PoiType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/LookatType
#include "Pegasus/PegasusConstants_LookatType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/LookatType Path
::Pegasus::PegasusConstants::LookatType Pegasus::PegasusConstants::LookatType::_get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::LookatType::_get_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::LookatType>("Pegasus", "PegasusConstants/LookatType", "Path"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/LookatType Path
void Pegasus::PegasusConstants::LookatType::_set_Path(::Pegasus::PegasusConstants::LookatType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::LookatType::_set_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/LookatType", "Path", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/LookatType Target
::Pegasus::PegasusConstants::LookatType Pegasus::PegasusConstants::LookatType::_get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::LookatType::_get_Target");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::LookatType>("Pegasus", "PegasusConstants/LookatType", "Target"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/LookatType Target
void Pegasus::PegasusConstants::LookatType::_set_Target(::Pegasus::PegasusConstants::LookatType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::LookatType::_set_Target");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/LookatType", "Target", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::LookatType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::LookatType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/SpeedType
#include "Pegasus/PegasusConstants_SpeedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/SpeedType ReallySlow
::Pegasus::PegasusConstants::SpeedType Pegasus::PegasusConstants::SpeedType::_get_ReallySlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_get_ReallySlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::SpeedType>("Pegasus", "PegasusConstants/SpeedType", "ReallySlow"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/SpeedType ReallySlow
void Pegasus::PegasusConstants::SpeedType::_set_ReallySlow(::Pegasus::PegasusConstants::SpeedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_set_ReallySlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/SpeedType", "ReallySlow", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/SpeedType Slow
::Pegasus::PegasusConstants::SpeedType Pegasus::PegasusConstants::SpeedType::_get_Slow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_get_Slow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::SpeedType>("Pegasus", "PegasusConstants/SpeedType", "Slow"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/SpeedType Slow
void Pegasus::PegasusConstants::SpeedType::_set_Slow(::Pegasus::PegasusConstants::SpeedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_set_Slow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/SpeedType", "Slow", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/SpeedType Medium
::Pegasus::PegasusConstants::SpeedType Pegasus::PegasusConstants::SpeedType::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::SpeedType>("Pegasus", "PegasusConstants/SpeedType", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/SpeedType Medium
void Pegasus::PegasusConstants::SpeedType::_set_Medium(::Pegasus::PegasusConstants::SpeedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/SpeedType", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/SpeedType Fast
::Pegasus::PegasusConstants::SpeedType Pegasus::PegasusConstants::SpeedType::_get_Fast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_get_Fast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::SpeedType>("Pegasus", "PegasusConstants/SpeedType", "Fast"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/SpeedType Fast
void Pegasus::PegasusConstants::SpeedType::_set_Fast(::Pegasus::PegasusConstants::SpeedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_set_Fast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/SpeedType", "Fast", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/SpeedType ReallyFast
::Pegasus::PegasusConstants::SpeedType Pegasus::PegasusConstants::SpeedType::_get_ReallyFast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_get_ReallyFast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::SpeedType>("Pegasus", "PegasusConstants/SpeedType", "ReallyFast"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/SpeedType ReallyFast
void Pegasus::PegasusConstants::SpeedType::_set_ReallyFast(::Pegasus::PegasusConstants::SpeedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_set_ReallyFast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/SpeedType", "ReallyFast", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/SpeedType Stratospheric
::Pegasus::PegasusConstants::SpeedType Pegasus::PegasusConstants::SpeedType::_get_Stratospheric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_get_Stratospheric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::SpeedType>("Pegasus", "PegasusConstants/SpeedType", "Stratospheric"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/SpeedType Stratospheric
void Pegasus::PegasusConstants::SpeedType::_set_Stratospheric(::Pegasus::PegasusConstants::SpeedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_set_Stratospheric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/SpeedType", "Stratospheric", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/SpeedType Custom
::Pegasus::PegasusConstants::SpeedType Pegasus::PegasusConstants::SpeedType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::SpeedType>("Pegasus", "PegasusConstants/SpeedType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/SpeedType Custom
void Pegasus::PegasusConstants::SpeedType::_set_Custom(::Pegasus::PegasusConstants::SpeedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/SpeedType", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::SpeedType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::SpeedType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/EasingType
#include "Pegasus/PegasusConstants_EasingType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/EasingType Linear
::Pegasus::PegasusConstants::EasingType Pegasus::PegasusConstants::EasingType::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::EasingType::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::EasingType>("Pegasus", "PegasusConstants/EasingType", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/EasingType Linear
void Pegasus::PegasusConstants::EasingType::_set_Linear(::Pegasus::PegasusConstants::EasingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::EasingType::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/EasingType", "Linear", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/EasingType EaseIn
::Pegasus::PegasusConstants::EasingType Pegasus::PegasusConstants::EasingType::_get_EaseIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::EasingType::_get_EaseIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::EasingType>("Pegasus", "PegasusConstants/EasingType", "EaseIn"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/EasingType EaseIn
void Pegasus::PegasusConstants::EasingType::_set_EaseIn(::Pegasus::PegasusConstants::EasingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::EasingType::_set_EaseIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/EasingType", "EaseIn", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/EasingType EaseOut
::Pegasus::PegasusConstants::EasingType Pegasus::PegasusConstants::EasingType::_get_EaseOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::EasingType::_get_EaseOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::EasingType>("Pegasus", "PegasusConstants/EasingType", "EaseOut"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/EasingType EaseOut
void Pegasus::PegasusConstants::EasingType::_set_EaseOut(::Pegasus::PegasusConstants::EasingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::EasingType::_set_EaseOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/EasingType", "EaseOut", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/EasingType EaseInOut
::Pegasus::PegasusConstants::EasingType Pegasus::PegasusConstants::EasingType::_get_EaseInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::EasingType::_get_EaseInOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::EasingType>("Pegasus", "PegasusConstants/EasingType", "EaseInOut"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/EasingType EaseInOut
void Pegasus::PegasusConstants::EasingType::_set_EaseInOut(::Pegasus::PegasusConstants::EasingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::EasingType::_set_EaseInOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/EasingType", "EaseInOut", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::EasingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::EasingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/TargetFrameRate
#include "Pegasus/PegasusConstants_TargetFrameRate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/TargetFrameRate NineFps
::Pegasus::PegasusConstants::TargetFrameRate Pegasus::PegasusConstants::TargetFrameRate::_get_NineFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_get_NineFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::TargetFrameRate>("Pegasus", "PegasusConstants/TargetFrameRate", "NineFps"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/TargetFrameRate NineFps
void Pegasus::PegasusConstants::TargetFrameRate::_set_NineFps(::Pegasus::PegasusConstants::TargetFrameRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_set_NineFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/TargetFrameRate", "NineFps", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/TargetFrameRate FifteenFps
::Pegasus::PegasusConstants::TargetFrameRate Pegasus::PegasusConstants::TargetFrameRate::_get_FifteenFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_get_FifteenFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::TargetFrameRate>("Pegasus", "PegasusConstants/TargetFrameRate", "FifteenFps"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/TargetFrameRate FifteenFps
void Pegasus::PegasusConstants::TargetFrameRate::_set_FifteenFps(::Pegasus::PegasusConstants::TargetFrameRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_set_FifteenFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/TargetFrameRate", "FifteenFps", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/TargetFrameRate TwentyFourFps
::Pegasus::PegasusConstants::TargetFrameRate Pegasus::PegasusConstants::TargetFrameRate::_get_TwentyFourFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_get_TwentyFourFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::TargetFrameRate>("Pegasus", "PegasusConstants/TargetFrameRate", "TwentyFourFps"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/TargetFrameRate TwentyFourFps
void Pegasus::PegasusConstants::TargetFrameRate::_set_TwentyFourFps(::Pegasus::PegasusConstants::TargetFrameRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_set_TwentyFourFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/TargetFrameRate", "TwentyFourFps", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/TargetFrameRate TwentyFiveFps
::Pegasus::PegasusConstants::TargetFrameRate Pegasus::PegasusConstants::TargetFrameRate::_get_TwentyFiveFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_get_TwentyFiveFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::TargetFrameRate>("Pegasus", "PegasusConstants/TargetFrameRate", "TwentyFiveFps"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/TargetFrameRate TwentyFiveFps
void Pegasus::PegasusConstants::TargetFrameRate::_set_TwentyFiveFps(::Pegasus::PegasusConstants::TargetFrameRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_set_TwentyFiveFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/TargetFrameRate", "TwentyFiveFps", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/TargetFrameRate ThirtyFps
::Pegasus::PegasusConstants::TargetFrameRate Pegasus::PegasusConstants::TargetFrameRate::_get_ThirtyFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_get_ThirtyFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::TargetFrameRate>("Pegasus", "PegasusConstants/TargetFrameRate", "ThirtyFps"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/TargetFrameRate ThirtyFps
void Pegasus::PegasusConstants::TargetFrameRate::_set_ThirtyFps(::Pegasus::PegasusConstants::TargetFrameRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_set_ThirtyFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/TargetFrameRate", "ThirtyFps", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/TargetFrameRate SixtyFps
::Pegasus::PegasusConstants::TargetFrameRate Pegasus::PegasusConstants::TargetFrameRate::_get_SixtyFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_get_SixtyFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::TargetFrameRate>("Pegasus", "PegasusConstants/TargetFrameRate", "SixtyFps"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/TargetFrameRate SixtyFps
void Pegasus::PegasusConstants::TargetFrameRate::_set_SixtyFps(::Pegasus::PegasusConstants::TargetFrameRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_set_SixtyFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/TargetFrameRate", "SixtyFps", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/TargetFrameRate NinetyFps
::Pegasus::PegasusConstants::TargetFrameRate Pegasus::PegasusConstants::TargetFrameRate::_get_NinetyFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_get_NinetyFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::TargetFrameRate>("Pegasus", "PegasusConstants/TargetFrameRate", "NinetyFps"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/TargetFrameRate NinetyFps
void Pegasus::PegasusConstants::TargetFrameRate::_set_NinetyFps(::Pegasus::PegasusConstants::TargetFrameRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_set_NinetyFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/TargetFrameRate", "NinetyFps", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/TargetFrameRate MaxFps
::Pegasus::PegasusConstants::TargetFrameRate Pegasus::PegasusConstants::TargetFrameRate::_get_MaxFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_get_MaxFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::TargetFrameRate>("Pegasus", "PegasusConstants/TargetFrameRate", "MaxFps"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/TargetFrameRate MaxFps
void Pegasus::PegasusConstants::TargetFrameRate::_set_MaxFps(::Pegasus::PegasusConstants::TargetFrameRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_set_MaxFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/TargetFrameRate", "MaxFps", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/TargetFrameRate LeaveAlone
::Pegasus::PegasusConstants::TargetFrameRate Pegasus::PegasusConstants::TargetFrameRate::_get_LeaveAlone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_get_LeaveAlone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::TargetFrameRate>("Pegasus", "PegasusConstants/TargetFrameRate", "LeaveAlone"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/TargetFrameRate LeaveAlone
void Pegasus::PegasusConstants::TargetFrameRate::_set_LeaveAlone(::Pegasus::PegasusConstants::TargetFrameRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::_set_LeaveAlone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/TargetFrameRate", "LeaveAlone", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::TargetFrameRate::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::TargetFrameRate::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/PegasusAnimationState
#include "Pegasus/PegasusConstants_PegasusAnimationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PegasusAnimationState Idle
::Pegasus::PegasusConstants::PegasusAnimationState Pegasus::PegasusConstants::PegasusAnimationState::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PegasusAnimationState::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PegasusAnimationState>("Pegasus", "PegasusConstants/PegasusAnimationState", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PegasusAnimationState Idle
void Pegasus::PegasusConstants::PegasusAnimationState::_set_Idle(::Pegasus::PegasusConstants::PegasusAnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PegasusAnimationState::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PegasusAnimationState", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PegasusAnimationState Walking
::Pegasus::PegasusConstants::PegasusAnimationState Pegasus::PegasusConstants::PegasusAnimationState::_get_Walking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PegasusAnimationState::_get_Walking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PegasusAnimationState>("Pegasus", "PegasusConstants/PegasusAnimationState", "Walking"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PegasusAnimationState Walking
void Pegasus::PegasusConstants::PegasusAnimationState::_set_Walking(::Pegasus::PegasusConstants::PegasusAnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PegasusAnimationState::_set_Walking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PegasusAnimationState", "Walking", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PegasusAnimationState Running
::Pegasus::PegasusConstants::PegasusAnimationState Pegasus::PegasusConstants::PegasusAnimationState::_get_Running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PegasusAnimationState::_get_Running");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PegasusAnimationState>("Pegasus", "PegasusConstants/PegasusAnimationState", "Running"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PegasusAnimationState Running
void Pegasus::PegasusConstants::PegasusAnimationState::_set_Running(::Pegasus::PegasusConstants::PegasusAnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PegasusAnimationState::_set_Running");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PegasusAnimationState", "Running", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::PegasusAnimationState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PegasusAnimationState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/PoiPegasusTriggerAction
#include "Pegasus/PegasusConstants_PoiPegasusTriggerAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiPegasusTriggerAction PlayPegasus
::Pegasus::PegasusConstants::PoiPegasusTriggerAction Pegasus::PegasusConstants::PoiPegasusTriggerAction::_get_PlayPegasus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::_get_PlayPegasus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiPegasusTriggerAction>("Pegasus", "PegasusConstants/PoiPegasusTriggerAction", "PlayPegasus"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiPegasusTriggerAction PlayPegasus
void Pegasus::PegasusConstants::PoiPegasusTriggerAction::_set_PlayPegasus(::Pegasus::PegasusConstants::PoiPegasusTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::_set_PlayPegasus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiPegasusTriggerAction", "PlayPegasus", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiPegasusTriggerAction PausePegasus
::Pegasus::PegasusConstants::PoiPegasusTriggerAction Pegasus::PegasusConstants::PoiPegasusTriggerAction::_get_PausePegasus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::_get_PausePegasus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiPegasusTriggerAction>("Pegasus", "PegasusConstants/PoiPegasusTriggerAction", "PausePegasus"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiPegasusTriggerAction PausePegasus
void Pegasus::PegasusConstants::PoiPegasusTriggerAction::_set_PausePegasus(::Pegasus::PegasusConstants::PoiPegasusTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::_set_PausePegasus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiPegasusTriggerAction", "PausePegasus", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiPegasusTriggerAction ResumePegasus
::Pegasus::PegasusConstants::PoiPegasusTriggerAction Pegasus::PegasusConstants::PoiPegasusTriggerAction::_get_ResumePegasus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::_get_ResumePegasus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiPegasusTriggerAction>("Pegasus", "PegasusConstants/PoiPegasusTriggerAction", "ResumePegasus"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiPegasusTriggerAction ResumePegasus
void Pegasus::PegasusConstants::PoiPegasusTriggerAction::_set_ResumePegasus(::Pegasus::PegasusConstants::PoiPegasusTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::_set_ResumePegasus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiPegasusTriggerAction", "ResumePegasus", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiPegasusTriggerAction StopPegasus
::Pegasus::PegasusConstants::PoiPegasusTriggerAction Pegasus::PegasusConstants::PoiPegasusTriggerAction::_get_StopPegasus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::_get_StopPegasus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiPegasusTriggerAction>("Pegasus", "PegasusConstants/PoiPegasusTriggerAction", "StopPegasus"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiPegasusTriggerAction StopPegasus
void Pegasus::PegasusConstants::PoiPegasusTriggerAction::_set_StopPegasus(::Pegasus::PegasusConstants::PoiPegasusTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::_set_StopPegasus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiPegasusTriggerAction", "StopPegasus", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiPegasusTriggerAction DoNothing
::Pegasus::PegasusConstants::PoiPegasusTriggerAction Pegasus::PegasusConstants::PoiPegasusTriggerAction::_get_DoNothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::_get_DoNothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiPegasusTriggerAction>("Pegasus", "PegasusConstants/PoiPegasusTriggerAction", "DoNothing"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiPegasusTriggerAction DoNothing
void Pegasus::PegasusConstants::PoiPegasusTriggerAction::_set_DoNothing(::Pegasus::PegasusConstants::PoiPegasusTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::_set_DoNothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiPegasusTriggerAction", "DoNothing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::PoiPegasusTriggerAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiPegasusTriggerAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/PoiHeliosTriggerAction
#include "Pegasus/PegasusConstants_PoiHeliosTriggerAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiHeliosTriggerAction FadeIn
::Pegasus::PegasusConstants::PoiHeliosTriggerAction Pegasus::PegasusConstants::PoiHeliosTriggerAction::_get_FadeIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeliosTriggerAction::_get_FadeIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiHeliosTriggerAction>("Pegasus", "PegasusConstants/PoiHeliosTriggerAction", "FadeIn"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiHeliosTriggerAction FadeIn
void Pegasus::PegasusConstants::PoiHeliosTriggerAction::_set_FadeIn(::Pegasus::PegasusConstants::PoiHeliosTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeliosTriggerAction::_set_FadeIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiHeliosTriggerAction", "FadeIn", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiHeliosTriggerAction FadeOut
::Pegasus::PegasusConstants::PoiHeliosTriggerAction Pegasus::PegasusConstants::PoiHeliosTriggerAction::_get_FadeOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeliosTriggerAction::_get_FadeOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiHeliosTriggerAction>("Pegasus", "PegasusConstants/PoiHeliosTriggerAction", "FadeOut"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiHeliosTriggerAction FadeOut
void Pegasus::PegasusConstants::PoiHeliosTriggerAction::_set_FadeOut(::Pegasus::PegasusConstants::PoiHeliosTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeliosTriggerAction::_set_FadeOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiHeliosTriggerAction", "FadeOut", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiHeliosTriggerAction DoNothing
::Pegasus::PegasusConstants::PoiHeliosTriggerAction Pegasus::PegasusConstants::PoiHeliosTriggerAction::_get_DoNothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeliosTriggerAction::_get_DoNothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiHeliosTriggerAction>("Pegasus", "PegasusConstants/PoiHeliosTriggerAction", "DoNothing"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiHeliosTriggerAction DoNothing
void Pegasus::PegasusConstants::PoiHeliosTriggerAction::_set_DoNothing(::Pegasus::PegasusConstants::PoiHeliosTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeliosTriggerAction::_set_DoNothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiHeliosTriggerAction", "DoNothing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::PoiHeliosTriggerAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiHeliosTriggerAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/PoiRotateTowardsTriggerAction
#include "Pegasus/PegasusConstants_PoiRotateTowardsTriggerAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiRotateTowardsTriggerAction Rotate
::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction::_get_Rotate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction::_get_Rotate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction>("Pegasus", "PegasusConstants/PoiRotateTowardsTriggerAction", "Rotate"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiRotateTowardsTriggerAction Rotate
void Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction::_set_Rotate(::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction::_set_Rotate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiRotateTowardsTriggerAction", "Rotate", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiRotateTowardsTriggerAction DoNothing
::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction::_get_DoNothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction::_get_DoNothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction>("Pegasus", "PegasusConstants/PoiRotateTowardsTriggerAction", "DoNothing"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiRotateTowardsTriggerAction DoNothing
void Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction::_set_DoNothing(::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction::_set_DoNothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiRotateTowardsTriggerAction", "DoNothing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusConstants/PoiAnimationTriggerAction
#include "Pegasus/PegasusConstants_PoiAnimationTriggerAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiAnimationTriggerAction PlayAnimation
::Pegasus::PegasusConstants::PoiAnimationTriggerAction Pegasus::PegasusConstants::PoiAnimationTriggerAction::_get_PlayAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiAnimationTriggerAction::_get_PlayAnimation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiAnimationTriggerAction>("Pegasus", "PegasusConstants/PoiAnimationTriggerAction", "PlayAnimation"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiAnimationTriggerAction PlayAnimation
void Pegasus::PegasusConstants::PoiAnimationTriggerAction::_set_PlayAnimation(::Pegasus::PegasusConstants::PoiAnimationTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiAnimationTriggerAction::_set_PlayAnimation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiAnimationTriggerAction", "PlayAnimation", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiAnimationTriggerAction StopAnimation
::Pegasus::PegasusConstants::PoiAnimationTriggerAction Pegasus::PegasusConstants::PoiAnimationTriggerAction::_get_StopAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiAnimationTriggerAction::_get_StopAnimation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiAnimationTriggerAction>("Pegasus", "PegasusConstants/PoiAnimationTriggerAction", "StopAnimation"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiAnimationTriggerAction StopAnimation
void Pegasus::PegasusConstants::PoiAnimationTriggerAction::_set_StopAnimation(::Pegasus::PegasusConstants::PoiAnimationTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiAnimationTriggerAction::_set_StopAnimation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiAnimationTriggerAction", "StopAnimation", value));
}
// Autogenerated static field getter
// Get static field: static public Pegasus.PegasusConstants/PoiAnimationTriggerAction DoNothing
::Pegasus::PegasusConstants::PoiAnimationTriggerAction Pegasus::PegasusConstants::PoiAnimationTriggerAction::_get_DoNothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiAnimationTriggerAction::_get_DoNothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pegasus::PegasusConstants::PoiAnimationTriggerAction>("Pegasus", "PegasusConstants/PoiAnimationTriggerAction", "DoNothing"));
}
// Autogenerated static field setter
// Set static field: static public Pegasus.PegasusConstants/PoiAnimationTriggerAction DoNothing
void Pegasus::PegasusConstants::PoiAnimationTriggerAction::_set_DoNothing(::Pegasus::PegasusConstants::PoiAnimationTriggerAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiAnimationTriggerAction::_set_DoNothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pegasus", "PegasusConstants/PoiAnimationTriggerAction", "DoNothing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusConstants::PoiAnimationTriggerAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusConstants::PoiAnimationTriggerAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusDefaults
#include "Pegasus/PegasusDefaults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode m_keyPrevPoi
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Pegasus::PegasusDefaults::dyn_m_keyPrevPoi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_keyPrevPoi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyPrevPoi"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode m_keyNextPoi
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Pegasus::PegasusDefaults::dyn_m_keyNextPoi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_keyNextPoi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyNextPoi"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode m_keyUp
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Pegasus::PegasusDefaults::dyn_m_keyUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_keyUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyUp"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode m_keyDown
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Pegasus::PegasusDefaults::dyn_m_keyDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_keyDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyDown"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode m_keyLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Pegasus::PegasusDefaults::dyn_m_keyLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_keyLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode m_keyRight
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Pegasus::PegasusDefaults::dyn_m_keyRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_keyRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyRight"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode m_keyForward
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Pegasus::PegasusDefaults::dyn_m_keyForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_keyForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyForward"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode m_keyBackward
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& Pegasus::PegasusDefaults::dyn_m_keyBackward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_keyBackward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyBackward"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_poiGizmoSize
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusDefaults::dyn_m_poiGizmoSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_poiGizmoSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poiGizmoSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_lookatGizmoSize
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusDefaults::dyn_m_lookatGizmoSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_lookatGizmoSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lookatGizmoSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_autoBankOnByDefault
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusDefaults::dyn_m_autoBankOnByDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_autoBankOnByDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_autoBankOnByDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_maxAutoBankAngle
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusDefaults::dyn_m_maxAutoBankAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_maxAutoBankAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxAutoBankAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_maxAutoBankSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusDefaults::dyn_m_maxAutoBankSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_maxAutoBankSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxAutoBankSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/SpeedType m_flyThroughSpeed
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::SpeedType& Pegasus::PegasusDefaults::dyn_m_flyThroughSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusDefaults::dyn_m_flyThroughSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flyThroughSpeed"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::SpeedType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusFollow
#include "Pegasus/PegasusFollow.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform m_target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Pegasus::PegasusFollow::dyn_m_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_alwaysShowGizmos
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusFollow::dyn_m_alwaysShowGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_alwaysShowGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_alwaysShowGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_groundToTerrain
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusFollow::dyn_m_groundToTerrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_groundToTerrain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_groundToTerrain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_rotateToTerrain
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusFollow::dyn_m_rotateToTerrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_rotateToTerrain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rotateToTerrain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_avoidTreeCollisions
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusFollow::dyn_m_avoidTreeCollisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_avoidTreeCollisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_avoidTreeCollisions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_avoidObjectCollisions
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusFollow::dyn_m_avoidObjectCollisions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_avoidObjectCollisions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_avoidObjectCollisions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_collisionRange
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_collisionRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_collisionRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_collisionRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask m_objectCollisionLayer
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& Pegasus::PegasusFollow::dyn_m_objectCollisionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_objectCollisionLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_objectCollisionLayer"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_currentCollisionCount
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusFollow::dyn_m_currentCollisionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_currentCollisionCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentCollisionCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] m_currentCollisionHitArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& Pegasus::PegasusFollow::dyn_m_currentCollisionHitArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_currentCollisionHitArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentCollisionHitArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_currentTreeCollisionCount
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusFollow::dyn_m_currentTreeCollisionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_currentTreeCollisionCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentTreeCollisionCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pegasus.TreeManager/TreeStruct> m_currentTreeCollisionHitArray
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pegasus::TreeManager::TreeStruct>*& Pegasus::PegasusFollow::dyn_m_currentTreeCollisionHitArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_currentTreeCollisionHitArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentTreeCollisionHitArray"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pegasus::TreeManager::TreeStruct>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pegasus.TreeManager m_terrainTreeManager
[[deprecated("Use field access instead!")]] ::Pegasus::TreeManager*& Pegasus::PegasusFollow::dyn_m_terrainTreeManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_terrainTreeManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_terrainTreeManager"))->offset;
  return *reinterpret_cast<::Pegasus::TreeManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.Collider> m_myColliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::Collider*>*& Pegasus::PegasusFollow::dyn_m_myColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_myColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_myColliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_walkSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_walkSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_walkSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_walkSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_runSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_runSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_runSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_runSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_stopDistanceMin
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_stopDistanceMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_stopDistanceMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stopDistanceMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_stopDistanceMax
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_stopDistanceMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_stopDistanceMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stopDistanceMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_currentStopDistance
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_currentStopDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_currentStopDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentStopDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_updateStopDistance
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusFollow::dyn_m_updateStopDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_updateStopDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_updateStopDistance"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_runIfFurtherThan
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_runIfFurtherThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_runIfFurtherThan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_runIfFurtherThan"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_turnChange
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_turnChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_turnChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_turnChange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_movementChange
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_movementChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_movementChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_movementChange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_deviationRate
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_deviationRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_deviationRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_deviationRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_maxDeviationX
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_maxDeviationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_maxDeviationX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxDeviationX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_maxDeviationY
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_maxDeviationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_maxDeviationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxDeviationY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_maxDeviationZ
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_maxDeviationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_maxDeviationZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxDeviationZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_targetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pegasus::PegasusFollow::dyn_m_targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_targetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_distanceToTarget
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_distanceToTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_distanceToTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_distanceToTarget"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_currentMovementDistance
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusFollow::dyn_m_currentMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_currentMovementDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentMovementDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_currentVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pegasus::PegasusFollow::dyn_m_currentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::dyn_m_currentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.PegasusFollow.Start
void Pegasus::PegasusFollow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusFollow.Update
void Pegasus::PegasusFollow::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusFollow.LateUpdate
void Pegasus::PegasusFollow::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusFollow.GetTargetPositionWithNoise
::UnityEngine::Vector3 Pegasus::PegasusFollow::GetTargetPositionWithNoise(::UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::GetTargetPositionWithNoise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTargetPositionWithNoise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, targetPosition);
}
// Autogenerated method: Pegasus.PegasusFollow.GetTargetPositionWithCollisions
::UnityEngine::Vector3 Pegasus::PegasusFollow::GetTargetPositionWithCollisions(::UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::GetTargetPositionWithCollisions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTargetPositionWithCollisions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, targetPosition);
}
// Autogenerated method: Pegasus.PegasusFollow.GetTerrain
::UnityEngine::Terrain* Pegasus::PegasusFollow::GetTerrain(::UnityEngine::Vector3 locationWU) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::GetTerrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTerrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(locationWU)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Terrain*, false>(this, ___internal__method, locationWU);
}
// Autogenerated method: Pegasus.PegasusFollow.OnDrawGizmos
void Pegasus::PegasusFollow::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusFollow.OnDrawGizmosSelected
void Pegasus::PegasusFollow::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusFollow.DrawGizmos
void Pegasus::PegasusFollow::DrawGizmos(bool isSelected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusFollow::DrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isSelected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isSelected);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusHide
#include "Pegasus/PegasusHide.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_hideAtRuntime
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusHide::dyn_m_hideAtRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusHide::dyn_m_hideAtRuntime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hideAtRuntime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.PegasusHide.Start
void Pegasus::PegasusHide::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusHide::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusManager
#include "Pegasus/PegasusManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pegasus.PegasusPoi
#include "Pegasus/PegasusPoi.hpp"
// Including type: Pegasus.PegasusDefaults
#include "Pegasus/PegasusDefaults.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: Pegasus.PegasusConstants/PoiHeightCheckType
#include "Pegasus/PegasusConstants_PoiHeightCheckType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject m_target
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Pegasus::PegasusManager::dyn_m_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_target"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/FlythroughType m_flythroughType
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::FlythroughType& Pegasus::PegasusManager::dyn_m_flythroughType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_flythroughType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flythroughType"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::FlythroughType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/FlythroughEndAction m_flythroughEndAction
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::FlythroughEndAction& Pegasus::PegasusManager::dyn_m_flythroughEndAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_flythroughEndAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flythroughEndAction"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::FlythroughEndAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/TargetFrameRate m_targetFramerateType
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::TargetFrameRate& Pegasus::PegasusManager::dyn_m_targetFramerateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_targetFramerateType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_targetFramerateType"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::TargetFrameRate*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/HeightCheckType m_heightCheckType
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::HeightCheckType& Pegasus::PegasusManager::dyn_m_heightCheckType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_heightCheckType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_heightCheckType"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::HeightCheckType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_autoStartAtRuntime
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusManager::dyn_m_autoStartAtRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_autoStartAtRuntime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_autoStartAtRuntime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pegasus.PegasusPoi> m_poiList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pegasus::PegasusPoi*>*& Pegasus::PegasusManager::dyn_m_poiList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_poiList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poiList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pegasus::PegasusPoi*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_minHeightAboveTerrain
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_minHeightAboveTerrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_minHeightAboveTerrain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minHeightAboveTerrain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_displayDebug
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusManager::dyn_m_displayDebug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_displayDebug");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_displayDebug"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_alwaysShowGizmos
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusManager::dyn_m_alwaysShowGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_alwaysShowGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_alwaysShowGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/FlythroughState m_currentState
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::FlythroughState& Pegasus::PegasusManager::dyn_m_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentState"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::FlythroughState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_currentSegmentIdx
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusManager::dyn_m_currentSegmentIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_currentSegmentIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentSegmentIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusPoi m_currentSegment
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusPoi*& Pegasus::PegasusManager::dyn_m_currentSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_currentSegment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentSegment"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusPoi**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_currentSegmentDistanceTravelled
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_currentSegmentDistanceTravelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_currentSegmentDistanceTravelled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentSegmentDistanceTravelled"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_totalDistanceTravelled
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_totalDistanceTravelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_totalDistanceTravelled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_totalDistanceTravelled"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_totalDistanceTravelledPct
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_totalDistanceTravelledPct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_totalDistanceTravelledPct");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_totalDistanceTravelledPct"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_totalDistance
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_totalDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_totalDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_totalDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.TimeSpan m_totalDuration
[[deprecated("Use field access instead!")]] ::System::TimeSpan& Pegasus::PegasusManager::dyn_m_totalDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_totalDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_totalDuration"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_currentVelocity
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_currentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_currentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_currentPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pegasus::PegasusManager::dyn_m_currentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_currentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion m_currentRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Pegasus::PegasusManager::dyn_m_currentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_canUpdateNow
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusManager::dyn_m_canUpdateNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_canUpdateNow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_canUpdateNow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime m_lastUpdateTime
[[deprecated("Use field access instead!")]] ::System::DateTime& Pegasus::PegasusManager::dyn_m_lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_lastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastUpdateTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_frameUpdateTime
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_frameUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_frameUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_frameUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_frameUpdateDistance
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_frameUpdateDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_frameUpdateDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_frameUpdateDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_rotationDamping
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_rotationDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_rotationDamping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rotationDamping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_positionDamping
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_positionDamping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_positionDamping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_positionDamping"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusManager m_nextPegasus
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusManager*& Pegasus::PegasusManager::dyn_m_nextPegasus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_nextPegasus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextPegasus"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_alwaysShowPath
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusManager::dyn_m_alwaysShowPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_alwaysShowPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_alwaysShowPath"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_showScrubber
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusManager::dyn_m_showScrubber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_showScrubber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_showScrubber"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_showPOIHelpers
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusManager::dyn_m_showPOIHelpers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_showPOIHelpers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_showPOIHelpers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_poiGizmoSize
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_poiGizmoSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_poiGizmoSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poiGizmoSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_showAdvanced
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusManager::dyn_m_showAdvanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_showAdvanced");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_showAdvanced"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_collisionHeightOffset
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_collisionHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_collisionHeightOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_collisionHeightOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_managerSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_managerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_managerSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_managerSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusDefaults m_defaults
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusDefaults*& Pegasus::PegasusManager::dyn_m_defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_defaults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaults"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusDefaults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_autoRollMaxSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_autoRollMaxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_autoRollMaxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_autoRollMaxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_autoRollMaxAngle
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusManager::dyn_m_autoRollMaxAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::dyn_m_autoRollMaxAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_autoRollMaxAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.PegasusManager.Start
void Pegasus::PegasusManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.SetDefaults
void Pegasus::PegasusManager::SetDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::SetDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.InitialiseFlythrough
void Pegasus::PegasusManager::InitialiseFlythrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::InitialiseFlythrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitialiseFlythrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.RestartFlythrough
void Pegasus::PegasusManager::RestartFlythrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::RestartFlythrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartFlythrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.UpdateFlythroughMetaData
void Pegasus::PegasusManager::UpdateFlythroughMetaData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::UpdateFlythroughMetaData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFlythroughMetaData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.UpdateSegmentWithDependencies
void Pegasus::PegasusManager::UpdateSegmentWithDependencies(::Pegasus::PegasusPoi* segment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::UpdateSegmentWithDependencies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSegmentWithDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segment);
}
// Autogenerated method: Pegasus.PegasusManager.SafeInitialise
void Pegasus::PegasusManager::SafeInitialise(int idx, bool wrap, bool updateSegments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::SafeInitialise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeInitialise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(wrap), ::il2cpp_utils::ExtractType(updateSegments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, wrap, updateSegments);
}
// Autogenerated method: Pegasus.PegasusManager.StartFlythrough
void Pegasus::PegasusManager::StartFlythrough(bool fullInitialise) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::StartFlythrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFlythrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullInitialise)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fullInitialise);
}
// Autogenerated method: Pegasus.PegasusManager.ResumeFlythrough
void Pegasus::PegasusManager::ResumeFlythrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::ResumeFlythrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeFlythrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.PauseFlythrough
void Pegasus::PegasusManager::PauseFlythrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::PauseFlythrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseFlythrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.StopFlythrough
void Pegasus::PegasusManager::StopFlythrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::StopFlythrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopFlythrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.ChangeFramerate
void Pegasus::PegasusManager::ChangeFramerate(::Pegasus::PegasusConstants::TargetFrameRate newRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::ChangeFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newRate);
}
// Autogenerated method: Pegasus.PegasusManager.SetSpeed
void Pegasus::PegasusManager::SetSpeed(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::SetSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: Pegasus.PegasusManager.SetAutoRoll
void Pegasus::PegasusManager::SetAutoRoll(bool autoRoll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::SetAutoRoll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAutoRoll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(autoRoll)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, autoRoll);
}
// Autogenerated method: Pegasus.PegasusManager.SelectPoi
void Pegasus::PegasusManager::SelectPoi(::Pegasus::PegasusPoi* poi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::SelectPoi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectPoi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poi);
}
// Autogenerated method: Pegasus.PegasusManager.MovePoi
void Pegasus::PegasusManager::MovePoi(::Pegasus::PegasusPoi* poi, ::UnityEngine::Vector3 movement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::MovePoi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePoi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poi), ::il2cpp_utils::ExtractType(movement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poi, movement);
}
// Autogenerated method: Pegasus.PegasusManager.MovePoiLookat
void Pegasus::PegasusManager::MovePoiLookat(::Pegasus::PegasusPoi* poi, ::UnityEngine::Vector3 movement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::MovePoiLookat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePoiLookat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poi), ::il2cpp_utils::ExtractType(movement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poi, movement);
}
// Autogenerated method: Pegasus.PegasusManager.MoveTargetNow
void Pegasus::PegasusManager::MoveTargetNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::MoveTargetNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTargetNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.MoveTargetTo
void Pegasus::PegasusManager::MoveTargetTo(float percent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::MoveTargetTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTargetTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, percent);
}
// Autogenerated method: Pegasus.PegasusManager.CalculateTargetAtDistance
void Pegasus::PegasusManager::CalculateTargetAtDistance(float distance, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<float> velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::CalculateTargetAtDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTargetAtDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance, byref(position), byref(rotation), byref(velocity));
}
// Autogenerated method: Pegasus.PegasusManager.CalculateTargetAtPercent
void Pegasus::PegasusManager::CalculateTargetAtPercent(float percent, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<float> velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::CalculateTargetAtPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTargetAtPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percent), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, percent, byref(position), byref(rotation), byref(velocity));
}
// Autogenerated method: Pegasus.PegasusManager.MoveTargetToPoi
void Pegasus::PegasusManager::MoveTargetToPoi(::Pegasus::PegasusPoi* targetPoi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::MoveTargetToPoi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTargetToPoi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPoi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPoi);
}
// Autogenerated method: Pegasus.PegasusManager.StepTargetBackward
void Pegasus::PegasusManager::StepTargetBackward(float distMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::StepTargetBackward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StepTargetBackward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distMeters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distMeters);
}
// Autogenerated method: Pegasus.PegasusManager.StepTargetForward
void Pegasus::PegasusManager::StepTargetForward(float distMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::StepTargetForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StepTargetForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distMeters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distMeters);
}
// Autogenerated method: Pegasus.PegasusManager.CreateDebugObjects
void Pegasus::PegasusManager::CreateDebugObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::CreateDebugObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDebugObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.DeleteDebugObjects
void Pegasus::PegasusManager::DeleteDebugObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::DeleteDebugObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteDebugObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.GetValidatedPoiPosition
::UnityEngine::Vector3 Pegasus::PegasusManager::GetValidatedPoiPosition(::UnityEngine::Vector3 source, ::Pegasus::PegasusConstants::PoiHeightCheckType heightCheckOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::GetValidatedPoiPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidatedPoiPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(heightCheckOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, source, heightCheckOverride);
}
// Autogenerated method: Pegasus.PegasusManager.GetLowestPoiPosition
::UnityEngine::Vector3 Pegasus::PegasusManager::GetLowestPoiPosition(::UnityEngine::Vector3 source, ::Pegasus::PegasusConstants::PoiHeightCheckType heightCheckOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::GetLowestPoiPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLowestPoiPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(heightCheckOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, source, heightCheckOverride);
}
// Autogenerated method: Pegasus.PegasusManager.GetValidatedLookatPosition
::UnityEngine::Vector3 Pegasus::PegasusManager::GetValidatedLookatPosition(::UnityEngine::Vector3 source, ::Pegasus::PegasusConstants::PoiHeightCheckType heightCheckOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::GetValidatedLookatPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidatedLookatPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(heightCheckOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, source, heightCheckOverride);
}
// Autogenerated method: Pegasus.PegasusManager.GetLowestLookatPosition
::UnityEngine::Vector3 Pegasus::PegasusManager::GetLowestLookatPosition(::UnityEngine::Vector3 source, ::Pegasus::PegasusConstants::PoiHeightCheckType heightCheckOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::GetLowestLookatPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLowestLookatPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(heightCheckOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, source, heightCheckOverride);
}
// Autogenerated method: Pegasus.PegasusManager.GetValidatedLookatHeightRelativeToMinimum
float Pegasus::PegasusManager::GetValidatedLookatHeightRelativeToMinimum(::UnityEngine::Vector3 source, ::Pegasus::PegasusConstants::PoiHeightCheckType heightCheckOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::GetValidatedLookatHeightRelativeToMinimum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidatedLookatHeightRelativeToMinimum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(heightCheckOverride)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, source, heightCheckOverride);
}
// Autogenerated method: Pegasus.PegasusManager.GetTerrain
::UnityEngine::Terrain* Pegasus::PegasusManager::GetTerrain(::UnityEngine::Vector3 location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::GetTerrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTerrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Terrain*, false>(this, ___internal__method, location);
}
// Autogenerated method: Pegasus.PegasusManager.LateUpdate
void Pegasus::PegasusManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.CalculateFlythroughUpdates
void Pegasus::PegasusManager::CalculateFlythroughUpdates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::CalculateFlythroughUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateFlythroughUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.AddPOI
void Pegasus::PegasusManager::AddPOI(::UnityEngine::Vector3 targetLocation, ::UnityEngine::Vector3 lookatLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::AddPOI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPOI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetLocation), ::il2cpp_utils::ExtractType(lookatLocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetLocation, lookatLocation);
}
// Autogenerated method: Pegasus.PegasusManager.AddPoiAfter
::Pegasus::PegasusPoi* Pegasus::PegasusManager::AddPoiAfter(::Pegasus::PegasusPoi* currentPoi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::AddPoiAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPoiAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPoi)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pegasus::PegasusPoi*, false>(this, ___internal__method, currentPoi);
}
// Autogenerated method: Pegasus.PegasusManager.AddPoiBefore
::Pegasus::PegasusPoi* Pegasus::PegasusManager::AddPoiBefore(::Pegasus::PegasusPoi* currentPoi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::AddPoiBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPoiBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPoi)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pegasus::PegasusPoi*, false>(this, ___internal__method, currentPoi);
}
// Autogenerated method: Pegasus.PegasusManager.GetFirstPOI
::Pegasus::PegasusPoi* Pegasus::PegasusManager::GetFirstPOI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::GetFirstPOI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstPOI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pegasus::PegasusPoi*, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusManager.GetPOI
::Pegasus::PegasusPoi* Pegasus::PegasusManager::GetPOI(int poiIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::GetPOI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPOI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poiIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pegasus::PegasusPoi*, false>(this, ___internal__method, poiIndex);
}
// Autogenerated method: Pegasus.PegasusManager.GetPrevPOI
::Pegasus::PegasusPoi* Pegasus::PegasusManager::GetPrevPOI(::Pegasus::PegasusPoi* currentPoi, bool wrap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::GetPrevPOI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrevPOI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPoi), ::il2cpp_utils::ExtractType(wrap)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pegasus::PegasusPoi*, false>(this, ___internal__method, currentPoi, wrap);
}
// Autogenerated method: Pegasus.PegasusManager.GetNextPOI
::Pegasus::PegasusPoi* Pegasus::PegasusManager::GetNextPOI(::Pegasus::PegasusPoi* currentPoi, bool wrap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::GetNextPOI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextPOI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPoi), ::il2cpp_utils::ExtractType(wrap)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pegasus::PegasusPoi*, false>(this, ___internal__method, currentPoi, wrap);
}
// Autogenerated method: Pegasus.PegasusManager.SetPoiToMinHeight
void Pegasus::PegasusManager::SetPoiToMinHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusManager::SetPoiToMinHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPoiToMinHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pegasus.PegasusMixerBehaviour
#include "Pegasus/PegasusMixerBehaviour.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pegasus.PegasusMixerBehaviour.ProcessFrame
void Pegasus::PegasusMixerBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusMixerBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusPath
#include "Pegasus/PegasusPath.hpp"
// Including type: Pegasus.PegasusPath/PegasusPoint
#include "Pegasus/PegasusPath_PegasusPoint.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single m_defaultSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusPath::dyn_m_defaultSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPath::dyn_m_defaultSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pegasus.PegasusPath/PegasusPoint> m_path
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pegasus::PegasusPath::PegasusPoint*>*& Pegasus::PegasusPath::dyn_m_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPath::dyn_m_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_path"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pegasus::PegasusPath::PegasusPoint*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.PegasusPath.CreatePegasusPath
::Pegasus::PegasusPath* Pegasus::PegasusPath::CreatePegasusPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPath::CreatePegasusPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPath", "CreatePegasusPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pegasus::PegasusPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pegasus.PegasusPath.AddPoint
void Pegasus::PegasusPath::AddPoint(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPath::AddPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, go);
}
// Autogenerated method: Pegasus.PegasusPath.ClearPath
void Pegasus::PegasusPath::ClearPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPath::ClearPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusPath.CreatePegasusFromPath
void Pegasus::PegasusPath::CreatePegasusFromPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPath::CreatePegasusFromPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePegasusFromPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusPath/PegasusPoint
#include "Pegasus/PegasusPath_PegasusPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_location
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pegasus::PegasusPath::PegasusPoint::dyn_m_location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPath::PegasusPoint::dyn_m_location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_location"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_rotationEuler
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pegasus::PegasusPath::PegasusPoint::dyn_m_rotationEuler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPath::PegasusPoint::dyn_m_rotationEuler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rotationEuler"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_dofDistance
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pegasus::PegasusPath::PegasusPoint::dyn_m_dofDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPath::PegasusPoint::dyn_m_dofDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dofDistance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusPoi
#include "Pegasus/PegasusPoi.hpp"
// Including type: Pegasus.PegasusPoi/Easing
#include "Pegasus/PegasusPoi_Easing.hpp"
// Including type: Pegasus.PegasusManager
#include "Pegasus/PegasusManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pegasus.TriggerBase
#include "Pegasus/TriggerBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/PoiType m_poiType
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::PoiType& Pegasus::PegasusPoi::dyn_m_poiType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_poiType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poiType"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::PoiType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/PoiHeightCheckType m_heightCheckType
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::PoiHeightCheckType& Pegasus::PegasusPoi::dyn_m_heightCheckType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_heightCheckType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_heightCheckType"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::PoiHeightCheckType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/LookatType m_lookatType
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::LookatType& Pegasus::PegasusPoi::dyn_m_lookatType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_lookatType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lookatType"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::LookatType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_lookAtAngle
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusPoi::dyn_m_lookAtAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_lookAtAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lookAtAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_lookAtDistance
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusPoi::dyn_m_lookAtDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_lookAtDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lookAtDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_lookAtHeight
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusPoi::dyn_m_lookAtHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_lookAtHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lookAtHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_lookatLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pegasus::PegasusPoi::dyn_m_lookatLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_lookatLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lookatLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/SpeedType m_startSpeedType
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::SpeedType& Pegasus::PegasusPoi::dyn_m_startSpeedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_startSpeedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_startSpeedType"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::SpeedType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_startSpeed
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusPoi::dyn_m_startSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_startSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_startSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/EasingType m_rotationEasingType
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::EasingType& Pegasus::PegasusPoi::dyn_m_rotationEasingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_rotationEasingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rotationEasingType"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::EasingType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/EasingType m_velocityEasingType
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::EasingType& Pegasus::PegasusPoi::dyn_m_velocityEasingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_velocityEasingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_velocityEasingType"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::EasingType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/EasingType m_positionEasingType
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::EasingType& Pegasus::PegasusPoi::dyn_m_positionEasingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_positionEasingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_positionEasingType"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::EasingType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusManager m_manager
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusManager*& Pegasus::PegasusPoi::dyn_m_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_manager"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_alwaysShowGizmos
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusPoi::dyn_m_alwaysShowGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_alwaysShowGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_alwaysShowGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m_segmentDistance
[[deprecated("Use field access instead!")]] float& Pegasus::PegasusPoi::dyn_m_segmentDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_segmentDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_segmentDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.TimeSpan m_segmentStartTime
[[deprecated("Use field access instead!")]] ::System::TimeSpan& Pegasus::PegasusPoi::dyn_m_segmentStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_segmentStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_segmentStartTime"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.TimeSpan m_segmentDuration
[[deprecated("Use field access instead!")]] ::System::TimeSpan& Pegasus::PegasusPoi::dyn_m_segmentDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_segmentDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_segmentDuration"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_segmentIndex
[[deprecated("Use field access instead!")]] int& Pegasus::PegasusPoi::dyn_m_segmentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_segmentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_segmentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_isFirstPOI
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusPoi::dyn_m_isFirstPOI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_isFirstPOI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isFirstPOI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_isLastPOI
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusPoi::dyn_m_isLastPOI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_isLastPOI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isLastPOI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusPoi m_prevPoi
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusPoi*& Pegasus::PegasusPoi::dyn_m_prevPoi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_prevPoi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_prevPoi"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusPoi**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusPoi m_nextPoi
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusPoi*& Pegasus::PegasusPoi::dyn_m_nextPoi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_nextPoi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nextPoi"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusPoi**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Vector3> m_poiSteps
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& Pegasus::PegasusPoi::dyn_m_poiSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_poiSteps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poiSteps"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_isSelected
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusPoi::dyn_m_isSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_isSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Pegasus.TriggerBase> m_poiTriggers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pegasus::TriggerBase*>*& Pegasus::PegasusPoi::dyn_m_poiTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_poiTriggers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poiTriggers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pegasus::TriggerBase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_autoRollOn
[[deprecated("Use field access instead!")]] bool& Pegasus::PegasusPoi::dyn_m_autoRollOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_autoRollOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_autoRollOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 m_lastRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& Pegasus::PegasusPoi::dyn_m_lastRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_lastRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pegasus.PegasusPoi/Easing m_velocityEasingCalculator
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusPoi::Easing*& Pegasus::PegasusPoi::dyn_m_velocityEasingCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_velocityEasingCalculator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_velocityEasingCalculator"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusPoi::Easing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pegasus.PegasusPoi/Easing m_positionEasingCalculator
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusPoi::Easing*& Pegasus::PegasusPoi::dyn_m_positionEasingCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_positionEasingCalculator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_positionEasingCalculator"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusPoi::Easing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pegasus.PegasusPoi/Easing m_rotationEasingCalculator
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusPoi::Easing*& Pegasus::PegasusPoi::dyn_m_rotationEasingCalculator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_rotationEasingCalculator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rotationEasingCalculator"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusPoi::Easing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion m_rotationStart
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Pegasus::PegasusPoi::dyn_m_rotationStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_rotationStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rotationStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion m_rotationEnd
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& Pegasus::PegasusPoi::dyn_m_rotationEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::dyn_m_rotationEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rotationEnd"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.PegasusPoi.OnDrawGizmosSelected
void Pegasus::PegasusPoi::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusPoi.OnDrawGizmos
void Pegasus::PegasusPoi::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusPoi.DrawGizmos
void Pegasus::PegasusPoi::DrawGizmos(bool isSelected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::DrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isSelected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isSelected);
}
// Autogenerated method: Pegasus.PegasusPoi.IsSameObject
bool Pegasus::PegasusPoi::IsSameObject(::Pegasus::PegasusPoi* poi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::IsSameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poi)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, poi);
}
// Autogenerated method: Pegasus.PegasusPoi.Initialise
void Pegasus::PegasusPoi::Initialise(bool updateSegments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::Initialise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateSegments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateSegments);
}
// Autogenerated method: Pegasus.PegasusPoi.OnStartTriggers
void Pegasus::PegasusPoi::OnStartTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::OnStartTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusPoi.OnUpdateTriggers
void Pegasus::PegasusPoi::OnUpdateTriggers(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::OnUpdateTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: Pegasus.PegasusPoi.OnEndTriggers
void Pegasus::PegasusPoi::OnEndTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::OnEndTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusPoi.GetStartSpeed
float Pegasus::PegasusPoi::GetStartSpeed(::Pegasus::PegasusConstants::SpeedType speedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::GetStartSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speedType)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, speedType);
}
// Autogenerated method: Pegasus.PegasusPoi.UpdateSegment
void Pegasus::PegasusPoi::UpdateSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::UpdateSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusPoi.UpdateSegmentDuration
void Pegasus::PegasusPoi::UpdateSegmentDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::UpdateSegmentDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSegmentDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.PegasusPoi.CalculateProgress
void Pegasus::PegasusPoi::CalculateProgress(float percent, ByRef<float> velocity, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::CalculateProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percent), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, percent, byref(velocity), byref(position), byref(rotation));
}
// Autogenerated method: Pegasus.PegasusPoi.CalculatePositionSpline
::UnityEngine::Vector3 Pegasus::PegasusPoi::CalculatePositionSpline(float percent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::CalculatePositionSpline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePositionSpline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, percent);
}
// Autogenerated method: Pegasus.PegasusPoi.CalculatePositionLinear
::UnityEngine::Vector3 Pegasus::PegasusPoi::CalculatePositionLinear(float percent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::CalculatePositionLinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePositionLinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, percent);
}
// Autogenerated method: Pegasus.PegasusPoi.CalculateVelocity
float Pegasus::PegasusPoi::CalculateVelocity(float percent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::CalculateVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percent)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, percent);
}
// Autogenerated method: Pegasus.PegasusPoi.CalculateRotation
::UnityEngine::Quaternion Pegasus::PegasusPoi::CalculateRotation(float percent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::CalculateRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(percent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, percent);
}
// Autogenerated method: Pegasus.PegasusPoi.GetRelativeOffsets
void Pegasus::PegasusPoi::GetRelativeOffsets(::UnityEngine::Vector3 source, ::UnityEngine::Vector3 target, ByRef<float> targetDistance, ByRef<float> targetHeight, ByRef<float> targetAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::GetRelativeOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRelativeOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, target, byref(targetDistance), byref(targetHeight), byref(targetAngle));
}
// Autogenerated method: Pegasus.PegasusPoi.ApproximatelyEqual
bool Pegasus::PegasusPoi::ApproximatelyEqual(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::ApproximatelyEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "ApproximatelyEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Pegasus.PegasusPoi.RotatePointAroundPivot
::UnityEngine::Vector3 Pegasus::PegasusPoi::RotatePointAroundPivot(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 pivot, ::UnityEngine::Vector3 angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::RotatePointAroundPivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "RotatePointAroundPivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, pivot, angle);
}
// Autogenerated method: Pegasus.PegasusPoi.EaseLinear
float Pegasus::PegasusPoi::EaseLinear(float time, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::EaseLinear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "EaseLinear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, duration);
}
// Autogenerated method: Pegasus.PegasusPoi.EaseIn
float Pegasus::PegasusPoi::EaseIn(float time, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::EaseIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "EaseIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, duration);
}
// Autogenerated method: Pegasus.PegasusPoi.EaseOut
float Pegasus::PegasusPoi::EaseOut(float time, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::EaseOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "EaseOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, duration);
}
// Autogenerated method: Pegasus.PegasusPoi.EaseInOut
float Pegasus::PegasusPoi::EaseInOut(float time, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::EaseInOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "EaseInOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, duration);
}
// Autogenerated method: Pegasus.PegasusPoi.CatmullRom
::UnityEngine::Vector3 Pegasus::PegasusPoi::CatmullRom(::UnityEngine::Vector3 value1, ::UnityEngine::Vector3 value2, ::UnityEngine::Vector3 value3, ::UnityEngine::Vector3 value4, float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::CatmullRom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "CatmullRom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2), ::il2cpp_utils::ExtractType(value3), ::il2cpp_utils::ExtractType(value4), ::il2cpp_utils::ExtractType(amount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value1, value2, value3, value4, amount);
}
// Autogenerated method: Pegasus.PegasusPoi.CatmullRom
void Pegasus::PegasusPoi::CatmullRom(ByRef<::UnityEngine::Vector3> value1, ByRef<::UnityEngine::Vector3> value2, ByRef<::UnityEngine::Vector3> value3, ByRef<::UnityEngine::Vector3> value4, float amount, ByRef<::UnityEngine::Vector3> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::CatmullRom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "CatmullRom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2), ::il2cpp_utils::ExtractType(value3), ::il2cpp_utils::ExtractType(value4), ::il2cpp_utils::ExtractType(amount), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value1), byref(value2), byref(value3), byref(value4), amount, byref(result));
}
// Autogenerated method: Pegasus.PegasusPoi.CalcCatmullRom
float Pegasus::PegasusPoi::CalcCatmullRom(float value1, float value2, float value3, float value4, float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::CalcCatmullRom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "CalcCatmullRom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2), ::il2cpp_utils::ExtractType(value3), ::il2cpp_utils::ExtractType(value4), ::il2cpp_utils::ExtractType(amount)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value1, value2, value3, value4, amount);
}
// Autogenerated method: Pegasus.PegasusPoi.Hermite
::UnityEngine::Vector3 Pegasus::PegasusPoi::Hermite(::UnityEngine::Vector3 value1, ::UnityEngine::Vector3 tangent1, ::UnityEngine::Vector3 value2, ::UnityEngine::Vector3 tangent2, float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::Hermite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "Hermite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(tangent1), ::il2cpp_utils::ExtractType(value2), ::il2cpp_utils::ExtractType(tangent2), ::il2cpp_utils::ExtractType(amount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value1, tangent1, value2, tangent2, amount);
}
// Autogenerated method: Pegasus.PegasusPoi.Hermite
void Pegasus::PegasusPoi::Hermite(ByRef<::UnityEngine::Vector3> value1, ByRef<::UnityEngine::Vector3> tangent1, ByRef<::UnityEngine::Vector3> value2, ByRef<::UnityEngine::Vector3> tangent2, float amount, ByRef<::UnityEngine::Vector3> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::Hermite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "Hermite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(tangent1), ::il2cpp_utils::ExtractType(value2), ::il2cpp_utils::ExtractType(tangent2), ::il2cpp_utils::ExtractType(amount), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value1), byref(tangent1), byref(value2), byref(tangent2), amount, byref(result));
}
// Autogenerated method: Pegasus.PegasusPoi.CalcHermite
float Pegasus::PegasusPoi::CalcHermite(float value1, float tangent1, float value2, float tangent2, float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::CalcHermite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pegasus", "PegasusPoi", "CalcHermite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(tangent1), ::il2cpp_utils::ExtractType(value2), ::il2cpp_utils::ExtractType(tangent2), ::il2cpp_utils::ExtractType(amount)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value1, tangent1, value2, tangent2, amount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pegasus.PegasusPoi/Easing
#include "Pegasus/PegasusPoi_Easing.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pegasus.PegasusPoi/Easing.Invoke
float Pegasus::PegasusPoi::Easing::Invoke(float time, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::Easing::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::PegasusPoi::Easing*), 12));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, time, duration);
}
// Autogenerated method: Pegasus.PegasusPoi/Easing.BeginInvoke
::System::IAsyncResult* Pegasus::PegasusPoi::Easing::BeginInvoke(float time, float duration, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::Easing::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::PegasusPoi::Easing*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, time, duration, callback, object);
}
// Autogenerated method: Pegasus.PegasusPoi/Easing.EndInvoke
float Pegasus::PegasusPoi::Easing::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::Easing::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::PegasusPoi::Easing*), 14));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.PegasusTrack
#include "Pegasus/PegasusTrack.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pegasus.PegasusTrack.CreateTrackMixer
::UnityEngine::Playables::Playable Pegasus::PegasusTrack::CreateTrackMixer(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusTrack::CreateTrackMixer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.TreeManager
#include "Pegasus/TreeManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.TreePrototype
#include "UnityEngine/TreePrototype.hpp"
// Including type: Pegasus.Quadtree`1
#include "Pegasus/Quadtree_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TreePrototype> m_terrainTrees
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::TreePrototype*>*& Pegasus::TreeManager::dyn_m_terrainTrees() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TreeManager::dyn_m_terrainTrees");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_terrainTrees"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::TreePrototype*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pegasus.Quadtree`1<Pegasus.TreeManager/TreeStruct> m_terrainTreeLocations
[[deprecated("Use field access instead!")]] ::Pegasus::Quadtree_1<::Pegasus::TreeManager::TreeStruct>*& Pegasus::TreeManager::dyn_m_terrainTreeLocations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TreeManager::dyn_m_terrainTreeLocations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_terrainTreeLocations"))->offset;
  return *reinterpret_cast<::Pegasus::Quadtree_1<::Pegasus::TreeManager::TreeStruct>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.TreeManager.LoadTreesFromTerrain
void Pegasus::TreeManager::LoadTreesFromTerrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TreeManager::LoadTreesFromTerrain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadTreesFromTerrain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.TreeManager.AddTree
void Pegasus::TreeManager::AddTree(::Pegasus::TreeManager::TreeStruct tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TreeManager::AddTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tree);
}
// Autogenerated method: Pegasus.TreeManager.Count
int Pegasus::TreeManager::Count(::UnityEngine::Vector3 position, float range) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TreeManager::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(range)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, range);
}
// Autogenerated method: Pegasus.TreeManager.Count
int Pegasus::TreeManager::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TreeManager::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.TreeManager.GetTrees
int Pegasus::TreeManager::GetTrees(::UnityEngine::Vector3 position, float range, ByRef<::System::Collections::Generic::List_1<::Pegasus::TreeManager::TreeStruct>*> treeList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TreeManager::GetTrees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(range), ::il2cpp_utils::ExtractType(treeList)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, position, range, byref(treeList));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.TriggerBase
#include "Pegasus/TriggerBase.hpp"
// Including type: Pegasus.PegasusPoi
#include "Pegasus/PegasusPoi.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_triggerAtStart
[[deprecated("Use field access instead!")]] bool& Pegasus::TriggerBase::dyn_m_triggerAtStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerBase::dyn_m_triggerAtStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_triggerAtStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_triggerOnUpdate
[[deprecated("Use field access instead!")]] bool& Pegasus::TriggerBase::dyn_m_triggerOnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerBase::dyn_m_triggerOnUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_triggerOnUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_triggerAtEnd
[[deprecated("Use field access instead!")]] bool& Pegasus::TriggerBase::dyn_m_triggerAtEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerBase::dyn_m_triggerAtEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_triggerAtEnd"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.TriggerBase.OnStart
void Pegasus::TriggerBase::OnStart(::Pegasus::PegasusPoi* poi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerBase::OnStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::TriggerBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poi);
}
// Autogenerated method: Pegasus.TriggerBase.OnUpdate
void Pegasus::TriggerBase::OnUpdate(::Pegasus::PegasusPoi* poi, float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerBase::OnUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::TriggerBase*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poi, progress);
}
// Autogenerated method: Pegasus.TriggerBase.OnEnd
void Pegasus::TriggerBase::OnEnd(::Pegasus::PegasusPoi* poi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerBase::OnEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::TriggerBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poi);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.TriggerControlAnimation
#include "Pegasus/TriggerControlAnimation.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AnimationState
#include "UnityEngine/AnimationState.hpp"
// Including type: Pegasus.PegasusPoi
#include "Pegasus/PegasusPoi.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String animationPropertyToActivate
[[deprecated("Use field access instead!")]] ::StringW& Pegasus::TriggerControlAnimation::dyn_animationPropertyToActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::dyn_animationPropertyToActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationPropertyToActivate"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pauseForTime
[[deprecated("Use field access instead!")]] float& Pegasus::TriggerControlAnimation::dyn_pauseForTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::dyn_pauseForTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pauseForTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isPaused
[[deprecated("Use field access instead!")]] bool& Pegasus::TriggerControlAnimation::dyn_isPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::dyn_isPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timePaused
[[deprecated("Use field access instead!")]] float& Pegasus::TriggerControlAnimation::dyn_timePaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::dyn_timePaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timePaused"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/PoiAnimationTriggerAction m_actionOnStart
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::PoiAnimationTriggerAction& Pegasus::TriggerControlAnimation::dyn_m_actionOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::dyn_m_actionOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_actionOnStart"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::PoiAnimationTriggerAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/PoiAnimationTriggerAction m_actionOnEnd
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::PoiAnimationTriggerAction& Pegasus::TriggerControlAnimation::dyn_m_actionOnEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::dyn_m_actionOnEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_actionOnEnd"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::PoiAnimationTriggerAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_startAnimationIdx
[[deprecated("Use field access instead!")]] int& Pegasus::TriggerControlAnimation::dyn_m_startAnimationIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::dyn_m_startAnimationIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_startAnimationIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 m_endAnimation
[[deprecated("Use field access instead!")]] int& Pegasus::TriggerControlAnimation::dyn_m_endAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::dyn_m_endAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_endAnimation"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.AnimationState> m_animations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::AnimationState*>*& Pegasus::TriggerControlAnimation::dyn_m_animations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::dyn_m_animations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::AnimationState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pegasus.PegasusPoi lastPoi
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusPoi*& Pegasus::TriggerControlAnimation::dyn_lastPoi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::dyn_lastPoi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPoi"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusPoi**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.TriggerControlAnimation.Start
void Pegasus::TriggerControlAnimation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.TriggerControlAnimation.FixedUpdate
void Pegasus::TriggerControlAnimation::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pegasus.TriggerControlAnimation.OnStart
void Pegasus::TriggerControlAnimation::OnStart(::Pegasus::PegasusPoi* poi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::OnStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::TriggerBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poi);
}
// Autogenerated method: Pegasus.TriggerControlAnimation.OnEnd
void Pegasus::TriggerControlAnimation::OnEnd(::Pegasus::PegasusPoi* poi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlAnimation::OnEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::TriggerBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poi);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pegasus.TriggerControlPegasus
#include "Pegasus/TriggerControlPegasus.hpp"
// Including type: Pegasus.PegasusManager
#include "Pegasus/PegasusManager.hpp"
// Including type: Pegasus.PegasusPoi
#include "Pegasus/PegasusPoi.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/PoiPegasusTriggerAction m_actionOnStart
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::PoiPegasusTriggerAction& Pegasus::TriggerControlPegasus::dyn_m_actionOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlPegasus::dyn_m_actionOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_actionOnStart"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::PoiPegasusTriggerAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusConstants/PoiPegasusTriggerAction m_actionOnEnd
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusConstants::PoiPegasusTriggerAction& Pegasus::TriggerControlPegasus::dyn_m_actionOnEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlPegasus::dyn_m_actionOnEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_actionOnEnd"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusConstants::PoiPegasusTriggerAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pegasus.PegasusManager m_pegasus
[[deprecated("Use field access instead!")]] ::Pegasus::PegasusManager*& Pegasus::TriggerControlPegasus::dyn_m_pegasus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlPegasus::dyn_m_pegasus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pegasus"))->offset;
  return *reinterpret_cast<::Pegasus::PegasusManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_disabled
[[deprecated("Use field access instead!")]] bool& Pegasus::TriggerControlPegasus::dyn_m_disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlPegasus::dyn_m_disabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean m_disableAfterActioned
[[deprecated("Use field access instead!")]] bool& Pegasus::TriggerControlPegasus::dyn_m_disableAfterActioned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlPegasus::dyn_m_disableAfterActioned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disableAfterActioned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pegasus.TriggerControlPegasus.OnStart
void Pegasus::TriggerControlPegasus::OnStart(::Pegasus::PegasusPoi* poi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlPegasus::OnStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::TriggerBase*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poi);
}
// Autogenerated method: Pegasus.TriggerControlPegasus.OnEnd
void Pegasus::TriggerControlPegasus::OnEnd(::Pegasus::PegasusPoi* poi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::TriggerControlPegasus::OnEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pegasus::TriggerBase*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poi);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PDollarGestureRecognizer.Geometry
#include "PDollarGestureRecognizer/Geometry.hpp"
// Including type: PDollarGestureRecognizer.Point
#include "PDollarGestureRecognizer/Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PDollarGestureRecognizer.Geometry.SqrEuclideanDistance
float PDollarGestureRecognizer::Geometry::SqrEuclideanDistance(::PDollarGestureRecognizer::Point* a, ::PDollarGestureRecognizer::Point* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Geometry::SqrEuclideanDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PDollarGestureRecognizer", "Geometry", "SqrEuclideanDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: PDollarGestureRecognizer.Geometry.EuclideanDistance
float PDollarGestureRecognizer::Geometry::EuclideanDistance(::PDollarGestureRecognizer::Point* a, ::PDollarGestureRecognizer::Point* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Geometry::EuclideanDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PDollarGestureRecognizer", "Geometry", "EuclideanDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PDollarGestureRecognizer.Gesture
#include "PDollarGestureRecognizer/Gesture.hpp"
// Including type: PDollarGestureRecognizer.Point
#include "PDollarGestureRecognizer/Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 SAMPLING_RESOLUTION
int PDollarGestureRecognizer::Gesture::_get_SAMPLING_RESOLUTION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Gesture::_get_SAMPLING_RESOLUTION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("PDollarGestureRecognizer", "Gesture", "SAMPLING_RESOLUTION"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SAMPLING_RESOLUTION
void PDollarGestureRecognizer::Gesture::_set_SAMPLING_RESOLUTION(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Gesture::_set_SAMPLING_RESOLUTION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PDollarGestureRecognizer", "Gesture", "SAMPLING_RESOLUTION", value));
}
// Autogenerated instance field getter
// Get instance field: public PDollarGestureRecognizer.Point[] Points
[[deprecated("Use field access instead!")]] ::ArrayW<::PDollarGestureRecognizer::Point*>& PDollarGestureRecognizer::Gesture::dyn_Points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Gesture::dyn_Points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Points"))->offset;
  return *reinterpret_cast<::ArrayW<::PDollarGestureRecognizer::Point*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PDollarGestureRecognizer::Gesture::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Gesture::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numStrokes
[[deprecated("Use field access instead!")]] int& PDollarGestureRecognizer::Gesture::dyn_numStrokes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Gesture::dyn_numStrokes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numStrokes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PDollarGestureRecognizer.Gesture.Scale
::ArrayW<::PDollarGestureRecognizer::Point*> PDollarGestureRecognizer::Gesture::Scale(::ArrayW<::PDollarGestureRecognizer::Point*> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Gesture::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::PDollarGestureRecognizer::Point*>, false>(this, ___internal__method, points);
}
// Autogenerated method: PDollarGestureRecognizer.Gesture.TranslateTo
::ArrayW<::PDollarGestureRecognizer::Point*> PDollarGestureRecognizer::Gesture::TranslateTo(::ArrayW<::PDollarGestureRecognizer::Point*> points, ::PDollarGestureRecognizer::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Gesture::TranslateTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TranslateTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::PDollarGestureRecognizer::Point*>, false>(this, ___internal__method, points, p);
}
// Autogenerated method: PDollarGestureRecognizer.Gesture.Centroid
::PDollarGestureRecognizer::Point* PDollarGestureRecognizer::Gesture::Centroid(::ArrayW<::PDollarGestureRecognizer::Point*> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Gesture::Centroid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Centroid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  return ::il2cpp_utils::RunMethodRethrow<::PDollarGestureRecognizer::Point*, false>(this, ___internal__method, points);
}
// Autogenerated method: PDollarGestureRecognizer.Gesture.Resample
::ArrayW<::PDollarGestureRecognizer::Point*> PDollarGestureRecognizer::Gesture::Resample(::ArrayW<::PDollarGestureRecognizer::Point*> points, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Gesture::Resample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::PDollarGestureRecognizer::Point*>, false>(this, ___internal__method, points, n);
}
// Autogenerated method: PDollarGestureRecognizer.Gesture.PathLength
float PDollarGestureRecognizer::Gesture::PathLength(::ArrayW<::PDollarGestureRecognizer::Point*> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Gesture::PathLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PathLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, points);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PDollarGestureRecognizer.GestureIO
#include "PDollarGestureRecognizer/GestureIO.hpp"
// Including type: PDollarGestureRecognizer.Gesture
#include "PDollarGestureRecognizer/Gesture.hpp"
// Including type: System.Xml.XmlTextReader
#include "System/Xml/XmlTextReader.hpp"
// Including type: PDollarGestureRecognizer.Point
#include "PDollarGestureRecognizer/Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PDollarGestureRecognizer.GestureIO.ReadGestureFromXML
::PDollarGestureRecognizer::Gesture* PDollarGestureRecognizer::GestureIO::ReadGestureFromXML(::StringW xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::GestureIO::ReadGestureFromXML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PDollarGestureRecognizer", "GestureIO", "ReadGestureFromXML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xml)})));
  return ::il2cpp_utils::RunMethodRethrow<::PDollarGestureRecognizer::Gesture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xml);
}
// Autogenerated method: PDollarGestureRecognizer.GestureIO.ReadGestureFromFile
::PDollarGestureRecognizer::Gesture* PDollarGestureRecognizer::GestureIO::ReadGestureFromFile(::StringW fileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::GestureIO::ReadGestureFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PDollarGestureRecognizer", "GestureIO", "ReadGestureFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName)})));
  return ::il2cpp_utils::RunMethodRethrow<::PDollarGestureRecognizer::Gesture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fileName);
}
// Autogenerated method: PDollarGestureRecognizer.GestureIO.ReadGesture
::PDollarGestureRecognizer::Gesture* PDollarGestureRecognizer::GestureIO::ReadGesture(::System::Xml::XmlTextReader* xmlReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::GestureIO::ReadGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PDollarGestureRecognizer", "GestureIO", "ReadGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlReader)})));
  return ::il2cpp_utils::RunMethodRethrow<::PDollarGestureRecognizer::Gesture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xmlReader);
}
// Autogenerated method: PDollarGestureRecognizer.GestureIO.WriteGesture
void PDollarGestureRecognizer::GestureIO::WriteGesture(::ArrayW<::PDollarGestureRecognizer::Point*> points, ::StringW gestureName, ::StringW fileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::GestureIO::WriteGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PDollarGestureRecognizer", "GestureIO", "WriteGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(gestureName), ::il2cpp_utils::ExtractType(fileName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, gestureName, fileName);
}
